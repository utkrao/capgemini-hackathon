/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { SeriesRenderManager } from "./SeriesRenderManager";
import { AssigningCategoryMarkerStyleEventArgs } from "./AssigningCategoryMarkerStyleEventArgs";
import { AssigningCategoryStyleEventArgs } from "./AssigningCategoryStyleEventArgs";
import { markType } from "igniteui-react-core";
import { truncate } from "igniteui-react-core";
/**
 * @hidden
 */
var CategorySeriesRenderManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategorySeriesRenderManager, _super);
    function CategorySeriesRenderManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ax = 0;
        _this.ay = 0;
        _this.av = null;
        _this.aw = null;
        return _this;
    }
    CategorySeriesRenderManager.prototype.c = function () {
        this.av = new AssigningCategoryMarkerStyleEventArgs();
        return this.av;
    };
    CategorySeriesRenderManager.prototype.a = function () {
        this.aw = new AssigningCategoryStyleEventArgs();
        return this.aw;
    };
    CategorySeriesRenderManager.prototype.az = function (a, b, c, d, e) {
        this.ax = d;
        this.ay = e;
        this.w(a, b, c);
    };
    CategorySeriesRenderManager.prototype.a0 = function (a, b, c, d, e) {
        this.ax = d;
        this.ay = e;
        this.x(a, b, c);
    };
    CategorySeriesRenderManager.prototype.au = function (a, b) {
        var c = this.ax;
        var d = Math.min(b * c, a - 1);
        var e = Math.min(d + c - 1, a - 1);
        var f = new Array(2);
        f[0] = Math.min(d + this.ay * c, a - 1);
        f[1] = Math.min(e + this.ay * c, a - 1);
        return f;
    };
    CategorySeriesRenderManager.prototype.a1 = function (a, b, c, d, e, f, g, h, i) {
        if (d == -1) {
            if (b) {
                a.c = true;
                a.h = f.f1();
                a.g = f.f0();
            }
            else {
                a.c = false;
                a.o = 0;
                a.n = e - 1;
            }
        }
        else {
            if (b) {
                var longStart_ = truncate(f.el(c._inner[d][0], g));
                var longEnd_ = longStart_;
                if (d + 1 < c.count) {
                    longEnd_ = truncate(f.el(c._inner[d + 1][0], g));
                }
                a.c = true;
                a.h = (new Date(longStart_));
                a.g = (new Date(longEnd_));
                if (f.cg) {
                    var j = a.g;
                    a.g = a.h;
                    a.h = j;
                }
                if (i) {
                    a.o = d;
                    a.n = d;
                }
                else {
                    var k = this.au(e, d);
                    a.o = k[0];
                    a.n = k[1];
                }
            }
            else {
                if (i) {
                    a.o = d;
                    a.n = d;
                }
                else {
                    var l = this.au(e, d);
                    a.c = false;
                    a.o = l[0];
                    a.n = l[1];
                }
            }
        }
    };
    CategorySeriesRenderManager.$t = markType(CategorySeriesRenderManager, 'CategorySeriesRenderManager', SeriesRenderManager.$);
    return CategorySeriesRenderManager;
}(SeriesRenderManager));
export { CategorySeriesRenderManager };
