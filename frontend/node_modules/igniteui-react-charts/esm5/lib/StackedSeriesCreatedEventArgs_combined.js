/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { EventArgs, Base, markType, Point_$type, runOn, typeCast, IList$1_$type, Number_$type, markDep, IEnumerable_$type, Array_$type, delegateCombine, fromEnum, Boolean_$type, enumGetBox, fromEn, String_$type, getInstanceType, INotifyPropertyChanged_$type, PropertyChangedEventArgs, Delegate_$type, toNullable, TypeRegistrar } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { DataTemplate } from "igniteui-react-core";
import { Visibility_$type } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { PenLineCap_$type } from "igniteui-react-core";
import { Style } from "igniteui-react-core";
import { MarkerType_$type } from "./MarkerType";
import { HorizontalAnchoredCategorySeries } from "./HorizontalAnchoredCategorySeries";
import { CategoryLineRasterizer } from "./CategoryLineRasterizer";
import { List$1 } from "igniteui-react-core";
import { AnchoredCategorySeries } from "./AnchoredCategorySeries";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { CategorySeries } from "./CategorySeries";
import { CategoryFramePreparer } from "./CategoryFramePreparer";
import { NumericAxisBase } from "./NumericAxisBase";
import { ISupportsMarkers_$type } from "./ISupportsMarkers";
import { CategoryFrame } from "./CategoryFrame";
import { Rect } from "igniteui-react-core";
import { CategorySeriesView } from "./CategorySeriesView";
import { Axis } from "./Axis";
import { ScalerParams } from "./ScalerParams";
import { ObservableCollection$1 } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { AnchoredCategorySeriesView } from "./AnchoredCategorySeriesView";
import { CategoryBucketCalculator } from "./CategoryBucketCalculator";
import { isNaN_, isInfinity, truncate } from "igniteui-react-core";
import { CategoryTransitionInMode_$type } from "./CategoryTransitionInMode";
import { Path } from "igniteui-react-core";
import { ISortingAxis_$type } from "./ISortingAxis";
import { FrameworkElement } from "igniteui-react-core";
import { XamDataChart } from "./XamDataChart";
import { DependencyProperty } from "igniteui-react-core";
import { DependencyObject } from "igniteui-react-core";
import { NumericYAxis } from "./NumericYAxis";
import { Defaults } from "./Defaults";
import { Pool$1 } from "igniteui-react-core";
import { Rectangle } from "igniteui-react-core";
import { DataContext } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { IScaler_$type } from "./IScaler";
import { IIsCategoryBased_$type } from "./IIsCategoryBased";
import { CategoryMarkerManager } from "./CategoryMarkerManager";
import { PropertyMetadata } from "igniteui-react-core";
import { dateMinValue, dateMaxValue } from "igniteui-react-core";
import { NumericXAxis } from "./NumericXAxis";
import { CategoryYAxis } from "./CategoryYAxis";
import { AnchoredCategoryBucketCalculator } from "./AnchoredCategoryBucketCalculator";
import { IStacked100Series_$type } from "./IStacked100Series";
import { NotImplementedException } from "igniteui-react-core";
import { SplineSeriesBase } from "./SplineSeriesBase";
import { CollisionAvoider } from "./CollisionAvoider";
import { SafeSortedReadOnlyDoubleCollection } from "./SafeSortedReadOnlyDoubleCollection";
import { Numeric } from "igniteui-react-core";
import { ICategoryScaler_$type } from "./ICategoryScaler";
import { CategoryXAxis } from "./CategoryXAxis";
import { IBarSeries_$type } from "./IBarSeries";
import { Color } from "igniteui-react-core";
import { LegendItemBadgeShape_$type } from "igniteui-react-core";
import { LegendItemBadgeMode_$type } from "igniteui-react-core";
import { SeriesOutlineMode_$type } from "./SeriesOutlineMode";
import { TransitionInSpeedType_$type } from "./TransitionInSpeedType";
import { PropertyUpdatedEventArgs } from "igniteui-react-core";
import { DataLegendSeriesValueInfo } from "igniteui-react-core";
import { DataLegendSeriesContext } from "igniteui-react-core";
import { SingleValuesHolder } from "./SingleValuesHolder";
import { stringIsNullOrEmpty } from "igniteui-react-core";
import { SplineSeriesBaseView } from "./SplineSeriesBaseView";
import { Canvas } from "igniteui-react-core";
import { Panel } from "igniteui-react-core";
import { PlatformConstants } from "igniteui-react-core";
/**
 * @hidden
 */
var StackedSeriesCreatedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSeriesCreatedEventArgs, _super);
    function StackedSeriesCreatedEventArgs(a) {
        var _this = _super.call(this) || this;
        _this.c = null;
        _this.c = a;
        return _this;
    }
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "brush", {
        get: function () {
            return this.c.jk;
        },
        set: function (a) {
            this.c.jk = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "legendItemTemplate", {
        get: function () {
            return this.c.go;
        },
        set: function (a) {
            this.c.go = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "legendItemBadgeTemplate", {
        get: function () {
            return this.c.gn;
        },
        set: function (a) {
            this.c.gn = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "legendItemVisibility", {
        get: function () {
            return this.c.kh;
        },
        set: function (a) {
            this.c.kh = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "outline", {
        get: function () {
            return this.c.jo;
        },
        set: function (a) {
            this.c.jo = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "dashArray", {
        get: function () {
            return this.c.jt;
        },
        set: function (a) {
            this.c.jt = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "dashCap", {
        get: function () {
            return this.c.jx;
        },
        set: function (a) {
            this.c.jx = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "index", {
        get: function () {
            return this.c.b3;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "thickness", {
        get: function () {
            return this.c.bv;
        },
        set: function (a) {
            this.c.bv = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "title", {
        get: function () {
            return this.c.ca;
        },
        set: function (a) {
            this.c.ca = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "transitionDuration", {
        get: function () {
            return this.c.b4;
        },
        set: function (a) {
            this.c.b4 = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "transitionEasingFunction", {
        get: function () {
            return this.c.ad;
        },
        set: function (a) {
            this.c.ad = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "markerBrush", {
        get: function () {
            return this.c.jl;
        },
        set: function (a) {
            this.c.jl = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "markerOutline", {
        get: function () {
            return this.c.jm;
        },
        set: function (a) {
            this.c.jm = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "markerStyle", {
        get: function () {
            return this.c.ke;
        },
        set: function (a) {
            this.c.ke = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "markerTemplate", {
        get: function () {
            return this.c.gp;
        },
        set: function (a) {
            this.c.gp = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "markerType", {
        get: function () {
            return this.c.t;
        },
        set: function (a) {
            this.c.t = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "markerThickness", {
        get: function () {
            return this.c.bo;
        },
        set: function (a) {
            this.c.bo = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "startCap", {
        get: function () {
            return this.c.jw;
        },
        set: function (a) {
            this.c.jz = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesCreatedEventArgs.prototype, "endCap", {
        get: function () {
            return this.c.jv;
        },
        set: function (a) {
            this.c.jy = a;
        },
        enumerable: false,
        configurable: true
    });
    StackedSeriesCreatedEventArgs.$t = markType(StackedSeriesCreatedEventArgs, 'StackedSeriesCreatedEventArgs', EventArgs.$);
    return StackedSeriesCreatedEventArgs;
}(EventArgs));
export { StackedSeriesCreatedEventArgs };
/**
 * @hidden
 */
var FragmentBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FragmentBase, _super);
    function FragmentBase() {
        var _this = _super.call(this) || this;
        _this.vc = null;
        _this._logicalSeriesLink = null;
        _this.ve = null;
        _this.vc = new CategoryLineRasterizer();
        return _this;
    }
    Object.defineProperty(FragmentBase.prototype, "logicalSeriesLink", {
        get: function () {
            return this._logicalSeriesLink;
        },
        set: function (a) {
            this._logicalSeriesLink = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FragmentBase.prototype, "parentSeries", {
        get: function () {
            return this.ve;
        },
        set: function (a) {
            this.ve = a;
        },
        enumerable: false,
        configurable: true
    });
    FragmentBase.prototype.get_dp = function () {
        return false;
    };
    FragmentBase.prototype.get_dv = function () {
        return true;
    };
    FragmentBase.prototype.jr = function () {
        if (this.logicalSeriesLink != null) {
            return this.logicalSeriesLink.d8;
        }
        return null;
    };
    FragmentBase.prototype.he = function () {
        var a = this.parentSeries;
        if (a.index == -1 || a.tq == null || a.tq.f.indexOf(this) == -1) {
            return -1;
        }
        return a.tq.f.indexOf(this);
    };
    FragmentBase.prototype.hi = function () {
        var a = this.parentSeries;
        if (a.index == -1 || a.series.count == 0 || a.series.indexOf(this.logicalSeriesLink) == -1) {
            return -1;
        }
        return a.series.indexOf(this.logicalSeriesLink);
    };
    FragmentBase.prototype.resolveLegendIndex = function () {
        var a = this.parentSeries;
        if (a.tu) {
            return -1 + a.index + a.tm.count - a.tq.f.indexOf(this);
        }
        return _super.prototype.resolveLegendIndex.call(this);
    };
    FragmentBase.prototype.bf = function () {
        return this.parentSeries;
    };
    FragmentBase.prototype.rs = function () {
        if (this.parentSeries == null) {
            return null;
        }
        return this.parentSeries.fetchXAxis();
    };
    FragmentBase.prototype.vb = function () {
        if (this.parentSeries == null) {
            return this.ry;
        }
        return this.parentSeries.ry;
    };
    FragmentBase.prototype.sd = function () {
        if (this.parentSeries == null) {
            return null;
        }
        return this.parentSeries.fetchYAxis();
    };
    FragmentBase.prototype.vg = function (a, b, c, d, e, f, g, h) {
        var i = c[0];
        var j = c[1];
        var k = new Rect(0, i - 5, j - 5, 11, 11);
        if (!isNaN_(i) && !isNaN_(j) && !isInfinity(i) && !isInfinity(j) && d.tryAdd(k)) {
            b.m.add({ $type: Point_$type, x: i, y: j });
            a.updateMarkerTemplate(g, f, h);
            return true;
        }
        return false;
    };
    FragmentBase.prototype.s8 = function (a, b) {
        a.u();
        if (this.valueColumn == null || this.parentSeries == null || this.logicalSeriesLink == null) {
            return;
        }
        if (this.logicalSeriesLink.a0.count == 0 || this.logicalSeriesLink.az.count == 0) {
            return;
        }
        this.rz(b).d(a, b);
    };
    FragmentBase.prototype.pq = function (a, b, c) {
        var _this = this;
        return this.ps(a, b, c, this.vb().r(this.rs(), this.b0.bv, this.b0.bu, this.getEffectiveViewport1(this.b0)), this.sd(), this.rs(), runOn(this, this.vh), function (d, e) { return _this.hm(d, e, _this.rs(), runOn(_this, _this.sr), _this.valueColumn != null ? new FragmentBaseValueList(_this) : null); }, function (d, e) { return _this.hk(d, e, _this.rs(), runOn(_this, _this.sr), _this.valueColumn != null ? new FragmentBaseValueList(_this) : null); });
    };
    FragmentBase.prototype.ag = function () {
        return [this.rs(), this.sd()];
    };
    FragmentBase.prototype.vh = function (a, b, c) {
        if (this.cd == null) {
            return NaN;
        }
        var d = this.getEffectiveViewport1(this.b0);
        var e = new ScalerParams(0, this.cd.s9, this.b0.bu, this.rs().cg, d);
        var f = this.ry.r(this.rs(), this.cd.s9, this.b0.bu, d);
        return this.gn(this.valueColumn != null ? new FragmentBaseValueList(this) : null, a, this.rs(), e, f, runOn(this, this.sr), b, c);
    };
    FragmentBase.prototype.vj = function (a, b, c) {
        var d = this.tu(c);
        var e = d;
        var f = this.logicalSeriesLink.at;
        var g = f ? this.parentSeries.tq.e : this.parentSeries.tq.d;
        var h = g.indexOf(this);
        if (a.count == 0) {
            return;
        }
        if (h == -1) {
            return;
        }
        var i = false;
        for (var j = h; j >= 0; j--) {
            if (i) {
                break;
            }
            if (j == 0) {
                a.add({ $type: Point_$type, x: a._inner[a.count - 1].x, y: e });
                a.add({ $type: Point_$type, x: a._inner[0].x, y: e });
                break;
            }
            var k = typeCast(FragmentBase.$, g._inner[j - 1]);
            if (k != null && k.vc != null && k.vc.o.count > 0 && this.b0 != null && k.fb(this.b0.bu, this.b0.bv, this.b0)) {
                i = true;
                for (var l = k.vc.o.count - 1; l >= 0; l--) {
                    a.add(k.vc.o._inner[l]);
                }
            }
        }
    };
    FragmentBase.prototype.fb = function (a, b, c) {
        var d = _super.prototype.fb.call(this, a, b, c);
        var e = typeCast(CategoryAxisBase.$, this.parentSeries.fetchXAxis());
        var f = this.parentSeries.fetchYAxis();
        if (this.parentSeries == null || e == null || e.itemsSource == null || f == null || this.parentSeries.ck == null || e.bh == null || f.bh == null) {
            d = false;
        }
        if (this.valueColumn == null) {
            return false;
        }
        if (isInfinity(this.valueColumn.minimum) && isInfinity(this.valueColumn.maximum)) {
            d = false;
        }
        if (isNaN_(this.valueColumn.minimum) && isNaN_(this.valueColumn.maximum)) {
            d = false;
        }
        return d;
    };
    FragmentBase.prototype.tu = function (a) {
        var b = 0;
        var c = a.bv;
        var d = a.bu;
        var e = this.getEffectiveViewport1(a);
        var f = new ScalerParams(0, c, d, this.sd().cg, e);
        f.b = this.ge();
        if (!c.isEmpty && !d.isEmpty && this.sd() != null) {
            b = this.sd().ei(0, f);
        }
        return b;
    };
    FragmentBase.prototype.ap = function (a) {
        return null;
    };
    FragmentBase.prototype.vi = function () {
        if (this.parentSeries == null) {
            return -1;
        }
        var a = this.parentSeries.index;
        var b = 0;
        var c = 1;
        if (this.parentSeries.tu) {
            b = this.parentSeries.tm.count - 1;
            c = -1;
        }
        for (var d = b; this.parentSeries.tu ? d >= 0 : d < this.parentSeries.tm.count; d += c) {
            var e = this.parentSeries.tm._inner[d];
            if (e.visualSeriesLink == this) {
                return a;
            }
            if (this.parentSeries.a1 == null || e.kg != 0 || e.kf != 0) {
                continue;
            }
            a++;
        }
        return -1;
    };
    FragmentBase.prototype.vk = function (a) {
        if (a == null) {
        }
    };
    FragmentBase.prototype.l7 = function (a, b, c, d) {
        _super.prototype.l7.call(this, a, b, c, d);
        if (this.parentSeries == null) {
            return;
        }
        var e = typeCast(NumericAxisBase.$, this.parentSeries.fetchYAxis());
        if (e == null) {
            return;
        }
        switch (b) {
            case "ValueColumn":
                if (this.tl.c3) {
                    this.tl.c2.g$i();
                }
                if (e != null && !e.c0()) {
                    this.parentSeries.tl().cr.g(this.fv);
                    this.ml(false);
                }
                break;
            case "ActualBrush":
                if (this.logicalSeriesLink != null) {
                    this.logicalSeriesLink.jf = this.o3;
                }
                break;
        }
    };
    FragmentBase.prototype.mn = function (a, b) {
        _super.prototype.mn.call(this, a, b);
    };
    Object.defineProperty(FragmentBase.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    FragmentBase.$t = markType(FragmentBase, 'FragmentBase', HorizontalAnchoredCategorySeries.$);
    return FragmentBase;
}(HorizontalAnchoredCategorySeries));
export { FragmentBase };
/**
 * @hidden
 */
var AreaFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AreaFragment, _super);
    function AreaFragment() {
        var _this = _super.call(this) || this;
        _this.ab = AreaFragment.$;
        return _this;
    }
    AreaFragment.prototype.bx = function () {
        return new AreaFragmentView(this);
    };
    AreaFragment.prototype.l2 = function (a) {
        _super.prototype.l2.call(this, a);
        this.vl = a;
    };
    AreaFragment.prototype.get_de = function () {
        return true;
    };
    AreaFragment.prototype.get_dd = function () {
        return true;
    };
    AreaFragment.prototype.r3 = function () {
        return 1;
    };
    AreaFragment.prototype.vn = function (a, b) {
        var c = this.vl.dg.ak;
        if (this.ez(a, c)) {
            return true;
        }
        var d = this.vl.dh.ak;
        if (this.ez(a, d)) {
            return true;
        }
        return false;
    };
    AreaFragment.prototype.ex = function (a, b) {
        if (this.vm(a, b)) {
            return true;
        }
        if (this.vn(a, b)) {
            return true;
        }
        if (this.qk(a, b)) {
            return true;
        }
        return false;
    };
    AreaFragment.prototype.vm = function (a, b) {
        var c = this.vl.di.ak;
        if (this.ey(a, b, c)) {
            return true;
        }
        var d = this.vl.dj.ak;
        if (this.ey(a, b, d)) {
            return true;
        }
        return false;
    };
    AreaFragment.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    AreaFragment.prototype.k0 = function (a, b) {
        _super.prototype.k0.call(this, a, b);
        var c = b;
        c.db();
    };
    AreaFragment.prototype.tb = function (a, b) {
        var _this = this;
        _super.prototype.tb.call(this, a, b);
        this.vc.a = typeCast(ISortingAxis_$type, this.xAxis) !== null ? true : false;
        var c = typeCast(AreaFragmentView.$, b);
        var d = a.f;
        var e = this.getEffectiveViewport1(c);
        this.r1.a0(this, this.sl(), runOn(this, this.rm), this.st(b), this.su(b));
        var f = false;
        var g = this.r1.b;
        if (g != null) {
            f = true;
        }
        if (f) {
            var h = new ScalerParams(0, b.bv, b.bu, this.us.cg, e);
            this.s7(d, -1, this.valueColumn.count, this.us, h, b.q);
        }
        this.r1.ad(c.di, true, false, true, true);
        this.r1.ad(c.dj, true, false, true, true);
        this.r1.ad(c.dg, false, true, false, false);
        this.r1.ad(c.dh, false, true, false, false);
        var i = c.cr.d;
        this.vc.i(c.dg, c.di, c.dh, c.dj, a.f.count, a.f, true, i, this.fv, function (j, k, l, m, n) { return _this.vj(j, a.f, b); }, 0);
        c.dg._opacity = this.r1.j * this.fs;
        c.dh._opacity = 0.5 * this.r1.j * this.fs;
    };
    AreaFragment.prototype.mw = function () {
        var a = (typeCast(XamDataChart.$, this.cd));
        if (a != null) {
            this.fs = isNaN_(this.f1) ? this.parentSeries.fs : this.f1;
        }
    };
    Object.defineProperty(AreaFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    AreaFragment.$t = markType(AreaFragment, 'AreaFragment', FragmentBase.$);
    return AreaFragment;
}(FragmentBase));
export { AreaFragment };
/**
 * @hidden
 */
var ColumnFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ColumnFragment, _super);
    function ColumnFragment() {
        var _this = _super.call(this) || this;
        _this.ab = ColumnFragment.$;
        return _this;
    }
    ColumnFragment.prototype.get_di = function () {
        return true;
    };
    ColumnFragment.prototype.get_d3 = function () {
        return true;
    };
    ColumnFragment.prototype.gw = function () {
        if (!isNaN_(this.gv)) {
            return _super.prototype.gw.call(this);
        }
        return Defaults.h;
    };
    ColumnFragment.prototype.r3 = function () {
        return 1;
    };
    ColumnFragment.prototype.bx = function () {
        return new ColumnFragmentView(this);
    };
    ColumnFragment.prototype.l2 = function (a) {
        _super.prototype.l2.call(this, a);
        this.vm = a;
    };
    Object.defineProperty(ColumnFragment.prototype, "fragmentXAxis", {
        get: function () {
            return this.parentSeries != null ? typeCast(CategoryAxisBase.$, this.parentSeries.fetchXAxis()) : null;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ColumnFragment.prototype, "fragmentYAxis", {
        get: function () {
            return this.parentSeries != null ? typeCast(NumericYAxis.$, this.parentSeries.fetchYAxis()) : null;
        },
        enumerable: false,
        configurable: true
    });
    ColumnFragment.prototype.preferredCategoryMode = function (a) {
        return 2;
    };
    ColumnFragment.prototype.rs = function () {
        return this.fragmentXAxis;
    };
    ColumnFragment.prototype.sd = function () {
        return this.fragmentYAxis;
    };
    ColumnFragment.prototype.get_c2 = function () {
        return true;
    };
    ColumnFragment.prototype.fetchXAxis = function () {
        return null;
    };
    ColumnFragment.prototype.fetchYAxis = function () {
        return null;
    };
    ColumnFragment.prototype.k0 = function (a, b) {
        _super.prototype.k0.call(this, a, b);
        var c = b;
        if (a && c.db != null) {
            this.rt.m.clear();
            c.db.count = 0;
        }
    };
    ColumnFragment.prototype.ap = function (a) {
        if (this.valueColumn == null || this.valueColumn.count == 0) {
            return null;
        }
        return new AxisRange(this.valueColumn.minimum, this.valueColumn.maximum);
    };
    ColumnFragment.prototype.fb = function (a, b, c) {
        if (this.parentSeries == null) {
            return false;
        }
        return this.parentSeries.tv(this, a, b, this.vo(c));
    };
    ColumnFragment.prototype.e8 = function () {
        return true;
    };
    ColumnFragment.prototype.st = function (a) {
        if (this.parentSeries != null) {
            return this.parentSeries.st(this.parentSeries.b0);
        }
        return _super.prototype.st.call(this, a);
    };
    ColumnFragment.prototype.su = function (a) {
        if (this.parentSeries != null) {
            return this.parentSeries.su(this.parentSeries.b0);
        }
        return _super.prototype.st.call(this, a);
    };
    ColumnFragment.prototype.sv = function (a) {
        if (this.parentSeries != null) {
            return this.parentSeries.sv(this.parentSeries.b0);
        }
        return _super.prototype.sv.call(this, a);
    };
    ColumnFragment.prototype.pz = function (a) {
        if (this.rs() == null || this.fragmentYAxis == null) {
            return Rect.empty;
        }
        var b = this.pl(a);
        var c = this.b0.bv;
        var d = this.b0.bu;
        var e = this.getEffectiveViewport1(this.b0);
        var f = new ScalerParams(0, c, d, this.fragmentYAxis.cg, e);
        var g = this.aj(this.rs(), this.rt.f, this.st(this.b0), this.su(this.b0), a, true);
        if (g == null) {
            return Rect.empty;
        }
        var h = g[0];
        var i = g[1];
        var j = Math.abs(b.x - h[0]);
        var k = Math.abs(b.x - i[0]);
        var l = this.rs().k3(c, d, e);
        if (j < k) {
            var m = h[0] - 0.5 * l;
            var n = h[1];
            var o = h[2];
            return new Rect(0, m, Math.min(n, o), l, Math.max(n, o) - Math.min(n, o));
        }
        else {
            var p = i[0] - 0.5 * l;
            var q = i[1];
            var r = i[2];
            return new Rect(0, p, Math.min(q, r), l, Math.max(q, r) - Math.min(q, r));
        }
    };
    ColumnFragment.prototype.ex = function (a, b) {
        if (this.e0(a, b)) {
            return true;
        }
        if (this.qk(a, b)) {
            return true;
        }
        return false;
    };
    ColumnFragment.prototype.e0 = function (a, b) {
        var c = this.p0(a);
        if (c.isEmpty) {
            return false;
        }
        var d = this.vv(c, this.ga(b));
        return d.containsPoint(a);
    };
    ColumnFragment.prototype.vv = function (a, b) {
        var c = a.left + a.width / 2;
        var d = a.top + a.height / 2;
        var e = c - ((a.width / 2) + b);
        var f = d - (a.height / 2);
        var g = a.height;
        var h = a.width + b * 2;
        return new Rect(0, e, f, h, g);
    };
    ColumnFragment.prototype.h1 = function (a, b) {
        var c = typeCast(FrameworkElement.$, a);
        var d = c != null ? typeCast(DataContext.$, c.dataContext) : null;
        var e = d != null ? d.item : null;
        if (e == null) {
            var f = this.b0.bu;
            var g = this.cd != null ? this.cd.s9 : Rect.empty;
            var h = { $type: Point_$type, x: g.left + g.width * (b.x - f.left) / f.width, y: g.top + g.height * (b.y - f.top) / f.height };
            e = this.hv(h);
        }
        return e;
    };
    ColumnFragment.prototype.hv = function (a) {
        var b = 0;
        if (typeCast(ISortingAxis_$type, this.rs()) !== null) {
            b = this.hh(a);
            if (b == -1) {
                return null;
            }
        }
        else {
            b = this.hf(a);
        }
        return b >= 0 && this.ck != null && b < this.ck.count ? this.ck.item(b) : null;
    };
    ColumnFragment.prototype.hh = function (a) {
        var b = this.b0.bv;
        var c = this.b0.bu;
        var d = this.getEffectiveViewport1(this.b0);
        if (b.isEmpty || c.isEmpty) {
            return -1;
        }
        var e = this.rs();
        var f = new ScalerParams(0, b, c, e.cg, d);
        var g = typeCast(ISortingAxis_$type, this.fragmentXAxis);
        var h = this.pv(this.b0);
        var i = e.el(h.left, f);
        var j = e.el(h.right, f);
        var k = (a.x - b.left) / b.width;
        var l = i + ((j - i) * k);
        if (truncate(l) <= dateMinValue().getTime() || truncate(l) >= dateMaxValue().getTime()) {
            return -1;
        }
        var m = g.i$f(l);
        return m;
    };
    ColumnFragment.prototype.hf = function (a) {
        if (this.parentSeries == null) {
            return -1;
        }
        return this.parentSeries.t1(a);
    };
    ColumnFragment.prototype.vg = function (a, b, c, d, e, f, g, h) {
        var i = 0;
        var j = c[0];
        var k = e < i ? c[2] : c[1];
        var l = new Rect(0, j - 5, k - 5, 11, 11);
        if (!isNaN_(j) && !isNaN_(k) && !isInfinity(j) && !isInfinity(k) && d.tryAdd(l)) {
            b.m.add({ $type: Point_$type, x: j, y: k });
            a.updateMarkerTemplate(g, f, h);
            return true;
        }
        return false;
    };
    ColumnFragment.prototype.vo = function (a) {
        if (a.p) {
            return this.parentSeries.a6.a$h.item(a.ad);
        }
        else if (a == this.bz) {
            return this.parentSeries.bz;
        }
        else {
            return this.parentSeries.r2;
        }
    };
    ColumnFragment.prototype.mk = function (a, b, c, d, e) {
        this.a6.a$t(this, a, b, d, e);
        var f = this.a6.a$h.item(d);
        var g = f;
        f.a1(c);
        var h = this.vo(f);
        h.cr.g(this.fv);
        if (this.cx(g)) {
            return;
        }
        if (this.tm == null) {
            this.tm = new CategoryFrame(3);
        }
        this.tm.u();
        this.s8(this.tm, g);
        this.tb(this.tm, g);
    };
    ColumnFragment.prototype.s8 = function (a, b) {
        a.u();
        if (this.valueColumn == null || this.parentSeries == null || this.logicalSeriesLink == null || this.logicalSeriesLink.az.count == 0 || this.logicalSeriesLink.a0.count == 0) {
            return;
        }
        var c;
        if (b.p) {
            c = this.parentSeries.tk;
        }
        else if (b == this.bz) {
            c = this.parentSeries.rw;
        }
        else {
            c = this.parentSeries.rt;
        }
        var d = typeCast(CategorySeriesView.$, this.vo(b));
        a.f.clear();
        a.m.clear();
        var e = d.cr.e;
        var f = d.cr.f;
        var g = this.parentSeries.ry.h.yScaler;
        var h = typeCast(ISortingAxis_$type, this.parentSeries.ry.h.scaler);
        var i = typeCast(NumericAxisBase.$, g) !== null && g.lh;
        var j = typeCast(StackedBucketCalculator.$, d.cr);
        var k = d.cr.d;
        var l = 0;
        if (e <= f) {
            for (var m = e; m <= f; m++) {
                var n = m * k;
                if (this._visibility != 0) {
                    break;
                }
                if (m >= this.valueColumn.count || m >= c.f.count + e) {
                    continue;
                }
                var o = this.valueColumn.item(m);
                var p = !i || (i && o > 0);
                var q = void 0;
                if (h == null) {
                    q = j.getBucket1(this, m, m, b.bv, b.bu, c);
                }
                else {
                    q = j.getBucket1(this, m, h.i$b._inner[m], b.bv, b.bu, c);
                }
                a.f.add(q);
                if (p) {
                    if (this.vg(b, a, q, this.ry.h.provideCollisionDetector(), o, n, l, a.f.count - 1)) {
                        l++;
                    }
                }
            }
        }
        b.cu.count = l;
    };
    ColumnFragment.prototype.tb = function (a, b) {
        _super.prototype.tb.call(this, a, b);
        if (this.parentSeries == null) {
            return;
        }
        this.parentSeries.ua(this, a, b, runOn(this, this.rm));
        CategoryMarkerManager.e(this, a.m, b.cu, this.ql);
    };
    ColumnFragment.prototype.l7 = function (a, b, c, d) {
        _super.prototype.l7.call(this, a, b, c, d);
    };
    Object.defineProperty(ColumnFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    ColumnFragment.$t = markType(ColumnFragment, 'ColumnFragment', FragmentBase.$);
    ColumnFragment.$$p = markDep(DependencyProperty, PropertyMetadata, ColumnFragment, 'raisePropertyChanged', ['RadiusX:vp:vt', [1, 0], 'RadiusY:vq:vu', [1, 0]]);
    return ColumnFragment;
}(FragmentBase));
export { ColumnFragment };
/**
 * @hidden
 */
var BarFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(BarFragment, _super);
    function BarFragment() {
        var _this = _super.call(this) || this;
        _this.ab = BarFragment.$;
        return _this;
    }
    BarFragment.prototype.get_dg = function () {
        return true;
    };
    BarFragment.prototype.get_d3 = function () {
        return true;
    };
    BarFragment.prototype.get_di = function () {
        return false;
    };
    BarFragment.prototype.r3 = function () {
        return 1;
    };
    Object.defineProperty(BarFragment.prototype, "barFragmentXAxis", {
        get: function () {
            return this.parentSeries != null ? this.parentSeries.xAxis : null;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BarFragment.prototype, "barFragmentYAxis", {
        get: function () {
            return this.parentSeries != null ? this.parentSeries.yAxis : null;
        },
        enumerable: false,
        configurable: true
    });
    BarFragment.prototype.rs = function () {
        if (this.parentSeries == null) {
            return null;
        }
        return this.parentSeries.fetchYAxis();
    };
    BarFragment.prototype.get_isVertical = function () {
        return true;
    };
    BarFragment.prototype.f7 = function (a) {
        var b = this.cd != null ? this.cd.s9 : Rect.empty;
        var c = this.b0.bu;
        var d = this.pv(this.b0);
        var e = this.getEffectiveViewport1(this.b0);
        var f = this.rs();
        var g = -1;
        if (f != null && !b.isEmpty && !c.isEmpty) {
            var h = new ScalerParams(0, b, c, f.cg, e);
            var i = f.el(d.top, h);
            var j = f.el(d.bottom, h);
            var k = (a.y - b.top) / b.height;
            var l = i + (k * (j - i));
            if (f.categoryMode != 0) {
                l -= 0.5;
            }
            g = l;
        }
        return g;
    };
    BarFragment.prototype.sd = function () {
        if (this.parentSeries == null) {
            return null;
        }
        return this.parentSeries.sd();
    };
    BarFragment.prototype.vv = function (a, b) {
        var c = a.left + a.width / 2;
        var d = a.top + a.height / 2;
        var e = c - (a.width / 2);
        var f = d - ((a.height / 2) + b);
        var g = a.height + b * 2;
        var h = a.width;
        return new Rect(0, e, f, h, g);
    };
    BarFragment.prototype.pz = function (a) {
        if (this.rs() == null) {
            return Rect.empty;
        }
        var b = this.pl(a);
        var c = this.b0.bv;
        var d = this.b0.bu;
        var e = this.getEffectiveViewport1(this.b0);
        var f = this.rs();
        var g = new ScalerParams(0, c, d, f.cg, e);
        var h = this.aj(this.rs(), this.rt.f, this.st(this.b0), this.su(this.b0), a, true);
        if (h == null) {
            return Rect.empty;
        }
        var i = h[0];
        var j = h[1];
        var k = Math.abs(b.y - i[0]);
        var l = Math.abs(b.y - j[0]);
        var m = f.k3(c, d, e);
        if (k < l) {
            var n = i[0] - 0.5 * m;
            var o = i[2];
            var p = i[1];
            return new Rect(0, o, n, Math.max(p, o) - Math.min(p, o), m);
        }
        else {
            var q = j[0] - 0.5 * m;
            var r = j[2];
            var s = j[1];
            return new Rect(0, r, q, Math.max(s, r) - Math.min(s, r), m);
        }
    };
    BarFragment.prototype.ex = function (a, b) {
        if (this.e0(a, b)) {
            return true;
        }
        if (this.qk(a, b)) {
            return true;
        }
        return false;
    };
    BarFragment.prototype.vg = function (a, b, c, d, e, f, g, h) {
        var i = c[0];
        var j = e < 0 ? c[2] : c[1];
        var k = new Rect(0, j - 5, i - 5, 11, 11);
        if (!isNaN_(j) && !isNaN_(i) && !isInfinity(j) && !isInfinity(i) && d.tryAdd(k)) {
            b.m.add({ $type: Point_$type, x: j, y: i });
            a.updateMarkerTemplate(g, f, h);
            return true;
        }
        return false;
    };
    BarFragment.prototype.hv = function (a) {
        var b = 0;
        if (typeCast(ISortingAxis_$type, this.barFragmentYAxis) !== null) {
            b = this.hh(a);
            if (b == -1) {
                return null;
            }
        }
        else {
            b = this.hf(a);
        }
        return b >= 0 && this.ck != null && b < this.ck.count ? this.ck.item(b) : null;
    };
    BarFragment.prototype.hh = function (a) {
        var b = this.b0.bv;
        var c = this.b0.bu;
        if (b.isEmpty || c.isEmpty) {
            return -1;
        }
        var d = this.getEffectiveViewport1(this.b0);
        var e = new ScalerParams(0, b, c, this.barFragmentYAxis.cg, d);
        var f = typeCast(ISortingAxis_$type, this.barFragmentYAxis);
        var g = this.pv(this.b0);
        var h = this.barFragmentYAxis.el(g.top, e);
        var i = this.barFragmentYAxis.el(g.bottom, e);
        var j = (a.y - b.top) / b.height;
        var k = h + ((i - h) * j);
        if (truncate(k) <= dateMinValue().getTime() || truncate(k) >= dateMaxValue().getTime()) {
            return -1;
        }
        var l = f.i$f(k);
        return l;
    };
    BarFragment.prototype.tu = function (a) {
        var b = 0;
        var c = a.bv;
        var d = a.bu;
        var e = this.getEffectiveViewport1(a);
        var f = new ScalerParams(0, c, d, this.barFragmentXAxis.cg, e);
        if (!c.isEmpty && !d.isEmpty && this.barFragmentXAxis != null) {
            b = this.barFragmentXAxis.ei(0, f);
        }
        return b;
    };
    BarFragment.prototype.l7 = function (a, b, c, d) {
        _super.prototype.l7.call(this, a, b, c, d);
        if (this.parentSeries == null || this.barFragmentXAxis == null) {
            return;
        }
        var e = this.barFragmentXAxis;
        switch (b) {
            case "ValueColumn":
                if (this.tl.c3) {
                    this.tl.c2.g$i();
                }
                if (e != null && !e.c0()) {
                    this.parentSeries.tl().cr.g(this.fv);
                    this.ml(false);
                }
                break;
        }
    };
    Object.defineProperty(BarFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    BarFragment.$t = markType(BarFragment, 'BarFragment', ColumnFragment.$);
    return BarFragment;
}(ColumnFragment));
export { BarFragment };
/**
 * @hidden
 */
var AreaFragmentBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AreaFragmentBucketCalculator, _super);
    function AreaFragmentBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    AreaFragmentBucketCalculator.prototype.getBucketWithoutUnknowns = function (a) {
        return this.getBucket(a);
    };
    AreaFragmentBucketCalculator.prototype.getBucket = function (a) {
        var b = Math.min(a * this.d, this.i.c0.valueColumn.count - 1);
        var c = Math.min(b + this.d - 1, this.i.c0.valueColumn.count - 1);
        var d = NaN;
        var e = NaN;
        var f = this.i.c0;
        var g = f.parentSeries;
        var h = typeCast(IStacked100Series_$type, g) !== null;
        var i = this.i.c0.valueColumn;
        var j = g.ti;
        var k = g.tj;
        var l = f.logicalSeriesLink.a0;
        var m = f.logicalSeriesLink.az;
        for (var n = b; n <= c; ++n) {
            var o = i.item(n);
            if (isNaN_(o) || isInfinity(o)) {
                o = 0;
            }
            var p = Math.abs(k[n]) + j[n];
            if (h) {
                if (p == 0) {
                    o = 0;
                }
                else if (o < 0) {
                    o = (l._inner[n] + o) / p * 100;
                }
                else {
                    o = (m._inner[n] + o) / p * 100;
                }
            }
            else {
                o = o < 0 ? l._inner[n] + o : m._inner[n] + o;
            }
            if (!isNaN_(d)) {
                if (!isNaN_(o)) {
                    d = Math.min(d, o);
                    e = Math.max(e, o);
                }
            }
            else {
                d = o;
                e = o;
            }
        }
        if (!isNaN_(d)) {
            return [0.5 * (b + c), d, e];
        }
        return [0.5 * (b + c), NaN, NaN];
    };
    AreaFragmentBucketCalculator.$t = markType(AreaFragmentBucketCalculator, 'AreaFragmentBucketCalculator', AnchoredCategoryBucketCalculator.$);
    return AreaFragmentBucketCalculator;
}(AnchoredCategoryBucketCalculator));
export { AreaFragmentBucketCalculator };
/**
 * @hidden
 */
var LineFragmentBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(LineFragmentBucketCalculator, _super);
    function LineFragmentBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    LineFragmentBucketCalculator.prototype.getBucketWithoutUnknowns = function (a) {
        return this.getBucket(a);
    };
    LineFragmentBucketCalculator.prototype.getBucket = function (a) {
        var b = Math.min(a * this.d, this.i.c0.valueColumn.count - 1);
        var c = Math.min(b + this.d - 1, this.i.c0.valueColumn.count - 1);
        var d = NaN;
        var e = NaN;
        var f = typeCast(FragmentBase.$, this.i.c0);
        var g = f.parentSeries;
        for (var h = b; h <= c; ++h) {
            var i = this.i.c0.valueColumn.item(h);
            var j = Math.abs(g.tj[h]) + g.ti[h];
            if (isNaN_(i) || isInfinity(i)) {
                i = 0;
            }
            if (typeCast(IStacked100Series_$type, g) !== null) {
                if (j == 0) {
                    i = 0;
                }
                else if (i < 0) {
                    i = (f.logicalSeriesLink.a0._inner[h] + i) / j * 100;
                }
                else {
                    i = (f.logicalSeriesLink.az._inner[h] + i) / j * 100;
                }
            }
            else {
                i = i < 0 ? f.logicalSeriesLink.a0._inner[h] + i : f.logicalSeriesLink.az._inner[h] + i;
            }
            if (!isNaN_(d)) {
                if (!isNaN_(i)) {
                    d = Math.min(d, i);
                    e = Math.max(e, i);
                }
            }
            else {
                d = i;
                e = i;
            }
        }
        if (!isNaN_(d)) {
            return [0.5 * (b + c), d, e];
        }
        return [0.5 * (b + c), NaN, NaN];
    };
    LineFragmentBucketCalculator.$t = markType(LineFragmentBucketCalculator, 'LineFragmentBucketCalculator', AnchoredCategoryBucketCalculator.$);
    return LineFragmentBucketCalculator;
}(AnchoredCategoryBucketCalculator));
export { LineFragmentBucketCalculator };
/**
 * @hidden
 */
var SplineFragmentBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SplineFragmentBucketCalculator, _super);
    function SplineFragmentBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    SplineFragmentBucketCalculator.prototype.getBucket = function (a) {
        var b = Math.min(a * this.d, this.i.c0.valueColumn.count - 1);
        var c = Math.min(b + this.d - 1, this.i.c0.valueColumn.count - 1);
        var d = NaN;
        var e = NaN;
        var f = typeCast(SplineFragmentBase.$, this.i.c0);
        var g = f.parentSeries;
        for (var h = b; h <= c; ++h) {
            var i = this.i.c0.valueColumn.item(h);
            var j = Math.abs(g.tj[h]) + g.ti[h];
            if (isNaN_(i) || isInfinity(i)) {
                i = 0;
            }
            if (typeCast(IStacked100Series_$type, g) !== null) {
                if (j == 0) {
                    i = 0;
                }
                else if (i < 0) {
                    i = (f.logicalSeriesLink.a0._inner[h] + i) / j * 100;
                }
                else {
                    i = (f.logicalSeriesLink.az._inner[h] + i) / j * 100;
                }
            }
            else {
                i = i < 0 ? f.logicalSeriesLink.a0._inner[h] + i : f.logicalSeriesLink.az._inner[h] + i;
            }
            if (!isNaN_(d)) {
                if (!isNaN_(i)) {
                    d = Math.min(d, i);
                    e = Math.max(e, i);
                }
            }
            else {
                d = i;
                e = i;
            }
        }
        if (!isNaN_(d)) {
            return [0.5 * (b + c), d, e];
        }
        return [0.5 * (b + c), NaN, NaN];
    };
    SplineFragmentBucketCalculator.$t = markType(SplineFragmentBucketCalculator, 'SplineFragmentBucketCalculator', AnchoredCategoryBucketCalculator.$);
    return SplineFragmentBucketCalculator;
}(AnchoredCategoryBucketCalculator));
export { SplineFragmentBucketCalculator };
/**
 * @hidden
 */
var StackedBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedBucketCalculator, _super);
    function StackedBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    StackedBucketCalculator.prototype.getBucket = function (a) {
        var b = typeCast(StackedSeriesBase.$, this.c.ct);
        var c = Math.min(b.tj != null ? b.tj.length : 0, b.ti != null ? b.ti.length : 0);
        var d = Math.min(a * this.d, c - 1);
        var e = Math.min(d + this.d - 1, c - 1);
        var f = NaN;
        var g = NaN;
        for (var h = d; h <= e; ++h) {
            var i = Math.min(b.tj[h], b.ti[h]);
            var j = Math.max(b.tj[h], b.ti[h]);
            if (!isNaN_(f)) {
                if (!isNaN_(i)) {
                    f = Math.min(f, i);
                    g = Math.max(g, i);
                }
                if (!isNaN_(j)) {
                    f = Math.min(f, j);
                    g = Math.max(g, j);
                }
            }
            else {
                f = i;
                g = j;
            }
        }
        if (!isNaN_(f) && !isNaN_(g)) {
            return [0.5 * (d + e), f, g];
        }
        return [NaN, NaN, NaN];
    };
    StackedBucketCalculator.prototype.getBucket1 = function (a, b, c, d, e, f) {
        return null;
    };
    StackedBucketCalculator.$t = markType(StackedBucketCalculator, 'StackedBucketCalculator', CategoryBucketCalculator.$);
    return StackedBucketCalculator;
}(CategoryBucketCalculator));
export { StackedBucketCalculator };
/**
 * @hidden
 */
var StackedBarBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedBarBucketCalculator, _super);
    function StackedBarBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    StackedBarBucketCalculator.prototype.g = function (a) {
        var b = this.c.bv;
        var c = this.c.bu;
        var d = typeCast(StackedBarSeries.$, this.c.ct);
        var e = this.c.ct.ck;
        if (b.isEmpty || c.isEmpty || d.yAxis == null || e == null || e.count == 0) {
            this.d = 0;
            return;
        }
        var f = d.getEffectiveViewport1(this.c);
        var g = new ScalerParams(0, b, c, d.yAxis.cg, f);
        var h = d.pv(this.c);
        var i = Math.floor(d.yAxis.em(h.top, g, 0));
        var j = Math.ceil(d.yAxis.em(h.bottom, g, 0));
        if (!d.yAxis.cg) {
            j = Math.ceil(d.yAxis.em(h.top, g, 0));
            i = Math.floor(d.yAxis.em(h.bottom, g, 0));
        }
        var k = Math.floor((j - i + 1) * a / h.height);
        this.d = truncate(Math.max(1, k));
        this.e = truncate(Math.max(0, Math.floor(i / this.d) - 1));
        this.f = truncate(Math.ceil(j / this.d));
    };
    StackedBarBucketCalculator.prototype.getBucket = function (a) {
        return _super.prototype.getBucket.call(this, a);
    };
    StackedBarBucketCalculator.prototype.getBucket1 = function (a, b, c, d, e, f) {
        var g = [NaN, NaN, NaN];
        var h = typeCast(BarFragment.$, a);
        if (h == null || h.logicalSeriesLink == null) {
            return g;
        }
        var i = typeCast(StackedBarSeries.$, this.c.ct);
        var j = a.valueColumn.item(c);
        var k = 0;
        var l = NaN;
        var m = NaN;
        var n = Number.NEGATIVE_INFINITY;
        var o = Number.POSITIVE_INFINITY;
        var p = i.getEffectiveViewport1(this.c);
        var q = Math.min(i.tj != null ? i.tj.length : 0, i.ti != null ? i.ti.length : 0);
        var r = c * this.d;
        var s = Math.min(r + this.d - 1, q - 1);
        if (r <= s) {
            for (var t = r; t <= s; ++t) {
                j = a.valueColumn.item(t);
                if (j < k) {
                    o = Math.min(o, h.logicalSeriesLink.a0._inner[t] + j);
                    n = Math.max(n, h.logicalSeriesLink.a0._inner[t]);
                }
                else {
                    o = Math.min(o, h.logicalSeriesLink.az._inner[t]);
                    n = Math.max(n, h.logicalSeriesLink.az._inner[t] + j);
                }
                if (!isNaN_(l)) {
                    if (!isNaN_(o)) {
                        l = Math.min(l, o);
                        m = Math.max(m, o);
                    }
                    if (!isNaN_(n)) {
                        l = Math.min(l, n);
                        m = Math.max(m, n);
                    }
                }
                else {
                    l = o;
                    m = n;
                }
            }
        }
        var u = new ScalerParams(0, d, e, i.xAxis.cg, p);
        g = [f.f._inner[b - this.e][0], i.xAxis.ei(m, u), i.xAxis.ei(l, u)];
        return g;
    };
    StackedBarBucketCalculator.$t = markType(StackedBarBucketCalculator, 'StackedBarBucketCalculator', StackedBucketCalculator.$);
    return StackedBarBucketCalculator;
}(StackedBucketCalculator));
export { StackedBarBucketCalculator };
/**
 * @hidden
 */
var StackedColumnBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedColumnBucketCalculator, _super);
    function StackedColumnBucketCalculator(a) {
        return _super.call(this, a) || this;
    }
    StackedColumnBucketCalculator.prototype.getBucket = function (a) {
        return _super.prototype.getBucket.call(this, a);
    };
    StackedColumnBucketCalculator.prototype.getBucket1 = function (a, b, c, d, e, f) {
        var g = [NaN, NaN, NaN];
        var h = typeCast(ColumnFragment.$, a);
        if (h == null || h.logicalSeriesLink == null) {
            return g;
        }
        var i = typeCast(StackedColumnSeries.$, this.c.ct);
        var j = a.valueColumn.item(c);
        var k = 0;
        var l = NaN;
        var m = NaN;
        var n = Number.NEGATIVE_INFINITY;
        var o = Number.POSITIVE_INFINITY;
        var p = i.getEffectiveViewport1(this.c);
        var q = Math.min(i.tj != null ? i.tj.length : 0, i.ti != null ? i.ti.length : 0);
        var r = c * this.d;
        var s = Math.min(r + this.d - 1, q - 1);
        if (r <= s) {
            for (var t = r; t <= s; ++t) {
                j = a.valueColumn.item(t);
                if (j < k) {
                    o = Math.min(o, h.logicalSeriesLink.a0._inner[t] + j);
                    n = Math.max(n, h.logicalSeriesLink.a0._inner[t]);
                }
                else {
                    o = Math.min(o, h.logicalSeriesLink.az._inner[t]);
                    n = Math.max(n, h.logicalSeriesLink.az._inner[t] + j);
                }
                if (!isNaN_(l)) {
                    if (!isNaN_(o)) {
                        l = Math.min(l, o);
                        m = Math.max(m, o);
                    }
                    if (!isNaN_(n)) {
                        l = Math.min(l, n);
                        m = Math.max(m, n);
                    }
                }
                else {
                    l = o;
                    m = n;
                }
            }
        }
        var u = new ScalerParams(0, d, e, i.yAxis.cg, p);
        g = [f.f._inner[b - this.e][0], i.yAxis.ei(m, u), i.yAxis.ei(l, u)];
        return g;
    };
    StackedColumnBucketCalculator.$t = markType(StackedColumnBucketCalculator, 'StackedColumnBucketCalculator', StackedBucketCalculator.$);
    return StackedColumnBucketCalculator;
}(StackedBucketCalculator));
export { StackedColumnBucketCalculator };
/**
 * @hidden
 */
var FragmentBaseValueList = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FragmentBaseValueList, _super);
    function FragmentBaseValueList(a) {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.a = a;
        return _this;
    }
    FragmentBaseValueList.prototype.indexOf = function (a) {
        throw new NotImplementedException(0);
    };
    FragmentBaseValueList.prototype.insert = function (a, b) {
        throw new NotImplementedException(0);
    };
    FragmentBaseValueList.prototype.removeAt = function (a) {
        throw new NotImplementedException(0);
    };
    FragmentBaseValueList.prototype.item = function (a, b) {
        if (arguments.length === 2) {
            throw new NotImplementedException(0);
            return b;
        }
        else {
            var b_1 = false;
            if (this.a.parentSeries != null) {
                b_1 = this.a.parentSeries.tt;
            }
            var c = this.a.parentSeries;
            if (c == null) {
                return NaN;
            }
            if (c.tj == null || c.ti == null || c.tj.length == 0 || c.ti.length == 0) {
                return NaN;
            }
            var d = this.a.valueColumn.item(a);
            var e = Math.abs(c.tj[a]) + c.ti[a];
            var f = this.a.logicalSeriesLink.az;
            var g = this.a.logicalSeriesLink.a0;
            if (isNaN_(d) || isInfinity(d)) {
                d = 0;
            }
            if (b_1) {
                if (e == 0) {
                    d = 0;
                }
                else if (d < 0) {
                    d = (g._inner[a] + d) / e * 100;
                }
                else {
                    d = (f._inner[a] + d) / e * 100;
                }
            }
            else {
                d = d < 0 ? g._inner[a] + d : f._inner[a] + d;
            }
            return d;
        }
    };
    FragmentBaseValueList.prototype.add = function (a) {
        throw new NotImplementedException(0);
    };
    FragmentBaseValueList.prototype.clear = function () {
        throw new NotImplementedException(0);
    };
    FragmentBaseValueList.prototype.contains = function (a) {
        throw new NotImplementedException(0);
    };
    FragmentBaseValueList.prototype.copyTo = function (a, b) {
        throw new NotImplementedException(0);
    };
    Object.defineProperty(FragmentBaseValueList.prototype, "count", {
        get: function () {
            return this.a.valueColumn.count;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FragmentBaseValueList.prototype, "isReadOnly", {
        get: function () {
            throw new NotImplementedException(0);
        },
        enumerable: false,
        configurable: true
    });
    FragmentBaseValueList.prototype.remove = function (a) {
        throw new NotImplementedException(0);
    };
    FragmentBaseValueList.prototype.getEnumerator = function () {
        throw new NotImplementedException(0);
    };
    FragmentBaseValueList.prototype.getEnumeratorObject = function () {
        return this.getEnumerator();
    };
    FragmentBaseValueList.$t = markType(FragmentBaseValueList, 'FragmentBaseValueList', Base.$, [IList$1_$type.specialize(Number_$type)]);
    return FragmentBaseValueList;
}(Base));
export { FragmentBaseValueList };
/**
 * @hidden
 */
var LineFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(LineFragment, _super);
    function LineFragment() {
        var _this = _super.call(this) || this;
        _this.ab = LineFragment.$;
        return _this;
    }
    LineFragment.prototype.get_d2 = function () {
        return true;
    };
    LineFragment.prototype.bx = function () {
        return new LineFragmentView(this);
    };
    LineFragment.prototype.l2 = function (a) {
        _super.prototype.l2.call(this, a);
        this.vl = a;
    };
    LineFragment.prototype.vn = function (a, b) {
        var c = this.vl.df.ak;
        if (this.ez(a, c)) {
            return true;
        }
        return false;
    };
    LineFragment.prototype.get_de = function () {
        return true;
    };
    LineFragment.prototype.ex = function (a, b) {
        if (this.vm(a, b)) {
            return true;
        }
        if (this.vn(a, b)) {
            return true;
        }
        if (this.qk(a, b)) {
            return true;
        }
        return false;
    };
    LineFragment.prototype.vm = function (a, b) {
        var c = this.vl.dg.ak;
        if (this.ey(a, b, c)) {
            return true;
        }
        var d = this.vl.dh.ak;
        if (this.ey(a, b, d)) {
            return true;
        }
        return false;
    };
    LineFragment.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    LineFragment.prototype.k0 = function (a, b) {
        _super.prototype.k0.call(this, a, b);
        var c = b;
        c.db();
    };
    LineFragment.prototype.tb = function (a, b) {
        _super.prototype.tb.call(this, a, b);
        var c = function (d) { return a.f._inner[d][0]; };
        var d = function (e) { return a.f._inner[e][1]; };
        var e = function (f) { return a.f._inner[f][0]; };
        var f = function (g) { return a.f._inner[g][2]; };
        this.vc.a = typeCast(ISortingAxis_$type, this.xAxis) !== null ? true : false;
        var g = b.cr.d;
        var h = typeCast(LineFragmentView.$, b);
        var i = this.getEffectiveViewport1(b);
        var j = a.f;
        this.r1.a0(this, this.sl(), runOn(this, this.rm), this.st(b), this.su(b));
        var k = false;
        var l = this.r1.b;
        if (l != null) {
            k = true;
        }
        if (k) {
            var m = new ScalerParams(0, b.bv, b.bu, this.us.cg, i);
            this.s7(j, -1, this.valueColumn.count, this.us, m, b.q);
        }
        this.r1.ad(h.dg, true, false, true, false);
        this.r1.ad(h.dh, true, false, true, false);
        this.r1.ad(h.df, false, true, false, false);
        h.df._opacity = 0.75 * this.r1.j;
        this.vc.m(h.dg, h.df, h.dh, a.f.count, a.f, true, 0, this.tj(a.f, a.f.count - 1, b.bu, b.bv), g, this.fv);
    };
    Object.defineProperty(LineFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    LineFragment.$t = markType(LineFragment, 'LineFragment', FragmentBase.$);
    return LineFragment;
}(FragmentBase));
export { LineFragment };
/**
 * @hidden
 */
var SplineFragmentBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SplineFragmentBase, _super);
    function SplineFragmentBase() {
        var _this = _super.call(this) || this;
        _this._logicalSeriesLink = null;
        _this.vv = null;
        _this.vx = null;
        _this.vv = new CategoryLineRasterizer();
        return _this;
    }
    Object.defineProperty(SplineFragmentBase.prototype, "logicalSeriesLink", {
        get: function () {
            return this._logicalSeriesLink;
        },
        set: function (a) {
            this._logicalSeriesLink = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SplineFragmentBase.prototype, "parentSeries", {
        get: function () {
            return this.vx;
        },
        set: function (a) {
            this.vx = a;
        },
        enumerable: false,
        configurable: true
    });
    SplineFragmentBase.prototype.get_dp = function () {
        return false;
    };
    SplineFragmentBase.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    SplineFragmentBase.prototype.get_dv = function () {
        return true;
    };
    SplineFragmentBase.prototype.jr = function () {
        if (this.logicalSeriesLink != null) {
            return this.logicalSeriesLink.d8;
        }
        return null;
    };
    SplineFragmentBase.prototype.pq = function (a, b, c) {
        var _this = this;
        return this.ps(a, b, c, this.ry.r(this.rs(), this.b0.bv, this.b0.bu, this.getEffectiveViewport1(this.b0)), this.sd(), this.rs(), runOn(this, this.vz), function (d, e) { return _this.hm(d, e, _this.rs(), runOn(_this, _this.sr), new SplineFragmentBaseValueList(_this)); }, function (d, e) { return _this.hk(d, e, _this.rs(), runOn(_this, _this.sr), new SplineFragmentBaseValueList(_this)); });
    };
    SplineFragmentBase.prototype.ag = function () {
        return [this.rs(), this.sd()];
    };
    SplineFragmentBase.prototype.vz = function (a, b, c) {
        if (this.cd == null) {
            return NaN;
        }
        var d = this.getEffectiveViewport1(this.b0);
        var e = new ScalerParams(0, this.cd.s9, this.b0.bu, this.rs().cg, d);
        var f = this.ry.r(this.rs(), this.cd.s9, this.b0.bu, d);
        return this.gn(new SplineFragmentBaseValueList(this), a, this.rs(), e, f, runOn(this, this.sr), b, c);
    };
    SplineFragmentBase.prototype.he = function () {
        var a = this.parentSeries;
        if (a.index == -1 || a.tq == null || a.tq.f.indexOf(this) == -1) {
            return -1;
        }
        return a.tq.f.indexOf(this);
    };
    SplineFragmentBase.prototype.resolveLegendIndex = function () {
        var a = this.parentSeries;
        if (a.tu) {
            return -1 + a.index + a.tm.count - a.tq.f.indexOf(this);
        }
        return _super.prototype.resolveLegendIndex.call(this);
    };
    SplineFragmentBase.prototype.hi = function () {
        var a = this.parentSeries;
        if (a.index == -1 || a.series.count == 0 || a.series.indexOf(this.logicalSeriesLink) == -1) {
            return -1;
        }
        return a.series.indexOf(this.logicalSeriesLink);
    };
    SplineFragmentBase.prototype.bf = function () {
        return this.parentSeries;
    };
    SplineFragmentBase.prototype.vh = function (a, b, c, d, e, f, g) {
        var h = b[0];
        var i = b[1];
        var j = new Rect(0, h - 5, i - 5, 11, 11);
        if (!isNaN_(h) && !isNaN_(i) && !isInfinity(h) && !isInfinity(i) && c.tryAdd(j)) {
            a.m.add({ $type: Point_$type, x: h, y: i });
            var k = f.cu.item(e);
            k.content.item = this.ck.item(d);
            k.al = g;
            return true;
        }
        return false;
    };
    SplineFragmentBase.prototype.fb = function (a, b, c) {
        var d = _super.prototype.fb.call(this, a, b, c);
        var e = typeCast(CategoryAxisBase.$, this.parentSeries.fetchXAxis());
        var f = this.parentSeries.fetchYAxis();
        if (this.parentSeries == null || e == null || e.itemsSource == null || f == null || this.parentSeries.ck == null || e.bh == null || f.bh == null) {
            d = false;
        }
        if (this.valueColumn == null) {
            return false;
        }
        if (isInfinity(this.valueColumn.minimum) && isInfinity(this.valueColumn.maximum)) {
            d = false;
        }
        if (isNaN_(this.valueColumn.minimum) && isNaN_(this.valueColumn.maximum)) {
            d = false;
        }
        return d;
    };
    SplineFragmentBase.prototype.ap = function (a) {
        return null;
    };
    SplineFragmentBase.prototype.v0 = function (a, b, c, d, e, f) {
        var _this = this;
        var g = typeCast(ISortingAxis_$type, d);
        if (g == null) {
            return;
        }
        var h = this.getEffectiveViewport1(f);
        var i = new ScalerParams(0, b, c, d.cg, h);
        var j = new ScalerParams(0, b, c, e.cg, h);
        var k = d.el(2, i) - d.el(1, i);
        var l = this.qj();
        var m = 0;
        var n = this.vl(d, b, c, h);
        var o = function (p) { return Math.abs(_this.parentSeries.tj[p]) + _this.parentSeries.ti[p]; };
        var p = function (q) { return q; };
        var q = function (r) {
            var s = g.i$b._inner[r];
            if (typeCast(IStacked100Series_$type, _this.parentSeries) !== null) {
                return _this.valueColumn.item(s) < 0 ? (_this.logicalSeriesLink.a0._inner[s] + _this.valueColumn.item(s)) / o(s) * 100 : (_this.logicalSeriesLink.az._inner[s] + _this.valueColumn.item(s)) / o(s) * 100;
            }
            else {
                return _this.valueColumn.item(s) < 0 ? _this.logicalSeriesLink.a0._inner[s] + _this.valueColumn.item(s) : _this.logicalSeriesLink.az._inner[s] + _this.valueColumn.item(s);
            }
        };
        var r = this.r2.cr.f;
        var s = this.r2.cr.e;
        var t = truncate(Math.ceil(c.width / (r - s)));
        var u = new CollisionAvoider();
        var v = this.r2.cr.d;
        if (v <= 0 || (s <= 0 && r <= 0)) {
            this.r2.cu.count = m;
            return;
        }
        var w = 0;
        for (var x = s; x < r + 1; ++x) {
            var y = null;
            var z = x * v;
            if (g != null && g.i$b != null && z >= 0 && z < g.i$b.count) {
                z = g.i$b._inner[z];
            }
            if (x >= (this.valueColumn.count - 1)) {
                if (l && this.vh(a, a.f._inner[a.f.count - 1], u, Math.min(z, this.ck.count - 1), m, f, w - 1)) {
                    ++m;
                }
                break;
            }
            var aa = p(x);
            var ab = q(x);
            var ac = p(x + 1);
            var ad = q(x + 1);
            var ae = ac - aa;
            var af = this.vd[x];
            var ag = this.vd[x + 1];
            var ah = g.i$d(g.i$b._inner[x]);
            var ai = d.ei(ah, i) + n;
            var aj = e.ei(ab, j);
            a.f.add([ai, aj, aj]);
            w++;
            for (var ak = 1; ak < t; ++ak) {
                var al = ak / t;
                var am = aa + ae * al;
                var an = (ac - am) / ae;
                var ao = (am - aa) / ae;
                var ap = an * ab + ao * ad + ((an * an * an - an) * af + (ao * ao * ao - ao) * ag) * (ae * ae) / 6;
                var aq = g.i$d(g.i$b._inner[x]);
                var ar = g.i$d(g.i$b._inner[x + 1]);
                if (aq == ar && ab == ad) {
                    break;
                }
                var as = aq + (ar - aq) * al;
                am = d.ei(as, i) + n;
                ap = e.ei(ap, j);
                a.f.add([am, ap, ap]);
                w++;
            }
            if (l) {
                y = [ai, aj, aj];
            }
            if (l && this.vh(a, y, u, Math.min(z, this.ck.count - 1), m, f, w - 1)) {
                ++m;
            }
        }
        this.r2.cu.count = m;
    };
    SplineFragmentBase.prototype.s8 = function (a, b) {
        var _this = this;
        a.u();
        if (this.valueColumn == null || this.parentSeries == null || this.logicalSeriesLink == null) {
            return;
        }
        if (this.logicalSeriesLink.a0.count == 0 || this.logicalSeriesLink.az.count == 0) {
            return;
        }
        if (this.r2.cr.d == 0) {
            return;
        }
        _super.prototype.s8.call(this, a, b);
        if (a.f.count <= 1) {
            return;
        }
        var c = b.bv;
        var d = b.bu;
        var e = this.getEffectiveViewport1(b);
        var f = typeCast(CategoryAxisBase.$, this.parentSeries.fetchXAxis());
        var g = typeCast(NumericYAxis.$, this.parentSeries.fetchYAxis());
        var h = new ScalerParams(0, c, d, f.cg, e);
        var i = new ScalerParams(0, c, d, g.cg, e);
        a.f.clear();
        a.m.clear();
        var j = this.qj();
        var k = 0;
        var l;
        var m;
        if (b.p) {
            l = this.parentSeries.tk;
            m = this.parentSeries.a6.a$h.item(b.ad);
        }
        else if (b == this.bz) {
            l = this.parentSeries.rw;
            m = typeCast(CategorySeriesView.$, this.parentSeries.bz);
        }
        else {
            l = this.parentSeries.rt;
            m = this.parentSeries.r2;
        }
        var n = m.cr.d;
        var o = typeCast(ISortingAxis_$type, f);
        if (o != null && o.i$b.count != this.ck.count) {
            return;
        }
        var p = this.preferredCategoryMode(f);
        if (p == 0 && f.categoryMode != 0) {
            p = 1;
        }
        var q = 0;
        switch (p) {
            case 0:
                q = 0;
                break;
            case 1:
                q = 0.5 * f.getCategorySize(c, d, e);
                break;
            case 2:
                var r = this.index;
                q = f.getGroupCenter(this.index, c, d, e);
                break;
        }
        if (f.cg) {
            q = -q;
        }
        var s = function (t) { return Math.abs(_this.parentSeries.tj[t]) + _this.parentSeries.ti[t]; };
        var t = function (u) { return u; };
        var u = function (v) {
            var w = _this.valueColumn.item(v);
            if (isNaN_(w) || isInfinity(w)) {
                w = 0;
            }
            if (typeCast(IStacked100Series_$type, _this.parentSeries) !== null) {
                if (s(v) == 0) {
                    return 0;
                }
                return w < 0 ? (_this.logicalSeriesLink.a0._inner[v] + w) / s(v) * 100 : (_this.logicalSeriesLink.az._inner[v] + w) / s(v) * 100;
            }
            return w < 0 ? _this.logicalSeriesLink.a0._inner[v] + w : _this.logicalSeriesLink.az._inner[v] + w;
        };
        var v = b.cr.d;
        this.vq(b);
        var w = m.cr.e;
        var x = m.cr.f;
        var y = truncate(Math.ceil(d.width / (x - w)));
        var z = new CollisionAvoider();
        if (o != null) {
            this.v0(a, c, d, f, g, b);
            return;
        }
        var aa = 0;
        var ab = 0;
        for (var ac = w; ac < x + 1; ++ac) {
            if (ac >= this.valueColumn.count) {
                break;
            }
            var ad = null;
            if (v == 1) {
                if (ac >= (this.valueColumn.count - 1)) {
                    if (j && a.f.count > 0 && this.vh(a, a.f._inner[a.f.count - 1], z, Math.min(ac * v, this.ck.count - 1), k, b, aa - 1)) {
                        ++k;
                    }
                    break;
                }
                var ae = t(ac);
                var af = t(ac + 1);
                var ag = u(ac);
                var ah = u(ac + 1);
                var ai = af - ae;
                var aj = this.vd[ac];
                var ak = this.vd[ac + 1];
                var al = f.ei(ae, h) + q;
                var am = g.ei(ag, i);
                a.f.add([al, am, am]);
                aa++;
                ab = aa;
                for (var an = 1; an < y; ++an) {
                    var ao = ae + ai * an / y;
                    var ap = (af - ao) / ai;
                    var aq = (ao - ae) / ai;
                    var ar = ap * ag + aq * ah + ((ap * ap * ap - ap) * aj + (aq * aq * aq - aq) * ak) * (ai * ai) / 6;
                    ao = f.ei(ao, h) + q;
                    ar = g.ei(ar, i);
                    a.f.add([ao, ar, ar]);
                    aa++;
                }
                if (j) {
                    ad = [al, am, am];
                }
            }
            else {
                ad = b.cr.getBucket(ac);
                if (!isNaN_(ad[0])) {
                    ad[0] = f.ei(ad[0], h) + q;
                    ad[1] = g.ei(ad[1], i);
                    ad[2] = g.ei(ad[2], i);
                    a.f.add(ad);
                    aa++;
                    ab = aa;
                }
            }
            if (j && this.vh(a, ad, z, Math.min(ac * v, this.ck.count - 1), k, b, ab - 1)) {
                ++k;
            }
        }
        b.cu.count = k;
    };
    SplineFragmentBase.prototype.vb = function (a) {
        var _this = this;
        var b = function (c) { return Math.abs(_this.parentSeries.tj[c]) + _this.parentSeries.ti[c]; };
        var c = function (d) { return d; };
        var d = function (e) {
            var f = _this.valueColumn.item(e);
            if (isNaN_(f) || isInfinity(f)) {
                f = 0;
            }
            if (typeCast(IStacked100Series_$type, _this.parentSeries) !== null) {
                if (b(e) == 0) {
                    return 0;
                }
                return f < 0 ? (_this.logicalSeriesLink.a0._inner[e] + f) / b(e) * 100 : (_this.logicalSeriesLink.az._inner[e] + f) / b(e) * 100;
            }
            return f < 0 ? _this.logicalSeriesLink.a0._inner[e] + f : _this.logicalSeriesLink.az._inner[e] + f;
        };
        var e = new List$1(Array_$type, 0);
        var f = a.bv;
        var g = a.bu;
        var h = typeCast(ISortingAxis_$type, this.us);
        var i = 0;
        var j = 0;
        var k = 0;
        var l = this.fv;
        var m = this.pv(this.b0);
        var n = this.us;
        var o = this.getEffectiveViewport1(a);
        if (h == null || h.i$b == null) {
            var p = new ScalerParams(0, f, g, n.cg, o);
            var q = 0;
            var r = n.lf - 1;
            var s = Math.floor((r - q + 1) * l / m.width);
            i = truncate(Math.max(1, s));
            j = truncate(Math.max(0, Math.floor(q / i) - 1));
            k = truncate(Math.ceil(r / i));
        }
        else {
            j = 0;
            k = n.lf - 1;
            i = 1;
        }
        var t = truncate(Math.ceil(g.width / (k - j)));
        var u = new CollisionAvoider();
        if (h != null) {
            return this.vc(a);
        }
        var v = 0;
        var w = 0;
        for (var x = j; x < k + 1; ++x) {
            if (x >= this.valueColumn.count) {
                break;
            }
            var y = null;
            if (i == 1) {
                if (x >= (this.valueColumn.count - 1)) {
                    break;
                }
                var z = c(x);
                var aa = c(x + 1);
                var ab = d(x);
                var ac = d(x + 1);
                var ad = aa - z;
                var ae = this.vd[x];
                var af = this.vd[x + 1];
                e.add([ab, ab]);
                for (var ag = 1; ag < t; ++ag) {
                    var ah = z + ad * ag / t;
                    var ai = (aa - ah) / ad;
                    var aj = (ah - z) / ad;
                    var ak = ai * ab + aj * ac + ((ai * ai * ai - ai) * ae + (aj * aj * aj - aj) * af) * (ad * ad) / 6;
                    e.add([ak, ak]);
                }
            }
            else {
                y = a.cr.getBucket(x);
                if (!isNaN_(y[0])) {
                    e.add([y[0], y[1]]);
                }
            }
        }
        return e.toArray();
    };
    SplineFragmentBase.prototype.vc = function (a) {
        var _this = this;
        var b = new List$1(Array_$type, 0);
        var c = a.bv;
        var d = a.bu;
        var e = this.us;
        var f = typeCast(ISortingAxis_$type, e);
        if (f == null) {
            return null;
        }
        var g = this.getEffectiveViewport1(a);
        var h = this.qj();
        var i = 0;
        var j = function (k) { return Math.abs(_this.parentSeries.tj[k]) + _this.parentSeries.ti[k]; };
        var k = function (l) { return l; };
        var l = function (m) {
            var n = f.i$b._inner[m];
            if (typeCast(IStacked100Series_$type, _this.parentSeries) !== null) {
                return _this.valueColumn.item(n) < 0 ? (_this.logicalSeriesLink.a0._inner[n] + _this.valueColumn.item(n)) / j(n) * 100 : (_this.logicalSeriesLink.az._inner[n] + _this.valueColumn.item(n)) / j(n) * 100;
            }
            else {
                return _this.valueColumn.item(n) < 0 ? _this.logicalSeriesLink.a0._inner[n] + _this.valueColumn.item(n) : _this.logicalSeriesLink.az._inner[n] + _this.valueColumn.item(n);
            }
        };
        var m = 0;
        var n = 0;
        var o = 0;
        var p = this.fv;
        var q = this.pv(this.b0);
        if (f == null || f.i$b == null) {
            var r = 0;
            var s = e.lf - 1;
            var t = Math.floor((s - r + 1) * p / q.width);
            m = truncate(Math.max(1, t));
            n = truncate(Math.max(0, Math.floor(r / m) - 1));
            o = truncate(Math.ceil(s / m));
        }
        else {
            n = 0;
            o = e.lf - 1;
            m = 1;
        }
        if (m <= 0 || (n <= 0 && o <= 0)) {
            this.r2.cu.count = i;
            return null;
        }
        var u = truncate(Math.ceil(d.width / (o - n)));
        var v = new CollisionAvoider();
        var w = 0;
        for (var x = n; x < o + 1; ++x) {
            var y = null;
            if (x >= (this.valueColumn.count - 1)) {
                break;
            }
            var z = k(x);
            var aa = l(x);
            var ab = k(x + 1);
            var ac = l(x + 1);
            var ad = ab - z;
            var ae = this.vd[x];
            var af = this.vd[x + 1];
            b.add([aa, aa]);
            for (var ag = 1; ag < u; ++ag) {
                var ah = ag / u;
                var ai = z + ad * ah;
                var aj = (ab - ai) / ad;
                var ak = (ai - z) / ad;
                var al = aj * aa + ak * ac + ((aj * aj * aj - aj) * ae + (ak * ak * ak - ak) * af) * (ad * ad) / 6;
                b.add([al, al]);
            }
        }
        return b.toArray();
    };
    SplineFragmentBase.prototype.vq = function (a) {
        var _this = this;
        _super.prototype.vq.call(this, a);
        var b = function (c) { return Math.abs(_this.parentSeries.tj[c]) + _this.parentSeries.ti[c]; };
        var c = function (d) { return d; };
        var d = function (e) {
            var f = _this.valueColumn.item(e);
            if (isNaN_(f) || isInfinity(f)) {
                f = 0;
            }
            if (typeCast(IStacked100Series_$type, _this.parentSeries) !== null) {
                if (b(e) == 0) {
                    return 0;
                }
                return f < 0 ? (_this.logicalSeriesLink.a0._inner[e] + f) / b(e) * 100 : (_this.logicalSeriesLink.az._inner[e] + f) / b(e) * 100;
            }
            return f < 0 ? _this.logicalSeriesLink.a0._inner[e] + f : _this.logicalSeriesLink.az._inner[e] + f;
        };
        var e = this.us;
        var f = this.vf == 0 ? NaN : 0;
        if (e != null && typeCast(ISortingAxis_$type, e) !== null && e.i$b != null) {
            var g_1 = new SafeSortedReadOnlyDoubleCollection(0, this.valueColumn, e.i$b);
            d = function (h) { return g_1.item(h); };
        }
        this.vd = Numeric.c(this.valueColumn.count, c, d, f, f);
        if (this.vg) {
            var h = -1.7976931348623157E+308;
            var i = 1.7976931348623157E+308;
            var j = this.vb(a);
            if (j == null) {
                return;
            }
            for (var k = 0; k < j.length; k++) {
                if (isNaN_(j[k][0]) || isNaN_(j[k][1])) {
                    continue;
                }
                if (j[k][1] > h) {
                    h = j[k][1];
                }
                if (j[k][0] < i) {
                    i = j[k][0];
                }
            }
            this.vn = i;
            this.vm = h;
        }
    };
    SplineFragmentBase.prototype.l7 = function (a, b, c, d) {
        _super.prototype.l7.call(this, a, b, c, d);
        switch (b) {
            case "ActualBrush":
                if (this.logicalSeriesLink != null) {
                    this.logicalSeriesLink.jf = this.o3;
                }
                break;
        }
    };
    Object.defineProperty(SplineFragmentBase.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    SplineFragmentBase.$t = markType(SplineFragmentBase, 'SplineFragmentBase', SplineSeriesBase.$);
    return SplineFragmentBase;
}(SplineSeriesBase));
export { SplineFragmentBase };
/**
 * @hidden
 */
var SplineAreaFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SplineAreaFragment, _super);
    function SplineAreaFragment() {
        var _this = _super.call(this) || this;
        _this.v5 = null;
        _this.ab = SplineAreaFragment.$;
        return _this;
    }
    SplineAreaFragment.prototype.bx = function () {
        return new SplineAreaFragmentView(this);
    };
    SplineAreaFragment.prototype.l2 = function (a) {
        _super.prototype.l2.call(this, a);
        this.v1 = typeCast(SplineAreaFragmentView.$, a);
    };
    SplineAreaFragment.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.ml(false);
    };
    SplineAreaFragment.prototype.get_de = function () {
        return true;
    };
    SplineAreaFragment.prototype.get_dd = function () {
        return true;
    };
    SplineAreaFragment.prototype.get_eh = function () {
        return true;
    };
    SplineAreaFragment.prototype.r3 = function () {
        return 1;
    };
    SplineAreaFragment.prototype.v3 = function (a, b) {
        var c = this.v1.di.ak;
        if (this.ez(a, c)) {
            return true;
        }
        var d = this.v1.dj.ak;
        if (this.ez(a, d)) {
            return true;
        }
        return false;
    };
    SplineAreaFragment.prototype.ex = function (a, b) {
        if (this.v2(a, b)) {
            return true;
        }
        if (this.v3(a, b)) {
            return true;
        }
        if (this.qk(a, b)) {
            return true;
        }
        return false;
    };
    SplineAreaFragment.prototype.v2 = function (a, b) {
        var c = this.v1.dk.ak;
        if (this.ey(a, b, c)) {
            return true;
        }
        var d = this.v1.dl.ak;
        if (this.ey(a, b, d)) {
            return true;
        }
        return false;
    };
    SplineAreaFragment.prototype.k0 = function (a, b) {
        _super.prototype.k0.call(this, a, b);
        var c = b;
        c.dd();
    };
    SplineAreaFragment.prototype.tb = function (a, b) {
        var _this = this;
        _super.prototype.tb.call(this, a, b);
        this.vv.a = typeCast(ISortingAxis_$type, this.xAxis) !== null ? true : false;
        var c = a.f;
        var d = this.getEffectiveViewport1(b);
        this.r1.a0(this, this.sl(), runOn(this, this.rm), this.st(b), this.su(b));
        var e = false;
        var f = this.r1.b;
        if (f != null) {
            e = true;
        }
        if (e) {
            var g = new ScalerParams(0, b.bv, b.bu, this.us.cg, d);
            this.s7(c, -1, this.valueColumn.count, this.us, g, b.q);
        }
        var h = typeCast(SplineAreaFragmentView.$, b);
        var i = b.cr.d;
        this.r1.ad(h.dk, true, false, true, true);
        this.r1.ad(h.dl, true, false, true, true);
        this.r1.ad(h.di, false, true, false, false);
        this.r1.ad(h.dj, false, true, false, false);
        h.di._opacity = this.r1.j * this.fs;
        h.dj._opacity = 0.5 * this.r1.j * this.fs;
        this.vv.i(h.di, h.dk, h.dj, h.dl, a.f.count, a.f, true, i, this.fv, function (j, k, l, m, n) { return _this.v4(j, a.f, b); }, 1);
    };
    SplineAreaFragment.prototype.mn = function (a, b) {
        _super.prototype.mn.call(this, a, b);
    };
    SplineAreaFragment.prototype.v4 = function (a, b, c) {
        var d = this.tu(c);
        var e = d;
        var f = this.logicalSeriesLink.at;
        var g = f ? this.parentSeries.tq.e : this.parentSeries.tq.d;
        var h = g.indexOf(this);
        if (a.count == 0) {
            return;
        }
        if (h == -1) {
            return;
        }
        var i = false;
        for (var j = h; j >= 0; j--) {
            if (i) {
                break;
            }
            if (j == 0) {
                a.add({ $type: Point_$type, x: a._inner[a.count - 1].x, y: e });
                a.add({ $type: Point_$type, x: a._inner[0].x, y: e });
                break;
            }
            var k = typeCast(SplineFragmentBase.$, g._inner[j - 1]);
            if (k != null && k.vv != null && k.vv.o.count > 0 && this.b0 != null && k.fb(this.b0.bu, this.b0.bv, this.b0)) {
                i = true;
                for (var l = k.vv.o.count - 1; l >= 0; l--) {
                    a.add(k.vv.o._inner[l]);
                }
            }
        }
    };
    SplineAreaFragment.prototype.tu = function (a) {
        var b = 0;
        var c = a.bv;
        var d = a.bu;
        var e = this.getEffectiveViewport1(a);
        var f = new ScalerParams(0, c, d, this.yAxis.cg, e);
        if (!c.isEmpty && !d.isEmpty && this.yAxis != null) {
            b = this.yAxis.ei(0, f);
        }
        return b;
    };
    SplineAreaFragment.prototype.mw = function () {
        var a = (typeCast(XamDataChart.$, this.cd));
        if (a != null) {
            this.fs = isNaN_(this.f1) ? this.parentSeries.fs : this.f1;
        }
    };
    Object.defineProperty(SplineAreaFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    SplineAreaFragment.$t = markType(SplineAreaFragment, 'SplineAreaFragment', SplineFragmentBase.$);
    return SplineAreaFragment;
}(SplineFragmentBase));
export { SplineAreaFragment };
/**
 * @hidden
 */
var SplineFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SplineFragment, _super);
    function SplineFragment() {
        var _this = _super.call(this) || this;
        _this.ab = SplineFragment.$;
        return _this;
    }
    SplineFragment.prototype.get_eh = function () {
        return true;
    };
    SplineFragment.prototype.bx = function () {
        return new SplineFragmentView(this);
    };
    SplineFragment.prototype.l2 = function (a) {
        _super.prototype.l2.call(this, a);
        this.v1 = a;
    };
    SplineFragment.prototype.v3 = function (a, b) {
        var c = this.v1.dh.ak;
        if (this.ez(a, c)) {
            return true;
        }
        return false;
    };
    SplineFragment.prototype.get_de = function () {
        return true;
    };
    SplineFragment.prototype.ex = function (a, b) {
        if (this.v2(a, b)) {
            return true;
        }
        if (this.v3(a, b)) {
            return true;
        }
        if (this.qk(a, b)) {
            return true;
        }
        return false;
    };
    SplineFragment.prototype.v2 = function (a, b) {
        var c = this.v1.di.ak;
        if (this.ey(a, b, c)) {
            return true;
        }
        var d = this.v1.dj.ak;
        if (this.ey(a, b, d)) {
            return true;
        }
        return false;
    };
    SplineFragment.prototype.k0 = function (a, b) {
        _super.prototype.k0.call(this, a, b);
        var c = b;
        c.dd();
    };
    SplineFragment.prototype.tb = function (a, b) {
        _super.prototype.tb.call(this, a, b);
        this.vv.a = typeCast(ISortingAxis_$type, this.xAxis) !== null ? true : false;
        var c = typeCast(SplineFragmentView.$, b);
        var d = a.f;
        var e = this.getEffectiveViewport1(b);
        this.r1.a0(this, this.sl(), runOn(this, this.rm), this.st(b), this.su(b));
        var f = false;
        var g = this.r1.b;
        if (g != null) {
            f = true;
        }
        if (f) {
            var h = new ScalerParams(0, b.bv, b.bu, this.us.cg, e);
            this.s7(d, -1, this.valueColumn.count, this.us, h, b.q);
        }
        this.r1.ad(c.di, true, false, true, false);
        this.r1.ad(c.dj, true, false, true, false);
        this.r1.ad(c.dh, false, true, false, false);
        c.dh._opacity = 0.75 * this.r1.j;
        var i = c.cr.d;
        this.vv.m(c.di, c.dh, c.dj, a.f.count, a.f, true, 1, this.tj(a.f, a.f.count - 1, b.bu, b.bv), i, this.fv);
    };
    Object.defineProperty(SplineFragment.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    SplineFragment.$t = markType(SplineFragment, 'SplineFragment', SplineFragmentBase.$);
    return SplineFragment;
}(SplineFragmentBase));
export { SplineFragment };
/**
 * @hidden
 */
var SplineFragmentBaseValueList = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SplineFragmentBaseValueList, _super);
    function SplineFragmentBaseValueList(a) {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.a = a;
        return _this;
    }
    SplineFragmentBaseValueList.prototype.indexOf = function (a) {
        throw new NotImplementedException(0);
    };
    SplineFragmentBaseValueList.prototype.insert = function (a, b) {
        throw new NotImplementedException(0);
    };
    SplineFragmentBaseValueList.prototype.removeAt = function (a) {
        throw new NotImplementedException(0);
    };
    SplineFragmentBaseValueList.prototype.item = function (a, b) {
        if (arguments.length === 2) {
            throw new NotImplementedException(0);
            return b;
        }
        else {
            var b_2 = false;
            if (this.a.parentSeries != null) {
                b_2 = this.a.parentSeries.tt;
            }
            var c = this.a.parentSeries;
            if (c == null) {
                return NaN;
            }
            var d = this.a.valueColumn.item(a);
            var e = Math.abs(c.tj[a]) + c.ti[a];
            var f = this.a.logicalSeriesLink.az;
            var g = this.a.logicalSeriesLink.a0;
            if (isNaN_(d) || isInfinity(d)) {
                d = 0;
            }
            if (b_2) {
                if (e == 0) {
                    d = 0;
                }
                else if (d < 0) {
                    d = (g._inner[a] + d) / e * 100;
                }
                else {
                    d = (f._inner[a] + d) / e * 100;
                }
            }
            else {
                d = d < 0 ? g._inner[a] + d : f._inner[a] + d;
            }
            return d;
        }
    };
    SplineFragmentBaseValueList.prototype.add = function (a) {
        throw new NotImplementedException(0);
    };
    SplineFragmentBaseValueList.prototype.clear = function () {
        throw new NotImplementedException(0);
    };
    SplineFragmentBaseValueList.prototype.contains = function (a) {
        throw new NotImplementedException(0);
    };
    SplineFragmentBaseValueList.prototype.copyTo = function (a, b) {
        throw new NotImplementedException(0);
    };
    Object.defineProperty(SplineFragmentBaseValueList.prototype, "count", {
        get: function () {
            return this.a.valueColumn.count;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SplineFragmentBaseValueList.prototype, "isReadOnly", {
        get: function () {
            throw new NotImplementedException(0);
        },
        enumerable: false,
        configurable: true
    });
    SplineFragmentBaseValueList.prototype.remove = function (a) {
        throw new NotImplementedException(0);
    };
    SplineFragmentBaseValueList.prototype.getEnumerator = function () {
        throw new NotImplementedException(0);
    };
    SplineFragmentBaseValueList.prototype.getEnumeratorObject = function () {
        return this.getEnumerator();
    };
    SplineFragmentBaseValueList.$t = markType(SplineFragmentBaseValueList, 'SplineFragmentBaseValueList', Base.$, [IList$1_$type.specialize(Number_$type)]);
    return SplineFragmentBaseValueList;
}(Base));
export { SplineFragmentBaseValueList };
/**
 * @hidden
 */
var StackedSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSeriesBase, _super);
    function StackedSeriesBase() {
        var _this = _super.call(this) || this;
        _this._series = null;
        _this.seriesCreated = null;
        _this.t0 = 0;
        _this.tz = 0;
        _this.ti = null;
        _this.tj = null;
        _this.tq = null;
        _this.tn = null;
        _this.tw = new Dictionary$2(String_$type, Boolean_$type, 0);
        _this.tk = null;
        _this.series = new StackedSeriesCollection();
        var a = _this.series;
        a.collectionResetting = delegateCombine(a.collectionResetting, runOn(_this, _this.uc));
        var b = _this.series;
        b.collectionChanged = delegateCombine(b.collectionChanged, runOn(_this, _this.ub));
        _this.ry = new StackedSeriesFramePreparer(1, _this, _this.tr, _this, _this, _this.tr.cr);
        _this.tq = new StackedSeriesManager(_this);
        _this.tn = new StackedSeriesCollection();
        var c = _this.tn;
        c.collectionChanged = delegateCombine(c.collectionChanged, runOn(_this, _this.ub));
        var d = _this.tn;
        d.collectionResetting = delegateCombine(d.collectionResetting, runOn(_this, _this.t6));
        return _this;
    }
    StackedSeriesBase.prototype.ln = function () {
        var e_1, _a;
        try {
            for (var _b = __values(fromEnum(this.tm)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var a = _c.value;
                a.fx();
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        _super.prototype.ln.call(this);
    };
    StackedSeriesBase.prototype.get_dy = function () {
        return false;
    };
    StackedSeriesBase.prototype.getHostReferenceValue = function () {
        return this.ge();
    };
    StackedSeriesBase.prototype.bx = function () {
        return new StackedSeriesView(this);
    };
    StackedSeriesBase.prototype.l2 = function (a) {
        _super.prototype.l2.call(this, a);
        this.tr = a;
    };
    StackedSeriesBase.prototype.l3 = function (a, b) {
        var e_2, _a;
        _super.prototype.l3.call(this, a, b);
        try {
            for (var _b = __values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                c.visualSeriesLink.b0.bu = b;
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
    };
    Object.defineProperty(StackedSeriesBase.prototype, "series", {
        get: function () {
            return this._series;
        },
        set: function (a) {
            this._series = a;
        },
        enumerable: false,
        configurable: true
    });
    StackedSeriesBase.prototype.hn = function () {
        if (this.series == null) {
            return -1;
        }
        return this.series.count;
    };
    StackedSeriesBase.prototype.ld = function (a) {
        for (var b = 0; b < this.tq.f.count; b++) {
            var c = this.tq.f._inner[b];
            if (!a(c)) {
                break;
            }
        }
    };
    StackedSeriesBase.prototype.get_isStacked = function () {
        return true;
    };
    Object.defineProperty(StackedSeriesBase.prototype, "tm", {
        get: function () {
            return this.ts ? this.tn : this.series;
        },
        enumerable: false,
        configurable: true
    });
    StackedSeriesBase.prototype.t6 = function (a, b) {
        var e_3, _a;
        try {
            for (var _b = __values(fromEnum(this.tn)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                if (this.tq != null && this.tq.c.contains(c)) {
                    c.parentSeries = null;
                    this.tq.c.remove(c);
                }
            }
        }
        catch (e_3_1) {
            e_3 = { error: e_3_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_3)
                    throw e_3.error;
            }
        }
    };
    StackedSeriesBase.prototype.uc = function (a, b) {
        var e_4, _a;
        try {
            for (var _b = __values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                if (this.tq != null && this.tq.c.contains(c)) {
                    c.parentSeries = null;
                    this.tq.c.remove(c);
                }
            }
        }
        catch (e_4_1) {
            e_4 = { error: e_4_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_4)
                    throw e_4.error;
            }
        }
    };
    StackedSeriesBase.prototype.ub = function (a, b) {
        var e_5, _a, e_6, _b;
        if (b.oldItems != null) {
            try {
                for (var _c = __values(fromEn(b.oldItems)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var c = _d.value;
                    if (this.tq != null && this.tq.c.contains(c)) {
                        c.parentSeries = null;
                        this.tq.c.remove(c);
                    }
                }
            }
            catch (e_5_1) {
                e_5 = { error: e_5_1 };
            }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return))
                        _a.call(_c);
                }
                finally {
                    if (e_5)
                        throw e_5.error;
                }
            }
        }
        if (b.newItems != null) {
            var d = b.newStartingIndex;
            try {
                for (var _e = __values(fromEn(b.newItems)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var e = _f.value;
                    if (this.tq != null && !this.tq.c.contains(e)) {
                        e.parentSeries = this;
                        e.fh();
                        e.f4();
                        e.f5();
                        e.gi();
                        e.f6();
                        e.f7();
                        e.fc();
                        e.fd();
                        e.fg();
                        e.fe();
                        e.ff();
                        e.fi();
                        e.fo();
                        e.fp();
                        e.fq();
                        e.fv();
                        e.fx();
                        e.fr();
                        e.ft();
                        e.fu();
                        e.fv();
                        e.fw();
                        e.fy();
                        e.fz();
                        e.f0();
                        e.fb();
                        e.f2();
                        e.f3();
                        e.f8();
                        e.f9();
                        e.ga();
                        e.fs();
                        e.f1();
                        e.gb();
                        e.gc();
                        e.fk();
                        e.gg();
                        e.gd();
                        e.gf();
                        e.gh();
                        e.gj();
                        if (!this.ts) {
                            this.tq.c.insert(d, e);
                            d++;
                        }
                    }
                }
            }
            catch (e_6_1) {
                e_6 = { error: e_6_1 };
            }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return))
                        _b.call(_e);
                }
                finally {
                    if (e_6)
                        throw e_6.error;
                }
            }
        }
        if (!this.ts) {
            this.ud();
        }
    };
    StackedSeriesBase.prototype.mt = function (a) {
        this.cb.cu.c8(a, true, false);
    };
    StackedSeriesBase.prototype.rz = function (a) {
        if (a != null && a.q) {
            if (a.p) {
                return new StackedSeriesFramePreparer(1, typeCast(IIsCategoryBased_$type, this), typeCast(ISupportsMarkers_$type, a), a, this, a.cr);
            }
            else {
                var b = typeCast(CategorySeriesView.$, this.bz);
                return new StackedSeriesFramePreparer(1, this, typeCast(ISupportsMarkers_$type, b), this.cd.cu.o, this, b.cr);
            }
        }
        else {
            return this.ry;
        }
    };
    StackedSeriesBase.prototype.s8 = function (a, b) {
        a.u();
        this.t9();
        this.rz(b).d(a, b);
    };
    StackedSeriesBase.prototype.mm = function (a) {
        _super.prototype.mm.call(this, a);
        this.tq.h(a);
    };
    StackedSeriesBase.prototype.k0 = function (a, b) {
        var e_7, _a;
        _super.prototype.k0.call(this, a, b);
        try {
            for (var _b = __values(fromEnum(this.tm)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                if (c.visualSeriesLink != null) {
                    c.visualSeriesLink.k0(a, c.visualSeriesLink.b0);
                }
            }
        }
        catch (e_7_1) {
            e_7 = { error: e_7_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_7)
                    throw e_7.error;
            }
        }
    };
    StackedSeriesBase.prototype.t7 = function () {
        this.t9();
    };
    StackedSeriesBase.prototype.ud = function () {
        var a = this.fetchXAxis();
        if (a != null) {
            a.c1(true);
        }
        var b = this.fetchYAxis();
        if (b != null) {
            b.c1(true);
        }
    };
    StackedSeriesBase.prototype.get_tt = function () {
        return false;
    };
    Object.defineProperty(StackedSeriesBase.prototype, "tt", {
        get: function () {
            return this.get_tt();
        },
        enumerable: false,
        configurable: true
    });
    StackedSeriesBase.prototype.eo = function (a) {
        var b = this.ck != null ? this.ck.indexOf(a) : -1;
        var c = this.cd != null ? this.cd.s9 : Rect.empty;
        c = c.copy();
        var d = this.b0.bu;
        var e = new Rect(0, 0, 0, 1, 1);
        var f = this.px(this.b0);
        if (b >= 0 && Rect.l_op_Inequality(c, null) && Rect.l_op_Inequality(d, null)) {
            var g = this.fetchXAxis();
            if (g != null) {
                var h = new ScalerParams(0, e, e, g.cg, f);
                var i = g.ei(b, h);
                if (i < c.left + 0.1 * c.width) {
                    i = i + 0.4 * c.width;
                }
                if (i > c.right - 0.1 * c.width) {
                    i = i - 0.4 * c.width;
                }
                c.x = i - 0.5 * c.width;
            }
            var j = this.fetchYAxis();
            if (j != null && this.ti != null && b < this.ti.length) {
                var k = new ScalerParams(0, e, e, j.cg, f);
                var l = j.ei(this.ti[b], k);
                var m = j.ei(this.tj[b], k);
                if (!isNaN_(l) && !isNaN_(m)) {
                    var n = Math.abs(m - l);
                    if (c.height < n) {
                        c.height = n;
                        c.y = Math.min(m, l);
                    }
                    else {
                        if (m < c.top + 0.1 * c.height) {
                            m = m + 0.4 * c.height;
                        }
                        if (m > c.bottom - 0.1 * c.height) {
                            m = m - 0.4 * c.height;
                        }
                        c.y = m - 0.5 * c.height;
                    }
                }
            }
            this.b8.au(this.cd, c, true);
        }
        return b >= 0;
    };
    StackedSeriesBase.prototype.ap = function (a) {
        if (this.tj == null || this.tj.length == 0 || this.ti == null || this.ti.length == 0) {
            return null;
        }
        if (a == this.fetchXAxis()) {
            var b = Math.min(this.tj.length, this.ti.length);
            return new AxisRange(0, b - 1);
        }
        if (a == this.fetchYAxis()) {
            return new AxisRange(this.t0, this.tz);
        }
        return null;
    };
    StackedSeriesBase.prototype.qj = function () {
        return false;
    };
    StackedSeriesBase.prototype.k3 = function (a, b, c, d) {
        this.t9();
        this.sn();
        this.ml(true);
    };
    StackedSeriesBase.prototype.tl = function () {
        return this.tr;
    };
    StackedSeriesBase.prototype.tx = function () {
        var a = 0;
        var b = this.b0.bv;
        var c = this.b0.bu;
        var d = this.getEffectiveViewport1(this.b0);
        var e = typeCast(NumericYAxis.$, this.fetchYAxis());
        if (!b.isEmpty && !c.isEmpty && e != null) {
            var f = new ScalerParams(0, b, c, e.cg, d);
            a = e.ei(e.l5, f);
        }
        return a;
    };
    StackedSeriesBase.prototype.ty = function () {
        var a = typeCast(NumericYAxis.$, this.fetchYAxis());
        if (a != null) {
            return a.l5;
        }
        return 0;
    };
    StackedSeriesBase.prototype.t2 = function (a) {
        return this.index < 0 || this.tm == null || this.tm.count == 0 ? -1 : this.index + this.tm.indexOf(a);
    };
    StackedSeriesBase.prototype.t1 = function (a) {
        var b = this.cd != null ? this.cd.s9 : Rect.empty;
        var c = this.b0.bu;
        var d = this.getEffectiveViewport1(this.b0);
        var e = typeCast(CategoryAxisBase.$, this.fetchXAxis());
        var f = -1;
        if (e != null && !b.isEmpty && !c.isEmpty) {
            var g = new ScalerParams(0, b, c, e.cg, d);
            var h = this.pv(this.b0);
            var i = e.el(h.left, g);
            var j = e.el(h.right, g);
            var k = (a.x - b.left) / b.width;
            var l = i + (k * (j - i));
            if (e.categoryMode != 0) {
                l -= 0.5;
            }
            var m = truncate(Math.round(l));
            f = m;
        }
        return f;
    };
    StackedSeriesBase.prototype.tv = function (a, b, c, d) {
        var e = true;
        var f = typeCast(CategoryAxisBase.$, this.fetchXAxis());
        var g = typeCast(NumericYAxis.$, this.fetchYAxis());
        if (!d.o() || c.isEmpty || b.isEmpty || f == null || f.itemsSource == null || g == null || this.ck == null || f.bh == null || g.bh == null || g.lv == g.lu) {
            e = false;
        }
        var h = d;
        var i = h.cr.d;
        if (a.valueColumn == null || a.valueColumn.count == 0 || i < 1 || a._visibility != 0) {
            e = false;
        }
        return e;
    };
    StackedSeriesBase.prototype.t8 = function () {
        var e_8, _a;
        if (this.cd == null || this.tq == null) {
            return;
        }
        if (!this.ts) {
            this.tn.clear();
            try {
                for (var _b = __values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var a = _c.value;
                    if (!this.tq.c.contains(a)) {
                        this.tq.c.add(a);
                    }
                }
            }
            catch (e_8_1) {
                e_8 = { error: e_8_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_8)
                        throw e_8.error;
                }
            }
            this.ud();
            return;
        }
    };
    StackedSeriesBase.prototype.tb = function (a, b) {
        _super.prototype.tb.call(this, a, b);
    };
    StackedSeriesBase.prototype.ua = function (a, b, c, d) {
    };
    StackedSeriesBase.prototype.aq = function (a) {
        if (a.isEmpty && this.cd != null) {
            a = this.cd.s9;
        }
        var b = this.rs();
        if (this.ti == null || this.tj == null) {
            return null;
        }
        var c = this.pv(this.b0);
        var d = new ScalerParams(0, a, this.cd.to, b.cg, this.getEffectiveViewport());
        var e = (b.el(c.left, d));
        var f = (b.el(c.right, d));
        if (b.cg) {
            var g = e;
            e = f;
            f = g;
        }
        var h = null;
        if (b.cm) {
            h = b;
            e = h.i$f(e);
            f = h.i$f(f);
        }
        else {
            e = Math.floor(e);
            f = Math.ceil(f);
        }
        e = Math.max(0, Math.min(this.tj.length - 1, e));
        f = Math.max(0, Math.min(this.tj.length - 1, f));
        var i = 1.7976931348623157E+308;
        var j = -1.7976931348623157E+308;
        for (var k = truncate(e); k <= truncate(f); k++) {
            var l = k;
            if (h != null) {
                l = h.i$b._inner[k];
            }
            var m = this.tj[l];
            {
                if (isInfinity(m) || isNaN_(m)) {
                    continue;
                }
            }
            var n = this.ti[l];
            {
                if (isInfinity(n) || isNaN_(n)) {
                    continue;
                }
            }
            i = Math.min(i, m);
            j = Math.max(j, n);
        }
        var o = new AxisRange(i, j);
        var p = this.sd();
        o = this.ao(o, p, a);
        return o;
    };
    StackedSeriesBase.prototype.mo = function () {
        var e_9, _a;
        _super.prototype.mo.call(this);
        try {
            for (var _b = __values(fromEnum(this.tm)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var a = _c.value;
                a.e9();
            }
        }
        catch (e_9_1) {
            e_9 = { error: e_9_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_9)
                    throw e_9.error;
            }
        }
    };
    StackedSeriesBase.prototype.t9 = function () {
        var e_10, _a;
        if (this.ck == null) {
            return;
        }
        var a = this.ck.count;
        this.ti = new Array(a);
        this.tj = new Array(a);
        for (var b = 0; b < a; b++) {
            this.ti[b] = 0;
            this.tj[b] = 0;
        }
        this.t0 = Number.POSITIVE_INFINITY;
        this.tz = Number.NEGATIVE_INFINITY;
        var c = 0;
        try {
            for (var _b = __values(fromEnum(this.tm)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                if (d.itemsSource != null && d.visualSeriesLink == null) {
                    continue;
                }
                if (d.itemsSource != null) {
                    d.af = d.visualSeriesLink.valueColumn;
                }
                if (d.itemsSource == null) {
                    this.ck.deregisterColumn(d.af);
                    d.af = this.ch(d.e1);
                }
                if (d.visualSeriesLink != null && d.itemsSource == null) {
                    d.visualSeriesLink.tt = true;
                    d.visualSeriesLink.valueColumn = d.af;
                    d.visualSeriesLink.tt = false;
                }
                d.at = true;
                if (d.af != null) {
                    d.az.clear();
                    d.a0.clear();
                    for (var e = 0; e < d.af.count; e++) {
                        var f = d.af.item(e);
                        if (f < c) {
                            d.az.add(c);
                            d.a0.add(this.tj[e]);
                            this.tj[e] = this.tj[e] + f;
                            if (d.at) {
                                d.at = false;
                            }
                        }
                        else if (f >= c) {
                            d.az.add(this.ti[e]);
                            d.a0.add(c);
                            this.ti[e] = this.ti[e] + f;
                        }
                        else if (isNaN_(f) || isInfinity(f)) {
                            d.az.add(this.ti[e]);
                            d.a0.add(this.tj[e]);
                        }
                    }
                }
            }
        }
        catch (e_10_1) {
            e_10 = { error: e_10_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_10)
                    throw e_10.error;
            }
        }
        for (var g = 0; g < a; g++) {
            this.t0 = Math.min(this.t0, this.tj[g]);
            this.tz = Math.max(this.tz, this.ti[g]);
        }
    };
    StackedSeriesBase.prototype.l7 = function (a, b, c, d) {
        var e_11, _a, e_12, _b, e_13, _c, e_14, _d, e_15, _e, e_16, _f, e_17, _g, e_18, _h, e_19, _j, e_20, _k, e_21, _l, e_22, _m, e_23, _o, e_24, _p, e_25, _q, e_26, _r, e_27, _s, e_28, _t, e_29, _u, e_30, _v, e_31, _w, e_32, _x, e_33, _y, e_34, _z, e_35, _0, e_36, _1, e_37, _2, e_38, _3, e_39, _4, e_40, _5, e_41, _6, e_42, _7, e_43, _8, e_44, _9, e_45, _10, e_46, _11, e_47, _12, e_48, _13, e_49, _14, e_50, _15, e_51, _16, e_52, _17, e_53, _18;
        _super.prototype.l7.call(this, a, b, c, d);
        switch (b) {
            case "SeriesViewer":
                if (c != null && d == null) {
                    this.k4(this.fetchXAxis());
                    this.k4(this.fetchYAxis());
                }
                if (c == null && d != null) {
                    this.mc(this.fetchXAxis());
                    this.mc(this.fetchYAxis());
                }
                if (this.tm != null) {
                    try {
                        for (var _19 = __values(fromEnum(this.tm)), _20 = _19.next(); !_20.done; _20 = _19.next()) {
                            var e = _20.value;
                            e.aa = this.cd;
                        }
                    }
                    catch (e_11_1) {
                        e_11 = { error: e_11_1 };
                    }
                    finally {
                        try {
                            if (_20 && !_20.done && (_a = _19.return))
                                _a.call(_19);
                        }
                        finally {
                            if (e_11)
                                throw e_11.error;
                        }
                    }
                    this.ml(false);
                }
                break;
            case "ItemsSource":
                if (this.tm != null) {
                    try {
                        for (var _21 = __values(fromEnum(this.tm)), _22 = _21.next(); !_22.done; _22 = _21.next()) {
                            var f = _22.value;
                            if (f.itemsSource == null) {
                                if (f.visualSeriesLink != null) {
                                    f.visualSeriesLink.itemsSource = d;
                                }
                            }
                        }
                    }
                    catch (e_12_1) {
                        e_12 = { error: e_12_1 };
                    }
                    finally {
                        try {
                            if (_22 && !_22.done && (_b = _21.return))
                                _b.call(_21);
                        }
                        finally {
                            if (e_12)
                                throw e_12.error;
                        }
                    }
                }
                break;
            case "FastItemsSource":
                if (this.ts) {
                    this.t8();
                }
                if (!this.sn()) {
                    this.tr.cr.g(this.fv);
                }
                this.ml(false);
                break;
            case StackedSeriesBase.$$p[0]:
                this.t8();
                break;
            case StackedSeriesBase.$$p[1]:
                if (this.cd != null) {
                    this.cd.m8(this.tq.f);
                }
                break;
            case StackedSeriesBase.$$p[2]:
                try {
                    for (var _23 = __values(fromEnum(this.tm)), _24 = _23.next(); !_24.done; _24 = _23.next()) {
                        var g = _24.value;
                        g.gj();
                    }
                }
                catch (e_13_1) {
                    e_13 = { error: e_13_1 };
                }
                finally {
                    try {
                        if (_24 && !_24.done && (_c = _23.return))
                            _c.call(_23);
                    }
                    finally {
                        if (e_13)
                            throw e_13.error;
                    }
                }
                break;
            case "Brush":
                try {
                    for (var _25 = __values(fromEnum(this.tm)), _26 = _25.next(); !_26.done; _26 = _25.next()) {
                        var h = _26.value;
                        h.fc();
                    }
                }
                catch (e_14_1) {
                    e_14 = { error: e_14_1 };
                }
                finally {
                    try {
                        if (_26 && !_26.done && (_d = _25.return))
                            _d.call(_25);
                    }
                    finally {
                        if (e_14)
                            throw e_14.error;
                    }
                }
                break;
            case "DashArray":
                try {
                    for (var _27 = __values(fromEnum(this.tm)), _28 = _27.next(); !_28.done; _28 = _27.next()) {
                        var i = _28.value;
                        i.fd();
                    }
                }
                catch (e_15_1) {
                    e_15 = { error: e_15_1 };
                }
                finally {
                    try {
                        if (_28 && !_28.done && (_e = _27.return))
                            _e.call(_27);
                    }
                    finally {
                        if (e_15)
                            throw e_15.error;
                    }
                }
                break;
            case "HighlightingFadeOpacity":
                try {
                    for (var _29 = __values(fromEnum(this.tm)), _30 = _29.next(); !_30.done; _30 = _29.next()) {
                        var j = _30.value;
                        j.fg();
                    }
                }
                catch (e_16_1) {
                    e_16 = { error: e_16_1 };
                }
                finally {
                    try {
                        if (_30 && !_30.done && (_f = _29.return))
                            _f.call(_29);
                    }
                    finally {
                        if (e_16)
                            throw e_16.error;
                    }
                }
                break;
            case "DashCap":
                try {
                    for (var _31 = __values(fromEnum(this.tm)), _32 = _31.next(); !_32.done; _32 = _31.next()) {
                        var k = _32.value;
                        k.fe();
                    }
                }
                catch (e_17_1) {
                    e_17 = { error: e_17_1 };
                }
                finally {
                    try {
                        if (_32 && !_32.done && (_g = _31.return))
                            _g.call(_31);
                    }
                    finally {
                        if (e_17)
                            throw e_17.error;
                    }
                }
                break;
            case "IsDropShadowEnabled":
                try {
                    for (var _33 = __values(fromEnum(this.tm)), _34 = _33.next(); !_34.done; _34 = _33.next()) {
                        var l = _34.value;
                        l.fh();
                    }
                }
                catch (e_18_1) {
                    e_18 = { error: e_18_1 };
                }
                finally {
                    try {
                        if (_34 && !_34.done && (_h = _33.return))
                            _h.call(_33);
                    }
                    finally {
                        if (e_18)
                            throw e_18.error;
                    }
                }
                break;
            case "ShadowBlur":
                try {
                    for (var _35 = __values(fromEnum(this.tm)), _36 = _35.next(); !_36.done; _36 = _35.next()) {
                        var m = _36.value;
                        m.f4();
                    }
                }
                catch (e_19_1) {
                    e_19 = { error: e_19_1 };
                }
                finally {
                    try {
                        if (_36 && !_36.done && (_j = _35.return))
                            _j.call(_35);
                    }
                    finally {
                        if (e_19)
                            throw e_19.error;
                    }
                }
                break;
            case "ShadowColor":
                try {
                    for (var _37 = __values(fromEnum(this.tm)), _38 = _37.next(); !_38.done; _38 = _37.next()) {
                        var n = _38.value;
                        n.f5();
                    }
                }
                catch (e_20_1) {
                    e_20 = { error: e_20_1 };
                }
                finally {
                    try {
                        if (_38 && !_38.done && (_k = _37.return))
                            _k.call(_37);
                    }
                    finally {
                        if (e_20)
                            throw e_20.error;
                    }
                }
                break;
            case "UseSingleShadow":
                try {
                    for (var _39 = __values(fromEnum(this.tm)), _40 = _39.next(); !_40.done; _40 = _39.next()) {
                        var o = _40.value;
                        o.gi();
                    }
                }
                catch (e_21_1) {
                    e_21 = { error: e_21_1 };
                }
                finally {
                    try {
                        if (_40 && !_40.done && (_l = _39.return))
                            _l.call(_39);
                    }
                    finally {
                        if (e_21)
                            throw e_21.error;
                    }
                }
                break;
            case "ShadowOffsetX":
                try {
                    for (var _41 = __values(fromEnum(this.tm)), _42 = _41.next(); !_42.done; _42 = _41.next()) {
                        var p = _42.value;
                        p.f6();
                    }
                }
                catch (e_22_1) {
                    e_22 = { error: e_22_1 };
                }
                finally {
                    try {
                        if (_42 && !_42.done && (_m = _41.return))
                            _m.call(_41);
                    }
                    finally {
                        if (e_22)
                            throw e_22.error;
                    }
                }
                break;
            case "ShadowOffsetY":
                try {
                    for (var _43 = __values(fromEnum(this.tm)), _44 = _43.next(); !_44.done; _44 = _43.next()) {
                        var q = _44.value;
                        q.f7();
                    }
                }
                catch (e_23_1) {
                    e_23 = { error: e_23_1 };
                }
                finally {
                    try {
                        if (_44 && !_44.done && (_o = _43.return))
                            _o.call(_43);
                    }
                    finally {
                        if (e_23)
                            throw e_23.error;
                    }
                }
                break;
            case "EndCap":
                try {
                    for (var _45 = __values(fromEnum(this.tm)), _46 = _45.next(); !_46.done; _46 = _45.next()) {
                        var r = _46.value;
                        r.ff();
                    }
                }
                catch (e_24_1) {
                    e_24 = { error: e_24_1 };
                }
                finally {
                    try {
                        if (_46 && !_46.done && (_p = _45.return))
                            _p.call(_45);
                    }
                    finally {
                        if (e_24)
                            throw e_24.error;
                    }
                }
                break;
            case "IsHitTestVisible":
                try {
                    for (var _47 = __values(fromEnum(this.tm)), _48 = _47.next(); !_48.done; _48 = _47.next()) {
                        var s = _48.value;
                        s.fi();
                    }
                }
                catch (e_25_1) {
                    e_25 = { error: e_25_1 };
                }
                finally {
                    try {
                        if (_48 && !_48.done && (_q = _47.return))
                            _q.call(_47);
                    }
                    finally {
                        if (e_25)
                            throw e_25.error;
                    }
                }
                break;
            case "LegendItemBadgeTemplate":
                try {
                    for (var _49 = __values(fromEnum(this.tm)), _50 = _49.next(); !_50.done; _50 = _49.next()) {
                        var t = _50.value;
                        t.fo();
                    }
                }
                catch (e_26_1) {
                    e_26 = { error: e_26_1 };
                }
                finally {
                    try {
                        if (_50 && !_50.done && (_r = _49.return))
                            _r.call(_49);
                    }
                    finally {
                        if (e_26)
                            throw e_26.error;
                    }
                }
                break;
            case "LegendItemTemplate":
                try {
                    for (var _51 = __values(fromEnum(this.tm)), _52 = _51.next(); !_52.done; _52 = _51.next()) {
                        var u = _52.value;
                        u.fp();
                    }
                }
                catch (e_27_1) {
                    e_27 = { error: e_27_1 };
                }
                finally {
                    try {
                        if (_52 && !_52.done && (_s = _51.return))
                            _s.call(_51);
                    }
                    finally {
                        if (e_27)
                            throw e_27.error;
                    }
                }
                break;
            case "LegendItemVisibility":
                try {
                    for (var _53 = __values(fromEnum(this.tm)), _54 = _53.next(); !_54.done; _54 = _53.next()) {
                        var v = _54.value;
                        v.fq();
                    }
                }
                catch (e_28_1) {
                    e_28 = { error: e_28_1 };
                }
                finally {
                    try {
                        if (_54 && !_54.done && (_t = _53.return))
                            _t.call(_53);
                    }
                    finally {
                        if (e_28)
                            throw e_28.error;
                    }
                }
                break;
            case "LegendItemBadgeShape":
                try {
                    for (var _55 = __values(fromEnum(this.tm)), _56 = _55.next(); !_56.done; _56 = _55.next()) {
                        var w = _56.value;
                        w.fn();
                    }
                }
                catch (e_29_1) {
                    e_29 = { error: e_29_1 };
                }
                finally {
                    try {
                        if (_56 && !_56.done && (_u = _55.return))
                            _u.call(_55);
                    }
                    finally {
                        if (e_29)
                            throw e_29.error;
                    }
                }
                break;
            case "LegendItemBadgeMode":
                try {
                    for (var _57 = __values(fromEnum(this.tm)), _58 = _57.next(); !_58.done; _58 = _57.next()) {
                        var x = _58.value;
                        x.fm();
                    }
                }
                catch (e_30_1) {
                    e_30 = { error: e_30_1 };
                }
                finally {
                    try {
                        if (_58 && !_58.done && (_v = _57.return))
                            _v.call(_57);
                    }
                    finally {
                        if (e_30)
                            throw e_30.error;
                    }
                }
                break;
            case "MarkerTemplate":
                try {
                    for (var _59 = __values(fromEnum(this.tm)), _60 = _59.next(); !_60.done; _60 = _59.next()) {
                        var y = _60.value;
                        y.fv();
                    }
                }
                catch (e_31_1) {
                    e_31 = { error: e_31_1 };
                }
                finally {
                    try {
                        if (_60 && !_60.done && (_w = _59.return))
                            _w.call(_59);
                    }
                    finally {
                        if (e_31)
                            throw e_31.error;
                    }
                }
                break;
            case "MarkerType":
                try {
                    for (var _61 = __values(fromEnum(this.tm)), _62 = _61.next(); !_62.done; _62 = _61.next()) {
                        var z = _62.value;
                        z.fx();
                    }
                }
                catch (e_32_1) {
                    e_32 = { error: e_32_1 };
                }
                finally {
                    try {
                        if (_62 && !_62.done && (_x = _61.return))
                            _x.call(_61);
                    }
                    finally {
                        if (e_32)
                            throw e_32.error;
                    }
                }
                break;
            case "MarkerThickness":
                try {
                    for (var _63 = __values(fromEnum(this.tm)), _64 = _63.next(); !_64.done; _64 = _63.next()) {
                        var aa = _64.value;
                        aa.fw();
                    }
                }
                catch (e_33_1) {
                    e_33 = { error: e_33_1 };
                }
                finally {
                    try {
                        if (_64 && !_64.done && (_y = _63.return))
                            _y.call(_63);
                    }
                    finally {
                        if (e_33)
                            throw e_33.error;
                    }
                }
                break;
            case "MarkerBrush":
                try {
                    for (var _65 = __values(fromEnum(this.tm)), _66 = _65.next(); !_66.done; _66 = _65.next()) {
                        var ab = _66.value;
                        ab.fr();
                    }
                }
                catch (e_34_1) {
                    e_34 = { error: e_34_1 };
                }
                finally {
                    try {
                        if (_66 && !_66.done && (_z = _65.return))
                            _z.call(_65);
                    }
                    finally {
                        if (e_34)
                            throw e_34.error;
                    }
                }
                break;
            case "MarkerOutline":
                try {
                    for (var _67 = __values(fromEnum(this.tm)), _68 = _67.next(); !_68.done; _68 = _67.next()) {
                        var ac = _68.value;
                        ac.ft();
                    }
                }
                catch (e_35_1) {
                    e_35 = { error: e_35_1 };
                }
                finally {
                    try {
                        if (_68 && !_68.done && (_0 = _67.return))
                            _0.call(_67);
                    }
                    finally {
                        if (e_35)
                            throw e_35.error;
                    }
                }
                break;
            case "MarkerStyle":
                try {
                    for (var _69 = __values(fromEnum(this.tm)), _70 = _69.next(); !_70.done; _70 = _69.next()) {
                        var ad = _70.value;
                        ad.fu();
                    }
                }
                catch (e_36_1) {
                    e_36 = { error: e_36_1 };
                }
                finally {
                    try {
                        if (_70 && !_70.done && (_1 = _69.return))
                            _1.call(_69);
                    }
                    finally {
                        if (e_36)
                            throw e_36.error;
                    }
                }
                break;
            case "Opacity":
                try {
                    for (var _71 = __values(fromEnum(this.tm)), _72 = _71.next(); !_72.done; _72 = _71.next()) {
                        var ae = _72.value;
                        ae.fy();
                    }
                }
                catch (e_37_1) {
                    e_37 = { error: e_37_1 };
                }
                finally {
                    try {
                        if (_72 && !_72.done && (_2 = _71.return))
                            _2.call(_71);
                    }
                    finally {
                        if (e_37)
                            throw e_37.error;
                    }
                }
                break;
            case "OpacityMask":
                try {
                    for (var _73 = __values(fromEnum(this.tm)), _74 = _73.next(); !_74.done; _74 = _73.next()) {
                        var af = _74.value;
                        af.fz();
                    }
                }
                catch (e_38_1) {
                    e_38 = { error: e_38_1 };
                }
                finally {
                    try {
                        if (_74 && !_74.done && (_3 = _73.return))
                            _3.call(_73);
                    }
                    finally {
                        if (e_38)
                            throw e_38.error;
                    }
                }
                break;
            case "AreaFillOpacity":
                try {
                    for (var _75 = __values(fromEnum(this.tm)), _76 = _75.next(); !_76.done; _76 = _75.next()) {
                        var ag = _76.value;
                        ag.fb();
                    }
                }
                catch (e_39_1) {
                    e_39 = { error: e_39_1 };
                }
                finally {
                    try {
                        if (_76 && !_76.done && (_4 = _75.return))
                            _4.call(_75);
                    }
                    finally {
                        if (e_39)
                            throw e_39.error;
                    }
                }
                break;
            case "Outline":
                try {
                    for (var _77 = __values(fromEnum(this.tm)), _78 = _77.next(); !_78.done; _78 = _77.next()) {
                        var ah = _78.value;
                        ah.f0();
                    }
                }
                catch (e_40_1) {
                    e_40 = { error: e_40_1 };
                }
                finally {
                    try {
                        if (_78 && !_78.done && (_5 = _77.return))
                            _5.call(_77);
                    }
                    finally {
                        if (e_40)
                            throw e_40.error;
                    }
                }
                break;
            case "StartCap":
                try {
                    for (var _79 = __values(fromEnum(this.tm)), _80 = _79.next(); !_80.done; _80 = _79.next()) {
                        var ai = _80.value;
                        ai.f8();
                    }
                }
                catch (e_41_1) {
                    e_41 = { error: e_41_1 };
                }
                finally {
                    try {
                        if (_80 && !_80.done && (_6 = _79.return))
                            _6.call(_79);
                    }
                    finally {
                        if (e_41)
                            throw e_41.error;
                    }
                }
                break;
            case "OutlineMode":
                try {
                    for (var _81 = __values(fromEnum(this.tm)), _82 = _81.next(); !_82.done; _82 = _81.next()) {
                        var aj = _82.value;
                        aj.f1();
                    }
                }
                catch (e_42_1) {
                    e_42 = { error: e_42_1 };
                }
                finally {
                    try {
                        if (_82 && !_82.done && (_7 = _81.return))
                            _7.call(_81);
                    }
                    finally {
                        if (e_42)
                            throw e_42.error;
                    }
                }
                break;
            case "MarkerFillOpacity":
                try {
                    for (var _83 = __values(fromEnum(this.tm)), _84 = _83.next(); !_84.done; _84 = _83.next()) {
                        var ak = _84.value;
                        ak.fs();
                    }
                }
                catch (e_43_1) {
                    e_43 = { error: e_43_1 };
                }
                finally {
                    try {
                        if (_84 && !_84.done && (_8 = _83.return))
                            _8.call(_83);
                    }
                    finally {
                        if (e_43)
                            throw e_43.error;
                    }
                }
                break;
            case "Thickness":
                try {
                    for (var _85 = __values(fromEnum(this.tm)), _86 = _85.next(); !_86.done; _86 = _85.next()) {
                        var al = _86.value;
                        al.f9();
                    }
                }
                catch (e_44_1) {
                    e_44 = { error: e_44_1 };
                }
                finally {
                    try {
                        if (_86 && !_86.done && (_9 = _85.return))
                            _9.call(_85);
                    }
                    finally {
                        if (e_44)
                            throw e_44.error;
                    }
                }
                break;
            case "ToolTip":
                try {
                    for (var _87 = __values(fromEnum(this.tm)), _88 = _87.next(); !_88.done; _88 = _87.next()) {
                        var am = _88.value;
                        am.ga();
                    }
                }
                catch (e_45_1) {
                    e_45 = { error: e_45_1 };
                }
                finally {
                    try {
                        if (_88 && !_88.done && (_10 = _87.return))
                            _10.call(_87);
                    }
                    finally {
                        if (e_45)
                            throw e_45.error;
                    }
                }
                break;
            case "TransitionEasingFunction":
                try {
                    for (var _89 = __values(fromEnum(this.tm)), _90 = _89.next(); !_90.done; _90 = _89.next()) {
                        var an = _90.value;
                        an.gc();
                    }
                }
                catch (e_46_1) {
                    e_46 = { error: e_46_1 };
                }
                finally {
                    try {
                        if (_90 && !_90.done && (_11 = _89.return))
                            _11.call(_89);
                    }
                    finally {
                        if (e_46)
                            throw e_46.error;
                    }
                }
                break;
            case "TransitionDuration":
                try {
                    for (var _91 = __values(fromEnum(this.tm)), _92 = _91.next(); !_92.done; _92 = _91.next()) {
                        var ao = _92.value;
                        ao.gb();
                    }
                }
                catch (e_47_1) {
                    e_47 = { error: e_47_1 };
                }
                finally {
                    try {
                        if (_92 && !_92.done && (_12 = _91.return))
                            _12.call(_91);
                    }
                    finally {
                        if (e_47)
                            throw e_47.error;
                    }
                }
                break;
            case "IsTransitionInEnabled":
                try {
                    for (var _93 = __values(fromEnum(this.tm)), _94 = _93.next(); !_94.done; _94 = _93.next()) {
                        var ap = _94.value;
                        ap.fk();
                    }
                }
                catch (e_48_1) {
                    e_48 = { error: e_48_1 };
                }
                finally {
                    try {
                        if (_94 && !_94.done && (_13 = _93.return))
                            _13.call(_93);
                    }
                    finally {
                        if (e_48)
                            throw e_48.error;
                    }
                }
                break;
            case "TransitionInMode":
                try {
                    for (var _95 = __values(fromEnum(this.tm)), _96 = _95.next(); !_96.done; _96 = _95.next()) {
                        var aq = _96.value;
                        aq.gf();
                    }
                }
                catch (e_49_1) {
                    e_49 = { error: e_49_1 };
                }
                finally {
                    try {
                        if (_96 && !_96.done && (_14 = _95.return))
                            _14.call(_95);
                    }
                    finally {
                        if (e_49)
                            throw e_49.error;
                    }
                }
                break;
            case "TransitionInDuration":
                try {
                    for (var _97 = __values(fromEnum(this.tm)), _98 = _97.next(); !_98.done; _98 = _97.next()) {
                        var ar = _98.value;
                        ar.fk();
                    }
                }
                catch (e_50_1) {
                    e_50 = { error: e_50_1 };
                }
                finally {
                    try {
                        if (_98 && !_98.done && (_15 = _97.return))
                            _15.call(_97);
                    }
                    finally {
                        if (e_50)
                            throw e_50.error;
                    }
                }
                break;
            case "TransitionInSpeedType":
                try {
                    for (var _99 = __values(fromEnum(this.tm)), _100 = _99.next(); !_100.done; _100 = _99.next()) {
                        var as = _100.value;
                        as.fk();
                    }
                }
                catch (e_51_1) {
                    e_51 = { error: e_51_1 };
                }
                finally {
                    try {
                        if (_100 && !_100.done && (_16 = _99.return))
                            _16.call(_99);
                    }
                    finally {
                        if (e_51)
                            throw e_51.error;
                    }
                }
                break;
            case "TransitionInEasingFunction":
                try {
                    for (var _101 = __values(fromEnum(this.tm)), _102 = _101.next(); !_102.done; _102 = _101.next()) {
                        var at = _102.value;
                        at.ge();
                    }
                }
                catch (e_52_1) {
                    e_52 = { error: e_52_1 };
                }
                finally {
                    try {
                        if (_102 && !_102.done && (_17 = _101.return))
                            _17.call(_101);
                    }
                    finally {
                        if (e_52)
                            throw e_52.error;
                    }
                }
                break;
            case "UseLightweightMarkers":
                try {
                    for (var _103 = __values(fromEnum(this.tm)), _104 = _103.next(); !_104.done; _104 = _103.next()) {
                        var au = _104.value;
                        au.gh();
                    }
                }
                catch (e_53_1) {
                    e_53 = { error: e_53_1 };
                }
                finally {
                    try {
                        if (_104 && !_104.done && (_18 = _103.return))
                            _18.call(_103);
                    }
                    finally {
                        if (e_53)
                            throw e_53.error;
                    }
                }
                break;
        }
    };
    Object.defineProperty(StackedSeriesBase.prototype, "currentCategoryMode", {
        get: function () {
            return this.preferredCategoryMode(typeCast(CategoryAxisBase.$, this.rs()));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesBase.prototype, "scaler", {
        get: function () {
            return typeCast(ICategoryScaler_$type, this.rs());
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesBase.prototype, "yScaler", {
        get: function () {
            return typeCast(IScaler_$type, this.sd());
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesBase.prototype, "bucketizer", {
        get: function () {
            return this.r2.cr;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesBase.prototype, "currentMode2Index", {
        get: function () {
            return this.sw();
        },
        enumerable: false,
        configurable: true
    });
    StackedSeriesBase.prototype.provideCollisionDetector = function () {
        return new CollisionAvoider();
    };
    StackedSeriesBase.prototype.es = function () {
        return false;
    };
    StackedSeriesBase.prototype.get_dp = function () {
        return false;
    };
    StackedSeriesBase.prototype.mn = function (a, b) {
        var e_54, _a;
        var c = this.e1;
        _super.prototype.mn.call(this, a, b);
        if (!c) {
            this.b0.a2(b);
            return;
        }
        this.b0.a2(b);
        if (this.cx(this.bz)) {
            return;
        }
        try {
            for (var _b = __values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                d.visualSeriesLink.mn(a, b);
            }
        }
        catch (e_54_1) {
            e_54 = { error: e_54_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_54)
                    throw e_54.error;
            }
        }
        this.e1 = false;
    };
    StackedSeriesBase.prototype.mk = function (a, b, c, d, e) {
        var e_55, _a;
        _super.prototype.mk.call(this, a, b, c, d, e);
        var f = this.a6.a$h.item(d);
        f.cr.g(this.fv);
        f.a1(c);
        if (this.cx(f)) {
            return;
        }
        if (this.tk == null) {
            this.tk = new CategoryFrame(3);
        }
        this.tk.u();
        this.t9();
        this.rz(f).d(this.tk, f);
        this.tb(this.tk, f);
        try {
            for (var _b = __values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var g = _c.value;
                g.visualSeriesLink.mk(a, b, c, d, e);
            }
        }
        catch (e_55_1) {
            e_55 = { error: e_55_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_55)
                    throw e_55.error;
            }
        }
    };
    StackedSeriesBase.prototype.hu = function () {
        var e_56, _a;
        var a = this.a8.exportStackedVisualData(this, this.p3);
        try {
            for (var _b = __values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                var c = this.a8.createFragmentVisualData(this, this.p3, getInstanceType(b).typeName, b.d8);
                b.visualSeriesLink.b0.al(c);
                this.a8.addSubSeriesVisualData(a, c);
            }
        }
        catch (e_56_1) {
            e_56 = { error: e_56_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_56)
                    throw e_56.error;
            }
        }
        this.la(a);
        this.b0.al(a);
        return a;
    };
    Object.defineProperty(StackedSeriesBase.prototype, "mayContainUnknowns", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesBase.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    StackedSeriesBase.$t = markType(StackedSeriesBase, 'StackedSeriesBase', CategorySeries.$, [IIsCategoryBased_$type]);
    StackedSeriesBase.$$p = markDep(DependencyProperty, PropertyMetadata, StackedSeriesBase, 'raisePropertyChanged', ['AutoGenerateSeries:ts:ue', [0, false], 'ReverseLegendOrder:tu:uf', [0, false], 'SeriesVisibility:uh:ug', [Visibility_$type, enumGetBox(Visibility_$type, 0)]]);
    return StackedSeriesBase;
}(CategorySeries));
export { StackedSeriesBase };
/**
 * @hidden
 */
var HorizontalStackedSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(HorizontalStackedSeriesBase, _super);
    function HorizontalStackedSeriesBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HorizontalStackedSeriesBase.prototype.get_c6 = function () {
        return true;
    };
    HorizontalStackedSeriesBase.prototype.get_ek = function () {
        return this.sd() != null && this.sd().cg;
    };
    HorizontalStackedSeriesBase.prototype.bv = function () {
        return 1;
    };
    HorizontalStackedSeriesBase.prototype.bw = function () {
        if (this.yAxis != null && this.yAxis.cg) {
            return 4;
        }
        return 3;
    };
    HorizontalStackedSeriesBase.prototype.getOffsetValue = function () {
        return this.ry.r(this.xAxis, this.b0.bv, this.b0.bu, this.getEffectiveViewport1(this.b0));
    };
    HorizontalStackedSeriesBase.prototype.getCategoryWidth = function () {
        return this.xAxis.getCategorySize(this.b0.bv, this.b0.bu, this.getEffectiveViewport1(this.b0));
    };
    HorizontalStackedSeriesBase.prototype.fetchXAxis = function () {
        return this.xAxis;
    };
    HorizontalStackedSeriesBase.prototype.fetchYAxis = function () {
        return this.yAxis;
    };
    HorizontalStackedSeriesBase.prototype.ag = function () {
        return [this.fetchXAxis(), this.fetchYAxis()];
    };
    HorizontalStackedSeriesBase.prototype.sn = function () {
        return this.yAxis != null && this.yAxis.c0();
    };
    HorizontalStackedSeriesBase.prototype.mw = function () {
        var e_57, _a;
        var a = (typeCast(XamDataChart.$, this.cd));
        if (a != null) {
            this.fs = isNaN_(this.f1) ? a.t9.fp : this.f1;
            try {
                for (var _b = __values(fromEnum(this.tm)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var b = _c.value;
                    b.fb();
                }
            }
            catch (e_57_1) {
                e_57 = { error: e_57_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_57)
                        throw e_57.error;
                }
            }
        }
    };
    HorizontalStackedSeriesBase.prototype.l7 = function (a, b, c, d) {
        _super.prototype.l7.call(this, a, b, c, d);
        switch (b) {
            case HorizontalStackedSeriesBase.$$p[0]:
                if (c != d) {
                    this.k4(typeCast(Axis.$, c));
                    this.mc(typeCast(Axis.$, d));
                    this.r2.cr.g(this.fv);
                    this.ml(false);
                    this.ls();
                }
                break;
            case HorizontalStackedSeriesBase.$$p[1]:
                if (c != d) {
                    this.k4(typeCast(Axis.$, c));
                    this.mc(typeCast(Axis.$, d));
                    this.r2.cr.g(this.fv);
                    if (this.cd != null) {
                        this.cd.l5();
                    }
                    this.sn();
                    this.ml(false);
                    this.ls();
                }
                break;
        }
    };
    HorizontalStackedSeriesBase.prototype.ul = function (a) {
        if (typeCast(NumericYAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    HorizontalStackedSeriesBase.prototype.uk = function (a) {
        if (typeCast(CategoryXAxis.$, a) !== null || a.cd) {
            return true;
        }
        return false;
    };
    Object.defineProperty(HorizontalStackedSeriesBase.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    HorizontalStackedSeriesBase.$t = markType(HorizontalStackedSeriesBase, 'HorizontalStackedSeriesBase', StackedSeriesBase.$);
    HorizontalStackedSeriesBase.$$p = markDep(DependencyProperty, PropertyMetadata, HorizontalStackedSeriesBase, 'raisePropertyChanged', ['XAxis::uo', [CategoryAxisBase.$, null], 'YAxis::up', [NumericYAxis.$, null]]);
    return HorizontalStackedSeriesBase;
}(StackedSeriesBase));
export { HorizontalStackedSeriesBase };
/**
 * @hidden
 */
var StackedAreaSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedAreaSeries, _super);
    function StackedAreaSeries() {
        var _this = _super.call(this) || this;
        _this.ab = StackedAreaSeries.$;
        return _this;
    }
    StackedAreaSeries.prototype.get_dd = function () {
        return true;
    };
    StackedAreaSeries.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.ml(false);
    };
    StackedAreaSeries.prototype.bx = function () {
        return new StackedAreaSeriesView(this);
    };
    StackedAreaSeries.prototype.l2 = function (a) {
        _super.prototype.l2.call(this, a);
        this.uq = a;
    };
    StackedAreaSeries.prototype.ap = function (a) {
        if (this.itemsSource == null) {
            return null;
        }
        if (a == this.xAxis) {
            return new AxisRange(0, this.ck.count - 1);
        }
        if (a == this.yAxis) {
            this.t9();
            return new AxisRange(this.t0, this.tz);
        }
        return null;
    };
    StackedAreaSeries.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    Object.defineProperty(StackedAreaSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    StackedAreaSeries.$t = markType(StackedAreaSeries, 'StackedAreaSeries', HorizontalStackedSeriesBase.$);
    return StackedAreaSeries;
}(HorizontalStackedSeriesBase));
export { StackedAreaSeries };
/**
 * @hidden
 */
var VerticalStackedSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(VerticalStackedSeriesBase, _super);
    function VerticalStackedSeriesBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VerticalStackedSeriesBase.prototype.rs = function () {
        return this.yAxis;
    };
    VerticalStackedSeriesBase.prototype.sd = function () {
        return this.xAxis;
    };
    VerticalStackedSeriesBase.prototype.bv = function () {
        if (this.xAxis != null && this.xAxis.cg) {
            return 4;
        }
        return 3;
    };
    VerticalStackedSeriesBase.prototype.bw = function () {
        return 1;
    };
    VerticalStackedSeriesBase.prototype.aq = function (a) {
        if (a.isEmpty && this.cd != null) {
            a = this.cd.s9;
        }
        var b = this.rs();
        if (this.ti == null || this.tj == null) {
            return null;
        }
        var c = this.pv(this.b0);
        var d = new ScalerParams(0, a, this.cd.to, b.cg, this.getEffectiveViewport());
        var e = (b.el(c.top, d));
        var f = (b.el(c.bottom, d));
        if (!b.cg) {
            var g = e;
            e = f;
            f = g;
        }
        var h = null;
        if (b.cm) {
            h = b;
            e = h.i$f(e);
            f = h.i$f(f);
        }
        else {
            e = Math.floor(e);
            f = Math.ceil(f);
        }
        e = Math.max(0, Math.min(this.tj.length - 1, e));
        f = Math.max(0, Math.min(this.tj.length - 1, f));
        var i = 1.7976931348623157E+308;
        var j = -1.7976931348623157E+308;
        for (var k = truncate(e); k <= truncate(f); k++) {
            var l = k;
            if (h != null) {
                l = h.i$b._inner[k];
            }
            var m = this.tj[l];
            {
                if (isInfinity(m) || isNaN_(m)) {
                    continue;
                }
            }
            var n = this.ti[l];
            {
                if (isInfinity(n) || isNaN_(n)) {
                    continue;
                }
            }
            i = Math.min(i, m);
            j = Math.max(j, n);
        }
        var o = new AxisRange(i, j);
        var p = this.sd();
        o = this.ao(o, p, a);
        return o;
    };
    VerticalStackedSeriesBase.prototype.getOffsetValue = function () {
        return this.ry.r(this.yAxis, this.b0.bv, this.b0.bu, this.getEffectiveViewport1(this.b0));
    };
    VerticalStackedSeriesBase.prototype.getCategoryWidth = function () {
        return this.yAxis.getCategorySize(this.b0.bv, this.b0.bu, this.getEffectiveViewport1(this.b0));
    };
    VerticalStackedSeriesBase.prototype.get_isVertical = function () {
        return true;
    };
    VerticalStackedSeriesBase.prototype.fetchXAxis = function () {
        return this.xAxis;
    };
    VerticalStackedSeriesBase.prototype.fetchYAxis = function () {
        return this.yAxis;
    };
    VerticalStackedSeriesBase.prototype.sn = function () {
        return this.xAxis != null && this.xAxis.c0();
    };
    VerticalStackedSeriesBase.prototype.l7 = function (a, b, c, d) {
        _super.prototype.l7.call(this, a, b, c, d);
        switch (b) {
            case VerticalStackedSeriesBase.$$p[0]:
                if (c != d) {
                    this.k4(typeCast(Axis.$, c));
                    this.mc(typeCast(Axis.$, d));
                    this.r2.cr.g(this.fv);
                    if (this.cd != null) {
                        this.cd.l5();
                    }
                    this.ml(false);
                    this.ls();
                }
                break;
            case VerticalStackedSeriesBase.$$p[1]:
                if (c != d) {
                    this.k4(typeCast(Axis.$, c));
                    this.mc(typeCast(Axis.$, d));
                    this.r2.cr.g(this.fv);
                    this.sn();
                    this.ml(false);
                    this.ls();
                }
                break;
        }
    };
    VerticalStackedSeriesBase.prototype.ul = function (a) {
        if (typeCast(CategoryYAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    VerticalStackedSeriesBase.prototype.uk = function (a) {
        if (typeCast(NumericXAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    Object.defineProperty(VerticalStackedSeriesBase.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    VerticalStackedSeriesBase.$t = markType(VerticalStackedSeriesBase, 'VerticalStackedSeriesBase', StackedSeriesBase.$);
    VerticalStackedSeriesBase.$$p = markDep(DependencyProperty, PropertyMetadata, VerticalStackedSeriesBase, 'raisePropertyChanged', ['XAxis::uo', [NumericXAxis.$, null], 'YAxis::up', [CategoryYAxis.$, null]]);
    return VerticalStackedSeriesBase;
}(StackedSeriesBase));
export { VerticalStackedSeriesBase };
/**
 * @hidden
 */
var StackedBarSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedBarSeries, _super);
    function StackedBarSeries() {
        var _this = _super.call(this) || this;
        _this.ab = StackedBarSeries.$;
        return _this;
    }
    StackedBarSeries.prototype.get_dg = function () {
        return true;
    };
    StackedBarSeries.prototype.get_d3 = function () {
        return true;
    };
    StackedBarSeries.prototype.gw = function () {
        if (!isNaN_(this.gv)) {
            return _super.prototype.gw.call(this);
        }
        return Defaults.h;
    };
    StackedBarSeries.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.ml(false);
    };
    StackedBarSeries.prototype.bx = function () {
        return new StackedBarSeriesView(this);
    };
    StackedBarSeries.prototype.l2 = function (a) {
        _super.prototype.l2.call(this, a);
        this.uq = a;
    };
    StackedBarSeries.prototype.tl = function () {
        return this.uq;
    };
    StackedBarSeries.prototype.preferredCategoryMode = function (a) {
        return 2;
    };
    StackedBarSeries.prototype.sw = function () {
        var e_58, _a;
        var a = 0;
        try {
            for (var _b = __values(fromEnum(this.cd.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                if (b == this) {
                    return a;
                }
                var c = typeCast(IBarSeries_$type, b);
                if (c != null && c.yAxis == this.yAxis && c.getPreferredCategoryMode() == 2) {
                    a++;
                }
            }
        }
        catch (e_58_1) {
            e_58 = { error: e_58_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_58)
                    throw e_58.error;
            }
        }
        return -1;
    };
    StackedBarSeries.prototype.tx = function () {
        var a = 0;
        var b = this.cd != null ? this.cd.s9 : Rect.empty;
        var c = this.b0.bu;
        if (!b.isEmpty && !c.isEmpty && this.xAxis != null) {
            var d = this.getEffectiveViewport1(this.b0);
            var e = new ScalerParams(0, b, c, this.xAxis.cg, d);
            a = this.xAxis.ei(this.xAxis.l5, e);
        }
        return a;
    };
    StackedBarSeries.prototype.ty = function () {
        if (this.xAxis != null) {
            return this.xAxis.l5;
        }
        return 0;
    };
    StackedBarSeries.prototype.ap = function (a) {
        if (this.itemsSource == null) {
            return null;
        }
        if (a == this.yAxis) {
            return new AxisRange(0, this.ck.count - 1);
        }
        if (a == this.xAxis) {
            this.t9();
            return new AxisRange(this.t0, this.tz);
        }
        return null;
    };
    StackedBarSeries.prototype.eo = function (a) {
        var b = this.ck != null ? this.ck.indexOf(a) : -1;
        var c = this.cd != null ? this.cd.s9 : Rect.empty;
        c = c.copy();
        var d = this.b0.bu;
        var e = new Rect(0, 0, 0, 1, 1);
        var f = this.px(this.b0);
        var g = new ScalerParams(0, e, e, this.xAxis.cg, f);
        var h = new ScalerParams(0, e, e, this.yAxis.cg, f);
        if (b >= 0 && Rect.l_op_Inequality(c, null) && Rect.l_op_Inequality(d, null)) {
            if (this.yAxis != null) {
                var i = this.yAxis.ei(b, h);
                if (i < c.top + 0.1 * c.height) {
                    i = i + 0.4 * c.height;
                }
                if (i > c.bottom - 0.1 * c.height) {
                    i = i - 0.4 * c.height;
                }
                c.y = i - 0.5 * c.height;
            }
            if (this.xAxis != null && this.ti != null && b < this.ti.length) {
                var j = this.xAxis.ei(this.ti[b], g);
                var k = this.xAxis.ei(this.tj[b], g);
                if (!isNaN_(j) && !isNaN_(k)) {
                    var l = Math.abs(k - j);
                    if (c.width < l) {
                        c.width = l;
                        c.x = Math.min(k, j);
                    }
                    else {
                        if (k < c.left + 0.1 * c.width) {
                            k = k + 0.4 * c.width;
                        }
                        if (k > c.right - 0.1 * c.width) {
                            k = k - 0.4 * c.width;
                        }
                        c.x = k - 0.5 * c.width;
                    }
                }
            }
            this.b8.au(this.cd, c, true);
        }
        return b >= 0;
    };
    StackedBarSeries.prototype.fb = function (a, b, c) {
        var d = true;
        var e = c;
        if (!c.o() || b.isEmpty || a.isEmpty || this.yAxis == null || this.yAxis.itemsSource == null || this.xAxis == null || this.ck == null || this.xAxis.bh == null || this.yAxis.bh == null || this.xAxis.lv == this.xAxis.lu) {
            e.cr.d = 0;
            d = false;
        }
        return d;
    };
    StackedBarSeries.prototype.k3 = function (a, b, c, d) {
        switch (a) {
            case 4:
            case 1:
            case 0:
                this.r2.cr.g(this.fv);
                break;
        }
        switch (a) {
            case 4:
                if (this.xAxis != null && !this.xAxis.c0()) {
                    this.ml(true);
                }
                break;
            case 1:
                if (this.xAxis != null && !this.xAxis.c0()) {
                    this.ml(true);
                }
                break;
            case 0:
                if (this.xAxis != null && !this.xAxis.c0()) {
                    this.ml(true);
                }
                break;
            case 2:
                if (this.r2.cr.d > 0) {
                    this.ml(true);
                }
                break;
            case 3:
                if (this.xAxis != null && !this.xAxis.c0()) {
                    this.ml(true);
                }
                break;
        }
    };
    StackedBarSeries.prototype.hf = function (a) {
        var b = this.cd != null ? this.cd.s9 : Rect.empty;
        var c = this.b0.bu;
        var d = this.getEffectiveViewport1(this.b0);
        var e = -1;
        if (this.yAxis != null && !b.isEmpty && !c.isEmpty) {
            var f = new ScalerParams(0, b, c, this.yAxis.cg, d);
            var g = this.pv(this.b0);
            var h = this.yAxis.el(g.top, f);
            var i = this.yAxis.el(g.bottom, f);
            var j = (a.y - b.top) / b.height;
            var k = h + (j * (i - h));
            if (this.yAxis.categoryMode != 0) {
                k -= 0.5;
            }
            var l = truncate(Math.round(k));
            e = l;
        }
        return e;
    };
    StackedBarSeries.prototype.hv = function (a) {
        var b = this.hf(a);
        return b >= 0 && this.ck != null && b < this.ck.count ? this.ck.item(b) : null;
    };
    StackedBarSeries.prototype.ud = function () {
        if (this.xAxis != null) {
            this.xAxis.c1(true);
        }
        if (this.yAxis != null) {
            this.yAxis.c1(true);
        }
    };
    StackedBarSeries.prototype.t1 = function (a) {
        return this.hf(a);
    };
    StackedBarSeries.prototype.tv = function (a, b, c, d) {
        var e = true;
        if (!d.o() || c.isEmpty || b.isEmpty || this.yAxis == null || this.yAxis.itemsSource == null || this.xAxis == null || this.ck == null || this.xAxis.bh == null || this.yAxis.bh == null) {
            e = false;
        }
        var f = d;
        if (a.valueColumn == null || a.valueColumn.count == 0 || f.cr.d < 1) {
            e = false;
        }
        return e;
    };
    StackedBarSeries.prototype.gc = function () {
        return this.yAxis.k3(this.b0.bv, this.b0.bu, this.getEffectiveViewport1(this.b0));
    };
    StackedBarSeries.prototype.ua = function (a, b, c, d) {
        var e_59, _a;
        var e = typeCast(BarFragment.$, a);
        var f = typeCast(ColumnFragmentView.$, c);
        if (!this.fb(c.bu, c.bv, c) || e == null || f == null) {
            return;
        }
        var g = this.yAxis.k3(c.bv, c.bu, this.getEffectiveViewport1(c));
        if (isNaN_(g) || isInfinity(g)) {
            e.vm.db.count = 0;
            return;
        }
        var h = 0;
        e.r1.a0(e, e.sl(), d, e.st(c), e.su(c));
        e.r1.r = e.vp;
        e.r1.s = e.vq;
        e.r1.k = e.vp;
        e.r1.l = e.vq;
        var i = e.valueColumn.count;
        var j = c.bv;
        var k = c.bu;
        var l = this.getEffectiveViewport1(c);
        var m = false;
        var n = e.r1.b;
        if (n != null) {
            m = true;
        }
        var o = b.f;
        var p = e.rs();
        var q = new ScalerParams(0, j, k, p.cg, l);
        var r = 0;
        try {
            for (var _b = __values(fromEnum(b.f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var s = _c.value;
                if (isInfinity(s[0]) || isNaN_(s[0]) || isInfinity(s[1]) || isInfinity(s[2]) || isNaN_(s[1]) || isNaN_(s[2])) {
                    r++;
                    continue;
                }
                var t = s[0] - 0.5 * g;
                var u = s[1];
                var v = s[2];
                v = Math.max(v, -100);
                u = Math.min(u, c.bu.right + 100);
                var w = f.db.item(h);
                w.height = g;
                w.width = Math.abs(u - v);
                if (m) {
                    e.s7(o, r, i, p, q, c.q);
                }
                e.r1.ad(w, false, false, false, false);
                w.am = e.r1.k;
                w.an = e.r1.l;
                f.di(w, Math.min(u, v), t);
                h++;
                r++;
            }
        }
        catch (e_59_1) {
            e_59 = { error: e_59_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_59)
                    throw e_59.error;
            }
        }
        f.db.count = h;
    };
    StackedBarSeries.prototype.l7 = function (a, b, c, d) {
        var e_60, _a;
        _super.prototype.l7.call(this, a, b, c, d);
        switch (b) {
            case StackedBarSeries.$$p[0]:
            case StackedBarSeries.$$p[1]:
                try {
                    for (var _b = __values(fromEnum(this.tm)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var e = _c.value;
                        e.f2();
                        e.f3();
                    }
                }
                catch (e_60_1) {
                    e_60 = { error: e_60_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_60)
                            throw e_60.error;
                    }
                }
                this.ml(false);
                break;
            case "SyncLink":
                if (this.xAxis != null) {
                    this.xAxis.c0();
                }
                break;
            case "FastItemsSource":
                if (this.xAxis != null && !this.xAxis.c0()) {
                    this.uq.cr.g(this.fv);
                }
                this.ml(false);
                break;
            case "SeriesViewer":
                if (c != null && d == null) {
                    this.k4(this.xAxis);
                    this.k4(this.yAxis);
                }
                if (c == null && d != null) {
                    this.mc(this.xAxis);
                    this.mc(this.yAxis);
                }
                this.uq.cr.g(this.fv);
                this.ml(false);
                if (this.xAxis != null) {
                    this.xAxis.c0();
                }
                break;
        }
    };
    StackedBarSeries.prototype.getPreferredCategoryMode = function () {
        return this.preferredCategoryMode(this.yAxis);
    };
    Object.defineProperty(StackedBarSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    StackedBarSeries.$t = markType(StackedBarSeries, 'StackedBarSeries', VerticalStackedSeriesBase.$, [IBarSeries_$type]);
    StackedBarSeries.$$p = markDep(DependencyProperty, PropertyMetadata, StackedBarSeries, 'raisePropertyChanged', ['RadiusX:ur:uv', [1, 0], 'RadiusY:us:uw', [1, 0]]);
    return StackedBarSeries;
}(VerticalStackedSeriesBase));
export { StackedBarSeries };
/**
 * @hidden
 */
var StackedColumnSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedColumnSeries, _super);
    function StackedColumnSeries() {
        var _this = _super.call(this) || this;
        _this.ab = StackedColumnSeries.$;
        return _this;
    }
    StackedColumnSeries.prototype.get_di = function () {
        return true;
    };
    StackedColumnSeries.prototype.get_d3 = function () {
        return true;
    };
    StackedColumnSeries.prototype.gw = function () {
        if (!isNaN_(this.gv)) {
            return _super.prototype.gw.call(this);
        }
        return Defaults.h;
    };
    StackedColumnSeries.prototype.bx = function () {
        return new StackedColumnSeriesView(this);
    };
    StackedColumnSeries.prototype.l2 = function (a) {
        _super.prototype.l2.call(this, a);
        this.uq = a;
    };
    StackedColumnSeries.prototype.tl = function () {
        return this.uq;
    };
    StackedColumnSeries.prototype.preferredCategoryMode = function (a) {
        return 2;
    };
    StackedColumnSeries.prototype.ap = function (a) {
        if (this.itemsSource == null) {
            return null;
        }
        if (a == this.xAxis) {
            return new AxisRange(0, this.ck.count - 1);
        }
        if (a == this.yAxis) {
            this.t9();
            return new AxisRange(this.t0, this.tz);
        }
        return null;
    };
    StackedColumnSeries.prototype.gc = function () {
        var a = this.getEffectiveViewport1(this.b0);
        return this.xAxis.k3(this.b0.bv, this.b0.bu, a);
    };
    StackedColumnSeries.prototype.ua = function (a, b, c, d) {
        var e_61, _a;
        var e = typeCast(ColumnFragment.$, a);
        var f = typeCast(ColumnFragmentView.$, c);
        if (!this.fb(c.bu, c.bv, c) || e == null || f == null) {
            return;
        }
        if (e == null) {
            return;
        }
        var g = this.getEffectiveViewport1(c);
        var h = this.xAxis.k3(c.bv, c.bu, g);
        if (isNaN_(h) || isInfinity(h)) {
            e.vm.db.count = 0;
            return;
        }
        var i = 0;
        e.r1.a0(e, e.sl(), d, e.st(c), e.su(c));
        e.r1.r = e.vp;
        e.r1.s = e.vq;
        e.r1.k = e.vp;
        e.r1.l = e.vq;
        var j = c.bv;
        var k = c.bu;
        var l = this.getEffectiveViewport1(c);
        var m = false;
        var n = e.r1.b;
        if (n != null) {
            m = true;
        }
        var o = b.f;
        var p = e.rs();
        var q = new ScalerParams(0, j, k, p.cg, l);
        var r = e.valueColumn.count;
        var s = 0;
        try {
            for (var _b = __values(fromEnum(b.f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var t = _c.value;
                if (isInfinity(t[0]) || isNaN_(t[0]) || isInfinity(t[1]) || isInfinity(t[2]) || isNaN_(t[1]) || isNaN_(t[2])) {
                    s++;
                    continue;
                }
                var u = t[0] - 0.5 * h;
                var v = t[1];
                var w = t[2];
                v = Math.max(v, -100);
                w = Math.min(w, c.bu.bottom + 100);
                var x = f.db.item(i);
                x.width = h;
                x.height = Math.abs(w - v);
                if (m) {
                    e.s7(o, s, r, p, q, c.q);
                }
                e.r1.ad(x, false, false, false, false);
                x.am = e.r1.k;
                x.an = e.r1.l;
                f.di(x, u, Math.min(w, v));
                i++;
                s++;
            }
        }
        catch (e_61_1) {
            e_61 = { error: e_61_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_61)
                    throw e_61.error;
            }
        }
        f.db.count = i;
    };
    StackedColumnSeries.prototype.l7 = function (a, b, c, d) {
        var e_62, _a;
        _super.prototype.l7.call(this, a, b, c, d);
        switch (b) {
            case StackedColumnSeries.$$p[0]:
            case StackedColumnSeries.$$p[1]:
                try {
                    for (var _b = __values(fromEnum(this.tm)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var e = _c.value;
                        e.f2();
                        e.f3();
                    }
                }
                catch (e_62_1) {
                    e_62 = { error: e_62_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_62)
                            throw e_62.error;
                    }
                }
                this.ml(false);
                break;
            case "SyncLink":
                if (this.yAxis != null) {
                    this.yAxis.c0();
                }
                break;
            case "SeriesViewer":
                if (this.yAxis != null) {
                    this.yAxis.c0();
                }
                break;
        }
    };
    Object.defineProperty(StackedColumnSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    StackedColumnSeries.$t = markType(StackedColumnSeries, 'StackedColumnSeries', HorizontalStackedSeriesBase.$);
    StackedColumnSeries.$$p = markDep(DependencyProperty, PropertyMetadata, StackedColumnSeries, 'raisePropertyChanged', ['RadiusX:ur:uv', [1, 0], 'RadiusY:us:uw', [1, 0]]);
    return StackedColumnSeries;
}(HorizontalStackedSeriesBase));
export { StackedColumnSeries };
/**
 * @hidden
 */
var StackedSplineAreaSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSplineAreaSeries, _super);
    function StackedSplineAreaSeries() {
        var _this = _super.call(this) || this;
        _this.ab = StackedSplineAreaSeries.$;
        return _this;
    }
    StackedSplineAreaSeries.prototype.gw = function () {
        if (!isNaN_(this.gv)) {
            return _super.prototype.gw.call(this);
        }
        return this.uq.c5();
    };
    StackedSplineAreaSeries.prototype.get_dd = function () {
        return true;
    };
    StackedSplineAreaSeries.prototype.get_eh = function () {
        return true;
    };
    StackedSplineAreaSeries.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.ml(false);
    };
    StackedSplineAreaSeries.prototype.bx = function () {
        return new StackedSplineAreaSeriesView(this);
    };
    StackedSplineAreaSeries.prototype.l2 = function (a) {
        _super.prototype.l2.call(this, a);
        this.uq = a;
    };
    StackedSplineAreaSeries.prototype.ap = function (a) {
        if (this.itemsSource == null) {
            return null;
        }
        if (a == this.xAxis) {
            return new AxisRange(0, this.ck.count - 1);
        }
        if (a == this.yAxis) {
            this.t9();
            return new AxisRange(this.t0, this.tz);
        }
        return null;
    };
    StackedSplineAreaSeries.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    StackedSplineAreaSeries.prototype.l7 = function (a, b, c, d) {
        var e_63, _a;
        _super.prototype.l7.call(this, a, b, c, d);
        switch (b) {
            case StackedSplineAreaSeries.$$p[0]:
                try {
                    for (var _b = __values(fromEnum(this.tm)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var e = _c.value;
                        e.fj();
                    }
                }
                catch (e_63_1) {
                    e_63 = { error: e_63_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_63)
                            throw e_63.error;
                    }
                }
                break;
        }
    };
    Object.defineProperty(StackedSplineAreaSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    StackedSplineAreaSeries.$t = markType(StackedSplineAreaSeries, 'StackedSplineAreaSeries', HorizontalStackedSeriesBase.$);
    StackedSplineAreaSeries.$$p = markDep(DependencyProperty, PropertyMetadata, StackedSplineAreaSeries, 'raisePropertyChanged', ['IsSplineShapePartOfRange:ur:ut', [0, false]]);
    return StackedSplineAreaSeries;
}(HorizontalStackedSeriesBase));
export { StackedSplineAreaSeries };
/**
 * @hidden
 */
var StackedSplineSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSplineSeries, _super);
    function StackedSplineSeries() {
        var _this = _super.call(this) || this;
        _this.ab = StackedSplineSeries.$;
        return _this;
    }
    StackedSplineSeries.prototype.get_eh = function () {
        return true;
    };
    StackedSplineSeries.prototype.gw = function () {
        if (!isNaN_(this.gv)) {
            return _super.prototype.gw.call(this);
        }
        return this.uq.c5();
    };
    StackedSplineSeries.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.ml(false);
    };
    StackedSplineSeries.prototype.bx = function () {
        return new StackedSplineSeriesView(this);
    };
    StackedSplineSeries.prototype.l2 = function (a) {
        _super.prototype.l2.call(this, a);
        this.uq = a;
    };
    StackedSplineSeries.prototype.ap = function (a) {
        if (this.itemsSource == null) {
            return null;
        }
        if (a == this.xAxis) {
            return new AxisRange(0, this.ck.count - 1);
        }
        if (a == this.yAxis) {
            this.t9();
            return new AxisRange(this.t0, this.tz);
        }
        return null;
    };
    StackedSplineSeries.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    Object.defineProperty(StackedSplineSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    StackedSplineSeries.$t = markType(StackedSplineSeries, 'StackedSplineSeries', HorizontalStackedSeriesBase.$);
    StackedSplineSeries.$$p = markDep(DependencyProperty, PropertyMetadata, StackedSplineSeries, 'raisePropertyChanged', ['IsSplineShapePartOfRange:ur:ut', [0, false]]);
    return StackedSplineSeries;
}(HorizontalStackedSeriesBase));
export { StackedSplineSeries };
/**
 * @hidden
 */
var StackedFragmentSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedFragmentSeries, _super);
    function StackedFragmentSeries() {
        var _this = _super.call(this) || this;
        _this.ag = false;
        _this.ah = false;
        _this._parentSeries = null;
        _this.b3 = 0;
        _this.aa = null;
        _this.af = null;
        _this._visualSeriesLink = null;
        _this.az = null;
        _this.a0 = null;
        _this.ay = null;
        _this.at = false;
        _this.bw = null;
        _this.propertyChanged = null;
        _this.propertyUpdated = null;
        _this.az = new List$1(Number_$type, 0);
        _this.a0 = new List$1(Number_$type, 0);
        _this.ay = new List$1(Array_$type, 0);
        _this.propertyUpdated = delegateCombine(_this.propertyUpdated, function (a, b) { return _this.e6(a, b.propertyName, b.oldValue, b.newValue); });
        return _this;
    }
    StackedFragmentSeries.prototype.b7 = function (a, b) {
        var c = new DataLegendSeriesValueInfo();
        c.l = this.bk({ $type: Point_$type, x: a, y: b }, false, false);
        c.p = "Value";
        c.q = this.ex != null ? this.ex : "";
        c.r = this.ez != null ? this.ez : "";
        var d = new DataLegendSeriesContext();
        d.f = ((function () {
            var $ret = new List$1(DataLegendSeriesValueInfo.$, 0);
            $ret.add(c);
            return $ret;
        })());
        d.b = 7;
        return d;
    };
    Object.defineProperty(StackedFragmentSeries.prototype, "parentSeries", {
        get: function () {
            return this._parentSeries;
        },
        set: function (a) {
            this._parentSeries = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeries.prototype, "visualSeriesLink", {
        get: function () {
            return this._visualSeriesLink;
        },
        set: function (a) {
            this._visualSeriesLink = a;
        },
        enumerable: false,
        configurable: true
    });
    StackedFragmentSeries.prototype.bz = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.hf(a);
        }
        return -1;
    };
    StackedFragmentSeries.prototype.b8 = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.hv(a);
        }
        return null;
    };
    StackedFragmentSeries.prototype.b2 = function (a, b) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.hl(a, b);
        }
        return -1;
    };
    StackedFragmentSeries.prototype.b1 = function (a, b) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.hj(a, b);
        }
        return -1;
    };
    StackedFragmentSeries.prototype.bk = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.gl(a, b, c);
        }
        return NaN;
    };
    StackedFragmentSeries.prototype.j5 = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.pq(a, b, c);
        }
        return { $type: Point_$type, x: NaN, y: NaN };
    };
    StackedFragmentSeries.prototype.j9 = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.pz(a);
        }
        return Rect.empty;
    };
    StackedFragmentSeries.prototype.j = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.ak(a);
        }
        return null;
    };
    StackedFragmentSeries.prototype.ka = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.p0(a);
        }
        return Rect.empty;
    };
    StackedFragmentSeries.prototype.k = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.al(a);
        }
        return null;
    };
    StackedFragmentSeries.prototype.kb = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.p1(a);
        }
        return Rect.empty;
    };
    StackedFragmentSeries.prototype.kc = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.p2(a);
        }
        return Rect.empty;
    };
    StackedFragmentSeries.prototype.bg = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.gh(a, b, c);
        }
        return NaN;
    };
    StackedFragmentSeries.prototype.j1 = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.pm(a, b, c);
        }
        return { $type: Point_$type, x: NaN, y: NaN };
    };
    StackedFragmentSeries.prototype.bi = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.gj(a, b, c);
        }
        return NaN;
    };
    StackedFragmentSeries.prototype.j3 = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.po(a, b, c);
        }
        return { $type: Point_$type, x: NaN, y: NaN };
    };
    StackedFragmentSeries.prototype.j6 = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.pr(a, b, c);
        }
        return { $type: Point_$type, x: NaN, y: NaN };
    };
    StackedFragmentSeries.prototype.bl = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.gm(a, b, c);
        }
        return NaN;
    };
    StackedFragmentSeries.prototype.j2 = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.pn(a, b, c);
        }
        return { $type: Point_$type, x: NaN, y: NaN };
    };
    StackedFragmentSeries.prototype.bh = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.gi(a, b, c);
        }
        return NaN;
    };
    StackedFragmentSeries.prototype.j4 = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.pp(a, b, c);
        }
        return { $type: Point_$type, x: NaN, y: NaN };
    };
    StackedFragmentSeries.prototype.bj = function (a, b, c) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.gk(a, b, c);
        }
        return NaN;
    };
    StackedFragmentSeries.prototype.b0 = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.hg(a);
        }
        return -1;
    };
    StackedFragmentSeries.prototype.bf = function () {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.gc();
        }
        return 0;
    };
    StackedFragmentSeries.prototype.be = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.f8(a);
        }
        return NaN;
    };
    StackedFragmentSeries.prototype.b9 = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.hw(a);
        }
        return null;
    };
    StackedFragmentSeries.prototype.ao = function (a, b, c, d) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.c1(a, b, c, d);
        }
        return false;
    };
    StackedFragmentSeries.prototype.j7 = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.pt(a);
        }
        return { $type: Point_$type, x: NaN, y: NaN };
    };
    StackedFragmentSeries.prototype.j0 = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.pl(a);
        }
        return { $type: Point_$type, x: NaN, y: NaN };
    };
    StackedFragmentSeries.prototype.au = function (a) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.eo(a);
        }
        return false;
    };
    StackedFragmentSeries.prototype.j8 = function () {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.getEffectiveViewport();
        }
        return Rect.empty;
    };
    StackedFragmentSeries.prototype.e5 = function () {
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.lu();
        }
    };
    StackedFragmentSeries.prototype.fa = function (a) {
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.mt(a);
        }
    };
    StackedFragmentSeries.prototype.av = function (a, b) {
        if (this.visualSeriesLink != null) {
            return this.visualSeriesLink.ex(a, b);
        }
        return false;
    };
    StackedFragmentSeries.prototype.e4 = function (a) {
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.lk(a);
        }
    };
    StackedFragmentSeries.prototype.provideRenderer = function (a) {
        this.bw = a;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.provideRenderer(a);
        }
    };
    StackedFragmentSeries.prototype.gj = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.kg = this.parentSeries._visibility != 0 ? 1 : this.ki;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink._visibility = this.kg;
        }
    };
    StackedFragmentSeries.prototype.fv = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.gm = this.gp != null ? this.gp : this.parentSeries.q3;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.q3 = this.gm;
        }
    };
    StackedFragmentSeries.prototype.fx = function () {
        if (this.parentSeries == null) {
            return;
        }
        var a = this.t == 0 || this.t == 2;
        this.s = 0;
        this.s = a ? this.parentSeries.qh : this.t;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.qh = this.s;
        }
    };
    StackedFragmentSeries.prototype.fc = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.jp = this.jk != null ? this.jk : this.parentSeries.o7;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.o7 = this.jp;
        }
    };
    StackedFragmentSeries.prototype.fd = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.js = this.jt != null ? this.jt : this.parentSeries.pg;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.pg = this.js;
        }
    };
    StackedFragmentSeries.prototype.fg = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.a3 = !isNaN_(this.bm) ? this.bm : this.parentSeries.gr;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.gr = this.a3;
        }
    };
    StackedFragmentSeries.prototype.f1 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.v = this.w != 0 ? this.w : this.parentSeries.bt;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.bt = this.v;
        }
    };
    StackedFragmentSeries.prototype.fs = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.a4 = !isNaN_(this.bn) ? this.bn : this.parentSeries.gs;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.gs = this.a4;
        }
    };
    StackedFragmentSeries.prototype.fe = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.ju = this.jx;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.ph = this.ju;
        }
    };
    StackedFragmentSeries.prototype.fh = function () {
        if (this.parentSeries == null) {
            return;
        }
        if (!this.ag) {
            this.ai = this.parentSeries.dn;
        }
        else {
            this.ai = this.ap;
        }
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.dn = this.ai;
        }
    };
    StackedFragmentSeries.prototype.f4 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.a9 = !isNaN_(this.bs) ? this.bs : this.parentSeries.gy;
        if (this.visualSeriesLink != null && !isNaN_(this.a9)) {
            this.visualSeriesLink.gy = this.a9;
        }
    };
    StackedFragmentSeries.prototype.f5 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.jq = Color.e(toNullable(Color.$, this.jr), toNullable(Color.$, null)) ? this.jr : this.parentSeries.pf;
        if (this.visualSeriesLink != null && Color.e(toNullable(Color.$, this.jq), toNullable(Color.$, null))) {
            this.visualSeriesLink.pf = this.jq;
        }
    };
    StackedFragmentSeries.prototype.gi = function () {
        if (this.parentSeries == null) {
            return;
        }
        if (!this.ah) {
            this.an = this.parentSeries.e9;
        }
        else {
            this.an = this.ax;
        }
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.e9 = this.an;
        }
    };
    StackedFragmentSeries.prototype.f6 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.ba = !isNaN_(this.bt) ? this.bt : this.parentSeries.gz;
        if (this.visualSeriesLink != null && !isNaN_(this.ba)) {
            this.visualSeriesLink.gz = this.ba;
        }
    };
    StackedFragmentSeries.prototype.f7 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.bb = !isNaN_(this.bu) ? this.bu : this.parentSeries.g0;
        if (this.visualSeriesLink != null && !isNaN_(this.bb)) {
            this.visualSeriesLink.g0 = this.bb;
        }
    };
    StackedFragmentSeries.prototype.ff = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.jv = this.jy;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.pi = this.jv;
        }
    };
    StackedFragmentSeries.prototype.fi = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.aj = this.aq;
    };
    StackedFragmentSeries.prototype.fo = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.gk = this.gn != null ? this.gn : this.parentSeries.legendItemBadgeTemplate;
        if (this.visualSeriesLink != null) {
            if (this.gk != null) {
                this.visualSeriesLink.legendItemBadgeTemplate = this.gk;
            }
            else {
                this.visualSeriesLink.legendItemBadgeTemplate = null;
            }
        }
    };
    StackedFragmentSeries.prototype.fp = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.gl = this.go != null ? this.go : this.parentSeries.legendItemTemplate;
        if (this.visualSeriesLink != null) {
            if (this.gl != null) {
                this.visualSeriesLink.legendItemTemplate = this.gl;
            }
            else {
                this.visualSeriesLink.legendItemTemplate = null;
            }
        }
    };
    StackedFragmentSeries.prototype.fq = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.kf = this.parentSeries.p7 != 0 ? 1 : this.kh;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.p7 = this.kf;
        }
    };
    StackedFragmentSeries.prototype.fn = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.q = this.r != 0 ? this.r : this.parentSeries.legendItemBadgeShape;
        if (this.visualSeriesLink != null) {
            if (this.q != 0) {
                this.visualSeriesLink.legendItemBadgeShape = this.q;
            }
            else {
                this.visualSeriesLink.legendItemBadgeShape = 0;
            }
        }
    };
    StackedFragmentSeries.prototype.fm = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.o = this.p != 0 ? this.p : this.parentSeries.a9;
        if (this.visualSeriesLink != null) {
            if (this.o != 0) {
                this.visualSeriesLink.a9 = this.o;
            }
            else {
                this.visualSeriesLink.a9 = 0;
            }
        }
    };
    StackedFragmentSeries.prototype.fr = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.jg = this.jl != null ? this.jl : this.parentSeries.rj;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.rj = this.jg;
        }
    };
    StackedFragmentSeries.prototype.ft = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.jh = this.jm != null ? this.jm : this.parentSeries.rk;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.rk = this.jh;
        }
    };
    StackedFragmentSeries.prototype.fu = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.kd = this.ke != null ? this.ke : this.parentSeries.rl;
        if (this.visualSeriesLink != null) {
            if (this.kd != null) {
                this.visualSeriesLink.rl = this.kd;
            }
            else {
                this.visualSeriesLink.rl = null;
            }
        }
    };
    StackedFragmentSeries.prototype.fy = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.a6 = !isNaN_(this.bp) ? this.bp : this.parentSeries._opacity;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink._opacity = this.a6;
        }
    };
    StackedFragmentSeries.prototype.fz = function () {
    };
    StackedFragmentSeries.prototype.f0 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.jj = this.jo != null ? this.jo : this.parentSeries.pc;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.pc = this.jj;
        }
    };
    StackedFragmentSeries.prototype.fl = function () {
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.itemsSource = this.itemsSource;
        }
    };
    StackedFragmentSeries.prototype.fb = function () {
        if (this.parentSeries == null) {
            return;
        }
        var a = NaN;
        if (this.parentSeries.isStacked && this.parentSeries.dd && !this.parentSeries.eh) {
            a = this.parentSeries.fs;
        }
        if (this.parentSeries.isStacked && this.parentSeries.dd && this.parentSeries.eh) {
            a = this.parentSeries.fs;
        }
        this.a2 = !isNaN_(this.bd) ? this.bd : a;
        if (this.visualSeriesLink != null) {
            if (typeCast(AreaFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.f1 = this.a2;
            }
            if (typeCast(SplineAreaFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.f1 = this.a2;
            }
        }
    };
    StackedFragmentSeries.prototype.fj = function () {
        if (this.parentSeries == null) {
            return;
        }
        var a = false;
        if (this.parentSeries.isStacked && this.parentSeries.eh && this.parentSeries.dd) {
            a = this.parentSeries.ur;
        }
        if (this.parentSeries.isStacked && this.parentSeries.dg) {
            a = this.parentSeries.ur;
        }
        this.ak = a;
        if (this.visualSeriesLink != null) {
            if (typeCast(SplineFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.vg = this.ak;
            }
            if (typeCast(SplineAreaFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.vg = this.ak;
            }
        }
    };
    StackedFragmentSeries.prototype.f2 = function () {
        if (this.parentSeries == null) {
            return;
        }
        var a = NaN;
        if (this.parentSeries.isStacked && this.parentSeries.di) {
            a = this.parentSeries.ur;
        }
        if (this.parentSeries.isStacked && this.parentSeries.dg) {
            a = this.parentSeries.ur;
        }
        this.a7 = !isNaN_(a) ? a : this.bq;
        if (this.visualSeriesLink != null) {
            if (typeCast(ColumnFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.vp = this.a7;
            }
            if (typeCast(BarFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.vp = this.a7;
            }
        }
    };
    StackedFragmentSeries.prototype.f3 = function () {
        if (this.parentSeries == null) {
            return;
        }
        var a = NaN;
        if (this.parentSeries.isStacked && this.parentSeries.di) {
            a = this.parentSeries.us;
        }
        if (this.parentSeries.isStacked && this.parentSeries.dg) {
            a = this.parentSeries.us;
        }
        this.a8 = !isNaN_(a) ? a : this.br;
        if (this.visualSeriesLink != null) {
            if (typeCast(ColumnFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.vq = this.a8;
            }
            if (typeCast(BarFragment.$, this.visualSeriesLink) !== null) {
                this.visualSeriesLink.vq = this.a8;
            }
        }
    };
    StackedFragmentSeries.prototype.f8 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.jw = this.jz;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.pj = this.jw;
        }
    };
    StackedFragmentSeries.prototype.f9 = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.bc = !isNaN_(this.bv) ? this.bv : this.parentSeries.g1;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.g1 = this.bc;
        }
    };
    StackedFragmentSeries.prototype.fw = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.a5 = !isNaN_(this.bo) ? this.bo : this.parentSeries.qm;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.qm = this.a5;
        }
    };
    StackedFragmentSeries.prototype.ga = function () {
        if (this.parentSeries == null) {
            return;
        }
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.toolTip = this.cb;
        }
    };
    StackedFragmentSeries.prototype.gc = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.ab = this.ad || this.parentSeries.cf;
    };
    StackedFragmentSeries.prototype.gb = function () {
        if (this.parentSeries == null) {
            return;
        }
        if (this.parentSeries.ho != 0) {
            this.bx = this.parentSeries.ho;
            return;
        }
        this.bx = this.b4;
    };
    StackedFragmentSeries.prototype.ge = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.ac = this.ae || this.parentSeries.cg;
    };
    StackedFragmentSeries.prototype.gf = function () {
        if (this.parentSeries == null) {
            return;
        }
        if (this.parentSeries.r4 != 0) {
            this.m = this.parentSeries.r4;
            return;
        }
        this.m = this.n;
    };
    StackedFragmentSeries.prototype.gg = function () {
        if (this.parentSeries == null) {
            return;
        }
        if (this.parentSeries.ca != 0) {
            this.y = this.parentSeries.ca;
            return;
        }
        this.y = this.z;
    };
    StackedFragmentSeries.prototype.fk = function () {
        if (this.parentSeries == null) {
            return;
        }
        if (this.parentSeries.sk != false) {
            this.al = this.parentSeries.sk;
            return;
        }
        this.al = this.as;
    };
    StackedFragmentSeries.prototype.gd = function () {
        if (this.parentSeries == null) {
            return;
        }
        if (this.parentSeries.hp != 1000) {
            this.by = this.parentSeries.hp;
            return;
        }
        this.by = this.b5;
    };
    StackedFragmentSeries.prototype.gh = function () {
        if (this.parentSeries == null) {
            return;
        }
        this.am = this.aw;
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.ql = this.am;
        }
    };
    StackedFragmentSeries.prototype.e8 = function (a, b, c) {
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
        if (this.propertyUpdated != null) {
            this.propertyUpdated(this, new PropertyUpdatedEventArgs(a, b, c));
        }
    };
    StackedFragmentSeries.prototype.e6 = function (a, b, c, d) {
        if (this.parentSeries == null) {
            return;
        }
        switch (b) {
            case StackedFragmentSeries.$$p[81]:
                if (this.parentSeries == null || this.visualSeriesLink == null) {
                    return;
                }
                this.visualSeriesLink.title = d;
                break;
            case StackedFragmentSeries.$$p[94]:
                this.gj();
                break;
            case StackedFragmentSeries.$$p[45]:
                this.fc();
                break;
            case StackedFragmentSeries.$$p[46]:
                this.fd();
                break;
            case StackedFragmentSeries.$$p[47]:
                this.fe();
                break;
            case StackedFragmentSeries.$$p[50]:
                this.ag = true;
                this.fh();
                break;
            case StackedFragmentSeries.$$p[75]:
                this.f4();
                break;
            case StackedFragmentSeries.$$p[76]:
                this.f5();
                break;
            case StackedFragmentSeries.$$p[90]:
                this.ag = true;
                this.gi();
                break;
            case StackedFragmentSeries.$$p[77]:
                this.f6();
                break;
            case StackedFragmentSeries.$$p[78]:
                this.f7();
                break;
            case StackedFragmentSeries.$$p[48]:
                this.ff();
                break;
            case StackedFragmentSeries.$$p[51]:
                this.fi();
                break;
            case StackedFragmentSeries.$$p[64]:
                this.fv();
                break;
            case StackedFragmentSeries.$$p[66]:
                this.fx();
                break;
            case StackedFragmentSeries.$$p[57]:
                this.fo();
                break;
            case StackedFragmentSeries.$$p[58]:
                this.fp();
                break;
            case StackedFragmentSeries.$$p[59]:
                this.fq();
                break;
            case StackedFragmentSeries.$$p[56]:
                this.fn();
                break;
            case StackedFragmentSeries.$$p[55]:
                this.fm();
                break;
            case StackedFragmentSeries.$$p[60]:
                this.fr();
                break;
            case StackedFragmentSeries.$$p[62]:
                this.ft();
                break;
            case StackedFragmentSeries.$$p[63]:
                this.fu();
                break;
            case StackedFragmentSeries.$$p[65]:
                this.fw();
                break;
            case StackedFragmentSeries.$$p[69]:
                this.fy();
                break;
            case StackedFragmentSeries.$$p[68]:
                this.fz();
                break;
            case StackedFragmentSeries.$$p[54]:
                this.fl();
                break;
            case StackedFragmentSeries.$$p[71]:
                this.f0();
                break;
            case StackedFragmentSeries.$$p[70]:
                this.f1();
                break;
            case StackedFragmentSeries.$$p[61]:
                this.fs();
                break;
            case StackedFragmentSeries.$$p[44]:
                this.fb();
                break;
            case StackedFragmentSeries.$$p[73]:
                this.f2();
                break;
            case StackedFragmentSeries.$$p[74]:
                this.f3();
                break;
            case StackedFragmentSeries.$$p[52]:
                this.fj();
                break;
            case StackedFragmentSeries.$$p[79]:
                this.f8();
                break;
            case StackedFragmentSeries.$$p[80]:
                this.f9();
                break;
            case StackedFragmentSeries.$$p[82]:
                this.ga();
                break;
            case StackedFragmentSeries.$$p[84]:
                this.gc();
                break;
            case StackedFragmentSeries.$$p[86]:
                this.ge();
                break;
            case StackedFragmentSeries.$$p[83]:
                this.gb();
                break;
            case StackedFragmentSeries.$$p[53]:
                this.fk();
                break;
            case StackedFragmentSeries.$$p[87]:
                this.gf();
                break;
            case StackedFragmentSeries.$$p[88]:
                this.gg();
                break;
            case StackedFragmentSeries.$$p[85]:
                this.gd();
                break;
            case StackedFragmentSeries.$$p[89]:
                this.gh();
                break;
        }
        this.parentSeries.ml(false);
    };
    StackedFragmentSeries.prototype.e9 = function () {
        if (this.visualSeriesLink != null) {
            this.visualSeriesLink.mo();
        }
    };
    StackedFragmentSeries.$t = markType(StackedFragmentSeries, 'StackedFragmentSeries', DependencyObject.$, [INotifyPropertyChanged_$type]);
    StackedFragmentSeries.$$p = markDep(DependencyProperty, PropertyMetadata, StackedFragmentSeries, 'e8', ['ActualAreaFillOpacity:a2:gq', [1, 1], 'ActualBrush:jf:gr', [Brush.$], 'ActualDashArray:js:gs', [DoubleCollection.$], 'ActualDashCap:ju:gt', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)], 'ActualEndCap:jv:gu', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 2)], 'ActualHighlightingFadeOpacity:a3:gv', [1, NaN], 'ActualIsDropShadowEnabled:ai:gw', [0, false], 'ActualIsHitTestVisible:aj:gx', [0, true], 'ActualIsSplineShapePartOfRange:ak:gy', [0, false], 'ActualIsTransitionInEnabled:al:gz', [0], 'ActualLegendItemBadgeMode:o:g0', [LegendItemBadgeMode_$type], 'ActualLegendItemBadgeShape:q:g1', [LegendItemBadgeShape_$type], 'ActualLegendItemBadgeTemplate:gk:g2', [DataTemplate.$], 'ActualLegendItemTemplate:gl:g3', [DataTemplate.$], 'ActualLegendItemVisibility:kf:g4', [Visibility_$type, enumGetBox(Visibility_$type, 0)], 'ActualMarkerBrush:jg:g5', [Brush.$], 'ActualMarkerFillOpacity:a4:g6', [1, NaN], 'ActualMarkerOutline:jh:g7', [Brush.$], 'ActualMarkerStyle:kd:g8', [Style.$], 'ActualMarkerTemplate:gm:g9', [DataTemplate.$], 'ActualMarkerThickness:a5:ha', [1, 1], 'ActualMarkerType:s:hb', [MarkerType_$type, enumGetBox(MarkerType_$type, 1)], 'ActualOpacityMask:ji:hc', [Brush.$], 'ActualOpacity:a6:hd', [1, 1], 'ActualOutlineMode:v:he', [SeriesOutlineMode_$type, enumGetBox(SeriesOutlineMode_$type, 0)], 'ActualOutline:jj:hf', [Brush.$], 'ActualRadiusX:a7:hg', [1, 0], 'ActualRadiusY:a8:hh', [1, 0], 'ActualShadowBlur:a9:hi', [1, NaN], 'ActualShadowColor:jq:hj', [Color.$], 'ActualShadowOffsetX:ba:hk', [1, NaN], 'ActualShadowOffsetY:bb:hl', [1, NaN], 'ActualStartCap:jw:hm', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 2)], 'ActualThickness:bc:hn', [1, 1], 'ActualToolTip:b6:ho', [4], 'ActualTransitionDuration:bx:hp', [1], 'ActualTransitionEasingFunction:ab:hq', [Delegate_$type], 'ActualTransitionInDuration:by:hr', [1], 'ActualTransitionInEasingFunction:ac:hs', [Delegate_$type], 'ActualTransitionInMode:m:ht', [CategoryTransitionInMode_$type], 'ActualTransitionInSpeedType:y:hu', [TransitionInSpeedType_$type], 'ActualUseLightweightMarkers:am:hv', [0, false], 'ActualUseSingleShadow:an:hw', [0, true], 'ActualVisibility:kg:hx', [Visibility_$type, enumGetBox(Visibility_$type, 0)], 'AreaFillOpacity:bd:hy', [1, NaN], 'Brush:jk:hz', [Brush.$], 'DashArray:jt:h0', [DoubleCollection.$], 'DashCap:jx:h1', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)], 'EndCap:jy:h2', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 2)], 'HighlightingFadeOpacity:bm:h3', [1, NaN], 'IsDropShadowEnabled:ap:h4', [0], 'IsHitTestVisible:aq:h5', [0, true], 'IsSplineShapePartOfRange:ar:h6', [0, false], 'IsTransitionInEnabled:as:h7', [0, false], 'ItemsSource::h8', [IEnumerable_$type, null], 'LegendItemBadgeMode:p:h9', [LegendItemBadgeMode_$type, enumGetBox(LegendItemBadgeMode_$type, 0)], 'LegendItemBadgeShape:r:ia', [LegendItemBadgeShape_$type, enumGetBox(LegendItemBadgeShape_$type, 0)], 'LegendItemBadgeTemplate:gn:ib', [DataTemplate.$, null], 'LegendItemTemplate:go:ic', [DataTemplate.$, null], 'LegendItemVisibility:kh:id', [Visibility_$type, enumGetBox(Visibility_$type, 0)], 'MarkerBrush:jl:ie', [Brush.$], 'MarkerFillOpacity:bn:ig', [1, NaN], 'MarkerOutline:jm:ih', [Brush.$], 'MarkerStyle:ke:ii', [Style.$], 'MarkerTemplate:gp:ij', [DataTemplate.$, null], 'MarkerThickness:bo:ik', [1, 1.5], 'MarkerType:t:il', [MarkerType_$type, enumGetBox(MarkerType_$type, 1)], 'Name:d8:im', [2], 'OpacityMask:jn:io', [Brush.$], 'Opacity:bp:ip', [1, 1], 'OutlineMode:w:iq', [SeriesOutlineMode_$type, enumGetBox(SeriesOutlineMode_$type, 0)], 'Outline:jo:ir', [Brush.$, null], 'ParentOrLocalBrush:jp:is', [Brush.$], 'RadiusX:bq:it', [1, 0], 'RadiusY:br:iu', [1, 0], 'ShadowBlur:bs:iv', [1, NaN], 'ShadowColor:jr:iw', [Color.$], 'ShadowOffsetX:bt:ix', [1, NaN], 'ShadowOffsetY:bu:iy', [1, NaN], 'StartCap:jz:iz', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 2)], 'Thickness:bv:i0', [1, 1.5], 'Title:ca:i1', [4, "Series Title"], 'ToolTip:cb:i2', [4, null], 'TransitionDuration:b4:i3', [1, 0], 'TransitionEasingFunction:ad:i4', [Delegate_$type, null], 'TransitionInDuration:b5:i5', [1, 1000], 'TransitionInEasingFunction:ae:i6', [Delegate_$type, null], 'TransitionInMode:n:i7', [CategoryTransitionInMode_$type, enumGetBox(CategoryTransitionInMode_$type, 0)], 'TransitionInSpeedType:z:i8', [TransitionInSpeedType_$type, enumGetBox(TransitionInSpeedType_$type, 0)], 'UseLightweightMarkers:aw:i9', [0, false], 'UseSingleShadow:ax:ja', [0], 'ValueMemberAsLegendLabel:ex:jb', [2, null], 'ValueMemberAsLegendUnit:ez:jc', [2, null], 'ValueMemberPath:e1:jd', [2, null], 'Visibility:ki:je', [Visibility_$type, enumGetBox(Visibility_$type, 0)]]);
    return StackedFragmentSeries;
}(DependencyObject));
export { StackedFragmentSeries };
/**
 * @hidden
 */
var StackedSeriesCollection = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSeriesCollection, _super);
    function StackedSeriesCollection() {
        var _this = _super.call(this, StackedFragmentSeries.$, 0) || this;
        _this.collectionResetting = null;
        return _this;
    }
    StackedSeriesCollection.prototype.p = function () {
        if (this.collectionResetting != null) {
            this.collectionResetting(this, null);
        }
        _super.prototype.p.call(this);
    };
    StackedSeriesCollection.$t = markType(StackedSeriesCollection, 'StackedSeriesCollection', ObservableCollection$1.$.specialize(StackedFragmentSeries.$));
    return StackedSeriesCollection;
}(ObservableCollection$1));
export { StackedSeriesCollection };
/**
 * @hidden
 */
var StackedSeriesFramePreparer = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSeriesFramePreparer, _super);
    function StackedSeriesFramePreparer(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = this;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    _this = _super.call(this, 0, c) || this;
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    var f = _rest[3];
                    var g = _rest[4];
                    _this = _super.call(this, 1, c, d, e, f, g) || this;
                }
                break;
        }
        return _this;
    }
    StackedSeriesFramePreparer.prototype.j = function (a) {
        var b = new SingleValuesHolder();
        if (typeCast(StackedColumnSeries.$, this.h) !== null || typeCast(StackedBarSeries.$, this.h) !== null) {
            var c = typeCast(StackedSeriesBase.$, this.h);
            if (c.tm.count > 0) {
                b.f = c.tm._inner[0].af;
            }
            return b;
        }
        var d = this.ad.valueColumn;
        b.f = d;
        return b;
    };
    StackedSeriesFramePreparer.prototype.t = function (a, b, c, d, e) {
        var _this = this;
        var f = 0;
        var g = false;
        var h;
        var i = a.d != null;
        var j = this.h.provideCollisionDetector();
        var k = a.f;
        var l = a.k;
        var m = this.h.mayContainUnknowns;
        var n = new ScalerParams(0, a.m, a.l, a.b.j$a, l);
        var o = new ScalerParams(0, a.m, a.l, a.c.j$a, l);
        o.b = this.h.getHostReferenceValue();
        var p = (a.b.j$c(2, n) - a.b.j$c(1, n));
        var q = a.m;
        var r = a.l;
        var s = typeCast(NumericAxisBase.$, a.c) !== null && a.c.lh;
        var _loop_1 = function (t) {
            var u = void 0;
            if (a.d == null) {
                if (!m) {
                    u = this_1.g.getBucketWithoutUnknowns(t);
                }
                else {
                    u = this_1.g.getBucket(t);
                }
            }
            else {
                u = ((function () { var v = _this.f(a, t, b, p, g, h, c); t = v.p1; g = v.p4; h = v.p5; return v.ret; })());
            }
            var v = !s || (s && u[1] > 0);
            var w = u[0];
            if (!isNaN_(u[0])) {
                this_1.x(a, u, c, i, n, o);
                a.a.f.add(u);
                var x = t * a.h;
                var y = x;
                if (a.d != null && a.d.i$b != null && x >= 0 && x < a.d.i$b.count) {
                    x = a.d.i$b._inner[x];
                }
                var z = u;
                if (k && x < b.e) {
                    z = new Array(u.length);
                    z[0] = w;
                    this_1.z(b, x, true, a.e);
                    z[1] = b.c;
                    z[2] = b.d;
                    this_1.x(a, z, c, i, n, o);
                }
                if (d && v && this_1.l(a.a, z, j, Math.min(x, b.e - 1), f, a.a.f.count - 1)) {
                    ++f;
                }
            }
            out_t_1 = t;
        };
        var this_1 = this, out_t_1;
        for (var t = a.i; t <= a.j; ++t) {
            _loop_1(t);
            t = out_t_1;
        }
        return f;
    };
    StackedSeriesFramePreparer.prototype.l = function (a, b, c, d, e, f) {
        var g = b[0];
        var h = b[1];
        if (typeCast(IBarSeries_$type, this.c) !== null) {
            h = b[0];
            g = b[1];
        }
        var i = new Rect(0, g - 5, h - 5, 11, 11);
        if (!isNaN_(g) && !isNaN_(h) && !isInfinity(g) && !isInfinity(h) && c.tryAdd(i)) {
            a.m.add({ $type: Point_$type, x: g, y: h });
            this.c.updateMarkerTemplate(e, d, f);
            return true;
        }
        return false;
    };
    StackedSeriesFramePreparer.$t = markType(StackedSeriesFramePreparer, 'StackedSeriesFramePreparer', CategoryFramePreparer.$);
    return StackedSeriesFramePreparer;
}(CategoryFramePreparer));
export { StackedSeriesFramePreparer };
/**
 * @hidden
 */
var AreaFragmentView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AreaFragmentView, _super);
    function AreaFragmentView(a) {
        var _this = _super.call(this, a) || this;
        _this.da = null;
        _this.dg = new Path();
        _this.di = new Path();
        _this.dh = new Path();
        _this.dj = new Path();
        _this.dc = new Path();
        _this.de = new Path();
        _this.dd = new Path();
        _this.df = new Path();
        _this.da = a;
        return _this;
    }
    AreaFragmentView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
        }
    };
    AreaFragmentView.prototype.db = function () {
        this.dg.ak = null;
        this.dh.ak = null;
        this.di.ak = null;
        this.dj.ak = null;
        this.dc.ak = null;
        this.dd.ak = null;
        this.de.ak = null;
        this.df.ak = null;
    };
    AreaFragmentView.prototype.cs = function () {
        return new AreaFragmentBucketCalculator(this);
    };
    AreaFragmentView.prototype.bb = function () {
        _super.prototype.bb.call(this);
    };
    AreaFragmentView.prototype.bc = function () {
        _super.prototype.bc.call(this);
        var a = this.bo();
        this.dc.ak = this.dg.ak;
        this.dd.ak = this.dh.ak;
        this.de.ak = this.di.ak;
        this.df.ak = this.dj.ak;
        this.dc._fill = a;
        this.dd._fill = a;
        this.dc._opacity = 1;
        this.dd._opacity = 1;
        this.de._stroke = a;
        this.de.ac = this.e.fw + 3;
        this.df._stroke = a;
        this.df.ac = this.e.fw + 3;
    };
    AreaFragmentView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        if (a.d) {
            if (b) {
                a.s(this.dc);
                a.s(this.dd);
                a.s(this.de);
                a.s(this.df);
            }
            else {
                a.s(this.dg);
                a.s(this.dh);
                a.s(this.di);
                a.s(this.dj);
            }
        }
    };
    AreaFragmentView.prototype.get_index = function () {
        var a = this.da.parentSeries;
        var b = a.series.count;
        var c = a.series.indexOf(this.da.logicalSeriesLink);
        var d = (b - 1) - c;
        var e = a.b0.index;
        return e + d;
    };
    AreaFragmentView.prototype.al = function (a) {
        _super.prototype.al.call(this, a);
        this.e.a8.exportPathData(a, this.di, "lowerShape", ["Lower"]);
        this.e.a8.exportPathData(a, this.dj, "upperShape", ["Upper", "Main"]);
        this.e.a8.exportPathData(a, this.dh, "translucentShape", ["Translucent"]);
        this.e.a8.exportPathData(a, this.dg, "fillShape", ["Fill"]);
    };
    AreaFragmentView.$t = markType(AreaFragmentView, 'AreaFragmentView', AnchoredCategorySeriesView.$);
    return AreaFragmentView;
}(AnchoredCategorySeriesView));
export { AreaFragmentView };
/**
 * @hidden
 */
var ColumnFragmentView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ColumnFragmentView, _super);
    function ColumnFragmentView(a) {
        var _this = _super.call(this, a) || this;
        _this.da = null;
        _this.de = null;
        _this.db = null;
        _this.dc = null;
        _this.dd = null;
        _this.dj = new Rectangle();
        _this.da = a;
        _this.dc = new List$1(Number_$type, 0);
        _this.dd = new List$1(Number_$type, 0);
        _this.db = ((function () {
            var $ret = new Pool$1(Rectangle.$);
            $ret.create = runOn(_this, _this.dk);
            $ret.activate = runOn(_this, _this.df);
            $ret.disactivate = runOn(_this, _this.dh);
            $ret.destroy = runOn(_this, _this.dg);
            return $ret;
        })());
        _this.de = new List$1(Rectangle.$, 0);
        return _this;
    }
    ColumnFragmentView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
        }
    };
    ColumnFragmentView.prototype.dk = function () {
        var _this = this;
        var a = ((function () {
            var $ret = new Rectangle();
            $ret.dataContext = ((function () {
                var $ret = new DataContext();
                $ret.series = _this.e;
                return $ret;
            })());
            return $ret;
        })());
        this.de.add(a);
        a._visibility = 1;
        return a;
    };
    ColumnFragmentView.prototype.df = function (a) {
        a._visibility = 0;
    };
    ColumnFragmentView.prototype.dh = function (a) {
        a._visibility = 1;
    };
    ColumnFragmentView.prototype.dg = function (a) {
        this.de.remove(a);
    };
    ColumnFragmentView.prototype.be = function (a, b) {
        _super.prototype.be.call(this, a, b);
        var c = a;
    };
    ColumnFragmentView.prototype.di = function (a, b, c) {
        var d = false;
        if (a.o != c) {
            d = true;
            a.o = c;
        }
        if (a.n != b) {
            d = true;
            a.n = b;
        }
        if (d) {
            this.aq();
        }
    };
    ColumnFragmentView.prototype.bf = function (a, b) {
        _super.prototype.bf.call(this, a, b);
    };
    ColumnFragmentView.prototype.ac = function (a) {
        return this.de._inner[a];
    };
    ColumnFragmentView.prototype.ab = function (a) {
        var b = this.de._inner[a];
        this.dj._visibility = b._visibility;
        this.dj.n = b.n;
        this.dj.o = b.o;
        this.dj.width = b.width;
        this.dj.height = b.height;
        var c = this.bp(a);
        this.dj._fill = c;
        this.dj._stroke = c;
        this.dj.ac = this.e.fw + 3;
        return this.dj;
    };
    ColumnFragmentView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        if (a.d) {
            for (var c = 0; c < this.de.count; c++) {
                var d = this.aa(c, b);
                this.bd(d, c, b);
                a.v(d);
            }
        }
    };
    ColumnFragmentView.prototype.get_index = function () {
        var a = this.da.parentSeries;
        var b = a.series.count;
        var c = a.series.indexOf(this.da.logicalSeriesLink);
        var d = (b - 1) - c;
        var e = a.b0.index;
        return e + d;
    };
    ColumnFragmentView.prototype.al = function (a) {
        var e_64, _a, e_65, _b;
        _super.prototype.al.call(this, a);
        var b = 0;
        var c = new List$1(Rectangle.$, 0);
        try {
            for (var _c = __values(fromEnum(this.db.a)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var d = _d.value;
                c.add(d);
            }
        }
        catch (e_64_1) {
            e_64 = { error: e_64_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_64)
                    throw e_64.error;
            }
        }
        c.aa(function (e, f) {
            if (e.n < f.n) {
                return -1;
            }
            else if (e.n > f.n) {
                return 1;
            }
            else {
                return 0;
            }
        });
        try {
            for (var _e = __values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var e = _f.value;
                this.e.a8.exportRectangleData(a, e, "column" + b, ["Main", "Fill"]);
            }
        }
        catch (e_65_1) {
            e_65 = { error: e_65_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_65)
                    throw e_65.error;
            }
        }
        b++;
    };
    ColumnFragmentView.prototype.getDefaultTooltipTemplate = function () {
        var a = "<div class='ui-chart-default-tooltip-content'>";
        var b = null;
        if (this.da.rs().ca) {
            b = this.da.fragmentXAxis;
        }
        else if (this.da.fragmentYAxis.ca) {
            b = this.da.fragmentYAxis;
        }
        if (b.cd) {
            var c = b;
            a += "<span>${item." + c.dateTimeMemberPath + "}</span><br/>";
        }
        if (b != null && b.fz != null) {
            a += "<span>${item." + b.fz + "}</span><br/>";
        }
        a += "<span";
        var d = this.e.a6.a$r(this.e);
        if (!stringIsNullOrEmpty(d)) {
            a += " style='color:" + d + "'";
        }
        a += ">" + this.da.title + ": </span><span class='ui-priority-primary'>" + "${item." + this.da.t5 + "}</span></div>";
        return a;
    };
    ColumnFragmentView.$t = markType(ColumnFragmentView, 'ColumnFragmentView', AnchoredCategorySeriesView.$);
    return ColumnFragmentView;
}(AnchoredCategorySeriesView));
export { ColumnFragmentView };
/**
 * @hidden
 */
var LineFragmentView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(LineFragmentView, _super);
    function LineFragmentView(a) {
        var _this = _super.call(this, a) || this;
        _this.da = null;
        _this.dg = new Path();
        _this.df = new Path();
        _this.dh = new Path();
        _this.dd = new Path();
        _this.dc = new Path();
        _this.de = new Path();
        _this.da = a;
        return _this;
    }
    LineFragmentView.prototype.db = function () {
        this.df.ak = null;
        this.dg.ak = null;
        this.dh.ak = null;
        this.dc.ak = null;
        this.dd.ak = null;
        this.de.ak = null;
    };
    LineFragmentView.prototype.cs = function () {
        return new LineFragmentBucketCalculator(this);
    };
    LineFragmentView.prototype.bb = function () {
        _super.prototype.bb.call(this);
    };
    LineFragmentView.prototype.bc = function () {
        _super.prototype.bc.call(this);
        var a = this.bo();
        this.dc.ak = this.df.ak;
        this.dd.ak = this.dg.ak;
        this.de.ak = this.dh.ak;
        this.dd._stroke = a;
        this.dd.ac = this.e.fw + 3;
        this.de._stroke = a;
        this.de.ac = this.e.fw + 3;
        this.dc._fill = a;
        this.dc._opacity = 1;
    };
    LineFragmentView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        if (a.d) {
            if (b) {
                a.s(this.dc);
                a.s(this.dd);
                a.s(this.de);
            }
            else {
                a.s(this.df);
                a.s(this.dg);
                a.s(this.dh);
            }
        }
    };
    LineFragmentView.prototype.get_index = function () {
        var a = this.da.parentSeries;
        var b = a.series.count;
        var c = a.series.indexOf(this.da.logicalSeriesLink);
        var d = (b - 1) - c;
        var e = a.b0.index;
        return e + d;
    };
    LineFragmentView.prototype.al = function (a) {
        _super.prototype.al.call(this, a);
        this.e.a8.exportPathData(a, this.dg, "lowerShape", ["Lower", "Main"]);
        this.e.a8.exportPathData(a, this.dh, "upperShape", ["Upper"]);
        this.e.a8.exportPathData(a, this.df, "translucentShape", ["Translucent"]);
    };
    LineFragmentView.$t = markType(LineFragmentView, 'LineFragmentView', AnchoredCategorySeriesView.$);
    return LineFragmentView;
}(AnchoredCategorySeriesView));
export { LineFragmentView };
/**
 * @hidden
 */
var SplineAreaFragmentView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SplineAreaFragmentView, _super);
    function SplineAreaFragmentView(a) {
        var _this = _super.call(this, a) || this;
        _this.dc = null;
        _this.di = new Path();
        _this.dk = new Path();
        _this.dj = new Path();
        _this.dl = new Path();
        _this.de = new Path();
        _this.dg = new Path();
        _this.df = new Path();
        _this.dh = new Path();
        _this.dc = a;
        return _this;
    }
    SplineAreaFragmentView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
        }
    };
    SplineAreaFragmentView.prototype.dd = function () {
        this.di.ak = null;
        this.dj.ak = null;
        this.dk.ak = null;
        this.dl.ak = null;
        this.de.ak = null;
        this.df.ak = null;
        this.dg.ak = null;
        this.dh.ak = null;
    };
    SplineAreaFragmentView.prototype.bb = function () {
        _super.prototype.bb.call(this);
    };
    SplineAreaFragmentView.prototype.bc = function () {
        _super.prototype.bc.call(this);
        var a = this.bo();
        this.de.ak = this.di.ak;
        this.df.ak = this.dj.ak;
        this.dg.ak = this.dk.ak;
        this.dh.ak = this.dl.ak;
        this.de._fill = a;
        this.df._fill = a;
        this.df._opacity = 1;
        this.de._opacity = 1;
        this.dg._stroke = a;
        this.dg.ac = this.e.fw + 3;
        this.dh._stroke = a;
        this.dh.ac = this.e.fw + 3;
    };
    SplineAreaFragmentView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        if (a.d) {
            if (b) {
                a.s(this.de);
                a.s(this.df);
                a.s(this.dg);
                a.s(this.dh);
            }
            else {
                a.s(this.di);
                a.s(this.dj);
                a.s(this.dk);
                a.s(this.dl);
            }
        }
    };
    SplineAreaFragmentView.prototype.get_index = function () {
        var a = this.dc.parentSeries;
        var b = a.series.count;
        var c = a.series.indexOf(this.dc.logicalSeriesLink);
        var d = (b - 1) - c;
        var e = a.b0.index;
        return e + d;
    };
    SplineAreaFragmentView.prototype.al = function (a) {
        _super.prototype.al.call(this, a);
        this.e.a8.exportPathData(a, this.dk, "lowerShape", ["Lower"]);
        this.e.a8.exportPathData(a, this.dl, "upperShape", ["Upper", "Main"]);
        this.e.a8.exportPathData(a, this.dj, "translucentShape", ["Translucent"]);
        this.e.a8.exportPathData(a, this.di, "fillShape", ["Fill"]);
    };
    SplineAreaFragmentView.$t = markType(SplineAreaFragmentView, 'SplineAreaFragmentView', SplineSeriesBaseView.$);
    return SplineAreaFragmentView;
}(SplineSeriesBaseView));
export { SplineAreaFragmentView };
/**
 * @hidden
 */
var SplineFragmentView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SplineFragmentView, _super);
    function SplineFragmentView(a) {
        var _this = _super.call(this, a) || this;
        _this.dc = null;
        _this.di = new Path();
        _this.dh = new Path();
        _this.dj = new Path();
        _this.df = new Path();
        _this.de = new Path();
        _this.dg = new Path();
        _this.dc = a;
        return _this;
    }
    SplineFragmentView.prototype.cs = function () {
        return new SplineFragmentBucketCalculator(this);
    };
    SplineFragmentView.prototype.dd = function () {
        this.dh.ak = null;
        this.di.ak = null;
        this.dj.ak = null;
        this.de.ak = null;
        this.df.ak = null;
        this.dg.ak = null;
    };
    SplineFragmentView.prototype.bb = function () {
        _super.prototype.bb.call(this);
    };
    SplineFragmentView.prototype.bc = function () {
        _super.prototype.bc.call(this);
        var a = this.bo();
        this.de.ak = this.dh.ak;
        this.df.ak = this.di.ak;
        this.dg.ak = this.dj.ak;
        this.df._stroke = a;
        this.df.ac = this.e.fw + 3;
        this.dg._stroke = a;
        this.dg.ac = this.e.fw + 3;
        this.de._fill = a;
        this.de._opacity = 0.75;
    };
    SplineFragmentView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        if (a.d) {
            if (b) {
                a.s(this.de);
                a.s(this.df);
                a.s(this.dg);
            }
            else {
                a.s(this.dh);
                a.s(this.di);
                a.s(this.dj);
            }
        }
    };
    SplineFragmentView.prototype.get_index = function () {
        var a = this.dc.parentSeries;
        var b = a.series.count;
        var c = a.series.indexOf(this.dc.logicalSeriesLink);
        var d = (b - 1) - c;
        var e = a.b0.index;
        return e + d;
    };
    SplineFragmentView.prototype.al = function (a) {
        _super.prototype.al.call(this, a);
        this.e.a8.exportPathData(a, this.di, "lowerShape", ["Lower", "Main"]);
        this.e.a8.exportPathData(a, this.dj, "upperShape", ["Upper"]);
        this.e.a8.exportPathData(a, this.dh, "translucentShape", ["Translucent"]);
    };
    SplineFragmentView.$t = markType(SplineFragmentView, 'SplineFragmentView', SplineSeriesBaseView.$);
    return SplineFragmentView;
}(SplineSeriesBaseView));
export { SplineFragmentView };
/**
 * @hidden
 */
var StackedSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSeriesView, _super);
    function StackedSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.c0 = null;
        _this.c1 = new Canvas();
        _this.c3 = new Panel();
        _this.c0 = a;
        return _this;
    }
    Object.defineProperty(StackedSeriesView.prototype, "c2", {
        get: function () {
            return this.c1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedSeriesView.prototype, "c4", {
        get: function () {
            return this.c3;
        },
        enumerable: false,
        configurable: true
    });
    StackedSeriesView.prototype.cs = function () {
        return new StackedBucketCalculator(this);
    };
    StackedSeriesView.prototype.ap = function () {
        _super.prototype.ap.call(this);
        for (var a = 0; a < this.c0.tq.f.count; a++) {
            this.c0.tq.f._inner[a].b0.ap();
        }
    };
    StackedSeriesView.prototype.ar = function (a, b) {
        var e_66, _a;
        _super.prototype.ar.call(this, a, b);
        try {
            for (var _b = __values(fromEnum(this.c0.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                c.visualSeriesLink.b0.ar(a, b);
            }
        }
        catch (e_66_1) {
            e_66 = { error: e_66_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_66)
                    throw e_66.error;
            }
        }
    };
    StackedSeriesView.prototype.af = function () {
        var a = "rgba(95,95,95,0.5)";
        var b = true;
        var c = 5, d = 5, e = 5;
        var f = this.e;
        if ((f.isStacked && f.dd) || (f.isStacked && f.eh && f.dd)) {
            d = 1;
            e = -3;
        }
        else if ((f.isStacked && f.d2) || (f.isStacked && f.eh)) {
            c = 3;
            d = 1;
            e = 4;
            b = false;
        }
        else if ((f.isStacked && f.di)) {
            d = 5;
            e = 0;
        }
        var g = new Color();
        g.colorString = a;
        f.pf = g;
        f.gy = c;
        f.gz = d;
        f.g0 = e;
        f.e9 = b;
    };
    StackedSeriesView.$t = markType(StackedSeriesView, 'StackedSeriesView', CategorySeriesView.$);
    return StackedSeriesView;
}(CategorySeriesView));
export { StackedSeriesView };
/**
 * @hidden
 */
var StackedBarSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedBarSeriesView, _super);
    function StackedBarSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.c5 = null;
        _this.c5 = a;
        return _this;
    }
    StackedBarSeriesView.prototype.cs = function () {
        return new StackedBarBucketCalculator(this);
    };
    StackedBarSeriesView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
            this.c0.qh = Defaults.c;
            this.c0.g1 = Defaults.i;
        }
    };
    StackedBarSeriesView.$t = markType(StackedBarSeriesView, 'StackedBarSeriesView', StackedSeriesView.$);
    return StackedBarSeriesView;
}(StackedSeriesView));
export { StackedBarSeriesView };
/**
 * @hidden
 */
var StackedColumnSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedColumnSeriesView, _super);
    function StackedColumnSeriesView(a) {
        return _super.call(this, a) || this;
    }
    StackedColumnSeriesView.prototype.cs = function () {
        return new StackedColumnBucketCalculator(this);
    };
    StackedColumnSeriesView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
            this.c0.qh = Defaults.c;
            this.c0.g1 = Defaults.i;
        }
    };
    StackedColumnSeriesView.$t = markType(StackedColumnSeriesView, 'StackedColumnSeriesView', StackedSeriesView.$);
    return StackedColumnSeriesView;
}(StackedSeriesView));
export { StackedColumnSeriesView };
/**
 * @hidden
 */
var StackedAreaSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedAreaSeriesView, _super);
    function StackedAreaSeriesView(a) {
        return _super.call(this, a) || this;
    }
    StackedAreaSeriesView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
            this.c0.qh = Defaults.e;
        }
    };
    StackedAreaSeriesView.$t = markType(StackedAreaSeriesView, 'StackedAreaSeriesView', StackedSeriesView.$);
    return StackedAreaSeriesView;
}(StackedSeriesView));
export { StackedAreaSeriesView };
/**
 * @hidden
 */
var StackedSplineAreaSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSplineAreaSeriesView, _super);
    function StackedSplineAreaSeriesView(a) {
        return _super.call(this, a) || this;
    }
    StackedSplineAreaSeriesView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
            this.c0.qh = Defaults.e;
        }
    };
    StackedSplineAreaSeriesView.prototype.c5 = function () {
        var a = 1;
        if (this.c0.cd != null) {
            a = this.c0.cd.gc;
        }
        return Math.max(1 / (a * 3), 0.3);
    };
    StackedSplineAreaSeriesView.$t = markType(StackedSplineAreaSeriesView, 'StackedSplineAreaSeriesView', StackedSeriesView.$);
    return StackedSplineAreaSeriesView;
}(StackedSeriesView));
export { StackedSplineAreaSeriesView };
/**
 * @hidden
 */
var StackedSplineSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSplineSeriesView, _super);
    function StackedSplineSeriesView(a) {
        return _super.call(this, a) || this;
    }
    StackedSplineSeriesView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
            this.c0.qh = Defaults.e;
        }
    };
    StackedSplineSeriesView.prototype.c5 = function () {
        var a = 1;
        if (this.c0.cd != null) {
            a = this.c0.cd.gc;
        }
        return Math.max(1 / (a * 3), 0.3);
    };
    StackedSplineSeriesView.$t = markType(StackedSplineSeriesView, 'StackedSplineSeriesView', StackedSeriesView.$);
    return StackedSplineSeriesView;
}(StackedSeriesView));
export { StackedSplineSeriesView };
/**
 * @hidden
 */
var StackedSeriesManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSeriesManager, _super);
    function StackedSeriesManager(a) {
        var _this = _super.call(this) || this;
        _this.b = null;
        _this.f = null;
        _this.c = null;
        _this.e = null;
        _this.d = null;
        _this.j = null;
        _this.k = null;
        if (a == null) {
            return _this;
        }
        _this.b = a;
        _this.f = new ObservableCollection$1(AnchoredCategorySeries.$, 0);
        _this.c = new StackedSeriesCollection();
        _this.e = new ObservableCollection$1(AnchoredCategorySeries.$, 0);
        _this.d = new ObservableCollection$1(AnchoredCategorySeries.$, 0);
        _this.j = _this.b.tr.c2;
        _this.k = _this.b.tr.c4;
        var b = _this.c;
        b.collectionChanged = delegateCombine(b.collectionChanged, function (b, c) {
            var e_67, _a, e_68, _b;
            if (c.oldItems != null) {
                try {
                    for (var _c = __values(fromEn(c.oldItems)), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var d = _d.value;
                        if (_this.f.contains(d.visualSeriesLink)) {
                            _this.f.remove(d.visualSeriesLink);
                        }
                    }
                }
                catch (e_67_1) {
                    e_67 = { error: e_67_1 };
                }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return))
                            _a.call(_c);
                    }
                    finally {
                        if (e_67)
                            throw e_67.error;
                    }
                }
            }
            if (c.newItems != null) {
                var e = c.newStartingIndex;
                try {
                    for (var _e = __values(fromEn(c.newItems)), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var f = _f.value;
                        var g = _this.a(f);
                        _this.f.insert(e, g);
                        e++;
                    }
                }
                catch (e_68_1) {
                    e_68 = { error: e_68_1 };
                }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return))
                            _b.call(_e);
                    }
                    finally {
                        if (e_68)
                            throw e_68.error;
                    }
                }
            }
        });
        var c = _this.f;
        c.collectionChanged = delegateCombine(c.collectionChanged, function (c, d) {
            var e_69, _a, e_70, _b;
            if (d.oldItems != null) {
                try {
                    for (var _c = __values(fromEn(d.oldItems)), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var e = _d.value;
                        e.k0(true, e.b0);
                        e.cd = null;
                        e.b8 = null;
                        e.itemsSource = null;
                        e.legend = null;
                        if (_this.k != null && _this.k.ab.contains(e)) {
                            _this.k.ab.remove(e);
                        }
                        if (_this.b.cd != null) {
                            _this.b.cd.op(e);
                        }
                    }
                }
                catch (e_69_1) {
                    e_69 = { error: e_69_1 };
                }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return))
                            _a.call(_c);
                    }
                    finally {
                        if (e_69)
                            throw e_69.error;
                    }
                }
            }
            if (d.newItems != null) {
                try {
                    for (var _e = __values(fromEn(d.newItems)), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var f = _f.value;
                        f.cd = _this.b.cd;
                        f.b8 = _this.b.b8;
                        if (!_this.k.ab.contains(f)) {
                            _this.k.ab.add(f);
                        }
                        if (_this.b.cd != null) {
                            _this.b.cd.lk(f);
                        }
                    }
                }
                catch (e_70_1) {
                    e_70 = { error: e_70_1 };
                }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return))
                            _b.call(_e);
                    }
                    finally {
                        if (e_70)
                            throw e_70.error;
                    }
                }
            }
            _this.b.ml(false);
        });
        return _this;
    }
    StackedSeriesManager.prototype.a = function (a) {
        if (this.b.isStacked && this.b.d2) {
            var b = new LineFragment();
            b.provideRenderer(a.bw);
            b.parentSeries = this.b;
            a.visualSeriesLink = b;
            b.logicalSeriesLink = a;
            b.b0.bu = this.b.b0.bu;
            this.i(b, a);
            this.g(b);
            return b;
        }
        if (this.b.isStacked && this.b.di) {
            var c = new ColumnFragment();
            c.provideRenderer(a.bw);
            c.parentSeries = this.b;
            a.visualSeriesLink = c;
            c.logicalSeriesLink = a;
            c.b0.bu = this.b.b0.bu;
            this.i(c, a);
            this.g(c);
            return c;
        }
        if (this.b.isStacked && this.b.dg) {
            var d = new BarFragment();
            d.provideRenderer(a.bw);
            d.parentSeries = typeCast(StackedBarSeries.$, this.b);
            a.visualSeriesLink = d;
            d.logicalSeriesLink = a;
            d.b0.bu = this.b.b0.bu;
            this.i(d, a);
            this.g(d);
            return d;
        }
        if (this.b.isStacked && this.b.dd && !this.b.eh) {
            var e = new AreaFragment();
            e.provideRenderer(a.bw);
            e.parentSeries = this.b;
            a.visualSeriesLink = e;
            e.logicalSeriesLink = a;
            e.b0.bu = this.b.b0.bu;
            this.i(e, a);
            this.g(e);
            return e;
        }
        if (this.b.isStacked && this.b.eh && !this.b.dd) {
            var f = new SplineFragment();
            f.provideRenderer(a.bw);
            f.parentSeries = this.b;
            a.visualSeriesLink = f;
            f.logicalSeriesLink = a;
            f.b0.bu = this.b.b0.bu;
            this.i(f, a);
            this.g(f);
            return f;
        }
        if (this.b.isStacked && this.b.eh && this.b.dd) {
            var g = new SplineAreaFragment();
            g.provideRenderer(a.bw);
            g.parentSeries = this.b;
            a.visualSeriesLink = g;
            g.logicalSeriesLink = a;
            g.b0.bu = this.b.b0.bu;
            this.i(g, a);
            this.g(g);
            return g;
        }
        return null;
    };
    StackedSeriesManager.prototype.i = function (a, b) {
        a.o7 = b.jp;
        a.pg = b.js;
        a.ph = b.ju;
        a.pi = b.jv;
        if (b.itemsSource == null) {
            a.itemsSource = this.b.itemsSource;
        }
        else {
            a.itemsSource = b.itemsSource;
        }
        a.legend = this.b.a1;
        a.legendItemTemplate = b.gl;
        a.p7 = b.kf;
        a.rj = b.jg;
        a.rk = b.jh;
        a.rl = b.kd;
        a.q3 = b.gm;
        a.qh = b.s;
        a.qm = b.a5;
        a.gt = this.b.gt;
        a._opacity = b.bp;
        a.gr = b.a3;
        a.pc = b.jj;
        a.gv = this.b.gv;
        a.pj = b.jw;
        a.g1 = b.bc;
        a.title = b.ca;
        a.ql = b.am;
        a.t5 = b.e1;
        a._visibility = b.kg;
        a.gs = b.a4;
        a.bt = b.v;
        a.ho = b.bx;
        a.hp = b.by;
        a.cf = b.ab;
        a.sk = b.al;
        a.r4 = b.m;
        a.ca = b.y;
        a.hp = b.by;
        a.cg = b.ac;
        var c = typeCast(AreaFragment.$, a);
        if (c != null) {
            c.fs = b.a2;
        }
        var d = typeCast(SplineAreaFragment.$, a);
        if (d != null) {
            d.fs = b.a2;
        }
        var e = typeCast(ColumnFragment.$, a);
        if (e != null) {
            e.vp = b.a7;
            e.vq = b.a8;
        }
        var f = typeCast(BarFragment.$, a);
        if (f != null) {
            f.vp = b.a7;
            f.vq = b.a8;
        }
        a.toolTip = b.cb;
        a.dn = b.ai;
        a.e9 = b.an;
        b.f4();
        b.f5();
        b.f6();
        b.f7();
    };
    StackedSeriesManager.prototype.h = function (a) {
        var e_71, _a;
        this.e.clear();
        this.d.clear();
        var b = 0;
        try {
            for (var _b = __values(fromEnum(this.f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                c.e1 = true;
                c.index = this.b.t2(this.c._inner[b]);
                c.b8 = this.b.b8;
                c.cd = this.b.cd;
                if (this.c._inner[b].at) {
                    this.e.add(c);
                }
                else {
                    this.d.add(c);
                }
                if ((this.b.isStacked && this.b.d2) || (this.b.isStacked && this.b.dd) || (this.b.isStacked && this.b.eh)) {
                    c.t8(this.b.fetchXAxis());
                    c.t9(this.b.fetchYAxis());
                }
                c.ml(a);
                b++;
            }
        }
        catch (e_71_1) {
            e_71 = { error: e_71_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_71)
                    throw e_71.error;
            }
        }
    };
    StackedSeriesManager.prototype.g = function (a) {
        var fragment_ = a;
        fragment_.externalObject = TypeRegistrar.createFromInternal(fragment_, PlatformConstants.Prefix, PlatformConstants.Postfix);
        fragment_.externalObject._implementation = fragment_;
    };
    StackedSeriesManager.$t = markType(StackedSeriesManager, 'StackedSeriesManager');
    return StackedSeriesManager;
}(Base));
export { StackedSeriesManager };
