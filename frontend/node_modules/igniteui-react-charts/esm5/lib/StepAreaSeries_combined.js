/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { HorizontalAnchoredCategorySeries } from "./HorizontalAnchoredCategorySeries";
import { CategoryLineRasterizer } from "./CategoryLineRasterizer";
import { typeCast, Array_$type, runOn, markType } from "igniteui-react-core";
import { ISortingAxis_$type } from "./ISortingAxis";
import { List$1 } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { intDivide, isNaN_ } from "igniteui-react-core";
import { AnchoredCategorySeriesView } from "./AnchoredCategorySeriesView";
import { Defaults } from "./Defaults";
/**
 * @hidden
 */
var StepAreaSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StepAreaSeries, _super);
    function StepAreaSeries() {
        var _this = _super.call(this) || this;
        _this.vb = null;
        _this.vb = new CategoryLineRasterizer();
        _this.ab = StepAreaSeries.$;
        return _this;
    }
    StepAreaSeries.prototype.bx = function () {
        return new StepAreaSeriesView(this);
    };
    StepAreaSeries.prototype.l2 = function (a) {
        _super.prototype.l2.call(this, a);
        this.vc = a;
    };
    StepAreaSeries.prototype.get_de = function () {
        return true;
    };
    StepAreaSeries.prototype.get_dd = function () {
        return true;
    };
    StepAreaSeries.prototype.get_ei = function () {
        return true;
    };
    StepAreaSeries.prototype.get_d3 = function () {
        return true;
    };
    StepAreaSeries.prototype.b3 = function () {
        if (this.b4 == 0) {
            return 2;
        }
        return _super.prototype.b3.call(this);
    };
    StepAreaSeries.prototype.preferredCategoryMode = function (a) {
        return typeCast(ISortingAxis_$type, a) !== null ? 0 : 1;
    };
    StepAreaSeries.prototype.k0 = function (a, b) {
        _super.prototype.k0.call(this, a, b);
        var c = b;
        c.db();
    };
    StepAreaSeries.prototype.vd = function (a, b, c, d, e) {
        if (b) {
            if (e) {
                if ((a & 1) == 0 || ((intDivide(a, 2)) + 1) >= c.f.count) {
                    return c.f._inner[(intDivide(a, 2))][0];
                }
                return c.f._inner[(intDivide(a, 2)) + 1][0];
            }
            return c.f._inner[(intDivide(a, 2))][0] + ((a & 1) == 1 ? -d : d);
        }
        if (e) {
            if ((a & 1) == 0 || ((intDivide(a, 2)) + 1) >= c.f.count) {
                return c.f._inner[(intDivide(a, 2))][0];
            }
            return c.f._inner[(intDivide(a, 2)) + 1][0];
        }
        return c.f._inner[(intDivide(a, 2))][0] + ((a & 1) == 0 ? -d : d);
    };
    StepAreaSeries.prototype.r3 = function () {
        return 1;
    };
    StepAreaSeries.prototype.gb = function (a, b, c, d, e, f, g, h) {
        var i = NaN;
        if (c >= 0 && c < b.count) {
            i = b.item(c);
        }
        var j = NaN;
        if (d >= 0 && d < b.count) {
            j = b.item(d);
        }
        if (f == 0) {
            return j;
        }
        if (e == b.count - 1) {
            return i;
        }
        if (isNaN_(j) && g != 0 && a <= 0.5 && !h) {
            return i;
        }
        if (isNaN_(i) && g != 0 && a >= 0.5 && !h) {
            return j;
        }
        if (a > 0.5) {
            return j;
        }
        return i;
    };
    StepAreaSeries.prototype.bp = function () {
        if (this.bq == 0) {
            return 2;
        }
        else {
            return _super.prototype.bp.call(this);
        }
    };
    StepAreaSeries.prototype.tb = function (a, b) {
        var _this = this;
        _super.prototype.tb.call(this, a, b);
        var c = b.bv;
        var d = b.bu;
        var e = this.getEffectiveViewport1(b);
        var f = typeCast(ISortingAxis_$type, this.us) != null;
        var g = this.us != null ? 0.5 * this.us.getCategorySize(c, d, e) : 0;
        if (this.us != null && this.us.cg) {
            g = -g;
        }
        var h = a.f.count * 2;
        var i = new List$1(Array_$type, 2, h);
        this.r1.a0(this, this.sl(), runOn(this, this.rm), this.st(b), this.su(b));
        var j = false;
        var k = this.r1.b;
        if (k != null) {
            j = true;
        }
        for (var l = 0; l < h; l++) {
            var m = new Array(4);
            m[0] = this.vd(l, false, a, g, f);
            m[1] = a.f._inner[(intDivide(l, 2))][1];
            m[2] = this.vd(l, true, a, g, f);
            m[3] = a.f._inner[(intDivide(l, 2))][2];
            i.add(m);
        }
        var n = this.r2.cr.d;
        if (j) {
            var o = new ScalerParams(0, b.bv, b.bu, this.us.cg, e);
            this.s7(i, -1, this.valueColumn.count, this.us, o, b.q);
        }
        var p = typeCast(StepAreaSeriesView.$, b);
        var q = p.dp;
        var r = p.dq;
        var s = p.dm;
        var t = p.dn;
        this.r1.ad(q, true, false, true, true);
        this.r1.ad(r, true, false, true, true);
        this.r1.ad(s, false, true, false, false);
        this.r1.ad(t, false, true, false, false);
        if (b.cv(a)) {
            p.dd(h, i, false, n, this.fv, function (u, v, w, x, y) { return _this.ua(u, 2 * a.f.count, b); }, 1, this.tk(i, i.count - 1, b.bu, b.bv, true));
            b.cy(a);
        }
        var u = this.fetchYAxis();
        p.dm._opacity = this.r1.j * this.fs;
        p.dn._opacity = 0.5 * this.r1.j * this.fs;
    };
    Object.defineProperty(StepAreaSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    StepAreaSeries.$t = markType(StepAreaSeries, 'StepAreaSeries', HorizontalAnchoredCategorySeries.$);
    return StepAreaSeries;
}(HorizontalAnchoredCategorySeries));
export { StepAreaSeries };
/**
 * @hidden
 */
var StepAreaSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StepAreaSeriesView, _super);
    function StepAreaSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.da = null;
        _this.di = new Path();
        _this.dk = new Path();
        _this.dj = new Path();
        _this.dl = new Path();
        _this.de = new Path();
        _this.dg = new Path();
        _this.df = new Path();
        _this.dh = new Path();
        _this.da = a;
        return _this;
    }
    StepAreaSeriesView.prototype.as = function () {
        _super.prototype.as.call(this);
        if (!this.q) {
            this.da.qh = Defaults.c;
        }
    };
    Object.defineProperty(StepAreaSeriesView.prototype, "dm", {
        get: function () {
            return this.di;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StepAreaSeriesView.prototype, "dp", {
        get: function () {
            return this.dk;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StepAreaSeriesView.prototype, "dn", {
        get: function () {
            return this.dj;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StepAreaSeriesView.prototype, "dq", {
        get: function () {
            return this.dl;
        },
        enumerable: false,
        configurable: true
    });
    StepAreaSeriesView.prototype.db = function () {
        this.di.ak = null;
        this.dj.ak = null;
        this.dk.ak = null;
        this.dl.ak = null;
        this.aq();
    };
    StepAreaSeriesView.prototype.dc = function (a, b, c, d, e, f, g) {
        this.dc(a, b, c, d, e, f, g);
    };
    StepAreaSeriesView.prototype.dd = function (a, b, c, d, e, f, g, h) {
        this.da.vb.a = typeCast(ISortingAxis_$type, this.ct.fetchXAxis()) !== null ? true : false;
        this.da.vb.j(this.di, this.dk, this.dj, this.dl, a, b, c, d, e, f, g, h);
        this.aq();
    };
    StepAreaSeriesView.prototype.bc = function () {
        _super.prototype.bc.call(this);
        this.de.ak = this.di.ak;
        this.dg.ak = this.dk.ak;
        this.df.ak = this.dj.ak;
        this.dh.ak = this.dl.ak;
        var a = this.bo();
        this.de._fill = a;
        this.de._opacity = 1;
        this.df._fill = a;
        this.df._opacity = 1;
        this.dg._stroke = a;
        this.dg.ac = this.e.fw + 3;
        this.dh._stroke = a;
        this.dh.ac = this.e.fw + 3;
    };
    StepAreaSeriesView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        if (b) {
            a.s(this.de);
            a.s(this.df);
            a.s(this.dg);
            a.s(this.dh);
        }
        else {
            a.s(this.di);
            a.s(this.dj);
            a.s(this.dk);
            a.s(this.dl);
        }
    };
    StepAreaSeriesView.prototype.al = function (a) {
        _super.prototype.al.call(this, a);
        this.e.a8.exportPathData(a, this.dk, "lowerShape", ["Lower"]);
        this.e.a8.exportPathData(a, this.dl, "upperShape", ["Upper", "Main"]);
        this.e.a8.exportPathData(a, this.dj, "translucentShape", ["Translucent"]);
        this.e.a8.exportPathData(a, this.di, "fillShape", ["Fill"]);
    };
    StepAreaSeriesView.$t = markType(StepAreaSeriesView, 'StepAreaSeriesView', AnchoredCategorySeriesView.$);
    return StepAreaSeriesView;
}(AnchoredCategorySeriesView));
export { StepAreaSeriesView };
