import { __extends } from "tslib";
import { IgrCategorySeries } from "./igr-category-series";
/**
 * Represents the base class for all IgxDataChartComponent ranged category/value series.
*
* The `IgrRangeCategorySeries` represents the base class for all IgxDataChartComponent ranged category/value series.
*
* ```ts
* <IgrDataChart
*     dataSource={this.state.dataSource}
*     width="700px"
*     height="500px">
*
*     <IgrCategoryXAxis name="xAxis" label="Year" />
*     <IgrNumericYAxis  name="yAxis" />
*
*     <IgrRangeColumnSeries
*         name="series1"
*         xAxisName="xAxis"
*         yAxisName="yAxis"
*         highMemberPath="High"
*         lowMemberPath="Low" />
*  </IgrDataChart>
* ```
*
* ```ts
* let series1 = new IgrRangeColumnSeries({ name: "series1" });
* series1.highMemberPath = "High";
* series1.lowMemberPath  = "Low";
* series1.xAxisName = "xAxis";
* series1.yAxisName = "yAxis";
* this.chart.series.add(series1);
* ```
*/
var IgrRangeCategorySeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgrRangeCategorySeries, _super);
    function IgrRangeCategorySeries(props) {
        return _super.call(this, props) || this;
    }
    Object.defineProperty(IgrRangeCategorySeries.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrRangeCategorySeries.prototype, "lowMemberPath", {
        /**
         * Gets or sets the value mapping property for the current series object.
        *
        * The `lowMemberPath` is used for low mapping property of the current series object.
        *
        * ```ts
        * <IgrDataChart
        *     dataSource={this.state.dataSource}
        *     width="700px"
        *     height="500px">
        *
        *     <IgrCategoryXAxis name="xAxis" label="Year" />
        *     <IgrNumericYAxis  name="yAxis" />
        *
        *     <IgrRangeColumnSeries
        *         name="series1"
        *         xAxisName="xAxis"
        *         yAxisName="yAxis"
        *         highMemberPath="High"
        *         lowMemberPath="Low" />
        *  </IgrDataChart>
        * ```
        *
        * ```ts
        * const series1 = new IgrRangeColumnSeries({ name: "series1" });
        * series1.highMemberPath = "High";
        * series1.lowMemberPath  = "Low";
        * ```
        */
        get: function () {
            return this.i.tt;
        },
        set: function (v) {
            this.i.tt = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrRangeCategorySeries.prototype, "highMemberPath", {
        /**
         * Gets or sets the value mapping property for the current series object.
        *
        * Use `highMemberPath` propert for high mapping of the current series object.
        *
        * ```ts
        * <IgrDataChart
        *     dataSource={this.state.dataSource}
        *     width="700px"
        *     height="500px">
        *
        *     <IgrCategoryXAxis name="xAxis" label="Year" />
        *     <IgrNumericYAxis  name="yAxis" />
        *
        *     <IgrRangeColumnSeries
        *         name="series1"
        *         xAxisName="xAxis"
        *         yAxisName="yAxis"
        *         highMemberPath="High"
        *         lowMemberPath="Low" />
        *  </IgrDataChart>
        * ```
        *
        * ```ts
        * series.highMemberPath = "high";
        * ```
        *
        * ```ts
        * const series1 = new IgrRangeColumnSeries({ name: "series1" });
        * series1.highMemberPath = "High";
        * series1.lowMemberPath  = "Low";
        * ```
        */
        get: function () {
            return this.i.tq;
        },
        set: function (v) {
            this.i.tq = v;
        },
        enumerable: false,
        configurable: true
    });
    IgrRangeCategorySeries.prototype.getItemValue = function (item, memberPathName) {
        var iv = this.i.hy(item, memberPathName);
        return (iv);
    };
    /**
     * Scrolls the series to display the item for the specified data item.
     * The series is scrolled by the minimum amount required to place the specified data item within
     * the central 80% of the visible axis.
    
    * @param item  * The data item (item) to scroll to.
    *
    * `scrollIntoView` method Scrolls the series to display the item for the specified data item.
    */
    IgrRangeCategorySeries.prototype.scrollIntoView = function (item) {
        var iv = this.i.eo(item);
        return (iv);
    };
    return IgrRangeCategorySeries;
}(IgrCategorySeries));
export { IgrRangeCategorySeries };
