/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { HorizontalRangeCategorySeries } from "./HorizontalRangeCategorySeries";
import { DependencyProperty } from "igniteui-react-core";
import { Defaults } from "./Defaults";
import { typeCast, runOn, markType, markDep, fromEnum } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { List$1 } from "igniteui-react-core";
import { Pool$1 } from "igniteui-react-core";
import { Rectangle } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { isNaN_, isInfinity } from "igniteui-react-core";
import { RangeCategorySeriesView } from "./RangeCategorySeriesView";
/**
 * @hidden
 */
var RangeColumnSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RangeColumnSeries, _super);
    function RangeColumnSeries() {
        var _this = _super.call(this) || this;
        _this.ab = RangeColumnSeries.$;
        return _this;
    }
    RangeColumnSeries.prototype.get_di = function () {
        return true;
    };
    RangeColumnSeries.prototype.get_d3 = function () {
        return true;
    };
    RangeColumnSeries.prototype.gw = function () {
        if (!isNaN_(this.gv)) {
            return _super.prototype.gw.call(this);
        }
        return Defaults.h;
    };
    RangeColumnSeries.prototype.bx = function () {
        return new RangeColumnSeriesView(this);
    };
    RangeColumnSeries.prototype.l2 = function (a) {
        _super.prototype.l2.call(this, a);
        this.ui = a;
    };
    RangeColumnSeries.prototype.get_c2 = function () {
        return true;
    };
    RangeColumnSeries.prototype.preferredCategoryMode = function (a) {
        return 2;
    };
    RangeColumnSeries.prototype.pz = function (a) {
        if (this.xAxis == null || this.yAxis == null) {
            return Rect.empty;
        }
        var b = this.pl(a);
        var c = this.b0.bv;
        var d = this.b0.bu;
        var e = this.getEffectiveViewport1(this.b0);
        var f = new ScalerParams(0, c, d, this.yAxis.cg, e);
        f.b = this.ge();
        var g = this.aj(this.rs(), this.rt.f, this.st(this.b0), this.su(this.b0), a, true);
        if (g == null) {
            return Rect.empty;
        }
        var h = g[0];
        var i = g[1];
        var j = Math.abs(b.x - h[0]);
        var k = Math.abs(b.x - i[0]);
        var l = this.xAxis.k3(c, d, e);
        if (j < k) {
            var m = h[0] - 0.5 * l;
            var n = h[1];
            var o = h[2];
            return new Rect(0, m, Math.min(n, o), l, Math.max(n, o) - Math.min(n, o));
        }
        else {
            var p = i[0] - 0.5 * l;
            var q = i[1];
            var r = i[2];
            return new Rect(0, p, Math.min(q, r), l, Math.max(q, r) - Math.min(q, r));
        }
    };
    RangeColumnSeries.prototype.ex = function (a, b) {
        if (this.e0(a, b)) {
            return true;
        }
        if (this.qk(a, b)) {
            return true;
        }
        return false;
    };
    RangeColumnSeries.prototype.k0 = function (a, b) {
        _super.prototype.k0.call(this, a, b);
        var c = b;
        if (a && c.c3 != null) {
            c.c3.count = 0;
        }
    };
    RangeColumnSeries.prototype.gc = function () {
        return this.xAxis.k3(this.b0.bv, this.b0.bu, this.getEffectiveViewport1(this.b0));
    };
    RangeColumnSeries.prototype.tb = function (a, b) {
        _super.prototype.tb.call(this, a, b);
        var c = typeCast(RangeColumnSeriesView.$, b);
        var d = a.f;
        var e = b.bv;
        var f = b.bu;
        var g = this.getEffectiveViewport1(b);
        var h = this.xAxis.k3(e, f, g);
        if (isNaN_(h) || isInfinity(h)) {
            c.c3.count = 0;
            return;
        }
        this.r1.a0(this, this.sl(), runOn(this, this.rm), this.st(b), this.su(b));
        this.r1.r = this.uj;
        this.r1.s = this.uk;
        this.r1.k = this.uj;
        this.r1.l = this.uk;
        var i = false;
        var j = this.r1.b;
        if (j != null) {
            i = true;
        }
        var k = this.xAxis.cm;
        var l = this.lowColumn.count;
        var m = this.xAxis;
        var n = new ScalerParams(0, e, f, this.xAxis.cg, g);
        var o = 0;
        for (var p = 0; p < d.count; ++p) {
            var q = d._inner[p][0] - 0.5 * h;
            var r = Math.min(d._inner[p][1], d._inner[p][2]);
            var s = Math.max(d._inner[p][1], d._inner[p][2]);
            var t = Math.abs(s - r);
            if (isInfinity(t) || isNaN_(t)) {
                continue;
            }
            var u = c.c3.item(o);
            o++;
            u.width = h;
            u.height = t;
            if (i) {
                this.s7(d, p, l, m, n, b.q);
            }
            this.r1.ad(u, false, false, false, false);
            u.am = this.r1.k;
            u.an = this.r1.l;
            c.c8(u, q, r);
        }
        c.c3.count = o;
        b.cy(a);
    };
    Object.defineProperty(RangeColumnSeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.so;
        },
        enumerable: false,
        configurable: true
    });
    RangeColumnSeries.$t = markType(RangeColumnSeries, 'RangeColumnSeries', HorizontalRangeCategorySeries.$);
    RangeColumnSeries.$$p = markDep(DependencyProperty, PropertyMetadata, RangeColumnSeries, 'raisePropertyChanged', ['RadiusX:uj:un', [1, 0], 'RadiusY:uk:uo', [1, 0]]);
    return RangeColumnSeries;
}(HorizontalRangeCategorySeries));
export { RangeColumnSeries };
/**
 * @hidden
 */
var RangeColumnSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RangeColumnSeriesView, _super);
    function RangeColumnSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.c2 = null;
        _this.c3 = null;
        _this.c4 = null;
        _this.c9 = new Rectangle();
        _this.c2 = a;
        _this.c3 = ((function () {
            var $ret = new Pool$1(Rectangle.$);
            $ret.create = runOn(_this, _this.da);
            $ret.activate = runOn(_this, _this.c5);
            $ret.disactivate = runOn(_this, _this.c7);
            $ret.destroy = runOn(_this, _this.c6);
            return $ret;
        })());
        return _this;
    }
    RangeColumnSeriesView.prototype.as = function () {
        _super.prototype.as.call(this);
        this.c4 = new List$1(Rectangle.$, 0);
        if (!this.q) {
            this.c2.qh = Defaults.c;
            this.c2.g1 = Defaults.i;
        }
    };
    RangeColumnSeriesView.prototype.da = function () {
        var a = new Rectangle();
        this.c4.add(a);
        a._visibility = 1;
        return a;
    };
    RangeColumnSeriesView.prototype.c5 = function (a) {
        a._visibility = 0;
    };
    RangeColumnSeriesView.prototype.c7 = function (a) {
        a._visibility = 1;
    };
    RangeColumnSeriesView.prototype.c6 = function (a) {
        this.c4.remove(a);
    };
    RangeColumnSeriesView.prototype.c8 = function (a, b, c) {
        if (!this.isDirty) {
            this.aq();
        }
        a.o = c;
        a.n = b;
    };
    RangeColumnSeriesView.prototype.ac = function (a) {
        return this.c4._inner[a];
    };
    RangeColumnSeriesView.prototype.ab = function (a) {
        var b = this.c4._inner[a];
        this.c9._visibility = b._visibility;
        this.c9.n = b.n;
        this.c9.o = b.o;
        this.c9.width = b.width;
        this.c9.height = b.height;
        var c = this.bp(a);
        this.c9._fill = c;
        this.c9._stroke = c;
        this.c9.ac = this.e.fw + 3;
        return this.c9;
    };
    RangeColumnSeriesView.prototype.a6 = function (a, b) {
        _super.prototype.a6.call(this, a, b);
        if (a.d) {
            for (var c = 0; c < this.c4.count; c++) {
                var d = this.aa(c, b);
                this.bd(d, c, b);
                a.v(d);
            }
        }
    };
    RangeColumnSeriesView.prototype.al = function (a) {
        var e_1, _a, e_2, _b;
        _super.prototype.al.call(this, a);
        var b = 0;
        var c = new List$1(Rectangle.$, 0);
        try {
            for (var _c = __values(fromEnum(this.c3.a)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var d = _d.value;
                c.add(d);
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        c.aa(function (e, f) {
            if (e.n < f.n) {
                return -1;
            }
            else if (e.n > f.n) {
                return 1;
            }
            else {
                return 0;
            }
        });
        try {
            for (var _e = __values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var e = _f.value;
                this.e.a8.exportRectangleData(a, e, "column" + b, ["Main", "Fill"]);
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
        b++;
    };
    RangeColumnSeriesView.$t = markType(RangeColumnSeriesView, 'RangeColumnSeriesView', RangeCategorySeriesView.$);
    return RangeColumnSeriesView;
}(RangeCategorySeriesView));
export { RangeColumnSeriesView };
