/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { ShapeSeriesBase } from "./ShapeSeriesBase";
import { StyleSelector } from "./StyleSelector";
import { DependencyProperty } from "igniteui-react-core";
import { Style } from "igniteui-react-core";
import { markType, markDep, typeCast } from "igniteui-react-core";
import { ShapeSeriesViewBase } from "./ShapeSeriesViewBase";
import { PropertyMetadata } from "igniteui-react-core";
import { Defaults } from "./Defaults";
import { Path } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
export let ScatterPolylineSeries = /*@__PURE__*/ (() => {
    class ScatterPolylineSeries extends ShapeSeriesBase {
        constructor() {
            super();
            this.ab = ScatterPolylineSeries.$;
        }
        get_d9() {
            return true;
        }
        bx() {
            return new ScatterPolylineSeriesView(this);
        }
        get_q2() {
            return false;
        }
        l2(a) {
            super.l2(a);
            this.sv = a;
        }
        get_q7() {
            return false;
        }
        l7(a, b, c, d) {
            super.l7(a, b, c, d);
            switch (b) {
                case ScatterPolylineSeries.$$p[0]:
                    this.sv.cv(this.s1);
                    this.ml(false);
                    this.ls();
                    break;
                case ScatterPolylineSeries.$$p[1]:
                    this.sv.cw(this.sw);
                    this.ml(false);
                    this.ls();
                    break;
            }
        }
        sf(a) {
            let b = a;
            b.cv(this.s1);
            b.cw(this.sw);
            super.sf(a);
        }
        at(a, b) {
            let c = this.sv.c0(a, b, true);
            if (c != null) {
                return c.dataContext;
            }
            return super.at(a, b);
        }
    }
    ScatterPolylineSeries.$t = /*@__PURE__*/ markType(ScatterPolylineSeries, 'ScatterPolylineSeries', ShapeSeriesBase.$);
    ScatterPolylineSeries.$$p = /*@__PURE__*/ markDep(DependencyProperty, PropertyMetadata, ScatterPolylineSeries, 'raisePropertyChanged', ['ShapeStyle:s1:sz', [Style.$, null], 'ShapeStyleSelector:sw:s0', [StyleSelector.$, null]]);
    return ScatterPolylineSeries;
})();
/**
 * @hidden
 */
export let ScatterPolylineSeriesView = /*@__PURE__*/ (() => {
    class ScatterPolylineSeriesView extends ShapeSeriesViewBase {
        constructor(a) {
            super(a);
        }
        as() {
            super.as();
            if (!this.q) {
                this.b3.g1 = Defaults.aa;
            }
        }
        c2(a, b) {
            return this.c3(a, b, false);
        }
        cj(a, b, c) {
            super.cj(a, b, c);
            ShapeSeriesViewBase.ci(this, a, b);
        }
        ch(a, b) {
            let c = typeCast(Path.$, a);
            if (c == null) {
                return;
            }
            c.ak = b;
        }
        ac(a) {
            let b = super.ac(a);
            b._fill = null;
            return b;
        }
        ab(a) {
            let b = super.ab(a);
            b._fill = null;
            return b;
        }
        b8(a) {
            return a.width >= this.b3.ro || a.height >= this.b3.ro;
        }
        getDefaultTooltipTemplate() {
            let a = "<div class='ui-chart-default-tooltip-content'><span";
            let b = this.e.a6.a$r(this.e);
            if (!stringIsNullOrEmpty(b)) {
                a += " style='color:" + b + "'";
            }
            a += ">" + this.b3.title + "</span><br/>";
            a += "</div>";
            return a;
        }
    }
    ScatterPolylineSeriesView.$t = /*@__PURE__*/ markType(ScatterPolylineSeriesView, 'ScatterPolylineSeriesView', ShapeSeriesViewBase.$);
    return ScatterPolylineSeriesView;
})();
