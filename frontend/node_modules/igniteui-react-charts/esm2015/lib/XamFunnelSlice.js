/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { ContentControl } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { Visibility_$type } from "igniteui-react-core";
import { Number_$type, enumGetBox, EnumUtil, markType, markDep } from "igniteui-react-core";
import { Binding } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
/**
 * @hidden
 */
export let XamFunnelSlice = /*@__PURE__*/ (() => {
    class XamFunnelSlice extends ContentControl {
        constructor() {
            super();
            this.ax = null;
            this.ai = null;
            this.ab = XamFunnelSlice.$;
            this.g(XamFunnelSlice.ar, new Binding(1, XamFunnelSlice.$$p[0]));
            this.g(XamFunnelSlice.as, new Binding(1, XamFunnelSlice.$$p[1]));
        }
        get aj() {
            return this.c(XamFunnelSlice.aw);
        }
        set aj(a) {
            this.h(XamFunnelSlice.aw, a);
        }
        get ay() {
            return this.c(XamFunnelSlice.ar);
        }
        set ay(a) {
            this.h(XamFunnelSlice.ar, a);
        }
        get az() {
            return this.c(XamFunnelSlice.as);
        }
        set az(a) {
            this.h(XamFunnelSlice.as, a);
        }
        get a2() {
            return EnumUtil.getEnumValue(Visibility_$type, this.c(XamFunnelSlice.au));
        }
        set a2(a) {
            this.h(XamFunnelSlice.au, enumGetBox(Visibility_$type, a));
        }
        aq(a, b, c) {
            let d;
            switch (a) {
                case "Fill":
                    d = new Binding(1, XamFunnelSlice.$$p[0]);
                    if (c != null) {
                        d.d = this;
                    }
                    this.g(XamFunnelSlice.ar, d);
                    break;
                case "Outline":
                    d = new Binding(1, XamFunnelSlice.$$p[1]);
                    if (c != null) {
                        d.d = this;
                    }
                    this.g(XamFunnelSlice.as, d);
                    break;
            }
        }
    }
    XamFunnelSlice.$t = /*@__PURE__*/ markType(XamFunnelSlice, 'XamFunnelSlice', ContentControl.$);
    XamFunnelSlice.aw = /*@__PURE__*/ DependencyProperty.i("StrokeThickness", Number_$type, XamFunnelSlice.$, /*@__PURE__*/ new PropertyMetadata(2, 1, (a, b) => {
    }));
    XamFunnelSlice.ar = /*@__PURE__*/ DependencyProperty.i("ActualFill", Brush.$, XamFunnelSlice.$, /*@__PURE__*/ new PropertyMetadata(1, null));
    XamFunnelSlice.as = /*@__PURE__*/ DependencyProperty.i("ActualOutline", Brush.$, XamFunnelSlice.$, /*@__PURE__*/ new PropertyMetadata(1, null));
    XamFunnelSlice.au = /*@__PURE__*/ DependencyProperty.i("LabelVisibility", Visibility_$type, XamFunnelSlice.$, /*@__PURE__*/ new PropertyMetadata(2, /*@__PURE__*/ enumGetBox(Visibility_$type, 0), (a, b) => {
    }));
    XamFunnelSlice.$$p = /*@__PURE__*/ markDep(DependencyProperty, PropertyMetadata, XamFunnelSlice, 'aq', ['Fill:a0:at', [Brush.$, null], 'Outline:a1:av', [Brush.$, null]]);
    return XamFunnelSlice;
})();
