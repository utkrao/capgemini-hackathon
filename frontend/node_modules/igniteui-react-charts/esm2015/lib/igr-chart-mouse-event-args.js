import { IgrSeries } from "./igr-series";
import { fromPoint } from "igniteui-react-core";
/**
 * Provides data for IgxDataChartComponent mouse button related events.
*/
export class IgrChartMouseEventArgs {
    constructor() {
    }
    /**
     * @hidden
     */
    get i() {
        return this._implementation;
    }
    onImplementationCreated() {
    }
    _provideImplementation(i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    }
    /**
     * Gets a reference to the object that raised the event.
    */
    get originalSource() {
        return this.i.originalSource;
    }
    /**
     * Gets the ItemsSource item associated with the current event.
    */
    get item() {
        return this.i.item;
    }
    set item(v) {
        this.i.item = v;
    }
    /**
     * Gets the series associated with the current event.
    */
    get series() {
        if (this.i.series == null) {
            return null;
        }
        if (!this.i.series.externalObject) {
            let e = IgrSeries._createFromInternal(this.i.series);
            if (e) {
                e._implementation = this.i.series;
            }
            this.i.series.externalObject = e;
        }
        return this.i.series.externalObject;
    }
    set series(v) {
        v == null ? this.i.series = null : this.i.series = v.i;
    }
    /**
     * Gets the Chart associated with the current event.
    */
    get chart() {
        if (this.i.chart == null) {
            return null;
        }
        return this.i.chart.externalObject;
    }
    set chart(v) {
        v == null ? this.i.chart = null : this.i.chart = v.i;
    }
    /**
     * Provides a human readable description of the mouse button event.
    
    */
    toString() {
        let iv = this.i.toString();
        return (iv);
    }
    /**
     * Returns the x- and y- coordinates of the mouse pointer position, optionally evaluated
     * against the origin of a supplied UIElement.
    
    * @param relativeTo  * Any UIElement derived object that is contained by the the engine plug-in
     * and connected to the object tree. To specify the object relative to the overall the engine
     * coordinate system, use a relativeTo value of null.
    */
    getPosition(relativeTo) {
        let iv = this.i.getPosition(relativeTo);
        return fromPoint(iv);
    }
}
