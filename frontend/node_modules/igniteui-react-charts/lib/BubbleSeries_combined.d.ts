import { ScatterBase } from "./ScatterBase";
import { IScaleLegendSeries } from "igniteui-react-core";
import { ISupportsSizeScale } from "./ISupportsSizeScale";
import { ISupportsFillScale } from "./ISupportsFillScale";
import { Rect } from "igniteui-react-core";
import { IFastItemColumn$1 } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { UIElement } from "igniteui-react-core";
import { Type } from "igniteui-react-core";
import { ActualRange } from "./ActualRange";
import { SizeScale } from "./SizeScale";
import { BrushScale } from "./BrushScale";
import { SeriesView } from "./SeriesView";
import { MarkerFillMode } from "./MarkerFillMode";
import { ScatterFrame } from "./ScatterFrame";
import { IChartLegend } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { ScatterBaseView } from "./ScatterBaseView";
import { FastItemsSourceEventAction } from "igniteui-react-core";
import { Marker } from "./Marker";
import { BrushSelectionMode } from "./BrushSelectionMode";
import { MarkerManagerBase } from "./MarkerManagerBase";
/**
 * @hidden
 */
export declare class BubbleSeries extends ScatterBase implements IScaleLegendSeries, ISupportsSizeScale, ISupportsFillScale {
    static $t: Type;
    protected get_c4(): boolean;
    protected bx(): SeriesView;
    l2(a: SeriesView): void;
    u9: BubbleSeriesView;
    protected gx(): number;
    qb(): MarkerFillMode;
    constructor();
    private wz;
    private wy;
    isAttachedTo(a: IChartLegend): boolean;
    protected c3(): boolean;
    protected lc(a: (arg1: any) => void): void;
    get vg(): IFastItemColumn$1<number>;
    vm: List$1<UIElement>;
    private wx;
    get legendReady(): boolean;
    get minScaleText(): string;
    get maxScaleText(): string;
    forScaleColors(a: (arg1: Brush, arg2: number) => void): boolean;
    wb: string;
    hy(a: any, b: string): any;
    get vi(): IFastItemColumn$1<number>;
    set vi(a: IFastItemColumn$1<number>);
    private ve;
    vb: SizeScale;
    v1: string;
    private vd;
    get vh(): IFastItemColumn$1<any>;
    set vh(a: IFastItemColumn$1<any>);
    vw: string;
    u8: BrushScale;
    private vc;
    get vf(): IFastItemColumn$1<number>;
    set vf(a: IFastItemColumn$1<number>);
    vj: boolean;
    vk: boolean;
    vq: number;
    vp: number;
    vl: boolean;
    tt(a: ScatterBaseView, b: ScatterFrame, c: number, d: Rect, e: Rect): void;
    t1(a: ScatterFrame, b: ScatterBaseView): void;
    private wg;
    static vn(a: number, b: number, c: number, d: number, e: number): number;
    static vo(a: number, b: number, c: number, d: number, logBase_: number, e: number): number;
    fb(a: Rect, b: Rect, c: SeriesView): boolean;
    protected sq(a: string, b: FastItemsSourceEventAction): boolean;
    private wf;
    protected k3(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    ll(): void;
    lr(): void;
    protected l7(a: any, b: string, c: any, d: any): void;
    updateSizeScaleGlobals(): void;
    updateFillScaleGlobals(): void;
    u7(a: SizeScale): ActualRange;
    u6(): ActualRange;
    va: SizeScale;
    wi(a: List$1<Marker>, b: List$1<number>, c: Rect, d: boolean): void;
    wh(a: List$1<Marker>): void;
    v7: string;
    vs: string;
    v9: string;
    vu: string;
    getDataLegendSeriesContextAt(a: number, b: number): any;
    get actualMarkerBrush(): Brush;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CustomPaletteBrushScale extends BrushScale {
    static $t: Type;
    constructor();
    brushSelectionMode: BrushSelectionMode;
    getBrush1(a: number, b: number): Brush;
    protected get_isReady(): boolean;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class BubbleSeriesView extends ScatterBaseView {
    static $t: Type;
    protected df: BubbleSeries;
    constructor(a: BubbleSeries);
    as(): void;
    protected cu(): MarkerManagerBase;
    dh(): void;
    di(): void;
    dg(): void;
    getDefaultTooltipTemplate(): string;
}
