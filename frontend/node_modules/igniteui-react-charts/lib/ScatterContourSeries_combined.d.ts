import { ScatterTriangulationSeries } from "./ScatterTriangulationSeries";
import { IFastItemColumn$1 } from "igniteui-react-core";
import { Type, Point } from "igniteui-react-core";
import { ValueBrushScale } from "./ValueBrushScale";
import { ContourValueResolver } from "./ContourValueResolver";
import { SeriesView } from "./SeriesView";
import { List$1 } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { RenderSurface } from "./RenderSurface";
import { DataContext } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class ScatterContourSeries extends ScatterTriangulationSeries {
    static $t: Type;
    protected get_d1(): boolean;
    constructor();
    hy(a: any, b: string): any;
    private r3;
    protected bx(): SeriesView;
    sf: string;
    private r6;
    get r7(): IFastItemColumn$1<number>;
    set r7(a: IFastItemColumn$1<number>);
    sb: string;
    sd: string;
    getDataLegendSeriesContextAt(a: number, b: number): any;
    protected l7(a: any, b: string, c: any, d: any): void;
    k0(a: boolean, b: SeriesView): void;
    mm(a: boolean): void;
    mk(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void;
    protected si(a: SeriesView): void;
    r5: ValueBrushScale;
    r4: ValueBrushScale;
    protected mz(): void;
    private sj;
    private r1;
    get r2(): ContourValueResolver;
    set r2(a: ContourValueResolver);
    private sk;
    fb(a: Rect, b: Rect, c: SeriesView): boolean;
    at(a: Point, b: boolean): DataContext;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class ScatterContourSeriesView extends SeriesView {
    static $t: Type;
    private bz;
    private by;
    constructor(a: ScatterContourSeries);
    protected b1: List$1<Path>;
    private b8;
    private b4;
    private b5;
    private b6;
    private b0;
    private bx;
    b2(a: List$1<List$1<List$1<Point>>>, b: number[]): void;
    protected be(a: any, b: number): void;
    protected bf(a: any, b: number): void;
    protected a6(a: RenderingContext, b: boolean): void;
    b3(a: boolean): void;
    al(a: any): void;
    getDefaultTooltipTemplate(): string;
    b7(a: Point, b: boolean): Path;
}
