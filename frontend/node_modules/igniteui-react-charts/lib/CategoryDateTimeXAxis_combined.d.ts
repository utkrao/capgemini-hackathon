import { TimeAxisBase } from "./TimeAxisBase";
import { TimeAxisDisplayType } from "./TimeAxisDisplayType";
import { DependencyProperty } from "igniteui-react-core";
import { Type, IList$1 } from "igniteui-react-core";
import { AxisView } from "./AxisView";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { CategoryAxisBaseView } from "./CategoryAxisBaseView";
/**
 * @hidden
 */
export declare class CategoryDateTimeXAxis extends TimeAxisBase {
    static $t: Type;
    constructor();
    protected get_cc(): boolean;
    a3(): AxisView;
    hr(a: AxisView): void;
    nm: CategoryDateTimeXAxisView;
    nn: TimeAxisDisplayType;
    nx: number;
    private ns;
    get nu(): number;
    set nu(a: number);
    eu(): number;
    static readonly n9: DependencyProperty;
    get ny(): number;
    set ny(a: number);
    private nt;
    get nv(): number;
    set nv(a: number);
    c7(a: Rect, b: Rect, c: AxisView): boolean;
    d3(): number;
    protected h8(a: boolean): void;
    protected nr(): number;
    private nw;
    private n5;
    private n6;
    private np;
    private no;
    private nq;
    n4(a: Date, b: Date): void;
    protected hv(a: any, b: string, c: any, d: any): void;
    nc(): void;
    protected na(a: Date, b: Date): number;
    protected get_cb(): boolean;
    get isVertical(): boolean;
    j$c(a: number, b: ScalerParams): number;
    j$b(a: number, b: ScalerParams): number;
    j$d(a: IList$1<number[]>, b: IList$1<number>, c: number, d: number, e: ScalerParams): void;
    j$e(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    j$f(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    get j$a(): boolean;
    get i$a(): boolean;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CategoryDateTimeXAxisView extends CategoryAxisBaseView {
    static $t: Type;
    protected bj: CategoryDateTimeXAxis;
    constructor(a: CategoryDateTimeXAxis);
    aj(): void;
    r(a: number): string;
}
