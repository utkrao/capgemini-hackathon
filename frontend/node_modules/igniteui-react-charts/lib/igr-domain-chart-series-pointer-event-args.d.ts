import { IgrSeries } from "./igr-series";
import { DomainChartSeriesPointerEventArgs as DomainChartSeriesPointerEventArgs_internal } from "./DomainChartSeriesPointerEventArgs";
/**
 * Represents event arguments for chart's SeriesAdded and SeriesRemoved events
*
* The `IgrDomainChartSeriesPointerEventArgs` class provide events for chart's SeriesAdded and SeriesRemoved.
*
* `SeriesPointerDown` get fired when the pointer is press down over a Series.
*
* ```ts
*  <IgrFinancialChart
*     yAxisInterval={200}
*     yAxisMinorInterval={50}
*     yAxisMajorStroke="Black"
*     yAxisMinorStroke="Gray" >
*  </IgrFinancialChart>
* ```
*
* ```ts
* this.chart.seriesPointerDown = this.chart_seriesPointerDown();
* ```
*
* ```ts
* <IgrFinancialChart
*     width="100%"
*     height="400px"
*     chartType="Candle"
*     zoomSliderType="Candle"
*     volumeType="Column"
*     indicatorTypes="ForceIndex"
*     overlayTypes ="PriceChannel"
*     dataSource={this.data}
*     seriesPointerDown = {this.onseriesPointerDown} />
* ```
*
* ```ts
* public void onseriesPointerDown =(s: IgrDomainChart <IIgrDomainChartProps>, e: DomainChartSeriesPointerEventArgs)=>
* {
*
* }
* ```
*/
export declare class IgrDomainChartSeriesPointerEventArgs {
    protected _implementation: any;
    /**
     * @hidden
     */
    get i(): DomainChartSeriesPointerEventArgs_internal;
    private onImplementationCreated;
    constructor();
    protected _provideImplementation(i: any): void;
    /**
     * Gets the series hit by the pointer.
    *
    * Use the `series` property to get the series.
    *
    * ```ts
    *  var series= args.series;
    * ```
    */
    get series(): IgrSeries;
    set series(v: IgrSeries);
    /**
     * Gets the item hit by the pointer.
    *
    * Use the `item` property to get the items.
    *
    * <https://www.infragistics.com/help/wpf/infragisticswpf.controls.charts.xamdatachart~infragistics.controls.charts.domainchartseriespointereventargs~item>
    *
    * ```ts
    * var Chartitem = args.item;
    * ```
    */
    get item(): any;
    set item(v: any);
}
