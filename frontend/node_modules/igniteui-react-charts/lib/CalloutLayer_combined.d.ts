import { AnnotationLayer } from "./AnnotationLayer";
import { DependencyProperty } from "igniteui-react-core";
import { IFastItemColumn$1 } from "igniteui-react-core";
import { Base, Type, Point } from "igniteui-react-core";
import { Series } from "./Series";
import { CalloutPlacementPositionsCollection } from "./CalloutPlacementPositionsCollection";
import { LabelCollisionPlacementPositions } from "igniteui-react-core";
import { AutoCalloutVisibilityMode } from "./AutoCalloutVisibilityMode";
import { Brush } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { CalloutCollisionMode } from "./CalloutCollisionMode";
import { FontInfo } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { CalloutLayerFrame } from "./CalloutLayerFrame";
import { CalloutAnnotationWrapper } from "./CalloutAnnotationWrapper";
import { FastItemsSourceEventAction } from "igniteui-react-core";
import { CalloutLabelUpdatingEventArgs } from "./CalloutLabelUpdatingEventArgs";
import { CalloutSeriesSelectingEventArgs } from "./CalloutSeriesSelectingEventArgs";
import { CalloutStyleUpdatingEventArgs } from "./CalloutStyleUpdatingEventArgs";
import { CalloutRenderStyleUpdatingEventArgs } from "./CalloutRenderStyleUpdatingEventArgs";
import { SeriesView } from "./SeriesView";
import { Frame } from "./Frame";
import { Size } from "igniteui-react-core";
import { CalloutContentUpdatingEventArgs } from "./CalloutContentUpdatingEventArgs";
import { DataContext } from "igniteui-react-core";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { HashPool$2 } from "igniteui-react-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { RenderingContext } from "igniteui-react-core";
import { TextBlock } from "igniteui-react-core";
import { Visibility } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class CalloutLayer extends AnnotationLayer {
    static $t: Type;
    protected get_c8(): boolean;
    constructor();
    private ui;
    private ur;
    private uj;
    protected k3(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    ep(a: boolean): boolean;
    private sn;
    private uw;
    private ux;
    calloutStyleUpdating: (sender: any, args: CalloutStyleUpdatingEventArgs) => void;
    calloutRenderStyleUpdating: (sender: any, args: CalloutRenderStyleUpdatingEventArgs) => void;
    t2: string;
    hy(a: any, b: string): any;
    get r1(): IFastItemColumn$1<any>;
    set r1(a: IFastItemColumn$1<any>);
    private rw;
    ud: string;
    get r2(): IFastItemColumn$1<any>;
    set r2(a: IFastItemColumn$1<any>);
    private rx;
    ug: string;
    get r3(): IFastItemColumn$1<any>;
    set r3(a: IFastItemColumn$1<any>);
    private ry;
    tz: string;
    get r0(): IFastItemColumn$1<any>;
    set r0(a: IFastItemColumn$1<any>);
    private rv;
    sg: boolean;
    ts: string;
    get rz(): IFastItemColumn$1<any>;
    set rz(a: IFastItemColumn$1<any>);
    private ru;
    private so;
    private sr;
    private ul;
    protected bx(): SeriesView;
    l2(a: SeriesView): void;
    protected rl: CalloutLayerView;
    private ss;
    t4: string;
    rr: Series;
    tp: string;
    private rm;
    get rn(): CalloutPlacementPositionsCollection;
    set rn(a: CalloutPlacementPositionsCollection);
    rc: LabelCollisionPlacementPositions[];
    sf: boolean;
    sj: boolean;
    sk: boolean;
    sl: boolean;
    get rg(): AutoCalloutVisibilityMode;
    set rg(a: AutoCalloutVisibilityMode);
    get rf(): AutoCalloutVisibilityMode;
    set rf(a: AutoCalloutVisibilityMode);
    static readonly vc: DependencyProperty;
    sv: number;
    si: boolean;
    sh: boolean;
    s4: number;
    vw: Brush;
    vt: Brush;
    s5: number;
    vv: Brush;
    vu: Brush;
    get v0(): Thickness;
    sx: number;
    sz: number;
    sy: number;
    sw: number;
    ri: CalloutCollisionMode;
    s0: number;
    s1: number;
    t7: string;
    private rs;
    get rt(): FontInfo;
    protected qt(a: Series, b: boolean): void;
    protected qv(a: Frame, b: SeriesView): void;
    private sp;
    private sm;
    private r4;
    private vy;
    protected m9(a: Rect, b: Rect): void;
    protected m8(a: Rect, b: Rect): void;
    private sb;
    private s3;
    private vx;
    get vz(): Rect;
    set vz(a: Rect);
    private r9;
    private us;
    private un;
    private r5;
    private s6;
    private s7;
    private r6;
    private uk;
    private r7;
    private s2;
    private st;
    private s8;
    protected qg(a: Series): boolean;
    lv(): void;
    private sa;
    uq(): void;
    calloutContentUpdating: (sender: any, args: CalloutContentUpdatingEventArgs) => void;
    calloutLabelUpdating: (sender: any, args: CalloutLabelUpdatingEventArgs) => void;
    calloutSeriesSelecting: (sender: any, args: CalloutSeriesSelectingEventArgs) => void;
    private sq;
    private ut;
    private sd;
    private se;
    private su;
    private sc;
    protected bp(): SeriesHitTestMode;
    at(a: Point, b: boolean): DataContext;
    ex(a: Point, b: boolean): boolean;
    protected uv(a: CalloutLayerFrame, b: boolean): void;
    protected qy(a: Frame, b: SeriesView): void;
    protected en(): boolean;
    protected l7(a: any, b: string, c: any, d: any): void;
    private rh;
    private rd;
    private uu;
    private r8;
    private re;
    private uo;
    private um;
    private up;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CalloutLayerView extends AnnotationLayerView {
    static $t: Type;
    constructor(a: CalloutLayer);
    protected b4: CalloutLayer;
    private b9;
    as(): void;
    private b6;
    private cc;
    private ce;
    private cd;
    b8: HashPool$2<CalloutAnnotationWrapper, CalloutView>;
    cm(a: Brush): Brush;
    protected a6(a: RenderingContext, b: boolean): void;
    protected b7(): FontInfo;
    al(a: any): void;
    private ca;
    co(a: TextBlock): Size;
    private cb;
    private b5;
    cn(a: any, b: Thickness): Size;
    cg(a: CalloutView, b: number, c: number): void;
    ch(a: CalloutView, b: CalloutAnnotationWrapper, c: any): void;
    ci(a: Series): Brush;
    cl(): Brush;
    ck(a: Series): Brush;
    cj(a: Series): Brush;
    cf(): void;
}
/**
 * @hidden
 */
export declare class CalloutView extends Base {
    static $t: Type;
    constructor(a: CalloutLayerView);
    private a;
    y: Visibility;
    j(a: RenderingContext): void;
    private l;
    private t;
    private q;
    private s;
    get r(): Point;
    set r(a: Point);
    get p(): Brush;
    set p(a: Brush);
    get o(): Brush;
    set o(a: Brush);
    get n(): Brush;
    set n(a: Brush);
    get m(): Brush;
    set m(a: Brush);
    get e(): number;
    set e(a: number);
    private w;
    private v;
    get x(): Thickness;
    set x(a: Thickness);
    private c;
    get d(): number;
    set d(a: number);
    get h(): any;
    set h(a: any);
    f: number;
    g: number;
    u(): Size;
    private b;
    k(a: Series, b: CalloutAnnotationWrapper, c: any): void;
    i(a: CalloutLayer, b: FontInfo, c: any): void;
}
