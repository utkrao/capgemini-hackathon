import { AnnotationLayer } from "./AnnotationLayer";
import { Axis } from "./Axis";
import { DataToolTipLayerGroupingMode } from "igniteui-react-core";
import { Series } from "./Series";
import { Rect } from "igniteui-react-core";
import { Point, Type } from "igniteui-react-core";
import { Size } from "igniteui-react-core";
import { SeriesView } from "./SeriesView";
import { DataTooltipGroupedPositionX } from "igniteui-react-core";
import { DataTooltipGroupedPositionY } from "igniteui-react-core";
import { DataAbbreviationMode } from "igniteui-react-core";
import { DataLegendValueMode } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { FontInfo } from "igniteui-react-core";
import { DataLegendHeaderDateMode } from "igniteui-react-core";
import { DataLegendHeaderTimeMode } from "igniteui-react-core";
import { DataLegendSummaryType } from "igniteui-react-core";
import { LegendItemBadgeShape } from "igniteui-react-core";
import { DataLegendUnitsMode } from "igniteui-react-core";
import { DataLegendLabelMode } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { IDataLegend } from "igniteui-react-core";
import { Frame } from "./Frame";
import { Pool$1 } from "igniteui-react-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { PointerTooltip } from "./PointerTooltip";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class DataToolTipLayer extends AnnotationLayer {
    static $t: Type;
    protected get_db(): boolean;
    constructor();
    protected bx(): SeriesView;
    l2(a: SeriesView): void;
    protected r5: DataToolTipLayerView;
    protected get_dl(): boolean;
    rl: Axis;
    sz: boolean;
    r3: DataToolTipLayerGroupingMode;
    private r1;
    get r2(): DataToolTipLayerGroupingMode;
    set r2(a: DataToolTipLayerGroupingMode);
    private r4;
    protected l7(a: any, b: string, c: any, d: any): void;
    private s3;
    private s4;
    private wl;
    wp(a: string, b: any): void;
    private wm;
    protected qs(a: Axis, b: boolean): void;
    protected qt(a: Series, b: boolean): void;
    protected qv(a: Frame, b: SeriesView): void;
    private s5;
    private rk;
    private r6;
    lg(): void;
    lh(): void;
    get yp(): Rect;
    get yo(): Rect;
    get yn(): Rect;
    get yr(): Rect;
    private yq;
    private sv;
    private ss;
    private st;
    private su;
    private ty;
    private tw;
    private tx;
    private t7;
    private t5;
    private t6;
    private t1;
    private tz;
    private t0;
    private th;
    private tj;
    private ti;
    private tq;
    private ts;
    private tr;
    private tn;
    private tp;
    private to;
    private td;
    private tk;
    private tl;
    private tm;
    private te;
    private tf;
    private tg;
    private tv;
    private tu;
    private tt;
    private t4;
    private t3;
    private t2;
    private tc;
    private ym;
    private tb;
    private ta;
    private rf;
    private re;
    private sw;
    private sx;
    private wk;
    private sq;
    private wo;
    private wn;
    private ua;
    protected qy(a: Frame, b: SeriesView): void;
    protected en(): boolean;
    s8: number;
    s9: number;
    s6: number;
    s7: number;
    rv: DataTooltipGroupedPositionX;
    private rt;
    get ru(): DataTooltipGroupedPositionX;
    set ru(a: DataTooltipGroupedPositionX);
    private rw;
    rz: DataTooltipGroupedPositionY;
    private rx;
    get ry(): DataTooltipGroupedPositionY;
    set ry(a: DataTooltipGroupedPositionY);
    private r0;
    sy: boolean;
    ri: string[];
    rd: string[];
    rh: string[];
    rc: string[];
    rm: DataAbbreviationMode;
    t8: number;
    t9: number;
    rs: DataLegendValueMode;
    v3: string;
    s0: boolean;
    v9: string;
    rj: any[];
    y0: Thickness;
    s1: boolean;
    wi: string;
    s2: boolean;
    y1: Thickness;
    yl: Brush;
    private sg;
    get sp(): FontInfo;
    set sp(a: FontInfo);
    ur: string;
    rg: any[];
    un: string;
    rn: DataLegendHeaderDateMode;
    ro: DataLegendHeaderTimeMode;
    uw: string;
    yd: Brush;
    yu: Thickness;
    yt: Thickness;
    sr: boolean;
    private r8;
    get sh(): FontInfo;
    set sh(a: FontInfo);
    yg: Brush;
    private sb;
    get sk(): FontInfo;
    set sk(a: FontInfo);
    rq: DataLegendSummaryType;
    vf: string;
    yx: Thickness;
    yw: Thickness;
    yi: Brush;
    private sd;
    get sm(): FontInfo;
    set sm(a: FontInfo);
    va: string;
    yf: Brush;
    private sa;
    get sj(): FontInfo;
    set sj(a: FontInfo);
    vl: string;
    yh: Brush;
    private sc;
    get sl(): FontInfo;
    set sl(a: FontInfo);
    ys: Thickness;
    r7: LegendItemBadgeShape;
    rr: DataLegendUnitsMode;
    vw: string;
    yk: Brush;
    yz: Thickness;
    private sf;
    get so(): FontInfo;
    set so(a: FontInfo);
    yy: Thickness;
    yj: Brush;
    private se;
    get sn(): FontInfo;
    set sn(a: FontInfo);
    rp: DataLegendLabelMode;
    ye: Brush;
    yv: Thickness;
    private r9;
    get si(): FontInfo;
    set si(a: FontInfo);
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class DataToolTipLayerView extends AnnotationLayerView {
    static $t: Type;
    constructor(a: DataToolTipLayer);
    b6: Pool$1<any>;
    aj(): void;
    protected b9: List$1<PointerTooltip>;
    private ca;
    private cc;
    private ce;
    private cd;
    protected b4: DataToolTipLayer;
    private b7;
    as(): void;
    private _htmlTest;
    protected get htmlTest(): any;
    protected set htmlTest(a: any);
    b8(a: any, b: Series): boolean;
    cn(a: any): Size;
    cm(): Rect;
    cl(): Rect;
    ck(): Rect;
    cj(a: Point): Point;
    ch(a: any, b: number, c: number, d: number, e: number): void;
    co(): Size;
    cf(a: any): void;
    ci(): void;
    protected a6(a: RenderingContext, b: boolean): void;
    al(a: any): void;
    b5(a: any): IDataLegend;
    cg(a: boolean): void;
}
