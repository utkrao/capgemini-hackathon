import { SplineSeriesBase } from "./SplineSeriesBase";
import { CategoryLineRasterizer } from "./CategoryLineRasterizer";
import { SeriesView } from "./SeriesView";
import { Type } from "igniteui-react-core";
import { CategoryMode } from "./CategoryMode";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { CategoryFrame } from "./CategoryFrame";
import { CategorySeriesView } from "./CategorySeriesView";
import { List$1 } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { UnknownValuePlotting } from "igniteui-react-core";
import { SplineSeriesBaseView } from "./SplineSeriesBaseView";
import { Clipper } from "igniteui-react-core";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class SplineSeries extends SplineSeriesBase {
    static $t: Type;
    protected get_eh(): boolean;
    protected bx(): SeriesView;
    l2(a: SeriesView): void;
    vw: SplineSeriesView;
    constructor();
    vv: CategoryLineRasterizer;
    preferredCategoryMode(a: CategoryAxisBase): CategoryMode;
    k0(a: boolean, b: SeriesView): void;
    tb(a: CategoryFrame, b: CategorySeriesView): void;
    get useHighMarkerFidelity(): boolean;
}
/**
 * @hidden
 */
export declare class SplineSeriesView extends SplineSeriesBaseView {
    static $t: Type;
    protected dc: SplineSeries;
    constructor(a: SplineSeries);
    as(): void;
    private dm;
    private dl;
    private dn;
    get dj(): Path;
    get dk(): Path;
    get di(): Path;
    dd(): void;
    de(a: number, b: List$1<number[]>, c: boolean, d: UnknownValuePlotting, e: Clipper, f: number, g: number): void;
    private dh;
    private dg;
    private df;
    protected bc(): void;
    protected a6(a: RenderingContext, b: boolean): void;
    al(a: any): void;
}
