import { DependencyObject } from "igniteui-react-core";
import { INotifyPropertyChanged, Base, PropertyChangedEventArgs, Type } from "igniteui-react-core";
import { Series } from "./Series";
import { Brush } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { LabelCollisionInfo } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class CalloutAnnotation extends DependencyObject implements INotifyPropertyChanged {
    static $t: Type;
    propertyChanged: (sender: any, e: PropertyChangedEventArgs) => void;
    k: CalloutAnnotationWrapper;
    xValue: any;
    ac: any;
    yValue: any;
    ad: any;
    text: string;
    ao: string;
    ay: string;
    key: any;
    ab: any;
    content: any;
    aa: any;
    series: Series;
    l: Series;
    private a2;
    private a1;
    private _formatLabel;
    get formatLabel(): (item: any) => string;
    set formatLabel(a: (item: any) => string);
    textColor: Brush;
    bn: Brush;
    background: Brush;
    bk: Brush;
    outline: Brush;
    bm: Brush;
    leaderBrush: Brush;
    bl: Brush;
    strokeThickness: number;
    y: number;
    o: boolean;
    private n;
    private br;
    get backgroundPadding(): Thickness;
    set backgroundPadding(a: Thickness);
    backgroundPaddingLeft: number;
    v: number;
    backgroundPaddingTop: number;
    x: number;
    backgroundPaddingRight: number;
    w: number;
    backgroundPaddingBottom: number;
    u: number;
    backgroundCornerRadius: number;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CalloutAnnotationWrapper extends Base {
    static $t: Type;
    private a;
    get b(): CalloutAnnotation;
    set b(a: CalloutAnnotation);
    c: LabelCollisionInfo;
    e: number;
    f: number;
    equals(a: any): boolean;
    getHashCode(): number;
}
