import { LegendBase } from "./LegendBase";
import { IChartScaleLegend } from "igniteui-react-core";
import { UIElement } from "igniteui-react-core";
import { TextBlock } from "igniteui-react-core";
import { IScaleLegendSeries } from "igniteui-react-core";
import { LegendBaseView } from "./LegendBaseView";
import { Type } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { Shape } from "igniteui-react-core";
import { GradientData } from "./GradientData";
import { RenderingContext } from "igniteui-react-core";
import { Size } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class ScaleLegend extends LegendBase implements IChartScaleLegend {
    static $t: Type;
    aj(): LegendBaseView;
    a8(a: LegendBaseView): void;
    bd: ScaleLegendView;
    get legendScaleElement(): UIElement;
    get minText(): TextBlock;
    get maxText(): TextBlock;
    constructor();
    bf: number;
    be: number;
    private bb;
    get bc(): IScaleLegendSeries;
    set bc(a: IScaleLegendSeries);
    bi(): void;
    restoreOriginalState(): void;
    private bl;
    bg(a: IScaleLegendSeries): void;
    initializeLegend(a: IScaleLegendSeries): void;
    protected get_isScale(): boolean;
    bh(): void;
}
/**
 * @hidden
 */
export declare class ScaleLegendView extends LegendBaseView {
    static $t: Type;
    constructor(a: ScaleLegend);
    ap: ScaleLegend;
    ba: Shape;
    a6: TextBlock;
    a5: TextBlock;
    a2(): void;
    z(): void;
    a9(): Color;
    aw(): any;
    ay(a: any, b: Color, c: number): void;
    a3(a: Shape, b: boolean, c: any): void;
    protected ao: GradientData;
    protected aq: RenderingContext;
    protected bb: Size;
    ai(a: any): void;
    protected ar: boolean;
    protected az(): void;
    a4(): void;
    private a1;
    au(a: any): number;
    at(a: any): number;
    protected as: number;
    protected a8: Brush;
    private a0;
    a7: Brush;
    al(): void;
}
