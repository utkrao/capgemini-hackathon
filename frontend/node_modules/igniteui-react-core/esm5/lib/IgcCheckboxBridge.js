/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { NativeUIElementBridge } from "./NativeUIElementBridge";
import { runOn, markType } from "./type";
import { NativeUICheckboxChangeEventArgs } from "./NativeUICheckboxChangeEventArgs";
/**
 * @hidden
 */
var IgcCheckboxBridge = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgcCheckboxBridge, _super);
    function IgcCheckboxBridge() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.d = null;
        _this.c = null;
        _this.e = null;
        return _this;
    }
    IgcCheckboxBridge.prototype.addHandler = function (a, b, c, d) {
        switch (c) {
            case 2:
                var e = a;
                this.d = e.listen("igcChange", runOn(this, this.f));
                this.c = d;
                this.e = b;
                break;
        }
    };
    IgcCheckboxBridge.prototype.f = function (a) {
        if (this.c != null) {
            var b = new NativeUICheckboxChangeEventArgs();
            this.c(this.e, b);
        }
    };
    IgcCheckboxBridge.prototype.getValue = function (a, b) {
        switch (b) {
            case 4: return true;
            case 5: return a.getProperty("checked");
        }
        return null;
    };
    IgcCheckboxBridge.prototype.removeHandler = function (a, b, c, d) {
        switch (c) {
            case 2:
                if (this.d != null) {
                    this.d();
                }
                this.c = null;
                this.e = null;
                break;
        }
    };
    IgcCheckboxBridge.prototype.setValue = function (a, b, c) {
        switch (b) {
            case 4: return;
            case 5:
                a.setProperty("checked", c);
                return;
        }
    };
    IgcCheckboxBridge.$t = markType(IgcCheckboxBridge, 'IgcCheckboxBridge', NativeUIElementBridge.$);
    return IgcCheckboxBridge;
}(NativeUIElementBridge));
export { IgcCheckboxBridge };
