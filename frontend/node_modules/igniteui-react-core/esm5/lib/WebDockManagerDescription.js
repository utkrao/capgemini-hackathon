/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var WebDockManagerDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebDockManagerDescription, _super);
    function WebDockManagerDescription() {
        var _this = _super.call(this) || this;
        _this.h = null;
        _this.j = null;
        _this.n = null;
        _this.f = null;
        _this.s = false;
        _this.k = null;
        _this.p = null;
        _this.r = false;
        _this.t = false;
        return _this;
    }
    WebDockManagerDescription.prototype.get_type = function () {
        return "WebDockManager";
    };
    Object.defineProperty(WebDockManagerDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDockManagerDescription.prototype, "layout", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.e("Layout");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDockManagerDescription.prototype, "draggedPane", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.e("DraggedPane");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDockManagerDescription.prototype, "dropPosition", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.e("DropPosition");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDockManagerDescription.prototype, "activePane", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.e("ActivePane");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDockManagerDescription.prototype, "allowMaximize", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.e("AllowMaximize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDockManagerDescription.prototype, "maximizedPane", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.e("MaximizedPane");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDockManagerDescription.prototype, "resourceStrings", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.e("ResourceStrings");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDockManagerDescription.prototype, "allowFloatingPanesResize", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.e("AllowFloatingPanesResize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDockManagerDescription.prototype, "disableKeyboardNavigation", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.e("DisableKeyboardNavigation");
        },
        enumerable: false,
        configurable: true
    });
    WebDockManagerDescription.$t = markType(WebDockManagerDescription, 'WebDockManagerDescription', Description.$);
    return WebDockManagerDescription;
}(Description));
export { WebDockManagerDescription };
