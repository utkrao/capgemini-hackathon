/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ColumnDescriptionMetadata } from "./ColumnDescriptionMetadata";
import { ColumnPinnedChangedEventArgsDescription } from "./ColumnPinnedChangedEventArgsDescription";
/**
 * @hidden
 */
var ColumnPinnedChangedEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ColumnPinnedChangedEventArgsDescriptionMetadata, _super);
    function ColumnPinnedChangedEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ColumnPinnedChangedEventArgsDescriptionMetadata.b = function (a) {
        if (ColumnPinnedChangedEventArgsDescriptionMetadata.a == null) {
            ColumnPinnedChangedEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ColumnPinnedChangedEventArgsDescriptionMetadata.c(ColumnPinnedChangedEventArgsDescriptionMetadata.a);
        }
        if (a.g(ColumnPinnedChangedEventArgsDescriptionMetadata.a)) {
            return;
        }
        a.s(ColumnPinnedChangedEventArgsDescriptionMetadata.a);
        ColumnDescriptionMetadata.d(a);
    };
    ColumnPinnedChangedEventArgsDescriptionMetadata.c = function (a) {
        a.item("Column", "ExportedType:Column");
        a.item("Pinned", "ExportedType:string:PinnedPositions");
        a.item("Pinned@names", "None;Left;Right");
    };
    ColumnPinnedChangedEventArgsDescriptionMetadata.d = function (a) {
        ColumnPinnedChangedEventArgsDescriptionMetadata.b(a);
        a.u("ColumnPinnedChangedEventArgs", function () { return new ColumnPinnedChangedEventArgsDescription(); });
        a.t("ColumnPinnedChangedEventArgs", ColumnPinnedChangedEventArgsDescriptionMetadata.a);
    };
    ColumnPinnedChangedEventArgsDescriptionMetadata.$t = markType(ColumnPinnedChangedEventArgsDescriptionMetadata, 'ColumnPinnedChangedEventArgsDescriptionMetadata');
    ColumnPinnedChangedEventArgsDescriptionMetadata.a = null;
    return ColumnPinnedChangedEventArgsDescriptionMetadata;
}(Base));
export { ColumnPinnedChangedEventArgsDescriptionMetadata };
