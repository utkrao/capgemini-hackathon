/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { GeographicMapSeriesHostDescription } from "./GeographicMapSeriesHostDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var GeographicMarkerSeriesDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(GeographicMarkerSeriesDescription, _super);
    function GeographicMarkerSeriesDescription() {
        var _this = _super.call(this) || this;
        _this.dk = null;
        _this.c8 = 0;
        _this.di = null;
        _this.dg = null;
        _this.dj = null;
        _this.df = null;
        _this.dh = null;
        _this.da = 0;
        _this.de = null;
        _this.dc = null;
        _this.dd = null;
        return _this;
    }
    GeographicMarkerSeriesDescription.prototype.get_type = function () {
        return "GeographicMarkerSeries";
    };
    Object.defineProperty(GeographicMarkerSeriesDescription.prototype, "markerType", {
        get: function () {
            return this.dk;
        },
        set: function (a) {
            this.dk = a;
            this.e("MarkerType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicMarkerSeriesDescription.prototype, "markerThickness", {
        get: function () {
            return this.c8;
        },
        set: function (a) {
            this.c8 = a;
            this.e("MarkerThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicMarkerSeriesDescription.prototype, "markerOutlineMode", {
        get: function () {
            return this.di;
        },
        set: function (a) {
            this.di = a;
            this.e("MarkerOutlineMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicMarkerSeriesDescription.prototype, "markerFillMode", {
        get: function () {
            return this.dg;
        },
        set: function (a) {
            this.dg = a;
            this.e("MarkerFillMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicMarkerSeriesDescription.prototype, "markerTemplateRef", {
        get: function () {
            return this.dj;
        },
        set: function (a) {
            this.dj = a;
            this.e("MarkerTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicMarkerSeriesDescription.prototype, "markerBrush", {
        get: function () {
            return this.df;
        },
        set: function (a) {
            this.df = a;
            this.e("MarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicMarkerSeriesDescription.prototype, "markerOutline", {
        get: function () {
            return this.dh;
        },
        set: function (a) {
            this.dh = a;
            this.e("MarkerOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicMarkerSeriesDescription.prototype, "maximumMarkers", {
        get: function () {
            return this.da;
        },
        set: function (a) {
            this.da = a;
            this.e("MaximumMarkers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicMarkerSeriesDescription.prototype, "actualMarkerTemplateRef", {
        get: function () {
            return this.de;
        },
        set: function (a) {
            this.de = a;
            this.e("ActualMarkerTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicMarkerSeriesDescription.prototype, "actualMarkerBrush", {
        get: function () {
            return this.dc;
        },
        set: function (a) {
            this.dc = a;
            this.e("ActualMarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicMarkerSeriesDescription.prototype, "actualMarkerOutline", {
        get: function () {
            return this.dd;
        },
        set: function (a) {
            this.dd = a;
            this.e("ActualMarkerOutline");
        },
        enumerable: false,
        configurable: true
    });
    GeographicMarkerSeriesDescription.$t = markType(GeographicMarkerSeriesDescription, 'GeographicMarkerSeriesDescription', GeographicMapSeriesHostDescription.$);
    return GeographicMarkerSeriesDescription;
}(GeographicMapSeriesHostDescription));
export { GeographicMarkerSeriesDescription };
