/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var CheckboxListDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CheckboxListDescription, _super);
    function CheckboxListDescription() {
        var _this = _super.call(this) || this;
        _this.f = null;
        _this.g = null;
        _this.ab = null;
        _this.aa = null;
        _this.al = null;
        _this.ad = null;
        _this.ah = null;
        _this.r = 0;
        _this.w = null;
        _this.p = 0;
        _this.x = null;
        _this.y = null;
        _this.ae = null;
        _this.v = null;
        _this.ac = null;
        _this.ag = null;
        _this.af = null;
        _this.ai = null;
        _this.aj = null;
        _this.t = null;
        _this.l = false;
        _this.u = null;
        _this.am = null;
        _this.k = false;
        _this.j = false;
        _this.z = null;
        _this.ak = null;
        return _this;
    }
    CheckboxListDescription.prototype.get_type = function () {
        return "CheckboxList";
    };
    Object.defineProperty(CheckboxListDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "keys", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.e("Keys");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "primaryKey", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            this.g = a;
            this.e("PrimaryKey");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "dataSourceRef", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.e("DataSourceRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "dataMemberPath", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.e("DataMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "selectedMemberPath", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.e("SelectedMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "filterPlaceholderText", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.e("FilterPlaceholderText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "searchInputType", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.e("SearchInputType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "rowHeight", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.e("RowHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "cellFontFamily", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.e("CellFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "cellFontSize", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.e("CellFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "cellFontStyle", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.e("CellFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "cellFontWeight", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.e("CellFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "indexType", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.e("IndexType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "baseTheme", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.e("BaseTheme");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "density", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.e("Density");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "scrollbarStyle", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.e("ScrollbarStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "scrollbarBackground", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.e("ScrollbarBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "selectAllCaption", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.e("SelectAllCaption");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "selectAllCaptionTextColor", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.e("SelectAllCaptionTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "actualSelectAllCaptionTextColor", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.e("ActualSelectAllCaptionTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "showSelectAll", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.e("ShowSelectAll");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "backgroundColor", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.e("BackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "textColor", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.e("TextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "showFilter", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.e("ShowFilter");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "isRowHoverEnabled", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.e("IsRowHoverEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "checkedChangedRef", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.e("CheckedChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "selectAllCheckboxChangedRef", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.e("SelectAllCheckboxChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    CheckboxListDescription.$t = markType(CheckboxListDescription, 'CheckboxListDescription', Description.$);
    return CheckboxListDescription;
}(Description));
export { CheckboxListDescription };
