/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BaseDataSourceDescription } from "./BaseDataSourceDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var VirtualDataSourceDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(VirtualDataSourceDescription, _super);
    function VirtualDataSourceDescription() {
        var _this = _super.call(this) || this;
        _this.ax = false;
        _this.ay = false;
        _this.a4 = 0;
        _this.a3 = 0;
        _this.a2 = 0;
        _this.a8 = null;
        _this.aw = false;
        return _this;
    }
    VirtualDataSourceDescription.prototype.get_type = function () {
        return "VirtualDataSource";
    };
    Object.defineProperty(VirtualDataSourceDescription.prototype, "isSectionCollapsable", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.e("IsSectionCollapsable");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(VirtualDataSourceDescription.prototype, "isSectionExpandedDefault", {
        get: function () {
            return this.ay;
        },
        set: function (a) {
            this.ay = a;
            this.e("IsSectionExpandedDefault");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(VirtualDataSourceDescription.prototype, "pageSizeRequested", {
        get: function () {
            return this.a4;
        },
        set: function (a) {
            this.a4 = a;
            this.e("PageSizeRequested");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(VirtualDataSourceDescription.prototype, "maxCachedPages", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.e("MaxCachedPages");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(VirtualDataSourceDescription.prototype, "actualPageSize", {
        get: function () {
            return this.a2;
        },
        set: function (a) {
            this.a2 = a;
            this.e("ActualPageSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(VirtualDataSourceDescription.prototype, "concurrencyTag", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            this.a8 = a;
            this.e("ConcurrencyTag");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(VirtualDataSourceDescription.prototype, "isBatchingEnabled", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.e("IsBatchingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    VirtualDataSourceDescription.$t = markType(VirtualDataSourceDescription, 'VirtualDataSourceDescription', BaseDataSourceDescription.$);
    return VirtualDataSourceDescription;
}(BaseDataSourceDescription));
export { VirtualDataSourceDescription };
