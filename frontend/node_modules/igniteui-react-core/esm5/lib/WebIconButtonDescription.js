/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { WebButtonBaseDescription } from "./WebButtonBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var WebIconButtonDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebIconButtonDescription, _super);
    function WebIconButtonDescription() {
        var _this = _super.call(this) || this;
        _this.af = null;
        _this.ae = null;
        _this.ac = false;
        _this.ag = null;
        return _this;
    }
    WebIconButtonDescription.prototype.get_type = function () {
        return "WebIconButton";
    };
    Object.defineProperty(WebIconButtonDescription.prototype, "iconName", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.e("IconName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebIconButtonDescription.prototype, "collection", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.e("Collection");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebIconButtonDescription.prototype, "mirrored", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.e("Mirrored");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebIconButtonDescription.prototype, "variant", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.e("Variant");
        },
        enumerable: false,
        configurable: true
    });
    WebIconButtonDescription.$t = markType(WebIconButtonDescription, 'WebIconButtonDescription', WebButtonBaseDescription.$);
    return WebIconButtonDescription;
}(WebButtonBaseDescription));
export { WebIconButtonDescription };
