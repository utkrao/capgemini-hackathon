/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { TimeAxisBaseDescription } from "./TimeAxisBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var TimeXAxisDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(TimeXAxisDescription, _super);
    function TimeXAxisDescription() {
        var _this = _super.call(this) || this;
        _this.d9 = null;
        _this.ef = null;
        _this.eb = null;
        _this.ea = null;
        return _this;
    }
    TimeXAxisDescription.prototype.get_type = function () {
        return "TimeXAxis";
    };
    Object.defineProperty(TimeXAxisDescription.prototype, "breaks", {
        get: function () {
            return this.d9;
        },
        set: function (a) {
            this.d9 = a;
            this.e("Breaks");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TimeXAxisDescription.prototype, "labellingMode", {
        get: function () {
            return this.ef;
        },
        set: function (a) {
            this.ef = a;
            this.e("LabellingMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TimeXAxisDescription.prototype, "labelFormats", {
        get: function () {
            return this.eb;
        },
        set: function (a) {
            this.eb = a;
            this.e("LabelFormats");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TimeXAxisDescription.prototype, "intervals", {
        get: function () {
            return this.ea;
        },
        set: function (a) {
            this.ea = a;
            this.e("Intervals");
        },
        enumerable: false,
        configurable: true
    });
    TimeXAxisDescription.$t = markType(TimeXAxisDescription, 'TimeXAxisDescription', TimeAxisBaseDescription.$);
    return TimeXAxisDescription;
}(TimeAxisBaseDescription));
export { TimeXAxisDescription };
