/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { WebInputBaseDescription } from "./WebInputBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var WebInputDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebInputDescription, _super);
    function WebInputDescription() {
        var _this = _super.call(this) || this;
        _this.at = null;
        _this.ao = null;
        _this.ap = null;
        _this.as = null;
        _this.ad = false;
        _this.ah = 0;
        _this.ag = 0;
        _this.ar = null;
        _this.aq = null;
        _this.ai = 0;
        _this.ac = false;
        _this.am = null;
        _this.an = null;
        return _this;
    }
    WebInputDescription.prototype.get_type = function () {
        return "WebInput";
    };
    Object.defineProperty(WebInputDescription.prototype, "value", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.e("Value");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "displayType", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.e("DisplayType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "inputmode", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.e("Inputmode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "pattern", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.e("Pattern");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "invalid", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.e("Invalid");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "minlength", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.e("Minlength");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "maxlength", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.e("Maxlength");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "min", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.e("Min");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "max", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.e("Max");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "step", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.e("Step");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "autofocus", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.e("Autofocus");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "autocomplete", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.e("Autocomplete");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "changeRef", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.e("ChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    WebInputDescription.$t = markType(WebInputDescription, 'WebInputDescription', WebInputBaseDescription.$);
    return WebInputDescription;
}(WebInputBaseDescription));
export { WebInputDescription };
