/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ToolbarDescription } from "./ToolbarDescription";
/**
 * @hidden
 */
var ToolbarDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolbarDescriptionMetadata, _super);
    function ToolbarDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ToolbarDescriptionMetadata.b = function (a) {
        if (ToolbarDescriptionMetadata.a == null) {
            ToolbarDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ToolbarDescriptionMetadata.c(ToolbarDescriptionMetadata.a);
        }
        if (a.g(ToolbarDescriptionMetadata.a)) {
            return;
        }
        a.s(ToolbarDescriptionMetadata.a);
    };
    ToolbarDescriptionMetadata.c = function (a) {
        a.item("AutoGeneratedActions", "Collection:ToolAction:ToolActionCollection:ToolAction");
        a.item("Actions", "Collection:ToolAction:ToolActionCollection:ToolAction");
        a.item("ActualActions", "Collection:ToolAction:ToolActionCollection:ToolAction");
        a.item("CellFontFamily", "(w:CellFontFamily/FontFamilyTransform,xam:CellFontFamily,wf:CellFontFamily,web:cellTextStyle/FontFamilyTransform)String");
        a.item("CellFontSize", "(w:CellFontSize,xam:CellFontSize,wf:CellFontSize,web:cellTextStyle/FontSizeTransform)Number:double");
        a.item("CellFontStyle", "(w:CellFontStyle/FontStyleTransform,xam:CellFontFamily/FontStyleTransform,wf:CellFontFamily/FontStyleTransform,web:cellTextStyle/FontStyleTransform)String");
        a.item("CellFontWeight", "(w:CellFontWeight/FontWeightTransform,xam:CellFontFamily/FontWeightTransform,wf:CellFontFamily/FontWeightTransform,web:cellTextStyle/FontWeightTransform)String");
        a.item("BackgroundColor", "Brush");
        a.item("TargetRef", "(w:Target,wf:Target)DataRef");
        a.item("TextColor", "Brush");
        a.item("Orientation", "ExportedType:string:ToolbarOrientation");
        a.item("Orientation@names", "Vertical;Horizontal");
    };
    ToolbarDescriptionMetadata.d = function (a) {
        ToolbarDescriptionMetadata.b(a);
        a.u("Toolbar", function () { return new ToolbarDescription(); });
        a.t("Toolbar", ToolbarDescriptionMetadata.a);
    };
    ToolbarDescriptionMetadata.$t = markType(ToolbarDescriptionMetadata, 'ToolbarDescriptionMetadata');
    ToolbarDescriptionMetadata.a = null;
    return ToolbarDescriptionMetadata;
}(Base));
export { ToolbarDescriptionMetadata };
