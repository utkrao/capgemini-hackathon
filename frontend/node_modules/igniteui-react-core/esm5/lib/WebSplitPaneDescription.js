/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { WebDockManagerPaneDescription } from "./WebDockManagerPaneDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var WebSplitPaneDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebSplitPaneDescription, _super);
    function WebSplitPaneDescription() {
        var _this = _super.call(this) || this;
        _this.w = null;
        _this.y = null;
        _this.x = null;
        _this.g = null;
        _this.r = 0;
        _this.i = null;
        _this.q = 0;
        _this.p = 0;
        _this.m = false;
        _this.l = false;
        return _this;
    }
    WebSplitPaneDescription.prototype.get_type = function () {
        return "WebSplitPane";
    };
    Object.defineProperty(WebSplitPaneDescription.prototype, "id", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.e("Id");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebSplitPaneDescription.prototype, "paneType", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.e("PaneType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebSplitPaneDescription.prototype, "orientation", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.e("Orientation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebSplitPaneDescription.prototype, "panes", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            this.g = a;
            this.e("Panes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebSplitPaneDescription.prototype, "size", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.e("Size");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebSplitPaneDescription.prototype, "floatingLocation", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.e("FloatingLocation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebSplitPaneDescription.prototype, "floatingWidth", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.e("FloatingWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebSplitPaneDescription.prototype, "floatingHeight", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.e("FloatingHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebSplitPaneDescription.prototype, "floatingResizable", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.e("FloatingResizable");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebSplitPaneDescription.prototype, "allowEmpty", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.e("AllowEmpty");
        },
        enumerable: false,
        configurable: true
    });
    WebSplitPaneDescription.$t = markType(WebSplitPaneDescription, 'WebSplitPaneDescription', WebDockManagerPaneDescription.$);
    WebSplitPaneDescription.__marshalByValue = true;
    WebSplitPaneDescription.__marshalByValueAlias = "SplitPane";
    return WebSplitPaneDescription;
}(WebDockManagerPaneDescription));
export { WebSplitPaneDescription };
