/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { FormatSummaryTextEventArgsDescriptionMetadata } from "./FormatSummaryTextEventArgsDescriptionMetadata";
import { ProvideCalculatorEventArgsDescriptionMetadata } from "./ProvideCalculatorEventArgsDescriptionMetadata";
import { ColumnSummaryDescriptionDescription } from "./ColumnSummaryDescriptionDescription";
/**
 * @hidden
 */
var ColumnSummaryDescriptionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ColumnSummaryDescriptionDescriptionMetadata, _super);
    function ColumnSummaryDescriptionDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ColumnSummaryDescriptionDescriptionMetadata.b = function (a) {
        if (ColumnSummaryDescriptionDescriptionMetadata.a == null) {
            ColumnSummaryDescriptionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ColumnSummaryDescriptionDescriptionMetadata.c(ColumnSummaryDescriptionDescriptionMetadata.a);
        }
        if (a.g(ColumnSummaryDescriptionDescriptionMetadata.a)) {
            return;
        }
        a.s(ColumnSummaryDescriptionDescriptionMetadata.a);
        FormatSummaryTextEventArgsDescriptionMetadata.d(a);
        ProvideCalculatorEventArgsDescriptionMetadata.d(a);
    };
    ColumnSummaryDescriptionDescriptionMetadata.c = function (a) {
        a.item("Field", "String");
        a.item("Operand", "ExportedType:string:SummaryOperand");
        a.item("Operand@names", "Min;Max;Sum;Average;Count;Custom");
        a.item("CalculatorDisplayName", "String");
        a.item("DisplayName", "String");
        a.item("ValueFormat", "String");
        a.item("ValueFormatSpecifiers", "Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier");
        a.item("DisplayFormat", "String");
        a.item("DisplayFormatSpecifiers", "Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier");
        a.item("MaxFractionDigits", "Number:int");
        a.item("FormatTextRef", "EventRef::formatText");
        a.item("ProvideCalculatorRef", "EventRef::provideCalculator");
    };
    ColumnSummaryDescriptionDescriptionMetadata.d = function (a) {
        ColumnSummaryDescriptionDescriptionMetadata.b(a);
        a.u("ColumnSummaryDescription", function () { return new ColumnSummaryDescriptionDescription(); });
        a.t("ColumnSummaryDescription", ColumnSummaryDescriptionDescriptionMetadata.a);
    };
    ColumnSummaryDescriptionDescriptionMetadata.$t = markType(ColumnSummaryDescriptionDescriptionMetadata, 'ColumnSummaryDescriptionDescriptionMetadata');
    ColumnSummaryDescriptionDescriptionMetadata.a = null;
    return ColumnSummaryDescriptionDescriptionMetadata;
}(Base));
export { ColumnSummaryDescriptionDescriptionMetadata };
