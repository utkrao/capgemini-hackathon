/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { CategoryAxisBaseDescription } from "./CategoryAxisBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var TimeAxisBaseDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(TimeAxisBaseDescription, _super);
    function TimeAxisBaseDescription() {
        var _this = _super.call(this) || this;
        _this.d5 = null;
        _this.dt = false;
        _this.dw = new Date();
        _this.dv = new Date();
        _this.dy = new Date();
        _this.dx = new Date();
        _this.d4 = null;
        _this.d3 = null;
        return _this;
    }
    TimeAxisBaseDescription.prototype.get_type = function () {
        return "TimeAxisBase";
    };
    Object.defineProperty(TimeAxisBaseDescription.prototype, "dateTimeMemberPath", {
        get: function () {
            return this.d5;
        },
        set: function (a) {
            this.d5 = a;
            this.e("DateTimeMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TimeAxisBaseDescription.prototype, "isDataPreSorted", {
        get: function () {
            return this.dt;
        },
        set: function (a) {
            this.dt = a;
            this.e("IsDataPreSorted");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TimeAxisBaseDescription.prototype, "actualMinimumValue", {
        get: function () {
            return this.dw;
        },
        set: function (a) {
            this.dw = a;
            this.e("ActualMinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TimeAxisBaseDescription.prototype, "actualMaximumValue", {
        get: function () {
            return this.dv;
        },
        set: function (a) {
            this.dv = a;
            this.e("ActualMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TimeAxisBaseDescription.prototype, "minimumValue", {
        get: function () {
            return this.dy;
        },
        set: function (a) {
            this.dy = a;
            this.e("MinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TimeAxisBaseDescription.prototype, "maximumValue", {
        get: function () {
            return this.dx;
        },
        set: function (a) {
            this.dx = a;
            this.e("MaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TimeAxisBaseDescription.prototype, "actualMinimumValueChangeRef", {
        get: function () {
            return this.d4;
        },
        set: function (a) {
            this.d4 = a;
            this.e("ActualMinimumValueChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TimeAxisBaseDescription.prototype, "actualMaximumValueChangeRef", {
        get: function () {
            return this.d3;
        },
        set: function (a) {
            this.d3 = a;
            this.e("ActualMaximumValueChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    TimeAxisBaseDescription.$t = markType(TimeAxisBaseDescription, 'TimeAxisBaseDescription', CategoryAxisBaseDescription.$);
    return TimeAxisBaseDescription;
}(CategoryAxisBaseDescription));
export { TimeAxisBaseDescription };
