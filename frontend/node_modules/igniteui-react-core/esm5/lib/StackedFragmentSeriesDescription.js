/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var StackedFragmentSeriesDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedFragmentSeriesDescription, _super);
    function StackedFragmentSeriesDescription() {
        var _this = _super.call(this) || this;
        _this.b6 = null;
        _this.b5 = null;
        _this.bn = null;
        _this.j = false;
        _this.f = false;
        _this.an = 0;
        _this.ac = 0;
        _this.cl = null;
        _this.bz = null;
        _this.m = false;
        _this.i = false;
        _this.ao = 0;
        _this.ad = 0;
        _this.ap = 0;
        _this.ae = 0;
        _this.b9 = null;
        _this.bq = null;
        _this.ca = null;
        _this.br = null;
        _this.cb = null;
        _this.bs = null;
        _this.b8 = null;
        _this.b7 = null;
        _this.bp = null;
        _this.bo = null;
        _this.cc = null;
        _this.bt = null;
        _this.cd = null;
        _this.bu = null;
        _this.ce = null;
        _this.bv = null;
        _this.cf = null;
        _this.bw = null;
        _this.cg = null;
        _this.ak = 0;
        _this.z = 0;
        _this.ch = null;
        _this.bx = null;
        _this.ag = 0;
        _this.v = 0;
        _this.ai = 0;
        _this.x = 0;
        _this.ci = null;
        _this.by = null;
        _this.ah = 0;
        _this.w = 0;
        _this.al = 0;
        _this.aa = 0;
        _this.g = false;
        _this.k = false;
        _this.am = 0;
        _this.ab = 0;
        _this.aq = 0;
        _this.af = 0;
        _this.aj = 0;
        _this.y = 0;
        _this.bl = null;
        _this.cm = null;
        _this.bf = 0;
        _this.bg = 0;
        _this.cn = null;
        _this.co = null;
        _this.l = false;
        _this.cp = null;
        _this.h = false;
        _this.be = 0;
        _this.b2 = null;
        _this.b3 = null;
        _this.b1 = null;
        _this.b0 = null;
        _this.bd = 0;
        _this.cs = null;
        _this.cq = null;
        _this.cr = null;
        _this.ct = null;
        _this.b4 = null;
        _this.cj = null;
        _this.ck = null;
        return _this;
    }
    StackedFragmentSeriesDescription.prototype.get_type = function () {
        return "StackedFragmentSeries";
    };
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "dataSourceRef", {
        get: function () {
            return this.b6;
        },
        set: function (a) {
            this.b6 = a;
            this.e("DataSourceRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "brush", {
        get: function () {
            return this.b5;
        },
        set: function (a) {
            this.b5 = a;
            this.e("Brush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualBrush", {
        get: function () {
            return this.bn;
        },
        set: function (a) {
            this.bn = a;
            this.e("ActualBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "isDropShadowEnabled", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.e("IsDropShadowEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualIsDropShadowEnabled", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.e("ActualIsDropShadowEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "shadowBlur", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.e("ShadowBlur");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualShadowBlur", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.e("ActualShadowBlur");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "shadowColor", {
        get: function () {
            return this.cl;
        },
        set: function (a) {
            this.cl = a;
            this.e("ShadowColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualShadowColor", {
        get: function () {
            return this.bz;
        },
        set: function (a) {
            this.bz = a;
            this.e("ActualShadowColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "useSingleShadow", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.e("UseSingleShadow");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualUseSingleShadow", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.e("ActualUseSingleShadow");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "shadowOffsetX", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.e("ShadowOffsetX");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualShadowOffsetX", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.e("ActualShadowOffsetX");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "shadowOffsetY", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.e("ShadowOffsetY");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualShadowOffsetY", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.e("ActualShadowOffsetY");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "legendItemBadgeTemplateRef", {
        get: function () {
            return this.b9;
        },
        set: function (a) {
            this.b9 = a;
            this.e("LegendItemBadgeTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualLegendItemBadgeTemplateRef", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            this.bq = a;
            this.e("ActualLegendItemBadgeTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "legendItemTemplateRef", {
        get: function () {
            return this.ca;
        },
        set: function (a) {
            this.ca = a;
            this.e("LegendItemTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualLegendItemTemplateRef", {
        get: function () {
            return this.br;
        },
        set: function (a) {
            this.br = a;
            this.e("ActualLegendItemTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "legendItemVisibility", {
        get: function () {
            return this.cb;
        },
        set: function (a) {
            this.cb = a;
            this.e("LegendItemVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualLegendItemVisibility", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            this.bs = a;
            this.e("ActualLegendItemVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "legendItemBadgeShape", {
        get: function () {
            return this.b8;
        },
        set: function (a) {
            this.b8 = a;
            this.e("LegendItemBadgeShape");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "legendItemBadgeMode", {
        get: function () {
            return this.b7;
        },
        set: function (a) {
            this.b7 = a;
            this.e("LegendItemBadgeMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualLegendItemBadgeShape", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            this.bp = a;
            this.e("ActualLegendItemBadgeShape");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualLegendItemBadgeMode", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            this.bo = a;
            this.e("ActualLegendItemBadgeMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "markerBrush", {
        get: function () {
            return this.cc;
        },
        set: function (a) {
            this.cc = a;
            this.e("MarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualMarkerBrush", {
        get: function () {
            return this.bt;
        },
        set: function (a) {
            this.bt = a;
            this.e("ActualMarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "markerOutline", {
        get: function () {
            return this.cd;
        },
        set: function (a) {
            this.cd = a;
            this.e("MarkerOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualMarkerOutline", {
        get: function () {
            return this.bu;
        },
        set: function (a) {
            this.bu = a;
            this.e("ActualMarkerOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "markerTemplateRef", {
        get: function () {
            return this.ce;
        },
        set: function (a) {
            this.ce = a;
            this.e("MarkerTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualMarkerTemplateRef", {
        get: function () {
            return this.bv;
        },
        set: function (a) {
            this.bv = a;
            this.e("ActualMarkerTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "markerType", {
        get: function () {
            return this.cf;
        },
        set: function (a) {
            this.cf = a;
            this.e("MarkerType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualMarkerType", {
        get: function () {
            return this.bw;
        },
        set: function (a) {
            this.bw = a;
            this.e("ActualMarkerType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "name", {
        get: function () {
            return this.cg;
        },
        set: function (a) {
            this.cg = a;
            this.e("Name");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "opacity", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.e("Opacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualOpacity", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.e("ActualOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "outline", {
        get: function () {
            return this.ch;
        },
        set: function (a) {
            this.ch = a;
            this.e("Outline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualOutline", {
        get: function () {
            return this.bx;
        },
        set: function (a) {
            this.bx = a;
            this.e("ActualOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "areaFillOpacity", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.e("AreaFillOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualAreaFillOpacity", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.e("ActualAreaFillOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "markerFillOpacity", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.e("MarkerFillOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualMarkerFillOpacity", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.e("ActualMarkerFillOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "outlineMode", {
        get: function () {
            return this.ci;
        },
        set: function (a) {
            this.ci = a;
            this.e("OutlineMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualOutlineMode", {
        get: function () {
            return this.by;
        },
        set: function (a) {
            this.by = a;
            this.e("ActualOutlineMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "highlightingFadeOpacity", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.e("HighlightingFadeOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualHighlightingFadeOpacity", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.e("ActualHighlightingFadeOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "radiusX", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.e("RadiusX");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualRadiusX", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.e("ActualRadiusX");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualIsSplineShapePartOfRange", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            this.g = a;
            this.e("ActualIsSplineShapePartOfRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "isSplineShapePartOfRange", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.e("IsSplineShapePartOfRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "radiusY", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.e("RadiusY");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualRadiusY", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.e("ActualRadiusY");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "thickness", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.e("Thickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualThickness", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.e("ActualThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "markerThickness", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.e("MarkerThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualMarkerThickness", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.e("ActualMarkerThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "title", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            this.bl = a;
            this.e("Title");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "transitionEasingFunctionRef", {
        get: function () {
            return this.cm;
        },
        set: function (a) {
            this.cm = a;
            this.e("TransitionEasingFunctionRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "transitionDuration", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.e("TransitionDuration");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "transitionInDuration", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
            this.e("TransitionInDuration");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "transitionInEasingFunctionRef", {
        get: function () {
            return this.cn;
        },
        set: function (a) {
            this.cn = a;
            this.e("TransitionInEasingFunctionRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "transitionInMode", {
        get: function () {
            return this.co;
        },
        set: function (a) {
            this.co = a;
            this.e("TransitionInMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "isTransitionInEnabled", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.e("IsTransitionInEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "transitionInSpeedType", {
        get: function () {
            return this.cp;
        },
        set: function (a) {
            this.cp = a;
            this.e("TransitionInSpeedType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualIsTransitionInEnabled", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.e("ActualIsTransitionInEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualTransitionInDuration", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            this.be = a;
            this.e("ActualTransitionInDuration");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualTransitionInMode", {
        get: function () {
            return this.b2;
        },
        set: function (a) {
            this.b2 = a;
            this.e("ActualTransitionInMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualTransitionInSpeedType", {
        get: function () {
            return this.b3;
        },
        set: function (a) {
            this.b3 = a;
            this.e("ActualTransitionInSpeedType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualTransitionInEasingFunctionRef", {
        get: function () {
            return this.b1;
        },
        set: function (a) {
            this.b1 = a;
            this.e("ActualTransitionInEasingFunctionRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualTransitionEasingFunctionRef", {
        get: function () {
            return this.b0;
        },
        set: function (a) {
            this.b0 = a;
            this.e("ActualTransitionEasingFunctionRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualTransitionDuration", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.e("ActualTransitionDuration");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "valueMemberPath", {
        get: function () {
            return this.cs;
        },
        set: function (a) {
            this.cs = a;
            this.e("ValueMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "valueMemberAsLegendLabel", {
        get: function () {
            return this.cq;
        },
        set: function (a) {
            this.cq = a;
            this.e("ValueMemberAsLegendLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "valueMemberAsLegendUnit", {
        get: function () {
            return this.cr;
        },
        set: function (a) {
            this.cr = a;
            this.e("ValueMemberAsLegendUnit");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "visibility", {
        get: function () {
            return this.ct;
        },
        set: function (a) {
            this.ct = a;
            this.e("Visibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "actualVisibility", {
        get: function () {
            return this.b4;
        },
        set: function (a) {
            this.b4 = a;
            this.e("ActualVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "parentOrLocalBrush", {
        get: function () {
            return this.cj;
        },
        set: function (a) {
            this.cj = a;
            this.e("ParentOrLocalBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StackedFragmentSeriesDescription.prototype, "propertyUpdatedRef", {
        get: function () {
            return this.ck;
        },
        set: function (a) {
            this.ck = a;
            this.e("PropertyUpdatedRef");
        },
        enumerable: false,
        configurable: true
    });
    StackedFragmentSeriesDescription.$t = markType(StackedFragmentSeriesDescription, 'StackedFragmentSeriesDescription', Description.$);
    return StackedFragmentSeriesDescription;
}(Description));
export { StackedFragmentSeriesDescription };
