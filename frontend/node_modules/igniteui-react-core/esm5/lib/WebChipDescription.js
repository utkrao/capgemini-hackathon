/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var WebChipDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebChipDescription, _super);
    function WebChipDescription() {
        var _this = _super.call(this) || this;
        _this.f = false;
        _this.g = false;
        _this.h = false;
        _this.i = false;
        _this.q = null;
        _this.p = null;
        _this.n = null;
        _this.o = null;
        return _this;
    }
    WebChipDescription.prototype.get_type = function () {
        return "WebChip";
    };
    Object.defineProperty(WebChipDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebChipDescription.prototype, "disabled", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.e("Disabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebChipDescription.prototype, "removable", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            this.g = a;
            this.e("Removable");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebChipDescription.prototype, "selectable", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.e("Selectable");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebChipDescription.prototype, "selected", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.e("Selected");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebChipDescription.prototype, "variant", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.e("Variant");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebChipDescription.prototype, "size", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.e("Size");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebChipDescription.prototype, "removeRef", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.e("RemoveRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebChipDescription.prototype, "selectRef", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.e("SelectRef");
        },
        enumerable: false,
        configurable: true
    });
    WebChipDescription.$t = markType(WebChipDescription, 'WebChipDescription', Description.$);
    return WebChipDescription;
}(Description));
export { WebChipDescription };
