/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { NativeUIComponent } from "./NativeUIComponent";
import { NativeUIDisplayDensity_$type } from "./NativeUIDisplayDensity";
import { enumGetBox, EnumUtil, markType } from "./type";
/**
 * @hidden
 */
var NativeUIButton = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(NativeUIButton, _super);
    function NativeUIButton() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.at = null;
        return _this;
    }
    NativeUIButton.prototype.get_c = function () {
        return 1;
    };
    Object.defineProperty(NativeUIButton.prototype, "av", {
        get: function () {
            var a = this.o(1);
            return a == null ? 1 : EnumUtil.getEnumValue(NativeUIDisplayDensity_$type, a);
        },
        set: function (a) {
            this.af(1, enumGetBox(NativeUIDisplayDensity_$type, a));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUIButton.prototype, "aw", {
        get: function () {
            var a = this.o(3);
            return a;
        },
        set: function (a) {
            this.af(3, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUIButton.prototype, "au", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            var b = this.at;
            this.at = a;
            if (this.at != null) {
                this.x(1, this.at);
            }
            else {
                this.ad(1, b);
            }
        },
        enumerable: false,
        configurable: true
    });
    NativeUIButton.$t = markType(NativeUIButton, 'NativeUIButton', NativeUIComponent.$);
    return NativeUIButton;
}(NativeUIComponent));
export { NativeUIButton };
