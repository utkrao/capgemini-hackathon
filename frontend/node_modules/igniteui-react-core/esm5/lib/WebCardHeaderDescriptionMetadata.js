/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebCardHeaderDescription } from "./WebCardHeaderDescription";
/**
 * @hidden
 */
var WebCardHeaderDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebCardHeaderDescriptionMetadata, _super);
    function WebCardHeaderDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebCardHeaderDescriptionMetadata.b = function (a) {
        if (WebCardHeaderDescriptionMetadata.a == null) {
            WebCardHeaderDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebCardHeaderDescriptionMetadata.c(WebCardHeaderDescriptionMetadata.a);
        }
        if (a.g(WebCardHeaderDescriptionMetadata.a)) {
            return;
        }
        a.s(WebCardHeaderDescriptionMetadata.a);
    };
    WebCardHeaderDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:CardHeader");
    };
    WebCardHeaderDescriptionMetadata.d = function (a) {
        WebCardHeaderDescriptionMetadata.b(a);
        a.u("WebCardHeader", function () { return new WebCardHeaderDescription(); });
        a.t("WebCardHeader", WebCardHeaderDescriptionMetadata.a);
    };
    WebCardHeaderDescriptionMetadata.$t = markType(WebCardHeaderDescriptionMetadata, 'WebCardHeaderDescriptionMetadata');
    WebCardHeaderDescriptionMetadata.a = null;
    return WebCardHeaderDescriptionMetadata;
}(Base));
export { WebCardHeaderDescriptionMetadata };
