/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { MarkerSeriesDescription } from "./MarkerSeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var ScatterBaseDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ScatterBaseDescription, _super);
    function ScatterBaseDescription() {
        var _this = _super.call(this) || this;
        _this.eb = null;
        _this.ef = null;
        _this.ee = null;
        _this.ei = null;
        _this.ec = null;
        _this.eg = null;
        _this.ed = null;
        _this.eh = null;
        _this.ea = null;
        _this.d9 = null;
        _this.d4 = null;
        _this.dt = 0;
        _this.dx = 0;
        _this.d8 = null;
        _this.dy = 0;
        _this.dw = 0;
        _this.d7 = null;
        _this.dv = 0;
        _this.d3 = null;
        _this.dq = false;
        _this.dp = false;
        _this.d6 = null;
        _this.d5 = null;
        return _this;
    }
    ScatterBaseDescription.prototype.get_type = function () {
        return "ScatterBase";
    };
    Object.defineProperty(ScatterBaseDescription.prototype, "xAxisRef", {
        get: function () {
            return this.eb;
        },
        set: function (a) {
            this.eb = a;
            this.e("XAxisRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "yAxisRef", {
        get: function () {
            return this.ef;
        },
        set: function (a) {
            this.ef = a;
            this.e("YAxisRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "xMemberPath", {
        get: function () {
            return this.ee;
        },
        set: function (a) {
            this.ee = a;
            this.e("XMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "yMemberPath", {
        get: function () {
            return this.ei;
        },
        set: function (a) {
            this.ei = a;
            this.e("YMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "xMemberAsLegendLabel", {
        get: function () {
            return this.ec;
        },
        set: function (a) {
            this.ec = a;
            this.e("XMemberAsLegendLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "yMemberAsLegendLabel", {
        get: function () {
            return this.eg;
        },
        set: function (a) {
            this.eg = a;
            this.e("YMemberAsLegendLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "xMemberAsLegendUnit", {
        get: function () {
            return this.ed;
        },
        set: function (a) {
            this.ed = a;
            this.e("XMemberAsLegendUnit");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "yMemberAsLegendUnit", {
        get: function () {
            return this.eh;
        },
        set: function (a) {
            this.eh = a;
            this.e("YMemberAsLegendUnit");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "trendLineType", {
        get: function () {
            return this.ea;
        },
        set: function (a) {
            this.ea = a;
            this.e("TrendLineType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "trendLineBrush", {
        get: function () {
            return this.d9;
        },
        set: function (a) {
            this.d9 = a;
            this.e("TrendLineBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "actualTrendLineBrush", {
        get: function () {
            return this.d4;
        },
        set: function (a) {
            this.d4 = a;
            this.e("ActualTrendLineBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "trendLineThickness", {
        get: function () {
            return this.dt;
        },
        set: function (a) {
            this.dt = a;
            this.e("TrendLineThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "trendLinePeriod", {
        get: function () {
            return this.dx;
        },
        set: function (a) {
            this.dx = a;
            this.e("TrendLinePeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "markerCollisionAvoidance", {
        get: function () {
            return this.d8;
        },
        set: function (a) {
            this.d8 = a;
            this.e("MarkerCollisionAvoidance");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "trendLineZIndex", {
        get: function () {
            return this.dy;
        },
        set: function (a) {
            this.dy = a;
            this.e("TrendLineZIndex");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "maximumMarkers", {
        get: function () {
            return this.dw;
        },
        set: function (a) {
            this.dw = a;
            this.e("MaximumMarkers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "itemSearchMode", {
        get: function () {
            return this.d7;
        },
        set: function (a) {
            this.d7 = a;
            this.e("ItemSearchMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "itemSearchThreshold", {
        get: function () {
            return this.dv;
        },
        set: function (a) {
            this.dv = a;
            this.e("ItemSearchThreshold");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "actualItemSearchMode", {
        get: function () {
            return this.d3;
        },
        set: function (a) {
            this.d3 = a;
            this.e("ActualItemSearchMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "isCustomScatterStyleAllowed", {
        get: function () {
            return this.dq;
        },
        set: function (a) {
            this.dq = a;
            this.e("IsCustomScatterStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "isCustomScatterMarkerStyleAllowed", {
        get: function () {
            return this.dp;
        },
        set: function (a) {
            this.dp = a;
            this.e("IsCustomScatterMarkerStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "assigningScatterStyleRef", {
        get: function () {
            return this.d6;
        },
        set: function (a) {
            this.d6 = a;
            this.e("AssigningScatterStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "assigningScatterMarkerStyleRef", {
        get: function () {
            return this.d5;
        },
        set: function (a) {
            this.d5 = a;
            this.e("AssigningScatterMarkerStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    ScatterBaseDescription.$t = markType(ScatterBaseDescription, 'ScatterBaseDescription', MarkerSeriesDescription.$);
    return ScatterBaseDescription;
}(MarkerSeriesDescription));
export { ScatterBaseDescription };
