/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { FormatGroupTextEventArgsDescriptionMetadata } from "./FormatGroupTextEventArgsDescriptionMetadata";
import { ColumnSortDescriptionDescriptionMetadata } from "./ColumnSortDescriptionDescriptionMetadata";
import { ColumnGroupDescriptionDescription } from "./ColumnGroupDescriptionDescription";
/**
 * @hidden
 */
var ColumnGroupDescriptionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ColumnGroupDescriptionDescriptionMetadata, _super);
    function ColumnGroupDescriptionDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ColumnGroupDescriptionDescriptionMetadata.b = function (a) {
        if (ColumnGroupDescriptionDescriptionMetadata.a == null) {
            ColumnGroupDescriptionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ColumnGroupDescriptionDescriptionMetadata.c(ColumnGroupDescriptionDescriptionMetadata.a);
        }
        if (a.g(ColumnGroupDescriptionDescriptionMetadata.a)) {
            return;
        }
        a.s(ColumnGroupDescriptionDescriptionMetadata.a);
        FormatGroupTextEventArgsDescriptionMetadata.d(a);
    };
    ColumnGroupDescriptionDescriptionMetadata.c = function (a) {
        ColumnSortDescriptionDescriptionMetadata.c(a);
        a.item("ValueFormat", "String");
        a.item("ValueFormatSpecifiers", "Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier");
        a.item("DisplayFormat", "String");
        a.item("DisplayFormatSpecifiers", "Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier");
        a.item("DisplayName", "String");
        a.item("FormatTextRef", "EventRef::formatText");
    };
    ColumnGroupDescriptionDescriptionMetadata.d = function (a) {
        ColumnGroupDescriptionDescriptionMetadata.b(a);
        a.u("ColumnGroupDescription", function () { return new ColumnGroupDescriptionDescription(); });
        a.t("ColumnGroupDescription", ColumnGroupDescriptionDescriptionMetadata.a);
    };
    ColumnGroupDescriptionDescriptionMetadata.$t = markType(ColumnGroupDescriptionDescriptionMetadata, 'ColumnGroupDescriptionDescriptionMetadata');
    ColumnGroupDescriptionDescriptionMetadata.a = null;
    return ColumnGroupDescriptionDescriptionMetadata;
}(Base));
export { ColumnGroupDescriptionDescriptionMetadata };
