import { DataLegendSeriesGroup_$type } from "./DataLegendSeriesGroup";
import { DataLegendSeriesContext as DataLegendSeriesContext_internal } from "./DataLegendSeriesContext";
import { ensureEnum } from "./componentUtil";
/**
 * Represent info about series values
*/
var IgrDataLegendSeriesContext = /** @class */ /*@__PURE__*/ (function () {
    function IgrDataLegendSeriesContext() {
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    }
    IgrDataLegendSeriesContext.prototype.createImplementation = function () {
        return new DataLegendSeriesContext_internal();
    };
    Object.defineProperty(IgrDataLegendSeriesContext.prototype, "i", {
        /**
         * @hidden
         */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    IgrDataLegendSeriesContext.prototype.onImplementationCreated = function () {
    };
    IgrDataLegendSeriesContext.prototype._provideImplementation = function (i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    };
    Object.defineProperty(IgrDataLegendSeriesContext.prototype, "seriesGroup", {
        /**
         * Gets a group of series that the current series belongs to
        */
        get: function () {
            return this.i.b;
        },
        set: function (v) {
            this.i.b = ensureEnum(DataLegendSeriesGroup_$type, v);
        },
        enumerable: false,
        configurable: true
    });
    IgrDataLegendSeriesContext.prototype.findByName = function (name) {
        return null;
    };
    /**
     * Creates an instance of DataLegendSeriesContext
    
    */
    IgrDataLegendSeriesContext.prototype.getSeriesValueInfo = function (type) {
        var iv = this.i.c((type == null ? null : type));
        return (iv == null ? null : iv.externalObject);
    };
    /**
     * Gets value info for the series value type
    
    */
    IgrDataLegendSeriesContext.prototype.getSeriesValue = function (type) {
        var iv = this.i.g((type == null ? null : type));
        return (iv);
    };
    IgrDataLegendSeriesContext.prototype.setSeriesValue = function (type, value) {
        this.i.k((type == null ? null : type), value);
    };
    IgrDataLegendSeriesContext.prototype.setSeriesValueInfo = function (type, valueInfo) {
        this.i.l((type == null ? null : type), (valueInfo == null ? null : valueInfo.i));
    };
    /**
     * Gets all values that a series renders at the current data point
     * For example, Open, High, Low, Close for Financial Series
    
    */
    IgrDataLegendSeriesContext.prototype.getSeriesValues = function () {
        var iv = this.i.a();
        return (iv);
    };
    return IgrDataLegendSeriesContext;
}());
export { IgrDataLegendSeriesContext };
