/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { SeriesDescriptionMetadata } from "./SeriesDescriptionMetadata";
import { HighlightingInfoDescription } from "./HighlightingInfoDescription";
/**
 * @hidden
 */
var HighlightingInfoDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(HighlightingInfoDescriptionMetadata, _super);
    function HighlightingInfoDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HighlightingInfoDescriptionMetadata.b = function (a) {
        if (HighlightingInfoDescriptionMetadata.a == null) {
            HighlightingInfoDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            HighlightingInfoDescriptionMetadata.c(HighlightingInfoDescriptionMetadata.a);
        }
        if (a.g(HighlightingInfoDescriptionMetadata.a)) {
            return;
        }
        a.s(HighlightingInfoDescriptionMetadata.a);
        SeriesDescriptionMetadata.d(a);
    };
    HighlightingInfoDescriptionMetadata.c = function (a) {
        a.item("StartIndex", "Number:int");
        a.item("EndIndex", "Number:int");
        a.item("State", "ExportedType:string:HighlightingState");
        a.item("State@names", "Outward;Inward;Static");
        a.item("Progress", "Number:double");
        a.item("IsMarker", "Boolean");
        a.item("IsFullRange", "Boolean");
        a.item("IsExclusive", "Boolean");
        a.item("Series", "ExportedType:Series");
    };
    HighlightingInfoDescriptionMetadata.d = function (a) {
        HighlightingInfoDescriptionMetadata.b(a);
        a.u("HighlightingInfo", function () { return new HighlightingInfoDescription(); });
        a.t("HighlightingInfo", HighlightingInfoDescriptionMetadata.a);
    };
    HighlightingInfoDescriptionMetadata.$t = markType(HighlightingInfoDescriptionMetadata, 'HighlightingInfoDescriptionMetadata');
    HighlightingInfoDescriptionMetadata.a = null;
    return HighlightingInfoDescriptionMetadata;
}(Base));
export { HighlightingInfoDescriptionMetadata };
