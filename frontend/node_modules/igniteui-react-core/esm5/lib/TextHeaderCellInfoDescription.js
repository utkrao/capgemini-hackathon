/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { TextCellInfoDescription } from "./TextCellInfoDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var TextHeaderCellInfoDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(TextHeaderCellInfoDescription, _super);
    function TextHeaderCellInfoDescription() {
        var _this = _super.call(this) || this;
        _this.fo = false;
        _this.fu = null;
        _this.fr = null;
        _this.ft = null;
        _this.fs = null;
        return _this;
    }
    TextHeaderCellInfoDescription.prototype.get_type = function () {
        return "TextHeaderCellInfo";
    };
    Object.defineProperty(TextHeaderCellInfoDescription.prototype, "isColumnOptionsEnabled", {
        get: function () {
            return this.fo;
        },
        set: function (a) {
            this.fo = a;
            this.e("IsColumnOptionsEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TextHeaderCellInfoDescription.prototype, "sortIndicatorStyle", {
        get: function () {
            return this.fu;
        },
        set: function (a) {
            this.fu = a;
            this.e("SortIndicatorStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TextHeaderCellInfoDescription.prototype, "columnOptionsIconAlignment", {
        get: function () {
            return this.fr;
        },
        set: function (a) {
            this.fr = a;
            this.e("ColumnOptionsIconAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TextHeaderCellInfoDescription.prototype, "columnOptionsIconColor", {
        get: function () {
            return this.ft;
        },
        set: function (a) {
            this.ft = a;
            this.e("ColumnOptionsIconColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TextHeaderCellInfoDescription.prototype, "columnOptionsIconBehavior", {
        get: function () {
            return this.fs;
        },
        set: function (a) {
            this.fs = a;
            this.e("ColumnOptionsIconBehavior");
        },
        enumerable: false,
        configurable: true
    });
    TextHeaderCellInfoDescription.$t = markType(TextHeaderCellInfoDescription, 'TextHeaderCellInfoDescription', TextCellInfoDescription.$);
    TextHeaderCellInfoDescription.__marshalByValue2 = true;
    TextHeaderCellInfoDescription.__marshalByValueAlias2 = "TextHeaderCellModel";
    return TextHeaderCellInfoDescription;
}(TextCellInfoDescription));
export { TextHeaderCellInfoDescription };
