import { Description } from "./Description";
import { PrimaryKeyValueDescription } from "./PrimaryKeyValueDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class CheckboxListDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private f;
    get keys(): PrimaryKeyValueDescription[];
    set keys(a: PrimaryKeyValueDescription[]);
    private g;
    get primaryKey(): string[];
    set primaryKey(a: string[]);
    private ab;
    get dataSourceRef(): string;
    set dataSourceRef(a: string);
    private aa;
    get dataMemberPath(): string;
    set dataMemberPath(a: string);
    private al;
    get selectedMemberPath(): string;
    set selectedMemberPath(a: string);
    private ad;
    get filterPlaceholderText(): string;
    set filterPlaceholderText(a: string);
    private ah;
    get searchInputType(): string;
    set searchInputType(a: string);
    private r;
    get rowHeight(): number;
    set rowHeight(a: number);
    private w;
    get cellFontFamily(): string;
    set cellFontFamily(a: string);
    private p;
    get cellFontSize(): number;
    set cellFontSize(a: number);
    private x;
    get cellFontStyle(): string;
    set cellFontStyle(a: string);
    private y;
    get cellFontWeight(): string;
    set cellFontWeight(a: string);
    private ae;
    get indexType(): string;
    set indexType(a: string);
    private v;
    get baseTheme(): string;
    set baseTheme(a: string);
    private ac;
    get density(): string;
    set density(a: string);
    private ag;
    get scrollbarStyle(): string;
    set scrollbarStyle(a: string);
    private af;
    get scrollbarBackground(): string;
    set scrollbarBackground(a: string);
    private ai;
    get selectAllCaption(): string;
    set selectAllCaption(a: string);
    private aj;
    get selectAllCaptionTextColor(): string;
    set selectAllCaptionTextColor(a: string);
    private t;
    get actualSelectAllCaptionTextColor(): string;
    set actualSelectAllCaptionTextColor(a: string);
    private l;
    get showSelectAll(): boolean;
    set showSelectAll(a: boolean);
    private u;
    get backgroundColor(): string;
    set backgroundColor(a: string);
    private am;
    get textColor(): string;
    set textColor(a: string);
    private k;
    get showFilter(): boolean;
    set showFilter(a: boolean);
    private j;
    get isRowHoverEnabled(): boolean;
    set isRowHoverEnabled(a: boolean);
    private z;
    get checkedChangedRef(): string;
    set checkedChangedRef(a: string);
    private ak;
    get selectAllCheckboxChangedRef(): string;
    set selectAllCheckboxChangedRef(a: string);
}
