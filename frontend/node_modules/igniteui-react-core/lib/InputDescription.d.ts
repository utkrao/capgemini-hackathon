import { InputGroupItemDescription } from "./InputGroupItemDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class InputDescription extends InputGroupItemDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private ae;
    get density(): string;
    set density(a: string);
    private y;
    get actualDensity(): string;
    set actualDensity(a: string);
    private ap;
    get mask(): string;
    set mask(a: string);
    private ar;
    get promptChar(): string;
    set promptChar(a: string);
    private j;
    get includeLiterals(): boolean;
    set includeLiterals(a: boolean);
    private aa;
    get actualTextColor(): string;
    set actualTextColor(a: string);
    private z;
    get actualHoverTextColor(): string;
    set actualHoverTextColor(a: string);
    private as;
    get textColor(): string;
    set textColor(a: string);
    private af;
    get fontFamily(): string;
    set fontFamily(a: string);
    private q;
    get fontSize(): number;
    set fontSize(a: number);
    private ag;
    get fontStyle(): string;
    set fontStyle(a: string);
    private ah;
    get fontWeight(): string;
    set fontWeight(a: string);
    private al;
    get inputType(): string;
    set inputType(a: string);
    private aq;
    get placeholder(): string;
    set placeholder(a: string);
    private aj;
    get hoverTextColor(): string;
    set hoverTextColor(a: string);
    private ak;
    get id(): string;
    set id(a: string);
    private u;
    get tabIndex(): number;
    set tabIndex(a: number);
    private ai;
    get $for(): string;
    set $for(a: string);
    private ab;
    get ariaLabel(): string;
    set ariaLabel(a: string);
    private k;
    get isHover(): boolean;
    set isHover(a: boolean);
    private at;
    get value(): string;
    set value(a: string);
    private i;
    get disabled(): boolean;
    set disabled(a: boolean);
    private l;
    get readonly(): boolean;
    set readonly(a: boolean);
    private t;
    get selectionStart(): number;
    set selectionStart(a: number);
    private s;
    get selectionEnd(): number;
    set selectionEnd(a: number);
    private am;
    get keyDownRef(): string;
    set keyDownRef(a: string);
    private ao;
    get keyUpRef(): string;
    set keyUpRef(a: string);
    private an;
    get keyPressRef(): string;
    set keyPressRef(a: string);
    private ac;
    get changeRef(): string;
    set changeRef(a: string);
    private ad;
    get changingRef(): string;
    set changingRef(a: string);
}
