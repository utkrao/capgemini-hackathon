import { Description } from "./Description";
import { PropertyEditorPropertyDescriptionDescription } from "./PropertyEditorPropertyDescriptionDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class PropertyEditorDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private f;
    get actualDataSource(): PropertyEditorPropertyDescriptionDescription[];
    set actualDataSource(a: PropertyEditorPropertyDescriptionDescription[]);
    private g;
    get properties(): PropertyEditorPropertyDescriptionDescription[];
    set properties(a: PropertyEditorPropertyDescriptionDescription[]);
    private ad;
    get filterPlaceholderText(): string;
    set filterPlaceholderText(a: string);
    private af;
    get searchInputType(): string;
    set searchInputType(a: string);
    private r;
    get rowHeight(): number;
    set rowHeight(a: number);
    private w;
    get cellFontFamily(): string;
    set cellFontFamily(a: string);
    private p;
    get cellFontSize(): number;
    set cellFontSize(a: number);
    private x;
    get cellFontStyle(): string;
    set cellFontStyle(a: string);
    private y;
    get cellFontWeight(): string;
    set cellFontWeight(a: string);
    private v;
    get baseTheme(): string;
    set baseTheme(a: string);
    private aa;
    get density(): string;
    set density(a: string);
    private ab;
    get descriptionContextRef(): string;
    set descriptionContextRef(a: string);
    private z;
    get componentRendererRef(): string;
    set componentRendererRef(a: string);
    private ag;
    get targetRef(): string;
    set targetRef(a: string);
    private ac;
    get descriptionType(): string;
    set descriptionType(a: string);
    private j;
    get isHorizontal(): boolean;
    set isHorizontal(a: boolean);
    private l;
    get isWrappingEnabled(): boolean;
    set isWrappingEnabled(a: boolean);
    private k;
    get isIndirectModeEnabled(): boolean;
    set isIndirectModeEnabled(a: boolean);
    private u;
    get backgroundColor(): string;
    set backgroundColor(a: string);
    private ah;
    get textColor(): string;
    set textColor(a: string);
    private ai;
    get width(): string;
    set width(a: string);
    private ae;
    get height(): string;
    set height(a: string);
    private t;
    get background(): string;
    set background(a: string);
}
