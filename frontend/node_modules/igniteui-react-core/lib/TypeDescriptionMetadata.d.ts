import { Base, Type } from "./type";
import { TypeDescriptionWellKnownType } from "./TypeDescriptionWellKnownType";
import { TypeDescriptionPlatform } from "./TypeDescriptionPlatform";
/**
 * @hidden
 */
export declare class TypeDescriptionMetadata extends Base {
    static $t: Type;
    private _owningType;
    get owningType(): string;
    set owningType(a: string);
    private _propertyName;
    get propertyName(): string;
    set propertyName(a: string);
    private _knownType;
    get knownType(): TypeDescriptionWellKnownType;
    set knownType(a: TypeDescriptionWellKnownType);
    private _specificType;
    get specificType(): string;
    set specificType(a: string);
    private _specificExternalType;
    get specificExternalType(): string;
    set specificExternalType(a: string);
    private _collectionElementType;
    get collectionElementType(): string;
    set collectionElementType(a: string);
    private c;
    private d;
    n(a: TypeDescriptionPlatform, b: string): void;
    static camelize(a: string): string;
    static toPascal(a: string): string;
    g(a: TypeDescriptionPlatform): string;
    static shouldCamelize(a: TypeDescriptionPlatform): boolean;
    h(a: TypeDescriptionPlatform): string;
}
