import { WebDockManagerPaneDescription } from "./WebDockManagerPaneDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class WebContentPaneDescription extends WebDockManagerPaneDescription {
    static $t: Type;
    protected get_type(): string;
    private static __marshalByValue;
    private static __marshalByValueAlias;
    constructor();
    private ai;
    get id(): string;
    set id(a: string);
    private aj;
    get paneType(): string;
    set paneType(a: string);
    private ae;
    get contentId(): string;
    set contentId(a: string);
    private ag;
    get header(): string;
    set header(a: string);
    private ah;
    get headerId(): string;
    set headerId(a: string);
    private ak;
    get tabHeaderId(): string;
    set tabHeaderId(a: string);
    private al;
    get unpinnedHeaderId(): string;
    set unpinnedHeaderId(a: string);
    private af;
    get floatingHeaderId(): string;
    set floatingHeaderId(a: string);
    private z;
    get size(): number;
    set size(a: number);
    private h;
    get allowClose(): boolean;
    set allowClose(a: boolean);
    private k;
    get allowMaximize(): boolean;
    set allowMaximize(a: boolean);
    private l;
    get allowPinning(): boolean;
    set allowPinning(a: boolean);
    private i;
    get allowDocking(): boolean;
    set allowDocking(a: boolean);
    private j;
    get allowFloating(): boolean;
    set allowFloating(a: boolean);
    private aa;
    get unpinnedSize(): number;
    set unpinnedSize(a: number);
    private p;
    get isPinned(): boolean;
    set isPinned(a: boolean);
    private am;
    get unpinnedLocation(): string;
    set unpinnedLocation(a: string);
    private o;
    get hidden(): boolean;
    set hidden(a: boolean);
    private m;
    get disabled(): boolean;
    set disabled(a: boolean);
    private n;
    get documentOnly(): boolean;
    set documentOnly(a: boolean);
}
