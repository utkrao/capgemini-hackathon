import { Description } from "./Description";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class BaseDataSourceDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private m;
    get isReadOnly(): boolean;
    set isReadOnly(a: boolean);
    private l;
    get isBatchingEnabled(): boolean;
    set isBatchingEnabled(a: boolean);
    private aj;
    get actualCount(): number;
    set actualCount(a: number);
    private ak;
    get firstVisibleIndexRequested(): number;
    set firstVisibleIndexRequested(a: number);
    private al;
    get lastVisibleIndexRequested(): number;
    set lastVisibleIndexRequested(a: number);
    private j;
    get deferAutoRefresh(): boolean;
    set deferAutoRefresh(a: boolean);
    private f;
    get primaryKey(): string[];
    set primaryKey(a: string[]);
    private g;
    get propertiesRequested(): string[];
    set propertiesRequested(a: string[]);
    private ar;
    get sectionHeaderDisplayMode(): string;
    set sectionHeaderDisplayMode(a: string);
    private n;
    get isSectionCollapsable(): boolean;
    set isSectionCollapsable(a: boolean);
    private p;
    get isSectionExpandedDefault(): boolean;
    set isSectionExpandedDefault(a: boolean);
    private k;
    get includeSummaryRowsInSection(): boolean;
    set includeSummaryRowsInSection(a: boolean);
    private r;
    get isSectionSummaryRowsAtBottom(): boolean;
    set isSectionSummaryRowsAtBottom(a: boolean);
    private q;
    get isSectionHeaderNormalRow(): boolean;
    set isSectionHeaderNormalRow(a: boolean);
    private o;
    get isSectionContentVisible(): boolean;
    set isSectionContentVisible(a: boolean);
    private t;
    get shouldEmitSectionHeaders(): boolean;
    set shouldEmitSectionHeaders(a: boolean);
    private s;
    get shouldEmitSectionFooters(): boolean;
    set shouldEmitSectionFooters(a: boolean);
    private u;
    get shouldEmitShiftedRows(): boolean;
    set shouldEmitShiftedRows(a: boolean);
    private v;
    get shouldEmitSummaryRows(): boolean;
    set shouldEmitSummaryRows(a: boolean);
    private aq;
    get schemaChangedRef(): string;
    set schemaChangedRef(a: string);
    private ap;
    get rowExpansionChangedRef(): string;
    set rowExpansionChangedRef(a: string);
}
