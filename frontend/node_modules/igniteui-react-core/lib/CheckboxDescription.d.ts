import { Description } from "./Description";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class CheckboxDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private ao;
    get baseTheme(): string;
    set baseTheme(a: string);
    private ay;
    get uncheckedBackgroundColor(): string;
    set uncheckedBackgroundColor(a: string);
    private ak;
    get actualUncheckedBackgroundColor(): string;
    set actualUncheckedBackgroundColor(a: string);
    private aq;
    get checkedBackgroundColor(): string;
    set checkedBackgroundColor(a: string);
    private ax;
    get tickColor(): string;
    set tickColor(a: string);
    private aj;
    get actualTickColor(): string;
    set actualTickColor(a: string);
    private az;
    get uncheckedBorderColor(): string;
    set uncheckedBorderColor(a: string);
    private ar;
    get checkedBorderColor(): string;
    set checkedBorderColor(a: string);
    private al;
    get actualUncheckedBorderColor(): string;
    set actualUncheckedBorderColor(a: string);
    private ai;
    get actualCheckedBorderColor(): string;
    set actualCheckedBorderColor(a: string);
    private u;
    get borderWidth(): number;
    set borderWidth(a: number);
    private r;
    get actualBorderWidth(): number;
    set actualBorderWidth(a: number);
    private v;
    get cornerRadius(): number;
    set cornerRadius(a: number);
    private w;
    get tickStrokeWidth(): number;
    set tickStrokeWidth(a: number);
    private t;
    get actualTickStrokeWidth(): number;
    set actualTickStrokeWidth(a: number);
    private s;
    get actualCornerRadius(): number;
    set actualCornerRadius(a: number);
    private ah;
    get actualCheckedBackgroundColor(): string;
    set actualCheckedBackgroundColor(a: string);
    private at;
    get inputId(): string;
    set inputId(a: string);
    private as;
    get id(): string;
    set id(a: string);
    private au;
    get labelId(): string;
    set labelId(a: string);
    private aw;
    get name(): string;
    set name(a: string);
    private ae;
    get tabIndex(): number;
    set tabIndex(a: number);
    private ad;
    get required(): number;
    set required(a: number);
    private an;
    get ariaLabelledBy(): string;
    set ariaLabelledBy(a: string);
    private am;
    get ariaLabel(): string;
    set ariaLabel(a: string);
    private a0;
    get valueRef(): string;
    set valueRef(a: string);
    private j;
    get focused(): boolean;
    set focused(a: boolean);
    private av;
    get labelPosition(): string;
    set labelPosition(a: string);
    private h;
    get disableRipple(): boolean;
    set disableRipple(a: boolean);
    private f;
    get checked(): boolean;
    set checked(a: boolean);
    private k;
    get indeterminate(): boolean;
    set indeterminate(a: boolean);
    private g;
    get disabled(): boolean;
    set disabled(a: boolean);
    private i;
    get disableTransitions(): boolean;
    set disableTransitions(a: boolean);
    private ap;
    get changeRef(): string;
    set changeRef(a: string);
}
