import { Base, Type } from "./type";
import { TypeDescriptionMetadata } from "./TypeDescriptionMetadata";
import { DescriptionRef } from "./DescriptionRef";
import { TypeDescriptionPlatform } from "./TypeDescriptionPlatform";
import { Dictionary$2 } from "./Dictionary$2";
import { Description } from "./Description";
/**
 * @hidden
 */
export interface IComponentRendererAdapter {
    createObject(a: string, b: any, c: TypeDescriptionContext): any;
    createColorCollection(a: any[]): any;
    createBrushCollection(a: any[]): any;
    coerceToEnum(a: string, b: TypeDescriptionContext, c: string): any;
    onUIThread(a: any, b: () => void): void;
    setOrUpdateCollectionOnTarget(a: any, b: string, c: TypeDescriptionMetadata, d: TypeDescriptionContext, e: any, f: any): void;
    onPendingRef(a: any, b: string, c: TypeDescriptionMetadata, d: DescriptionRef): void;
    setPropertyValue(a: any, b: string, c: TypeDescriptionMetadata, d: any, e: any, f: DescriptionRef): void;
    getPropertyValue(a: any, b: string): any;
    forPropertyValueItem(a: any, b: string, c: (arg1: any) => void): void;
    clearContainer(a: any, b: TypeDescriptionContext, c: (arg1: boolean) => void): void;
    getRootObject(a: any): any;
    clearCollection(a: any, b: string, c: TypeDescriptionMetadata): void;
    addItemToCollection(a: string, b: TypeDescriptionMetadata, c: any, d: number, e: any): void;
    resetPropertyOnTarget(a: any, b: string, c: TypeDescriptionMetadata, d: any): void;
    replaceItemInCollection(a: string, b: TypeDescriptionMetadata, c: any, d: number, e: any): void;
    removeItemFromCollection(a: string, b: TypeDescriptionMetadata, c: any, d: number): void;
    replaceRootItem(a: any, b: string, c: TypeDescriptionContext, d: (arg1: boolean) => void): void;
    removeRootItem(a: any, b: TypeDescriptionContext, c: (arg1: boolean) => void): void;
    flushChanges(a: any): void;
}
/**
 * @hidden
 */
export declare let IComponentRendererAdapter_$type: Type;
/**
 * @hidden
 */
export declare class TypeDescriptionContext extends Base {
    static $t: Type;
    constructor(a: IComponentRendererAdapter, b: TypeDescriptionPlatform);
    private j;
    private i;
    private d;
    private f;
    private k;
    s(a: Dictionary$2<string, string>): void;
    g(a: Dictionary$2<string, string>): boolean;
    t(a: string, b: Dictionary$2<string, string>): void;
    u(a: string, b: () => any): void;
    static r(key_: string): string;
    static q(key_: string): string;
    a(): string[];
    b(a: string): string[];
    getMetadata(a: string, b: string): TypeDescriptionMetadata;
    o(a: string): any;
    v(a: Description, b: string, c: TypeDescriptionMetadata, d: any): void;
    w(a: Description, b: string, c: TypeDescriptionMetadata, d: any): void;
    n(a: any[]): any;
    m(a: any[]): any;
    p(a: string, b: any): any;
    l(a: string, b: string): any;
    c(a: string, b: string): string[];
    h(a: string, b: string): boolean;
}
