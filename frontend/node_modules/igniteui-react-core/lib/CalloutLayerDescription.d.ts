import { AnnotationLayerDescription } from "./AnnotationLayerDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class CalloutLayerDescription extends AnnotationLayerDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private er;
    get labelMemberPath(): string;
    set labelMemberPath(a: string);
    private ev;
    get xMemberPath(): string;
    set xMemberPath(a: string);
    private ew;
    get yMemberPath(): string;
    set yMemberPath(a: string);
    private eq;
    get keyMemberPath(): string;
    set keyMemberPath(a: string);
    private dh;
    get isCalloutOffsettingEnabled(): boolean;
    set isCalloutOffsettingEnabled(a: boolean);
    private ep;
    get contentMemberPath(): string;
    set contentMemberPath(a: string);
    private es;
    get targetSeriesName(): string;
    set targetSeriesName(a: string);
    private et;
    get targetSeriesRef(): string;
    set targetSeriesRef(a: string);
    private eo;
    get collisionChannel(): string;
    set collisionChannel(a: string);
    private de;
    get allowedPositions(): string[];
    set allowedPositions(a: string[]);
    private dg;
    get isAutoCalloutBehaviorEnabled(): boolean;
    set isAutoCalloutBehaviorEnabled(a: boolean);
    private dk;
    get useInterpolatedValueForAutoCalloutLabels(): boolean;
    set useInterpolatedValueForAutoCalloutLabels(a: boolean);
    private dl;
    get useSeriesColorForOutline(): boolean;
    set useSeriesColorForOutline(a: boolean);
    private dm;
    get useValueForAutoCalloutLabels(): boolean;
    set useValueForAutoCalloutLabels(a: boolean);
    private ed;
    get autoCalloutVisibilityMode(): string;
    set autoCalloutVisibilityMode(a: string);
    private dv;
    get calloutCornerRadius(): number;
    set calloutCornerRadius(a: number);
    private dj;
    get isCustomCalloutStyleEnabled(): boolean;
    set isCustomCalloutStyleEnabled(a: boolean);
    private di;
    get isCustomCalloutRenderStyleEnabled(): boolean;
    set isCustomCalloutRenderStyleEnabled(a: boolean);
    private d9;
    get autoCalloutLabelPrecision(): number;
    set autoCalloutLabelPrecision(a: number);
    private en;
    get calloutTextColor(): string;
    set calloutTextColor(a: string);
    private ee;
    get calloutBackground(): string;
    set calloutBackground(a: string);
    private ea;
    get calloutInterpolatedValuePrecision(): number;
    set calloutInterpolatedValuePrecision(a: number);
    private ej;
    get calloutOutline(): string;
    set calloutOutline(a: string);
    private ei;
    get calloutLeaderBrush(): string;
    set calloutLeaderBrush(a: string);
    private dx;
    get calloutPaddingLeft(): number;
    set calloutPaddingLeft(a: number);
    private dz;
    get calloutPaddingTop(): number;
    set calloutPaddingTop(a: number);
    private dy;
    get calloutPaddingRight(): number;
    set calloutPaddingRight(a: number);
    private dw;
    get calloutPaddingBottom(): number;
    set calloutPaddingBottom(a: number);
    private ef;
    get calloutCollisionMode(): string;
    set calloutCollisionMode(a: string);
    private d0;
    get calloutPositionPadding(): number;
    set calloutPositionPadding(a: number);
    private d1;
    get calloutStrokeThickness(): number;
    set calloutStrokeThickness(a: number);
    private eu;
    get textStyle(): string;
    set textStyle(a: string);
    private em;
    get calloutStyleUpdatingRef(): string;
    set calloutStyleUpdatingRef(a: string);
    private ek;
    get calloutRenderStyleUpdatingRef(): string;
    set calloutRenderStyleUpdatingRef(a: string);
    private eg;
    get calloutContentUpdatingRef(): string;
    set calloutContentUpdatingRef(a: string);
    private eh;
    get calloutLabelUpdatingRef(): string;
    set calloutLabelUpdatingRef(a: string);
    private el;
    get calloutSeriesSelectingRef(): string;
    set calloutSeriesSelectingRef(a: string);
}
