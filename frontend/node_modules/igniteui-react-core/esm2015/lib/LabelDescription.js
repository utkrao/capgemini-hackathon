/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { InputGroupItemDescription } from "./InputGroupItemDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let LabelDescription = /*@__PURE__*/ (() => {
    class LabelDescription extends InputGroupItemDescription {
        constructor() {
            super();
            this.aa = null;
            this.ab = null;
            this.s = null;
            this.w = null;
            this.t = null;
            this.u = null;
            this.v = null;
            this.ao = null;
            this.aj = null;
            this.ak = null;
            this.af = null;
            this.o = 0;
            this.ag = null;
            this.ah = null;
            this.al = null;
            this.am = null;
            this.ac = null;
            this.ad = null;
            this.ae = null;
            this.x = null;
            this.y = null;
            this.q = 0;
            this.ai = null;
            this.z = null;
            this.an = null;
            this.j = false;
            this.k = false;
            this.i = false;
        }
        get_type() {
            return "Label";
        }
        get baseTheme() {
            return this.aa;
        }
        set baseTheme(a) {
            this.aa = a;
            this.e("BaseTheme");
        }
        get density() {
            return this.ab;
        }
        set density(a) {
            this.ab = a;
            this.e("Density");
        }
        get actualDensity() {
            return this.s;
        }
        set actualDensity(a) {
            this.s = a;
            this.e("ActualDensity");
        }
        get actualTextColor() {
            return this.w;
        }
        set actualTextColor(a) {
            this.w = a;
            this.e("ActualTextColor");
        }
        get actualHighlightTextColor() {
            return this.t;
        }
        set actualHighlightTextColor(a) {
            this.t = a;
            this.e("ActualHighlightTextColor");
        }
        get actualHoverHighlightTextColor() {
            return this.u;
        }
        set actualHoverHighlightTextColor(a) {
            this.u = a;
            this.e("ActualHoverHighlightTextColor");
        }
        get actualHoverTextColor() {
            return this.v;
        }
        set actualHoverTextColor(a) {
            this.v = a;
            this.e("ActualHoverTextColor");
        }
        get textColor() {
            return this.ao;
        }
        set textColor(a) {
            this.ao = a;
            this.e("TextColor");
        }
        get highlightTextColor() {
            return this.aj;
        }
        set highlightTextColor(a) {
            this.aj = a;
            this.e("HighlightTextColor");
        }
        get hoverHighlightTextColor() {
            return this.ak;
        }
        set hoverHighlightTextColor(a) {
            this.ak = a;
            this.e("HoverHighlightTextColor");
        }
        get fontFamily() {
            return this.af;
        }
        set fontFamily(a) {
            this.af = a;
            this.e("FontFamily");
        }
        get fontSize() {
            return this.o;
        }
        set fontSize(a) {
            this.o = a;
            this.e("FontSize");
        }
        get fontStyle() {
            return this.ag;
        }
        set fontStyle(a) {
            this.ag = a;
            this.e("FontStyle");
        }
        get fontWeight() {
            return this.ah;
        }
        set fontWeight(a) {
            this.ah = a;
            this.e("FontWeight");
        }
        get hoverTextColor() {
            return this.al;
        }
        set hoverTextColor(a) {
            this.al = a;
            this.e("HoverTextColor");
        }
        get id() {
            return this.am;
        }
        set id(a) {
            this.am = a;
            this.e("Id");
        }
        get display() {
            return this.ac;
        }
        set display(a) {
            this.ac = a;
            this.e("Display");
        }
        get flexDirection() {
            return this.ad;
        }
        set flexDirection(a) {
            this.ad = a;
            this.e("FlexDirection");
        }
        get flexGrow() {
            return this.ae;
        }
        set flexGrow(a) {
            this.ae = a;
            this.e("FlexGrow");
        }
        get alignItems() {
            return this.x;
        }
        set alignItems(a) {
            this.x = a;
            this.e("AlignItems");
        }
        get alignSelf() {
            return this.y;
        }
        set alignSelf(a) {
            this.y = a;
            this.e("AlignSelf");
        }
        get tabIndex() {
            return this.q;
        }
        set tabIndex(a) {
            this.q = a;
            this.e("TabIndex");
        }
        get $for() {
            return this.ai;
        }
        set $for(a) {
            this.ai = a;
            this.e("For");
        }
        get ariaLabel() {
            return this.z;
        }
        set ariaLabel(a) {
            this.z = a;
            this.e("AriaLabel");
        }
        get text() {
            return this.an;
        }
        set text(a) {
            this.an = a;
            this.e("Text");
        }
        get isHover() {
            return this.j;
        }
        set isHover(a) {
            this.j = a;
            this.e("IsHover");
        }
        get value() {
            return this.k;
        }
        set value(a) {
            this.k = a;
            this.e("Value");
        }
        get disabled() {
            return this.i;
        }
        set disabled(a) {
            this.i = a;
            this.e("Disabled");
        }
    }
    LabelDescription.$t = /*@__PURE__*/ markType(LabelDescription, 'LabelDescription', InputGroupItemDescription.$);
    return LabelDescription;
})();
