/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebComponentBoolValueChangedEventArgsDescriptionMetadata } from "./WebComponentBoolValueChangedEventArgsDescriptionMetadata";
import { WebChipDescription } from "./WebChipDescription";
/**
 * @hidden
 */
export let WebChipDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebChipDescriptionMetadata extends Base {
        static b(a) {
            if (WebChipDescriptionMetadata.a == null) {
                WebChipDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebChipDescriptionMetadata.c(WebChipDescriptionMetadata.a);
            }
            if (a.g(WebChipDescriptionMetadata.a)) {
                return;
            }
            a.s(WebChipDescriptionMetadata.a);
            WebComponentBoolValueChangedEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:Chip");
            a.item("Disabled", "Boolean");
            a.item("Removable", "Boolean");
            a.item("Selectable", "Boolean");
            a.item("Selected", "Boolean");
            a.item("Variant", "ExportedType:string:ChipVariant");
            a.item("Variant@names", "Primary;Info;Success;Warning;Danger");
            a.item("Size", "ExportedType:string:SizableComponentSize");
            a.item("Size@names", "Large;Small;Medium");
            a.item("RemoveRef", "EventRef::remove");
            a.item("SelectRef", "EventRef::select");
        }
        static d(a) {
            WebChipDescriptionMetadata.b(a);
            a.u("WebChip", () => new WebChipDescription());
            a.t("WebChip", WebChipDescriptionMetadata.a);
        }
    }
    WebChipDescriptionMetadata.$t = /*@__PURE__*/ markType(WebChipDescriptionMetadata, 'WebChipDescriptionMetadata');
    WebChipDescriptionMetadata.a = null;
    return WebChipDescriptionMetadata;
})();
