/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { NativeUIComponent } from "./NativeUIComponent";
import { NativeUIInputDisplayType_$type } from "./NativeUIInputDisplayType";
import { enumGetBox, EnumUtil, markType } from "./type";
import { NativeUIDisplayDensity_$type } from "./NativeUIDisplayDensity";
/**
 * @hidden
 */
export let NativeUIInput = /*@__PURE__*/ (() => {
    class NativeUIInput extends NativeUIComponent {
        constructor() {
            super(...arguments);
            this.av = null;
            this.at = null;
        }
        get ax() {
            let a = this.o(0);
            return a == null ? 1 : EnumUtil.getEnumValue(NativeUIInputDisplayType_$type, a);
        }
        set ax(a) {
            this.af(0, enumGetBox(NativeUIInputDisplayType_$type, a));
        }
        get au() {
            let a = this.o(1);
            return a == null ? 1 : EnumUtil.getEnumValue(NativeUIDisplayDensity_$type, a);
        }
        set au(a) {
            this.af(1, enumGetBox(NativeUIDisplayDensity_$type, a));
        }
        get ay() {
            let a = this.o(2);
            return a;
        }
        set ay(a) {
            this.af(2, a);
        }
        get aw() {
            return this.av;
        }
        set aw(a) {
            let b = this.av;
            this.av = a;
            if (this.av != null) {
                this.x(0, this.av);
            }
            else {
                this.ad(0, b);
            }
        }
    }
    NativeUIInput.$t = /*@__PURE__*/ markType(NativeUIInput, 'NativeUIInput', NativeUIComponent.$);
    return NativeUIInput;
})();
