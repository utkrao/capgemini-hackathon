/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebComponentBoolValueChangedEventArgsDescriptionMetadata } from "./WebComponentBoolValueChangedEventArgsDescriptionMetadata";
import { VoidEventArgsDescriptionMetadata } from "./VoidEventArgsDescriptionMetadata";
import { WebCheckboxBaseDescription } from "./WebCheckboxBaseDescription";
/**
 * @hidden
 */
export let WebCheckboxBaseDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebCheckboxBaseDescriptionMetadata extends Base {
        static b(a) {
            if (WebCheckboxBaseDescriptionMetadata.a == null) {
                WebCheckboxBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebCheckboxBaseDescriptionMetadata.c(WebCheckboxBaseDescriptionMetadata.a);
            }
            if (a.g(WebCheckboxBaseDescriptionMetadata.a)) {
                return;
            }
            a.s(WebCheckboxBaseDescriptionMetadata.a);
            WebComponentBoolValueChangedEventArgsDescriptionMetadata.d(a);
            VoidEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:CheckboxBase");
            a.item("Name", "String");
            a.item("Value", "String");
            a.item("Disabled", "Boolean");
            a.item("Checked", "Boolean");
            a.item("Required", "Boolean");
            a.item("Invalid", "Boolean");
            a.item("LabelPosition", "ExportedType:string:CheckboxBaseLabelPosition");
            a.item("LabelPosition@names", "Before;After");
            a.item("AriaLabelledby", "String");
            a.item("ChangeRef", "EventRef::change");
            a.item("FocusRef", "EventRef::focus");
            a.item("BlurRef", "EventRef::blur");
        }
        static d(a) {
            WebCheckboxBaseDescriptionMetadata.b(a);
            a.u("WebCheckboxBase", () => new WebCheckboxBaseDescription());
            a.t("WebCheckboxBase", WebCheckboxBaseDescriptionMetadata.a);
        }
    }
    WebCheckboxBaseDescriptionMetadata.$t = /*@__PURE__*/ markType(WebCheckboxBaseDescriptionMetadata, 'WebCheckboxBaseDescriptionMetadata');
    WebCheckboxBaseDescriptionMetadata.a = null;
    return WebCheckboxBaseDescriptionMetadata;
})();
