/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebDockManagerLayoutDescriptionMetadata } from "./WebDockManagerLayoutDescriptionMetadata";
import { WebDockManagerPaneDescriptionMetadata } from "./WebDockManagerPaneDescriptionMetadata";
import { WebDockManagerPointDescriptionMetadata } from "./WebDockManagerPointDescriptionMetadata";
import { WebContentPaneDescriptionMetadata } from "./WebContentPaneDescriptionMetadata";
import { WebDockManagerResourceStringsDescriptionMetadata } from "./WebDockManagerResourceStringsDescriptionMetadata";
import { WebDockManagerDescription } from "./WebDockManagerDescription";
/**
 * @hidden
 */
export let WebDockManagerDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebDockManagerDescriptionMetadata extends Base {
        static b(a) {
            if (WebDockManagerDescriptionMetadata.a == null) {
                WebDockManagerDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebDockManagerDescriptionMetadata.c(WebDockManagerDescriptionMetadata.a);
            }
            if (a.g(WebDockManagerDescriptionMetadata.a)) {
                return;
            }
            a.s(WebDockManagerDescriptionMetadata.a);
            WebDockManagerLayoutDescriptionMetadata.d(a);
            WebDockManagerPaneDescriptionMetadata.d(a);
            WebDockManagerPointDescriptionMetadata.d(a);
            WebContentPaneDescriptionMetadata.d(a);
            WebDockManagerResourceStringsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:DockManager");
            a.item("Layout", "ExportedType:WebDockManagerLayout");
            a.item("DraggedPane", "ExportedType:WebDockManagerPane");
            a.item("DropPosition", "ExportedType:WebDockManagerPoint");
            a.item("ActivePane", "ExportedType:WebContentPane");
            a.item("AllowMaximize", "Boolean");
            a.item("MaximizedPane", "ExportedType:WebDockManagerPane");
            a.item("ResourceStrings", "ExportedType:WebDockManagerResourceStrings");
            a.item("AllowFloatingPanesResize", "Boolean");
            a.item("DisableKeyboardNavigation", "Boolean");
        }
        static d(a) {
            WebDockManagerDescriptionMetadata.b(a);
            a.u("WebDockManager", () => new WebDockManagerDescription());
            a.t("WebDockManager", WebDockManagerDescriptionMetadata.a);
        }
    }
    WebDockManagerDescriptionMetadata.$t = /*@__PURE__*/ markType(WebDockManagerDescriptionMetadata, 'WebDockManagerDescriptionMetadata');
    WebDockManagerDescriptionMetadata.a = null;
    return WebDockManagerDescriptionMetadata;
})();
