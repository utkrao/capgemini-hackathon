/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let DataGridPagerDescription = /*@__PURE__*/ (() => {
    class DataGridPagerDescription extends Description {
        constructor() {
            super();
            this.w = null;
            this.l = 0;
            this.k = 0;
            this.r = null;
            this.f = null;
            this.j = 0;
            this.s = null;
            this.h = 0;
            this.t = null;
            this.u = null;
            this.p = null;
            this.q = null;
            this.v = null;
        }
        get_type() {
            return "DataGridPager";
        }
        get type() {
            return this.get_type();
        }
        get pagerText() {
            return this.w;
        }
        set pagerText(a) {
            this.w = a;
            this.e("PagerText");
        }
        get pageSize() {
            return this.l;
        }
        set pageSize(a) {
            this.l = a;
            this.e("PageSize");
        }
        get pageCount() {
            return this.k;
        }
        set pageCount(a) {
            this.k = a;
            this.e("PageCount");
        }
        get dataSourceRef() {
            return this.r;
        }
        set dataSourceRef(a) {
            this.r = a;
            this.e("DataSourceRef");
        }
        get dataSource() {
            return this.f;
        }
        set dataSource(a) {
            this.f = a;
            this.e("DataSource");
        }
        get currentPage() {
            return this.j;
        }
        set currentPage(a) {
            this.j = a;
            this.e("CurrentPage");
        }
        get fontFamily() {
            return this.s;
        }
        set fontFamily(a) {
            this.s = a;
            this.e("FontFamily");
        }
        get fontSize() {
            return this.h;
        }
        set fontSize(a) {
            this.h = a;
            this.e("FontSize");
        }
        get fontStyle() {
            return this.t;
        }
        set fontStyle(a) {
            this.t = a;
            this.e("FontStyle");
        }
        get fontWeight() {
            return this.u;
        }
        set fontWeight(a) {
            this.u = a;
            this.e("FontWeight");
        }
        get background() {
            return this.p;
        }
        set background(a) {
            this.p = a;
            this.e("Background");
        }
        get border() {
            return this.q;
        }
        set border(a) {
            this.q = a;
            this.e("Border");
        }
        get pageChangedRef() {
            return this.v;
        }
        set pageChangedRef(a) {
            this.v = a;
            this.e("PageChangedRef");
        }
    }
    DataGridPagerDescription.$t = /*@__PURE__*/ markType(DataGridPagerDescription, 'DataGridPagerDescription', Description.$);
    return DataGridPagerDescription;
})();
