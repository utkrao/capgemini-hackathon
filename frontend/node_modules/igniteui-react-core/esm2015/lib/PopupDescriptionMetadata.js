/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { OnClosedEventArgsDescriptionMetadata } from "./OnClosedEventArgsDescriptionMetadata";
import { OnPopupEventArgsDescriptionMetadata } from "./OnPopupEventArgsDescriptionMetadata";
import { PopupDescription } from "./PopupDescription";
/**
 * @hidden
 */
export let PopupDescriptionMetadata = /*@__PURE__*/ (() => {
    class PopupDescriptionMetadata extends Base {
        static b(a) {
            if (PopupDescriptionMetadata.a == null) {
                PopupDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                PopupDescriptionMetadata.c(PopupDescriptionMetadata.a);
            }
            if (a.g(PopupDescriptionMetadata.a)) {
                return;
            }
            a.s(PopupDescriptionMetadata.a);
            OnClosedEventArgsDescriptionMetadata.d(a);
            OnPopupEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("AnimationDuration", "Number:int");
            a.item("AnimationEnabled", "Boolean");
            a.item("Elevation", "Number:int");
            a.item("ActualElevation", "Number:int");
            a.item("ActualUmbraShadowColor", "Brush");
            a.item("ActualPenumbraShadowColor", "Brush");
            a.item("ActualAmbientShadowColor", "Brush");
            a.item("Background", "Brush");
            a.item("OnClosedRef", "EventRef::onClosed");
            a.item("OnPopupRef", "EventRef::onPopup");
        }
        static d(a) {
            PopupDescriptionMetadata.b(a);
            a.u("Popup", () => new PopupDescription());
            a.t("Popup", PopupDescriptionMetadata.a);
        }
    }
    PopupDescriptionMetadata.$t = /*@__PURE__*/ markType(PopupDescriptionMetadata, 'PopupDescriptionMetadata');
    PopupDescriptionMetadata.a = null;
    return PopupDescriptionMetadata;
})();
