/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "./type";
import { INativeUIElementBridge_$type } from "./INativeUIElementBridge";
import { Size } from "./Size";
/**
 * @hidden
 */
export let NativeUIElementBridge = /*@__PURE__*/ (() => {
    class NativeUIElementBridge extends Base {
        constructor() {
            super(...arguments);
            this.b = 0;
            this.a = 0;
        }
        getDesiredSize(a, b) {
            let c = (a);
            return new Size(1, c.offsetWidth, c.offsetHeight);
        }
        getMethodTarget(a) {
            return a;
        }
        getTargetForProperty(a, b) {
            return b;
        }
        addHandler(a, b, c, d) {
        }
        getHorizontalAlignment(a) {
            return this.a;
        }
        getTargetForBuildInEvent(a, b) {
            return a;
        }
        getTargetForBuildInProperty(a, b) {
            return a;
        }
        getValue(a, b) {
            return null;
        }
        getVerticalAlignment(a) {
            return this.b;
        }
        removeHandler(a, b, c, d) {
        }
        setHorizontalAlignment(a, b) {
            this.a = b;
            let c = a;
            switch (b) {
                case 0:
                    c.setStyleProperty("justify-self", "start");
                    c.setStyleProperty("text-align", "left");
                    break;
                case 1:
                    c.setStyleProperty("justify-self", "center");
                    c.setStyleProperty("text-align", "center");
                    break;
                case 2:
                    c.setStyleProperty("justify-self", "end");
                    c.setStyleProperty("text-align", "right");
                    break;
                case 3:
                    c.setStyleProperty("justify-self", "stretch");
                    c.setStyleProperty("text-align", "center");
                    break;
            }
        }
        setValue(a, b, c) {
        }
        setVerticalAlignment(a, b) {
            this.b = b;
            let c = a;
            switch (b) {
                case 0:
                    c.setStyleProperty("align-self", "start");
                    c.setStyleProperty("valign", "top");
                    break;
                case 1:
                    c.setStyleProperty("align-self", "center");
                    c.setStyleProperty("valign", "center");
                    break;
                case 2:
                    c.setStyleProperty("align-self", "end");
                    c.setStyleProperty("valign", "bottom");
                    break;
                case 3:
                    c.setStyleProperty("align-self", "stretch");
                    c.setStyleProperty("valign", "center");
                    break;
            }
        }
    }
    NativeUIElementBridge.$t = /*@__PURE__*/ markType(NativeUIElementBridge, 'NativeUIElementBridge', Base.$, [INativeUIElementBridge_$type]);
    return NativeUIElementBridge;
})();
