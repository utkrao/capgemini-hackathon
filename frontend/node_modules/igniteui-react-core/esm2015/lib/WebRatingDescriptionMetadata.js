/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebNumberEventArgsDescriptionMetadata } from "./WebNumberEventArgsDescriptionMetadata";
import { WebRatingDescription } from "./WebRatingDescription";
/**
 * @hidden
 */
export let WebRatingDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebRatingDescriptionMetadata extends Base {
        static b(a) {
            if (WebRatingDescriptionMetadata.a == null) {
                WebRatingDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebRatingDescriptionMetadata.c(WebRatingDescriptionMetadata.a);
            }
            if (a.g(WebRatingDescriptionMetadata.a)) {
                return;
            }
            a.s(WebRatingDescriptionMetadata.a);
            WebNumberEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:Rating");
            a.item("Max", "Number:double");
            a.item("Step", "Number:double");
            a.item("Name", "String");
            a.item("Label", "String");
            a.item("ValueFormat", "String");
            a.item("Value", "Number:double");
            a.item("Disabled", "Boolean");
            a.item("HoverPreview", "Boolean");
            a.item("Readonly", "Boolean");
            a.item("Single", "Boolean");
            a.item("Size", "ExportedType:string:SizableComponentSize");
            a.item("Size@names", "Large;Small;Medium");
            a.item("ChangeRef", "EventRef::change");
            a.item("HoverRef", "EventRef::hover");
        }
        static d(a) {
            WebRatingDescriptionMetadata.b(a);
            a.u("WebRating", () => new WebRatingDescription());
            a.t("WebRating", WebRatingDescriptionMetadata.a);
        }
    }
    WebRatingDescriptionMetadata.$t = /*@__PURE__*/ markType(WebRatingDescriptionMetadata, 'WebRatingDescriptionMetadata');
    WebRatingDescriptionMetadata.a = null;
    return WebRatingDescriptionMetadata;
})();
