/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { DatePartDeltasDescriptionMetadata } from "./DatePartDeltasDescriptionMetadata";
import { WebComponentDateValueChangedEventArgsDescriptionMetadata } from "./WebComponentDateValueChangedEventArgsDescriptionMetadata";
import { WebMaskInputBaseDescriptionMetadata } from "./WebMaskInputBaseDescriptionMetadata";
import { WebDateTimeInputDescription } from "./WebDateTimeInputDescription";
/**
 * @hidden
 */
export let WebDateTimeInputDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebDateTimeInputDescriptionMetadata extends Base {
        static b(a) {
            if (WebDateTimeInputDescriptionMetadata.a == null) {
                WebDateTimeInputDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebDateTimeInputDescriptionMetadata.c(WebDateTimeInputDescriptionMetadata.a);
            }
            if (a.g(WebDateTimeInputDescriptionMetadata.a)) {
                return;
            }
            a.s(WebDateTimeInputDescriptionMetadata.a);
            DatePartDeltasDescriptionMetadata.d(a);
            WebComponentDateValueChangedEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            WebMaskInputBaseDescriptionMetadata.c(a);
            a.item("__qualifiedNameTS", "String:DateTimeInput");
            a.item("InputFormat", "String");
            a.item("Value", "Date");
            a.item("MinValue", "Date");
            a.item("MaxValue", "Date");
            a.item("DisplayFormat", "String");
            a.item("SpinDelta", "ExportedType:DatePartDeltas");
            a.item("SpinLoop", "Boolean");
            a.item("Locale", "String");
            a.item("ChangeRef", "EventRef::change");
        }
        static d(a) {
            WebDateTimeInputDescriptionMetadata.b(a);
            a.u("WebDateTimeInput", () => new WebDateTimeInputDescription());
            a.t("WebDateTimeInput", WebDateTimeInputDescriptionMetadata.a);
        }
    }
    WebDateTimeInputDescriptionMetadata.$t = /*@__PURE__*/ markType(WebDateTimeInputDescriptionMetadata, 'WebDateTimeInputDescriptionMetadata');
    WebDateTimeInputDescriptionMetadata.a = null;
    return WebDateTimeInputDescriptionMetadata;
})();
