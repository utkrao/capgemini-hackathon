/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ColumnWidthDescription } from "./ColumnWidthDescription";
/**
 * @hidden
 */
export let ColumnWidthDescriptionMetadata = /*@__PURE__*/ (() => {
    class ColumnWidthDescriptionMetadata extends Base {
        static b(a) {
            if (ColumnWidthDescriptionMetadata.a == null) {
                ColumnWidthDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                ColumnWidthDescriptionMetadata.c(ColumnWidthDescriptionMetadata.a);
            }
            if (a.g(ColumnWidthDescriptionMetadata.a)) {
                return;
            }
            a.s(ColumnWidthDescriptionMetadata.a);
        }
        static c(a) {
            a.item("IsStarSized", "Boolean");
            a.item("Value", "Number:double");
            a.item("MinimumWidth", "Number:double");
        }
        static d(a) {
            ColumnWidthDescriptionMetadata.b(a);
            a.u("ColumnWidth", () => new ColumnWidthDescription());
            a.t("ColumnWidth", ColumnWidthDescriptionMetadata.a);
        }
    }
    ColumnWidthDescriptionMetadata.$t = /*@__PURE__*/ markType(ColumnWidthDescriptionMetadata, 'ColumnWidthDescriptionMetadata');
    ColumnWidthDescriptionMetadata.a = null;
    return ColumnWidthDescriptionMetadata;
})();
