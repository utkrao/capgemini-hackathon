/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let PropertyEditorPanelDescription = /*@__PURE__*/ (() => {
    class PropertyEditorPanelDescription extends Description {
        constructor() {
            super();
            this.f = null;
            this.g = null;
            this.t = 0;
            this.p = 0;
            this.x = null;
            this.q = 0;
            this.y = null;
            this.z = null;
            this.ab = null;
            this.aa = null;
            this.ae = null;
            this.ac = null;
            this.j = false;
            this.l = false;
            this.k = false;
            this.w = null;
            this.af = null;
            this.ag = null;
            this.ad = null;
            this.v = null;
        }
        get_type() {
            return "PropertyEditorPanel";
        }
        get type() {
            return this.get_type();
        }
        get actualDataSource() {
            return this.f;
        }
        set actualDataSource(a) {
            this.f = a;
            this.e("ActualDataSource");
        }
        get properties() {
            return this.g;
        }
        set properties(a) {
            this.g = a;
            this.e("Properties");
        }
        get rowHeight() {
            return this.t;
        }
        set rowHeight(a) {
            this.t = a;
            this.e("RowHeight");
        }
        get actualRowHeight() {
            return this.p;
        }
        set actualRowHeight(a) {
            this.p = a;
            this.e("ActualRowHeight");
        }
        get cellFontFamily() {
            return this.x;
        }
        set cellFontFamily(a) {
            this.x = a;
            this.e("CellFontFamily");
        }
        get cellFontSize() {
            return this.q;
        }
        set cellFontSize(a) {
            this.q = a;
            this.e("CellFontSize");
        }
        get cellFontStyle() {
            return this.y;
        }
        set cellFontStyle(a) {
            this.y = a;
            this.e("CellFontStyle");
        }
        get cellFontWeight() {
            return this.z;
        }
        set cellFontWeight(a) {
            this.z = a;
            this.e("CellFontWeight");
        }
        get descriptionContextRef() {
            return this.ab;
        }
        set descriptionContextRef(a) {
            this.ab = a;
            this.e("DescriptionContextRef");
        }
        get componentRendererRef() {
            return this.aa;
        }
        set componentRendererRef(a) {
            this.aa = a;
            this.e("ComponentRendererRef");
        }
        get targetRef() {
            return this.ae;
        }
        set targetRef(a) {
            this.ae = a;
            this.e("TargetRef");
        }
        get descriptionType() {
            return this.ac;
        }
        set descriptionType(a) {
            this.ac = a;
            this.e("DescriptionType");
        }
        get isHorizontal() {
            return this.j;
        }
        set isHorizontal(a) {
            this.j = a;
            this.e("IsHorizontal");
        }
        get isWrappingEnabled() {
            return this.l;
        }
        set isWrappingEnabled(a) {
            this.l = a;
            this.e("IsWrappingEnabled");
        }
        get isIndirectModeEnabled() {
            return this.k;
        }
        set isIndirectModeEnabled(a) {
            this.k = a;
            this.e("IsIndirectModeEnabled");
        }
        get backgroundColor() {
            return this.w;
        }
        set backgroundColor(a) {
            this.w = a;
            this.e("BackgroundColor");
        }
        get textColor() {
            return this.af;
        }
        set textColor(a) {
            this.af = a;
            this.e("TextColor");
        }
        get width() {
            return this.ag;
        }
        set width(a) {
            this.ag = a;
            this.e("Width");
        }
        get height() {
            return this.ad;
        }
        set height(a) {
            this.ad = a;
            this.e("Height");
        }
        get background() {
            return this.v;
        }
        set background(a) {
            this.v = a;
            this.e("Background");
        }
    }
    PropertyEditorPanelDescription.$t = /*@__PURE__*/ markType(PropertyEditorPanelDescription, 'PropertyEditorPanelDescription', Description.$);
    return PropertyEditorPanelDescription;
})();
