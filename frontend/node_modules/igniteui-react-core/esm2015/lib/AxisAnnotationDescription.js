/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let AxisAnnotationDescription = /*@__PURE__*/ (() => {
    class AxisAnnotationDescription extends Description {
        constructor() {
            super();
            this.z = null;
            this.x = null;
            this.h = 0;
            this.v = null;
            this.f = null;
            this.u = null;
            this.y = null;
            this.t = null;
            this.w = null;
            this.m = 0;
            this.j = 0;
            this.l = 0;
            this.k = 0;
            this.i = 0;
        }
        get_type() {
            return "AxisAnnotation";
        }
        get type() {
            return this.get_type();
        }
        get valueRef() {
            return this.z;
        }
        set valueRef(a) {
            this.z = a;
            this.e("ValueRef");
        }
        get text() {
            return this.x;
        }
        set text(a) {
            this.x = a;
            this.e("Text");
        }
        get backgroundCornerRadius() {
            return this.h;
        }
        set backgroundCornerRadius(a) {
            this.h = a;
            this.e("BackgroundCornerRadius");
        }
        get labelFormat() {
            return this.v;
        }
        set labelFormat(a) {
            this.v = a;
            this.e("LabelFormat");
        }
        get labelFormatSpecifiers() {
            return this.f;
        }
        set labelFormatSpecifiers(a) {
            this.f = a;
            this.e("LabelFormatSpecifiers");
        }
        get formatLabelRef() {
            return this.u;
        }
        set formatLabelRef(a) {
            this.u = a;
            this.e("FormatLabelRef");
        }
        get textColor() {
            return this.y;
        }
        set textColor(a) {
            this.y = a;
            this.e("TextColor");
        }
        get background() {
            return this.t;
        }
        set background(a) {
            this.t = a;
            this.e("Background");
        }
        get outline() {
            return this.w;
        }
        set outline(a) {
            this.w = a;
            this.e("Outline");
        }
        get strokeThickness() {
            return this.m;
        }
        set strokeThickness(a) {
            this.m = a;
            this.e("StrokeThickness");
        }
        get backgroundPaddingLeft() {
            return this.j;
        }
        set backgroundPaddingLeft(a) {
            this.j = a;
            this.e("BackgroundPaddingLeft");
        }
        get backgroundPaddingTop() {
            return this.l;
        }
        set backgroundPaddingTop(a) {
            this.l = a;
            this.e("BackgroundPaddingTop");
        }
        get backgroundPaddingRight() {
            return this.k;
        }
        set backgroundPaddingRight(a) {
            this.k = a;
            this.e("BackgroundPaddingRight");
        }
        get backgroundPaddingBottom() {
            return this.i;
        }
        set backgroundPaddingBottom(a) {
            this.i = a;
            this.e("BackgroundPaddingBottom");
        }
    }
    AxisAnnotationDescription.$t = /*@__PURE__*/ markType(AxisAnnotationDescription, 'AxisAnnotationDescription', Description.$);
    return AxisAnnotationDescription;
})();
