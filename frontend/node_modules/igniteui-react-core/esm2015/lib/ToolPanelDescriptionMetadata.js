/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ToolPanelContentRefreshedEventArgsDescriptionMetadata } from "./ToolPanelContentRefreshedEventArgsDescriptionMetadata";
import { ToolCommandEventArgsDescriptionMetadata } from "./ToolCommandEventArgsDescriptionMetadata";
import { ToolPanelDescription } from "./ToolPanelDescription";
/**
 * @hidden
 */
export let ToolPanelDescriptionMetadata = /*@__PURE__*/ (() => {
    class ToolPanelDescriptionMetadata extends Base {
        static b(a) {
            if (ToolPanelDescriptionMetadata.a == null) {
                ToolPanelDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                ToolPanelDescriptionMetadata.c(ToolPanelDescriptionMetadata.a);
            }
            if (a.g(ToolPanelDescriptionMetadata.a)) {
                return;
            }
            a.s(ToolPanelDescriptionMetadata.a);
            ToolPanelContentRefreshedEventArgsDescriptionMetadata.d(a);
            ToolCommandEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("Actions", "Collection:ToolAction:ToolActionCollection:ToolAction");
            a.item("CellFontFamily", "(w:CellFontFamily/FontFamilyTransform,xam:CellFontFamily,wf:CellFontFamily,web:cellTextStyle/FontFamilyTransform)String");
            a.item("CellFontSize", "(w:CellFontSize,xam:CellFontSize,wf:CellFontSize,web:cellTextStyle/FontSizeTransform)Number:double");
            a.item("CellFontStyle", "(w:CellFontStyle/FontStyleTransform,xam:CellFontFamily/FontStyleTransform,wf:CellFontFamily/FontStyleTransform,web:cellTextStyle/FontStyleTransform)String");
            a.item("CellFontWeight", "(w:CellFontWeight/FontWeightTransform,xam:CellFontFamily/FontWeightTransform,wf:CellFontFamily/FontWeightTransform,web:cellTextStyle/FontWeightTransform)String");
            a.item("BackgroundColor", "Brush");
            a.item("TextColor", "Brush");
            a.item("Orientation", "ExportedType:string:ToolPanelOrientation");
            a.item("Orientation@names", "Vertical;Horizontal");
            a.item("ContentRefreshedRef", "EventRef::contentRefreshed");
            a.item("OnCommandRef", "EventRef::onCommand");
        }
        static d(a) {
            ToolPanelDescriptionMetadata.b(a);
            a.u("ToolPanel", () => new ToolPanelDescription());
            a.t("ToolPanel", ToolPanelDescriptionMetadata.a);
        }
    }
    ToolPanelDescriptionMetadata.$t = /*@__PURE__*/ markType(ToolPanelDescriptionMetadata, 'ToolPanelDescriptionMetadata');
    ToolPanelDescriptionMetadata.a = null;
    return ToolPanelDescriptionMetadata;
})();
