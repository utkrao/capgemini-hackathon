/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { CellInfoDescription } from "./CellInfoDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let FilterCellInfoDescription = /*@__PURE__*/ (() => {
    class FilterCellInfoDescription extends CellInfoDescription {
        constructor() {
            super();
            this.f3 = null;
            this.fl = null;
            this.fn = null;
            this.fj = null;
            this.f5 = null;
            this.f4 = null;
            this.fv = 0;
            this.fu = 0;
            this.ft = 0;
            this.fs = 0;
            this.fr = 0;
            this.fq = 0;
        }
        get_type() {
            return "FilterCellInfo";
        }
        get dataType() {
            return this.f3;
        }
        set dataType(a) {
            this.f3 = a;
            this.e("DataType");
        }
        get filter() {
            return this.fl;
        }
        set filter(a) {
            this.fl = a;
            this.e("Filter");
        }
        get filterExpression() {
            return this.fn;
        }
        set filterExpression(a) {
            this.fn = a;
            this.e("FilterExpression");
        }
        get filterOperands() {
            return this.fj;
        }
        set filterOperands(a) {
            this.fj = a;
            this.e("FilterOperands");
        }
        get operatorType() {
            return this.f5;
        }
        set operatorType(a) {
            this.f5 = a;
            this.e("OperatorType");
        }
        get filterValueRef() {
            return this.f4;
        }
        set filterValueRef(a) {
            this.f4 = a;
            this.e("FilterValueRef");
        }
        get selectorTop() {
            return this.fv;
        }
        set selectorTop(a) {
            this.fv = a;
            this.e("SelectorTop");
        }
        get selectorLeft() {
            return this.fu;
        }
        set selectorLeft(a) {
            this.fu = a;
            this.e("SelectorLeft");
        }
        get editorTop() {
            return this.ft;
        }
        set editorTop(a) {
            this.ft = a;
            this.e("EditorTop");
        }
        get editorLeft() {
            return this.fs;
        }
        set editorLeft(a) {
            this.fs = a;
            this.e("EditorLeft");
        }
        get clearIconTop() {
            return this.fr;
        }
        set clearIconTop(a) {
            this.fr = a;
            this.e("ClearIconTop");
        }
        get clearIconLeft() {
            return this.fq;
        }
        set clearIconLeft(a) {
            this.fq = a;
            this.e("ClearIconLeft");
        }
    }
    FilterCellInfoDescription.$t = /*@__PURE__*/ markType(FilterCellInfoDescription, 'FilterCellInfoDescription', CellInfoDescription.$);
    FilterCellInfoDescription.__marshalByValue1 = true;
    FilterCellInfoDescription.__marshalByValueAlias1 = "FilterCellModel";
    return FilterCellInfoDescription;
})();
