/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let AxisDescription = /*@__PURE__*/ (() => {
    class AxisDescription extends Description {
        constructor() {
            super();
            this.bo = null;
            this.b6 = null;
            this.b4 = null;
            this.bl = null;
            this.am = 0;
            this.b3 = null;
            this.bz = null;
            this.bj = null;
            this.ak = 0;
            this.b0 = null;
            this.bk = null;
            this.al = 0;
            this.b5 = null;
            this.ao = 0;
            this.an = 0;
            this.l = false;
            this.m = false;
            this.o = false;
            this.p = false;
            this.s = false;
            this.r = false;
            this.bf = 0;
            this.j = false;
            this.bw = null;
            this.bv = null;
            this.n = false;
            this.ad = 0;
            this.af = 0;
            this.ah = 0;
            this.ai = 0;
            this.aj = 0;
            this.ae = 0;
            this.bu = null;
            this.bx = null;
            this.bn = null;
            this.bh = null;
            this.cc = null;
            this.cd = null;
            this.cb = null;
            this.q = false;
            this.ap = 0;
            this.ar = 0;
            this.at = 0;
            this.au = 0;
            this.av = 0;
            this.aq = 0;
            this.ca = null;
            this.ce = null;
            this.f = null;
            this.bm = null;
            this.k = false;
            this.bt = null;
            this.g = null;
            this.b1 = null;
            this.b2 = null;
            this.bp = null;
            this.bq = null;
            this.ag = 0;
            this.bs = null;
            this.br = null;
            this.b7 = null;
            this.as = 0;
            this.b9 = null;
            this.b8 = null;
            this.by = null;
        }
        get_type() {
            return "Axis";
        }
        get type() {
            return this.get_type();
        }
        get formatLabelRef() {
            return this.bo;
        }
        set formatLabelRef(a) {
            this.bo = a;
            this.e("FormatLabelRef");
        }
        get title() {
            return this.b6;
        }
        set title(a) {
            this.b6 = a;
            this.e("Title");
        }
        get stroke() {
            return this.b4;
        }
        set stroke(a) {
            this.b4 = a;
            this.e("Stroke");
        }
        get actualStroke() {
            return this.bl;
        }
        set actualStroke(a) {
            this.bl = a;
            this.e("ActualStroke");
        }
        get strokeThickness() {
            return this.am;
        }
        set strokeThickness(a) {
            this.am = a;
            this.e("StrokeThickness");
        }
        get strip() {
            return this.b3;
        }
        set strip(a) {
            this.b3 = a;
            this.e("Strip");
        }
        get majorStroke() {
            return this.bz;
        }
        set majorStroke(a) {
            this.bz = a;
            this.e("MajorStroke");
        }
        get actualMajorStroke() {
            return this.bj;
        }
        set actualMajorStroke(a) {
            this.bj = a;
            this.e("ActualMajorStroke");
        }
        get majorStrokeThickness() {
            return this.ak;
        }
        set majorStrokeThickness(a) {
            this.ak = a;
            this.e("MajorStrokeThickness");
        }
        get minorStroke() {
            return this.b0;
        }
        set minorStroke(a) {
            this.b0 = a;
            this.e("MinorStroke");
        }
        get actualMinorStroke() {
            return this.bk;
        }
        set actualMinorStroke(a) {
            this.bk = a;
            this.e("ActualMinorStroke");
        }
        get minorStrokeThickness() {
            return this.al;
        }
        set minorStrokeThickness(a) {
            this.al = a;
            this.e("MinorStrokeThickness");
        }
        get tickStroke() {
            return this.b5;
        }
        set tickStroke(a) {
            this.b5 = a;
            this.e("TickStroke");
        }
        get tickStrokeThickness() {
            return this.ao;
        }
        set tickStrokeThickness(a) {
            this.ao = a;
            this.e("TickStrokeThickness");
        }
        get tickLength() {
            return this.an;
        }
        set tickLength(a) {
            this.an = a;
            this.e("TickLength");
        }
        get isDisabled() {
            return this.l;
        }
        set isDisabled(a) {
            this.l = a;
            this.e("IsDisabled");
        }
        get isInverted() {
            return this.m;
        }
        set isInverted(a) {
            this.m = a;
            this.e("IsInverted");
        }
        get shouldAvoidAnnotationCollisions() {
            return this.o;
        }
        set shouldAvoidAnnotationCollisions(a) {
            this.o = a;
            this.e("ShouldAvoidAnnotationCollisions");
        }
        get shouldKeepAnnotationsInView() {
            return this.p;
        }
        set shouldKeepAnnotationsInView(a) {
            this.p = a;
            this.e("ShouldKeepAnnotationsInView");
        }
        get usePerLabelHeightMeasurement() {
            return this.s;
        }
        set usePerLabelHeightMeasurement(a) {
            this.s = a;
            this.e("UsePerLabelHeightMeasurement");
        }
        get useEnhancedIntervalManagement() {
            return this.r;
        }
        set useEnhancedIntervalManagement(a) {
            this.r = a;
            this.e("UseEnhancedIntervalManagement");
        }
        get enhancedIntervalMinimumCharacters() {
            return this.bf;
        }
        set enhancedIntervalMinimumCharacters(a) {
            this.bf = a;
            this.e("EnhancedIntervalMinimumCharacters");
        }
        get enhancedIntervalPreferMoreCategoryLabels() {
            return this.j;
        }
        set enhancedIntervalPreferMoreCategoryLabels(a) {
            this.j = a;
            this.e("EnhancedIntervalPreferMoreCategoryLabels");
        }
        get labelTextColor() {
            return this.bw;
        }
        set labelTextColor(a) {
            this.bw = a;
            this.e("LabelTextColor");
        }
        get labelLocation() {
            return this.bv;
        }
        set labelLocation(a) {
            this.bv = a;
            this.e("LabelLocation");
        }
        get labelShowFirstLabel() {
            return this.n;
        }
        set labelShowFirstLabel(a) {
            this.n = a;
            this.e("LabelShowFirstLabel");
        }
        get labelAngle() {
            return this.ad;
        }
        set labelAngle(a) {
            this.ad = a;
            this.e("LabelAngle");
        }
        get labelExtent() {
            return this.af;
        }
        set labelExtent(a) {
            this.af = a;
            this.e("LabelExtent");
        }
        get labelLeftMargin() {
            return this.ah;
        }
        set labelLeftMargin(a) {
            this.ah = a;
            this.e("LabelLeftMargin");
        }
        get labelRightMargin() {
            return this.ai;
        }
        set labelRightMargin(a) {
            this.ai = a;
            this.e("LabelRightMargin");
        }
        get labelTopMargin() {
            return this.aj;
        }
        set labelTopMargin(a) {
            this.aj = a;
            this.e("LabelTopMargin");
        }
        get labelBottomMargin() {
            return this.ae;
        }
        set labelBottomMargin(a) {
            this.ae = a;
            this.e("LabelBottomMargin");
        }
        get labelHorizontalAlignment() {
            return this.bu;
        }
        set labelHorizontalAlignment(a) {
            this.bu = a;
            this.e("LabelHorizontalAlignment");
        }
        get labelVerticalAlignment() {
            return this.bx;
        }
        set labelVerticalAlignment(a) {
            this.bx = a;
            this.e("LabelVerticalAlignment");
        }
        get crossingAxisRef() {
            return this.bn;
        }
        set crossingAxisRef(a) {
            this.bn = a;
            this.e("CrossingAxisRef");
        }
        get crossingValue() {
            return this.bh;
        }
        set crossingValue(a) {
            this.bh = a;
            this.e("CrossingValue");
        }
        get titlePosition() {
            return this.cc;
        }
        set titlePosition(a) {
            this.cc = a;
            this.e("TitlePosition");
        }
        get titleTextColor() {
            return this.cd;
        }
        set titleTextColor(a) {
            this.cd = a;
            this.e("TitleTextColor");
        }
        get titleLocation() {
            return this.cb;
        }
        set titleLocation(a) {
            this.cb = a;
            this.e("TitleLocation");
        }
        get titleShowFirstLabel() {
            return this.q;
        }
        set titleShowFirstLabel(a) {
            this.q = a;
            this.e("TitleShowFirstLabel");
        }
        get titleAngle() {
            return this.ap;
        }
        set titleAngle(a) {
            this.ap = a;
            this.e("TitleAngle");
        }
        get titleExtent() {
            return this.ar;
        }
        set titleExtent(a) {
            this.ar = a;
            this.e("TitleExtent");
        }
        get titleLeftMargin() {
            return this.at;
        }
        set titleLeftMargin(a) {
            this.at = a;
            this.e("TitleLeftMargin");
        }
        get titleRightMargin() {
            return this.au;
        }
        set titleRightMargin(a) {
            this.au = a;
            this.e("TitleRightMargin");
        }
        get titleTopMargin() {
            return this.av;
        }
        set titleTopMargin(a) {
            this.av = a;
            this.e("TitleTopMargin");
        }
        get titleBottomMargin() {
            return this.aq;
        }
        set titleBottomMargin(a) {
            this.aq = a;
            this.e("TitleBottomMargin");
        }
        get titleHorizontalAlignment() {
            return this.ca;
        }
        set titleHorizontalAlignment(a) {
            this.ca = a;
            this.e("TitleHorizontalAlignment");
        }
        get titleVerticalAlignment() {
            return this.ce;
        }
        set titleVerticalAlignment(a) {
            this.ce = a;
            this.e("TitleVerticalAlignment");
        }
        get annotations() {
            return this.f;
        }
        set annotations(a) {
            this.f = a;
            this.e("Annotations");
        }
        get coercionMethodsRef() {
            return this.bm;
        }
        set coercionMethodsRef(a) {
            this.bm = a;
            this.e("CoercionMethodsRef");
        }
        get expectFunctions() {
            return this.k;
        }
        set expectFunctions(a) {
            this.k = a;
            this.e("ExpectFunctions");
        }
        get labelFormat() {
            return this.bt;
        }
        set labelFormat(a) {
            this.bt = a;
            this.e("LabelFormat");
        }
        get labelFormatSpecifiers() {
            return this.g;
        }
        set labelFormatSpecifiers(a) {
            this.g = a;
            this.e("LabelFormatSpecifiers");
        }
        get rangeChangedRef() {
            return this.b1;
        }
        set rangeChangedRef(a) {
            this.b1 = a;
            this.e("RangeChangedRef");
        }
        get renderRequestedRef() {
            return this.b2;
        }
        set renderRequestedRef(a) {
            this.b2 = a;
            this.e("RenderRequestedRef");
        }
        get label() {
            return this.bp;
        }
        set label(a) {
            this.bp = a;
            this.e("Label");
        }
        get labelFontFamily() {
            return this.bq;
        }
        set labelFontFamily(a) {
            this.bq = a;
            this.e("LabelFontFamily");
        }
        get labelFontSize() {
            return this.ag;
        }
        set labelFontSize(a) {
            this.ag = a;
            this.e("LabelFontSize");
        }
        get labelFontWeight() {
            return this.bs;
        }
        set labelFontWeight(a) {
            this.bs = a;
            this.e("LabelFontWeight");
        }
        get labelFontStyle() {
            return this.br;
        }
        set labelFontStyle(a) {
            this.br = a;
            this.e("LabelFontStyle");
        }
        get titleFontFamily() {
            return this.b7;
        }
        set titleFontFamily(a) {
            this.b7 = a;
            this.e("TitleFontFamily");
        }
        get titleFontSize() {
            return this.as;
        }
        set titleFontSize(a) {
            this.as = a;
            this.e("TitleFontSize");
        }
        get titleFontWeight() {
            return this.b9;
        }
        set titleFontWeight(a) {
            this.b9 = a;
            this.e("TitleFontWeight");
        }
        get titleFontStyle() {
            return this.b8;
        }
        set titleFontStyle(a) {
            this.b8 = a;
            this.e("TitleFontStyle");
        }
        get labelVisibility() {
            return this.by;
        }
        set labelVisibility(a) {
            this.by = a;
            this.e("LabelVisibility");
        }
    }
    AxisDescription.$t = /*@__PURE__*/ markType(AxisDescription, 'AxisDescription', Description.$);
    return AxisDescription;
})();
