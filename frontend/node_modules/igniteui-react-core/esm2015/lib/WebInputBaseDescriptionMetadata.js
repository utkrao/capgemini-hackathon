/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebComponentValueChangedEventArgsDescriptionMetadata } from "./WebComponentValueChangedEventArgsDescriptionMetadata";
import { VoidEventArgsDescriptionMetadata } from "./VoidEventArgsDescriptionMetadata";
/**
 * @hidden
 */
export let WebInputBaseDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebInputBaseDescriptionMetadata extends Base {
        static b(a) {
            if (WebInputBaseDescriptionMetadata.a == null) {
                WebInputBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebInputBaseDescriptionMetadata.c(WebInputBaseDescriptionMetadata.a);
            }
            if (a.g(WebInputBaseDescriptionMetadata.a)) {
                return;
            }
            a.s(WebInputBaseDescriptionMetadata.a);
            WebComponentValueChangedEventArgsDescriptionMetadata.d(a);
            VoidEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:InputBase");
            a.item("Name", "String");
            a.item("Outlined", "Boolean");
            a.item("Required", "Boolean");
            a.item("Disabled", "Boolean");
            a.item("Readonly", "Boolean");
            a.item("Placeholder", "String");
            a.item("Label", "String");
            a.item("Size", "ExportedType:string:SizableComponentSize");
            a.item("Size@names", "Large;Small;Medium");
            a.item("InputOcurredRef", "EventRef::inputOcurred");
            a.item("FocusRef", "EventRef::focus");
            a.item("BlurRef", "EventRef::blur");
        }
        static d(a) {
            WebInputBaseDescriptionMetadata.b(a);
            a.t("WebInputBase", WebInputBaseDescriptionMetadata.a);
        }
    }
    WebInputBaseDescriptionMetadata.$t = /*@__PURE__*/ markType(WebInputBaseDescriptionMetadata, 'WebInputBaseDescriptionMetadata');
    WebInputBaseDescriptionMetadata.a = null;
    return WebInputBaseDescriptionMetadata;
})();
