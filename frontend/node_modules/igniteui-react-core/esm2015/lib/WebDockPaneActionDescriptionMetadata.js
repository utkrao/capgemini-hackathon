/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebDockingIndicatorDescriptionMetadata } from "./WebDockingIndicatorDescriptionMetadata";
import { WebDockManagerPaneDescriptionMetadata } from "./WebDockManagerPaneDescriptionMetadata";
import { WebPaneDragActionDescriptionMetadata } from "./WebPaneDragActionDescriptionMetadata";
import { WebDockPaneActionDescription } from "./WebDockPaneActionDescription";
/**
 * @hidden
 */
export let WebDockPaneActionDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebDockPaneActionDescriptionMetadata extends Base {
        static b(a) {
            if (WebDockPaneActionDescriptionMetadata.a == null) {
                WebDockPaneActionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebDockPaneActionDescriptionMetadata.c(WebDockPaneActionDescriptionMetadata.a);
            }
            if (a.g(WebDockPaneActionDescriptionMetadata.a)) {
                return;
            }
            a.s(WebDockPaneActionDescriptionMetadata.a);
            WebDockingIndicatorDescriptionMetadata.d(a);
            WebDockManagerPaneDescriptionMetadata.d(a);
        }
        static c(a) {
            WebPaneDragActionDescriptionMetadata.c(a);
            a.item("__qualifiedNameTS", "String:DockPaneAction");
            a.item("ActionType", "(wc:Type)ExportedType:string:PaneDragActionType");
            a.item("ActionType@names", "FloatPane;MoveFloatingPane;DockPane;MoveTab");
            a.item("DockingIndicator", "ExportedType:WebDockingIndicator");
            a.item("TargetPane", "ExportedType:WebDockManagerPane");
        }
        static d(a) {
            WebDockPaneActionDescriptionMetadata.b(a);
            a.u("WebDockPaneAction", () => new WebDockPaneActionDescription());
            a.t("WebDockPaneAction", WebDockPaneActionDescriptionMetadata.a);
        }
    }
    WebDockPaneActionDescriptionMetadata.$t = /*@__PURE__*/ markType(WebDockPaneActionDescriptionMetadata, 'WebDockPaneActionDescriptionMetadata');
    WebDockPaneActionDescriptionMetadata.a = null;
    return WebDockPaneActionDescriptionMetadata;
})();
