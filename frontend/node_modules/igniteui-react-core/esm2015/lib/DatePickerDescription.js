/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let DatePickerDescription = /*@__PURE__*/ (() => {
    class DatePickerDescription extends Description {
        constructor() {
            super();
            this.u = new Date();
            this.t = new Date();
            this.an = null;
            this.ar = null;
            this.ao = null;
            this.z = 0;
            this.ap = null;
            this.aq = null;
            this.at = null;
            this.s = new Date();
            this.r = new Date();
            this.ag = null;
            this.ad = null;
            this.aw = null;
            this.aa = 0;
            this.ax = null;
            this.ay = null;
            this.av = null;
            this.al = null;
            this.i = false;
            this.j = false;
            this.f = false;
            this.h = false;
            this.ah = null;
            this.ai = null;
            this.k = false;
            this.af = null;
            this.aj = null;
            this.g = false;
            this.au = null;
            this.ak = null;
            this.as = null;
            this.am = null;
            this.ae = null;
            this.az = null;
        }
        get_type() {
            return "DatePicker";
        }
        get type() {
            return this.get_type();
        }
        get value() {
            return this.u;
        }
        set value(a) {
            this.u = a;
            this.e("Value");
        }
        get today() {
            return this.t;
        }
        set today(a) {
            this.t = a;
            this.e("Today");
        }
        get label() {
            return this.an;
        }
        set label(a) {
            this.an = a;
            this.e("Label");
        }
        get labelTextColor() {
            return this.ar;
        }
        set labelTextColor(a) {
            this.ar = a;
            this.e("LabelTextColor");
        }
        get labelFontFamily() {
            return this.ao;
        }
        set labelFontFamily(a) {
            this.ao = a;
            this.e("LabelFontFamily");
        }
        get labelFontSize() {
            return this.z;
        }
        set labelFontSize(a) {
            this.z = a;
            this.e("LabelFontSize");
        }
        get labelFontStyle() {
            return this.ap;
        }
        set labelFontStyle(a) {
            this.ap = a;
            this.e("LabelFontStyle");
        }
        get labelFontWeight() {
            return this.aq;
        }
        set labelFontWeight(a) {
            this.aq = a;
            this.e("LabelFontWeight");
        }
        get placeholder() {
            return this.at;
        }
        set placeholder(a) {
            this.at = a;
            this.e("Placeholder");
        }
        get minDate() {
            return this.s;
        }
        set minDate(a) {
            this.s = a;
            this.e("MinDate");
        }
        get maxDate() {
            return this.r;
        }
        set maxDate(a) {
            this.r = a;
            this.e("MaxDate");
        }
        get density() {
            return this.ag;
        }
        set density(a) {
            this.ag = a;
            this.e("Density");
        }
        get baseTheme() {
            return this.ad;
        }
        set baseTheme(a) {
            this.ad = a;
            this.e("BaseTheme");
        }
        get textFontFamily() {
            return this.aw;
        }
        set textFontFamily(a) {
            this.aw = a;
            this.e("TextFontFamily");
        }
        get textFontSize() {
            return this.aa;
        }
        set textFontSize(a) {
            this.aa = a;
            this.e("TextFontSize");
        }
        get textFontStyle() {
            return this.ax;
        }
        set textFontStyle(a) {
            this.ax = a;
            this.e("TextFontStyle");
        }
        get textFontWeight() {
            return this.ay;
        }
        set textFontWeight(a) {
            this.ay = a;
            this.e("TextFontWeight");
        }
        get textColor() {
            return this.av;
        }
        set textColor(a) {
            this.av = a;
            this.e("TextColor");
        }
        get iconColor() {
            return this.al;
        }
        set iconColor(a) {
            this.al = a;
            this.e("IconColor");
        }
        get showClearButton() {
            return this.i;
        }
        set showClearButton(a) {
            this.i = a;
            this.e("ShowClearButton");
        }
        get showTodayButton() {
            return this.j;
        }
        set showTodayButton(a) {
            this.j = a;
            this.e("ShowTodayButton");
        }
        get allowTextInput() {
            return this.f;
        }
        set allowTextInput(a) {
            this.f = a;
            this.e("AllowTextInput");
        }
        get openOnFocus() {
            return this.h;
        }
        set openOnFocus(a) {
            this.h = a;
            this.e("OpenOnFocus");
        }
        get firstDayOfWeek() {
            return this.ah;
        }
        set firstDayOfWeek(a) {
            this.ah = a;
            this.e("FirstDayOfWeek");
        }
        get firstWeekOfYear() {
            return this.ai;
        }
        set firstWeekOfYear(a) {
            this.ai = a;
            this.e("FirstWeekOfYear");
        }
        get showWeekNumbers() {
            return this.k;
        }
        set showWeekNumbers(a) {
            this.k = a;
            this.e("ShowWeekNumbers");
        }
        get dateFormat() {
            return this.af;
        }
        set dateFormat(a) {
            this.af = a;
            this.e("DateFormat");
        }
        get formatString() {
            return this.aj;
        }
        set formatString(a) {
            this.aj = a;
            this.e("FormatString");
        }
        get isDisabled() {
            return this.g;
        }
        set isDisabled(a) {
            this.g = a;
            this.e("IsDisabled");
        }
        get selectedValueChangedRef() {
            return this.au;
        }
        set selectedValueChangedRef(a) {
            this.au = a;
            this.e("SelectedValueChangedRef");
        }
        get gotFocusRef() {
            return this.ak;
        }
        set gotFocusRef(a) {
            this.ak = a;
            this.e("GotFocusRef");
        }
        get lostFocusRef() {
            return this.as;
        }
        set lostFocusRef(a) {
            this.as = a;
            this.e("LostFocusRef");
        }
        get keyDownRef() {
            return this.am;
        }
        set keyDownRef(a) {
            this.am = a;
            this.e("KeyDownRef");
        }
        get changingRef() {
            return this.ae;
        }
        set changingRef(a) {
            this.ae = a;
            this.e("ChangingRef");
        }
        get valueChangeRef() {
            return this.az;
        }
        set valueChangeRef(a) {
            this.az = a;
            this.e("ValueChangeRef");
        }
    }
    DatePickerDescription.$t = /*@__PURE__*/ markType(DatePickerDescription, 'DatePickerDescription', Description.$);
    return DatePickerDescription;
})();
