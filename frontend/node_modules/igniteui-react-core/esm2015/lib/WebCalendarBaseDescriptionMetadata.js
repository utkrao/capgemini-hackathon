/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { DateRangeDescriptorDescriptionMetadata } from "./DateRangeDescriptorDescriptionMetadata";
import { WebCalendarBaseDescription } from "./WebCalendarBaseDescription";
/**
 * @hidden
 */
export let WebCalendarBaseDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebCalendarBaseDescriptionMetadata extends Base {
        static b(a) {
            if (WebCalendarBaseDescriptionMetadata.a == null) {
                WebCalendarBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebCalendarBaseDescriptionMetadata.c(WebCalendarBaseDescriptionMetadata.a);
            }
            if (a.g(WebCalendarBaseDescriptionMetadata.a)) {
                return;
            }
            a.s(WebCalendarBaseDescriptionMetadata.a);
            DateRangeDescriptorDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:CalendarBase");
            a.item("Selection", "ExportedType:string:CalendarBaseSelection");
            a.item("Selection@names", "Single;Multiple;Range");
            a.item("ShowWeekNumbers", "Boolean");
            a.item("WeekStart", "ExportedType:string:CalendarBaseWeekStart");
            a.item("WeekStart@names", "Sunday;Monday;Tuesday;Wednesday;Thursday;Friday;Saturday");
            a.item("Locale", "String");
            a.item("DisabledDates", "Array:DateRangeDescriptorDescription:IDateRangeDescriptor");
            a.item("SpecialDates", "Array:DateRangeDescriptorDescription:IDateRangeDescriptor");
        }
        static d(a) {
            WebCalendarBaseDescriptionMetadata.b(a);
            a.u("WebCalendarBase", () => new WebCalendarBaseDescription());
            a.t("WebCalendarBase", WebCalendarBaseDescriptionMetadata.a);
        }
    }
    WebCalendarBaseDescriptionMetadata.$t = /*@__PURE__*/ markType(WebCalendarBaseDescriptionMetadata, 'WebCalendarBaseDescriptionMetadata');
    WebCalendarBaseDescriptionMetadata.a = null;
    return WebCalendarBaseDescriptionMetadata;
})();
