/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebDockManagerDescription = /*@__PURE__*/ (() => {
    class WebDockManagerDescription extends Description {
        constructor() {
            super();
            this.h = null;
            this.j = null;
            this.n = null;
            this.f = null;
            this.s = false;
            this.k = null;
            this.p = null;
            this.r = false;
            this.t = false;
        }
        get_type() {
            return "WebDockManager";
        }
        get type() {
            return this.get_type();
        }
        get layout() {
            return this.h;
        }
        set layout(a) {
            this.h = a;
            this.e("Layout");
        }
        get draggedPane() {
            return this.j;
        }
        set draggedPane(a) {
            this.j = a;
            this.e("DraggedPane");
        }
        get dropPosition() {
            return this.n;
        }
        set dropPosition(a) {
            this.n = a;
            this.e("DropPosition");
        }
        get activePane() {
            return this.f;
        }
        set activePane(a) {
            this.f = a;
            this.e("ActivePane");
        }
        get allowMaximize() {
            return this.s;
        }
        set allowMaximize(a) {
            this.s = a;
            this.e("AllowMaximize");
        }
        get maximizedPane() {
            return this.k;
        }
        set maximizedPane(a) {
            this.k = a;
            this.e("MaximizedPane");
        }
        get resourceStrings() {
            return this.p;
        }
        set resourceStrings(a) {
            this.p = a;
            this.e("ResourceStrings");
        }
        get allowFloatingPanesResize() {
            return this.r;
        }
        set allowFloatingPanesResize(a) {
            this.r = a;
            this.e("AllowFloatingPanesResize");
        }
        get disableKeyboardNavigation() {
            return this.t;
        }
        set disableKeyboardNavigation(a) {
            this.t = a;
            this.e("DisableKeyboardNavigation");
        }
    }
    WebDockManagerDescription.$t = /*@__PURE__*/ markType(WebDockManagerDescription, 'WebDockManagerDescription', Description.$);
    return WebDockManagerDescription;
})();
