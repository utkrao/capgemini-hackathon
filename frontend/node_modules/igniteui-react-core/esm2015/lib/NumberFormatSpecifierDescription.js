/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { FormatSpecifierDescription } from "./FormatSpecifierDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let NumberFormatSpecifierDescription = /*@__PURE__*/ (() => {
    class NumberFormatSpecifierDescription extends FormatSpecifierDescription {
        constructor() {
            super();
            this.ab = null;
            this.w = null;
            this.x = null;
            this.z = null;
            this.aa = null;
            this.y = null;
            this.ac = null;
            this.ad = null;
            this.ae = null;
            this.af = null;
            this.ag = null;
            this.ah = null;
            this.ai = null;
            this.j = false;
            this.o = 0;
            this.n = 0;
            this.l = 0;
            this.p = 0;
            this.m = 0;
        }
        get_type() {
            return "NumberFormatSpecifier";
        }
        get locale() {
            return this.ab;
        }
        set locale(a) {
            this.ab = a;
            this.e("Locale");
        }
        get compactDisplay() {
            return this.w;
        }
        set compactDisplay(a) {
            this.w = a;
            this.e("CompactDisplay");
        }
        get currency() {
            return this.x;
        }
        set currency(a) {
            this.x = a;
            this.e("Currency");
        }
        get currencyDisplay() {
            return this.z;
        }
        set currencyDisplay(a) {
            this.z = a;
            this.e("CurrencyDisplay");
        }
        get currencySign() {
            return this.aa;
        }
        set currencySign(a) {
            this.aa = a;
            this.e("CurrencySign");
        }
        get currencyCode() {
            return this.y;
        }
        set currencyCode(a) {
            this.y = a;
            this.e("CurrencyCode");
        }
        get localeMatcher() {
            return this.ac;
        }
        set localeMatcher(a) {
            this.ac = a;
            this.e("LocaleMatcher");
        }
        get notation() {
            return this.ad;
        }
        set notation(a) {
            this.ad = a;
            this.e("Notation");
        }
        get numberingSystem() {
            return this.ae;
        }
        set numberingSystem(a) {
            this.ae = a;
            this.e("NumberingSystem");
        }
        get signDisplay() {
            return this.af;
        }
        set signDisplay(a) {
            this.af = a;
            this.e("SignDisplay");
        }
        get style() {
            return this.ag;
        }
        set style(a) {
            this.ag = a;
            this.e("Style");
        }
        get unit() {
            return this.ah;
        }
        set unit(a) {
            this.ah = a;
            this.e("Unit");
        }
        get unitDisplay() {
            return this.ai;
        }
        set unitDisplay(a) {
            this.ai = a;
            this.e("UnitDisplay");
        }
        get useGrouping() {
            return this.j;
        }
        set useGrouping(a) {
            this.j = a;
            this.e("UseGrouping");
        }
        get minimumIntegerDigits() {
            return this.o;
        }
        set minimumIntegerDigits(a) {
            this.o = a;
            this.e("MinimumIntegerDigits");
        }
        get minimumFractionDigits() {
            return this.n;
        }
        set minimumFractionDigits(a) {
            this.n = a;
            this.e("MinimumFractionDigits");
        }
        get maximumFractionDigits() {
            return this.l;
        }
        set maximumFractionDigits(a) {
            this.l = a;
            this.e("MaximumFractionDigits");
        }
        get minimumSignificantDigits() {
            return this.p;
        }
        set minimumSignificantDigits(a) {
            this.p = a;
            this.e("MinimumSignificantDigits");
        }
        get maximumSignificantDigits() {
            return this.m;
        }
        set maximumSignificantDigits(a) {
            this.m = a;
            this.e("MaximumSignificantDigits");
        }
    }
    NumberFormatSpecifierDescription.$t = /*@__PURE__*/ markType(NumberFormatSpecifierDescription, 'NumberFormatSpecifierDescription', FormatSpecifierDescription.$);
    NumberFormatSpecifierDescription.__marshalByValue1 = true;
    NumberFormatSpecifierDescription.__marshalByValueAlias1 = "NumberFormatSpecifier";
    return NumberFormatSpecifierDescription;
})();
