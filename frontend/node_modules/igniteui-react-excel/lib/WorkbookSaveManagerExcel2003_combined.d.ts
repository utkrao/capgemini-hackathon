import { WorkbookSaveManager } from "./WorkbookSaveManager";
import { CellContext } from "./CellContext";
import { CellDataContext } from "./CellDataContext";
import { ContextStack } from "./ContextStack";
import { List$1 } from "igniteui-react-core";
import { WorkbookSaveManagerExcel2003_ExtSstItem } from "./WorkbookSaveManagerExcel2003_ExtSstItem";
import { WorksheetCellFormatData } from "./WorksheetCellFormatData";
import { WorkbookSerializationDataExcel2003_ImageHolder } from "./WorkbookSerializationDataExcel2003_ImageHolder";
import { WorkbookStyle } from "./WorkbookStyle";
import { Stream, Base, Nullable$1, Type, ValueType, IList$1 } from "igniteui-react-core";
import { SeekableBufferedStream } from "./SeekableBufferedStream";
import { InPlaceTransform } from "./InPlaceTransform";
import { Workbook } from "./Workbook";
import { WorkbookSaveOptions } from "./WorkbookSaveOptions";
import { WorkItem } from "./WorkItem";
import { Dictionary$2 } from "igniteui-react-core";
import { SingleTargetFormula } from "./SingleTargetFormula";
import { WorksheetCell } from "./WorksheetCell";
import { IWorksheetImage } from "./IWorksheetImage";
import { ExcelImage } from "./ExcelImage";
import { WorksheetShape } from "./WorksheetShape";
import { Worksheet } from "./Worksheet";
import { Formula } from "./Formula";
import { WorksheetRow } from "./WorksheetRow";
import { BiffRecordStream } from "./BiffRecordStream";
import { FormulaContext } from "./FormulaContext";
import { FormulaToken } from "./FormulaToken";
import { FormulaTokenVisitor } from "./FormulaTokenVisitor";
import { BIFF8RecordType } from "./BIFF8RecordType";
import { BiffRecordBase$3 } from "./BiffRecordBase$3";
import { BinaryReader } from "igniteui-react-core";
import { Sheet } from "./Sheet";
import { WorksheetTable } from "./WorksheetTable";
import { WorksheetTableColumn } from "./WorksheetTableColumn";
import { WorksheetRegion } from "./WorksheetRegion";
import { ArrayFormula } from "./ArrayFormula";
import { WorkbookReferenceBase } from "./WorkbookReferenceBase";
import { WorksheetTableStyle } from "./WorksheetTableStyle";
import { ExtProp } from "./ExtProp";
import { XFProp } from "./XFProp";
import { WorksheetCellComment } from "./WorksheetCellComment";
import { WorksheetSerializationCache } from "./WorksheetSerializationCache";
import { SortedList$2 } from "./SortedList$2";
import { TableColumnFilterData } from "./TableColumnFilterData";
import { Filter } from "./Filter";
import { SortSettings$1 } from "./SortSettings$1";
import { CONDFMTSerializer } from "./CONDFMTSerializer";
import { ConditionBase } from "./ConditionBase";
import { WorkbookColorInfo } from "./WorkbookColorInfo";
import { WorksheetShapeVisitor$2 } from "./WorksheetShapeVisitor$2";
import { PropertyTableBase_PropertyValue } from "./PropertyTableBase_PropertyValue";
import { WorksheetShapeWithText } from "./WorksheetShapeWithText";
import { UnknownShape } from "./UnknownShape";
import { WorksheetImage } from "./WorksheetImage";
import { WorkbookLoadManager } from "./WorkbookLoadManager";
import { XFRecordInfo } from "./XFRecordInfo";
import { XFEXTRecordInfo } from "./XFEXTRecordInfo";
import { STYLERecordInfo } from "./STYLERecordInfo";
import { STYLEEXTRecordInfo } from "./STYLEEXTRecordInfo";
import { WorksheetReference } from "./WorksheetReference";
import { DXFRecordInfo } from "./DXFRecordInfo";
import { FONTRecordInfo } from "./FONTRecordInfo";
import { IPackageFactory } from "./IPackageFactory";
import { WorksheetCellAddress } from "./WorksheetCellAddress";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { WorkbookLoadOptions } from "./WorkbookLoadOptions";
import { WorksheetShapeGroup } from "./WorksheetShapeGroup";
import { Rect } from "igniteui-react-core";
import { NameToken } from "./NameToken";
import { NamedReference } from "./NamedReference";
import { DocumentSummaryInformation } from "./DocumentSummaryInformation";
import { SummaryInformation } from "./SummaryInformation";
import { FormulaType } from "./FormulaType";
import { WorksheetCFInfo } from "./WorksheetCFInfo";
import { CondFmtWrapper } from "./CondFmtWrapper";
import { CfWrapper } from "./CfWrapper";
import { CfExNonCf12Wrapper } from "./CfExNonCf12Wrapper";
import { FtRboData } from "./FtRboData";
import { Obj } from "./Obj";
import { FtCmo } from "./FtCmo";
import { FunctionVOperator } from "./FunctionVOperator";
import { FunctionOperator } from "./FunctionOperator";
import { ArrayToken } from "./ArrayToken";
import { MemAreaOperator } from "./MemAreaOperator";
import { Area3DToken } from "./Area3DToken";
import { AreaErrToken } from "./AreaErrToken";
import { AreaToken } from "./AreaToken";
import { AttrChooseToken } from "./AttrChooseToken";
import { AttrIfToken } from "./AttrIfToken";
import { AttrSkipToken } from "./AttrSkipToken";
import { AttrSpaceToken } from "./AttrSpaceToken";
import { AttrSumToken } from "./AttrSumToken";
import { AttrVolatileToken } from "./AttrVolatileToken";
import { BinaryOperatorToken } from "./BinaryOperatorToken";
import { BoolToken } from "./BoolToken";
import { ErrToken } from "./ErrToken";
import { ExpToken } from "./ExpToken";
import { IntToken } from "./IntToken";
import { MemErrOperator } from "./MemErrOperator";
import { MemFuncOperator } from "./MemFuncOperator";
import { MemNoMemOperator } from "./MemNoMemOperator";
import { MissArgToken } from "./MissArgToken";
import { NameXToken } from "./NameXToken";
import { NumberToken } from "./NumberToken";
import { ParenToken } from "./ParenToken";
import { Ref3DToken } from "./Ref3DToken";
import { RefErrToken } from "./RefErrToken";
import { RefToken } from "./RefToken";
import { StrToken } from "./StrToken";
import { StructuredTableReference } from "./StructuredTableReference";
import { TblToken } from "./TblToken";
import { UnaryOperatorToken } from "./UnaryOperatorToken";
import { FormulaTokenVisitor$2 } from "./FormulaTokenVisitor$2";
import { BiffRecordStream_FormattedStringInfo } from "./BiffRecordStream_FormattedStringInfo";
import { ColorableItem } from "./ColorableItem";
import { Biff8RecordStream_AFDOper } from "./Biff8RecordStream_AFDOper";
import { ST_IconSetType } from "./ST_IconSetType";
import { FixedDateGroup } from "./FixedDateGroup";
import { IFilterable } from "./IFilterable";
import { SortCondition } from "./SortCondition";
import { ST_SortBy } from "./ST_SortBy";
import { SortDirection } from "./SortDirection";
import { ISortable } from "./ISortable";
import { Rgce } from "./Rgce";
import { CfExWrapper } from "./CfExWrapper";
import { HorizontalCellAlignment } from "./HorizontalCellAlignment";
import { VerticalCellAlignment } from "./VerticalCellAlignment";
import { IWorkbookFont } from "./IWorkbookFont";
import { FontSuperscriptSubscriptStyle } from "./FontSuperscriptSubscriptStyle";
import { WorksheetProtectedRange } from "./WorksheetProtectedRange";
import { FontScheme } from "./FontScheme";
import { FullColorExtInfo } from "./FullColorExtInfo";
import { GradStopInfo } from "./GradStopInfo";
import { CellFillGradientStop } from "./CellFillGradientStop";
import { Guid } from "igniteui-react-core";
import { WorksheetRegionAddress } from "./WorksheetRegionAddress";
import { XFExtGradientInfo } from "./XFExtGradientInfo";
import { CellFillGradient } from "./CellFillGradient";
import { XFPropColorInfo } from "./XFPropColorInfo";
import { XFPropGradientFill } from "./XFPropGradientFill";
import { XFPropGradientStop } from "./XFPropGradientStop";
import { XFPropGradientStopLoaded } from "./XFPropGradientStopLoaded";
import { FtGmo } from "./FtGmo";
import { FtCf } from "./FtCf";
import { FtPioGrbit } from "./FtPioGrbit";
import { FtCbls } from "./FtCbls";
import { FtRbo } from "./FtRbo";
import { FtSbs } from "./FtSbs";
import { FtNts } from "./FtNts";
import { FtMacro } from "./FtMacro";
import { FtPictFmla } from "./FtPictFmla";
import { ObjLinkFmla } from "./ObjLinkFmla";
import { FtCblsData } from "./FtCblsData";
import { FtLbsData } from "./FtLbsData";
import { FtEdoData } from "./FtEdoData";
import { FtGboData } from "./FtGboData";
import { ObjFmla } from "./ObjFmla";
import { LbsDropData } from "./LbsDropData";
import { PictFmlaKey } from "./PictFmlaKey";
import { ObjectParsedFormula } from "./ObjectParsedFormula";
import { PictFmlaEmbedInfo } from "./PictFmlaEmbedInfo";
import { OBJRecordType } from "./OBJRecordType";
import { IEscherRecord } from "./IEscherRecord";
import { EscherRecordType } from "./EscherRecordType";
import { BLIPType } from "./BLIPType";
import { MemoryStream } from "igniteui-react-core";
import { ICalloutRule } from "./ICalloutRule";
import { PositioningOptions } from "./PositioningOptions";
import { CellDefinition } from "./CellDefinition";
/**
 * @hidden
 */
export declare class WorkbookSaveManagerExcel2003 extends WorkbookSaveManager {
    static $t: Type;
    private _cu;
    private _cm;
    private readonly _cv;
    private _c1;
    private readonly _cs;
    private readonly _ct;
    private readonly _cw;
    private readonly _cr;
    private _cq;
    static staticInit(): void;
    constructor(a: Workbook, b: Stream, c: string, d: WorkbookSaveOptions);
    protected disposeCore(a: boolean): void;
    protected get__r(): CellContext;
    protected set__r(a: CellContext): void;
    protected get__q(): CellDataContext;
    protected set__q(a: CellDataContext): void;
    _a8(a: WorksheetCellFormatData): number;
    _a9(a: WorkbookStyle): number;
    _bm(): void;
    protected _bq(a: IWorksheetImage): void;
    protected get__ai(): boolean;
    protected get _ai(): boolean;
    protected _b6(a: WorksheetShape): {
        p0?: WorksheetShape;
    };
    protected _p(): WorkItem;
    _c2(a: number): number;
    _cn(a: Formula): SingleTargetFormula;
    _co(a: WorksheetRow, b: number, c: Formula): WorksheetCell;
    _da(a: Biff8RecordStream): void;
    _db(a: Biff8RecordStream): void;
    _dc(a: WorksheetShape): void;
    static _cb(a: Workbook, b: Stream, c: WorkbookSaveOptions): WorkItem;
    _c4(a: Formula, b: boolean, c: boolean, d?: boolean): number;
    _dr(a: BIFF8RecordType): void;
    _ce(a: BIFF8RecordType): WorkItem;
    private _c7;
    private _c8;
    private _c9;
    private _cc;
    private _cd;
    private static _cp;
    private _dd;
    private _de;
    private _c5;
    private _df;
    private _dh;
    private _di;
    private _dj;
    private _dk;
    private _dl;
    private _dm;
    private _dn;
    private _dp;
    private _dq;
    private _ds;
    private _dt;
    private _cf;
    private _du;
    private _dv;
    private _dw;
    private _cg;
    private _ch;
    private _dx;
    private _dy;
    private _dg;
    get _b9(): ContextStack;
    _cl: CellContext;
    private _ci;
    get _cj(): CellDataContext;
    set _cj(a: CellDataContext);
    get _ck(): Biff8RecordStream;
    set _ck(a: Biff8RecordStream);
    get _cx(): List$1<WorkbookSaveManagerExcel2003_ExtSstItem>;
    get _cy(): List$1<WorksheetCellFormatData>;
    get _cz(): List$1<WorkbookSerializationDataExcel2003_ImageHolder>;
    get _c0(): List$1<WorkbookStyle>;
    get _c6(): Stream;
    _ca: InPlaceTransform;
    get _b8(): number[];
}
/**
 * @hidden
 */
export declare class WorkbookSaveManagerExcel2003_PopuplateShapeKnownPropertiesVisitor extends WorksheetShapeVisitor$2<WorkbookSaveManagerExcel2003, boolean> {
    static $t: Type;
    static readonly d: WorkbookSaveManagerExcel2003_PopuplateShapeKnownPropertiesVisitor;
    constructor();
    b(a: WorksheetShape, b: WorkbookSaveManagerExcel2003): boolean;
    c(a: WorksheetShapeWithText, b: WorkbookSaveManagerExcel2003): boolean;
}
/**
 * @hidden
 */
export declare class WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor extends WorksheetShapeVisitor$2<WorkbookSaveManagerExcel2003, boolean> {
    static $t: Type;
    static readonly d: WorkbookSaveManagerExcel2003_PopuplateShapeDrawingPropertiesVisitor;
    constructor();
    visitUnknownShape(shape: UnknownShape, saveManager: WorkbookSaveManagerExcel2003): boolean;
    _visitUnknownShape$i(a: UnknownShape, b: WorkbookSaveManagerExcel2003): boolean;
    visitWorksheetCellComment(shape: WorksheetCellComment, saveManager: WorkbookSaveManagerExcel2003): boolean;
    _visitWorksheetCellComment$i(a: WorksheetCellComment, b: WorkbookSaveManagerExcel2003): boolean;
    visitWorksheetImage(shape: WorksheetImage, saveManager: WorkbookSaveManagerExcel2003): boolean;
    _visitWorksheetImage$i(a: WorksheetImage, b: WorkbookSaveManagerExcel2003): boolean;
    b(a: WorksheetShape, b: WorkbookSaveManagerExcel2003): boolean;
    private static f;
    private e;
}
/**
 * @hidden
 */
export declare class WorkbookLoadManagerExcel2003 extends WorkbookLoadManager {
    static $t: Type;
    _a8: boolean;
    private readonly _bd;
    private readonly _be;
    private _a1;
    private _az;
    private _a2;
    private _a5;
    private _bn;
    private _cb;
    private _bo;
    private _cc;
    private _bp;
    private _bq;
    private _br;
    private _bs;
    readonly _bf: Dictionary$2<NameToken, number>;
    private _a9;
    private _bt;
    private _bu;
    readonly _ay: WorkbookLoadManagerExcel2003_ResolveNamedReferenceVisitor;
    private readonly _ak;
    private _bv;
    private readonly _bg;
    private _af;
    private readonly _bh;
    private readonly _b8;
    private readonly _bi;
    private _b7;
    private _aw;
    static staticInit(): void;
    constructor(a: Workbook, b: Stream, c: string, d: WorkbookLoadOptions);
    protected disposeCore(a: boolean): void;
    _r(): WorksheetCellFormatData;
    _cf(a: NamedReference, b: SingleTargetFormula, c: boolean): void;
    protected _p(): WorkItem;
    _z(): void;
    _cu(a: WorksheetShapeGroup): Rect;
    _a4(a: number): WorkbookStyle;
    _a6(a: Worksheet, b: number): WorksheetRow;
    _as(a: number[], b: number): {
        ret: ArrayFormula;
        p0?: number[];
        p1?: number;
    };
    _ao(): WorkItem;
    _ci(a: Stream, b: DocumentSummaryInformation, c: SummaryInformation): void;
    _at(a: FormulaType, b: number[], c: number): {
        ret: Formula;
        p1?: number[];
        p2?: number;
    };
    _au(a: FormulaType, b: number, c: number[], d: number): {
        ret: Formula;
        p2?: number[];
        p3?: number;
    };
    _cj(): void;
    _ck(a: Biff8RecordStream): void;
    _cl(a: Biff8RecordStream): void;
    _cm(a: WorksheetRow): void;
    _cn(a: WorkbookReferenceBase): void;
    _co(a: number): void;
    _cs(a: WorksheetShapeGroup, b: Rect): void;
    _ct(a: Worksheet): void;
    _ar(): WorkItem;
    _ax(a: Worksheet): WorksheetCFInfo;
    private _cp;
    private _cg;
    private _am;
    static _an(a: Workbook, b: Stream, c: string, d: WorkbookLoadOptions): WorkItem;
    private _ch;
    private _ap;
    private _aq;
    private _cq;
    private _cr;
    get _ba(): boolean;
    get _bj(): Dictionary$2<number, List$1<WorksheetCellFormatData>>;
    get _ai(): ContextStack;
    get _a0(): WorkbookReferenceBase;
    get _a3(): WorksheetReference;
    get _av(): Biff8RecordStream;
    set _av(a: Biff8RecordStream);
    _a7: WorksheetTableStyle;
    get _bw(): List$1<DXFRecordInfo>;
    get _cd(): Nullable$1<number>;
    set _cd(a: Nullable$1<number>);
    get _bx(): List$1<FONTRecordInfo>;
    get _ce(): Nullable$1<number>;
    set _ce(a: Nullable$1<number>);
    get _by(): List$1<STYLEEXTRecordInfo>;
    get _bz(): List$1<STYLERecordInfo>;
    get _b0(): List$1<XFEXTRecordInfo>;
    get _b1(): List$1<XFRecordInfo>;
    get _b2(): List$1<WorksheetCellFormatData>;
    _bb: boolean;
    get _b3(): List$1<WorkbookSerializationDataExcel2003_ImageHolder>;
    _bc: boolean;
    get _b4(): List$1<WorksheetCellComment>;
    get _b5(): List$1<WorkbookStyle>;
    _b6: number;
    get _al(): IPackageFactory;
    get _bk(): Dictionary$2<WorksheetCellAddress, ExcelCalcValue>;
    _aj: InPlaceTransform;
    get _bl(): Dictionary$2<WorksheetCellAddress, Formula>;
    get _ca(): Stream;
    get _b9(): BinaryReader;
    get _bm(): Dictionary$2<number, number>;
    get _ah(): number[];
    _ag(): number[];
}
/**
 * @hidden
 */
export declare class WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor extends FormulaTokenVisitor {
    static $t: Type;
    private static a1;
    az: number[];
    a3: number;
    private a0;
    constructor();
    g(): void;
    o(a: ArrayToken): void;
    ae(a: MemAreaOperator): void;
    static a2(a: FormulaContext, b: WorkbookLoadManagerExcel2003, c: number[], d: number): WorkbookLoadManagerExcel2003_LoadAdditionalDataTokenVisitor;
}
/**
 * @hidden
 */
export declare class WorkbookLoadManagerExcel2003_LoadTokenVisitor extends FormulaTokenVisitor {
    static $t: Type;
    private static a2;
    az: number[];
    a6: number;
    private a5;
    private a1;
    private a0;
    constructor();
    e(a: FormulaToken): void;
    g(): void;
    j(a: Area3DToken): void;
    l(a: AreaErrToken): void;
    n(a: AreaToken): void;
    o(a: ArrayToken): void;
    p(a: AttrChooseToken): void;
    q(a: AttrIfToken): void;
    r(a: AttrSkipToken): void;
    s(a: AttrSpaceToken): void;
    t(a: AttrSumToken): void;
    u(a: AttrVolatileToken): void;
    v(a: BinaryOperatorToken): void;
    w(a: BoolToken): void;
    y(a: ErrToken): void;
    z(a: ExpToken): void;
    aa(a: FunctionOperator): void;
    ac(a: FunctionVOperator): void;
    ad(a: IntToken): void;
    ae(a: MemAreaOperator): void;
    af(a: MemErrOperator): void;
    ag(a: MemFuncOperator): void;
    ah(a: MemNoMemOperator): void;
    ai(a: MissArgToken): void;
    aj(a: NameToken): void;
    ak(a: NameXToken): void;
    al(a: NumberToken): void;
    an(a: ParenToken): void;
    ap(a: Ref3DToken): void;
    as(a: RefErrToken): void;
    au(a: RefToken): void;
    av(a: StrToken): void;
    aw(a: StructuredTableReference): void;
    ax(a: TblToken): void;
    ay(a: UnaryOperatorToken): void;
    static a3(a: FormulaContext, b: WorkbookLoadManagerExcel2003, c: boolean, d: number[], e: number): WorkbookLoadManagerExcel2003_LoadTokenVisitor;
    protected a4(): WorksheetReference;
    a7(a: NameToken, b: number): void;
}
/**
 * @hidden
 */
export declare class WorkbookLoadManagerExcel2003_ResolveNamedReferenceVisitor extends FormulaTokenVisitor$2<number, boolean> {
    static $t: Type;
    private readonly a3;
    constructor(a: WorkbookLoadManagerExcel2003);
    d(a: FormulaToken, b: number): boolean;
    af(a: NameToken, b: number): boolean;
    ag(a: NameXToken, b: number): boolean;
}
/**
 * @hidden
 */
export declare class WorkbookSerializationDataExcel2003 extends ValueType {
    static $t: Type;
    constructor(a: number, b: Stream);
    constructor();
    constructor(a: number, ..._rest: any[]);
    private readonly g;
    private readonly f;
    private readonly i;
    private readonly h;
    private readonly j;
    private readonly k;
    private readonly l;
    readonly b: ContextStack;
    d: Biff8RecordStream;
    readonly p: List$1<WorksheetCellFormatData>;
    readonly q: List$1<WorkbookSerializationDataExcel2003_ImageHolder>;
    readonly c: SeekableBufferedStream;
    a: number[];
    s(a: number): void;
    e(a: BIFF8RecordType): Biff8RecordBase;
}
/**
 * @hidden
 */
export declare class CFUtils extends Base {
    static $t: Type;
    static a(a: WorkbookLoadManagerExcel2003, b?: boolean): Worksheet;
}
/**
 * @hidden
 */
export declare class Biff8RecordStream extends BiffRecordStream {
    static $t: Type;
    static readonly _headerSize: number;
    static readonly _maxBlockSize: number;
    private _et;
    private _ew;
    constructor(a: number, b: InPlaceTransform);
    constructor(a: number, b: WorkbookLoadManagerExcel2003);
    constructor(a: number, b: WorkbookLoadManagerExcel2003, c: Stream, d: BinaryReader);
    constructor(a: number, b: WorkbookSaveManagerExcel2003, c: BIFF8RecordType);
    constructor(a: number, b: WorkbookSaveManagerExcel2003, c: Stream, d: BinaryReader);
    constructor(a: number, ..._rest: any[]);
    protected _ax(): number;
    protected _bj(): number;
    protected _x(a: Stream, b: number): BiffRecordStream;
    protected _a1(): number;
    protected disposeCore(a: boolean): void;
    protected _a2(): number;
    protected _a0(): number;
    protected _z(a: number): BiffRecordStream_FormattedStringInfo;
    protected _ba(a: BinaryReader): number;
    protected _bb(a: BinaryReader): number;
    protected _ak(a: number, b: number): boolean;
    protected _cu(a: Stream, b: number, c: boolean): void;
    protected _cv(a: Stream, b: number): void;
    protected _bh(a: number[], b: number, c: number): number;
    _debugLogRecord(): void;
    private static _eu;
    private _fm;
    private static _c4;
    private _ev;
    _readAF12CellIcon(a: Nullable$1<ST_IconSetType>, b: number): {
        p0: Nullable$1<ST_IconSetType>;
        p1: number;
    };
    _writeAF12CellIcon(a: ST_IconSetType, b: number): void;
    _readAF12Criteria(a: Worksheet): Biff8RecordStream_AFDOper;
    _writeAF12Criteria(a: WorksheetRegion, b: Biff8RecordStream_AFDOper): void;
    _readAF12DateInfo(a: Worksheet): FixedDateGroup;
    _writeAF12DateInfo(a: WorksheetRegion, b: FixedDateGroup): void;
    private _dd;
    private _gc;
    _readAFDOperBoolErr(): any;
    _writeAFDOperBoolErr(a: any): void;
    _readAFDOperRk(): number;
    private _fa;
    private _ge;
    _readAutoFilter(a: Worksheet, b: IFilterable): Filter;
    _writeAutoFilter(a: TableColumnFilterData): void;
    _readBes(): any;
    _writeBes(a: any): void;
    private _fo;
    private _gh;
    _readCFColor(): WorkbookColorInfo;
    _writeCFColor(a: WorkbookColorInfo, b: ColorableItem): void;
    _readCFFlag(a: Nullable$1<ST_IconSetType>, b: number): {
        p0: Nullable$1<ST_IconSetType>;
        p1: number;
    };
    _writeCFFlag(a: ST_IconSetType, b: number): void;
    _readCondDataValue(a: ST_SortBy, b: SortDirection): SortCondition;
    _writeCondDataValue$1<T extends ISortable>($t: Type, a: T, b: SortCondition, c: boolean, d: WorksheetSerializationCache): void;
    _readCondFmt(a: Worksheet, b?: boolean): CondFmtWrapper;
    _readCondFmt12(a: Worksheet): CondFmtWrapper;
    _writeCondFmt12(a: CONDFMTSerializer, b: Worksheet): void;
    _readCf(a: WorkbookLoadManagerExcel2003, b: Worksheet): CfWrapper;
    _readCf12(a: WorkbookLoadManagerExcel2003, b: Worksheet): CfWrapper;
    _writeCf12(a: CONDFMTSerializer, b: ConditionBase, c: Worksheet, d: WorkbookSaveManagerExcel2003): void;
    private _hx;
    private _dx;
    _readCfEx(a: WorkbookLoadManagerExcel2003, b: Worksheet): CfExWrapper;
    _readCfExNonCf12(a: WorkbookLoadManagerExcel2003, b: Worksheet): CfExNonCf12Wrapper;
    private _dt;
    private _dm;
    private _gn;
    private _dq;
    private _go;
    private _dl;
    private _gm;
    private _dk;
    private _gl;
    private _dn;
    private _fp;
    private _gp;
    private _di;
    private _fr;
    private _gr;
    private _ee;
    private _du;
    private _gt;
    private _dj;
    private _gk;
    private _ds;
    private _gs;
    _readDXFALC(a: WorksheetCellFormatData, b: boolean, c: boolean, d: boolean, e: boolean, f: boolean, g: boolean, h: boolean, i: boolean, j: boolean): void;
    _writeDXFALC(a: WorksheetCellFormatData, b: boolean, c: boolean, d: boolean, e: boolean, f: boolean, g: boolean, h: boolean, i: boolean, j: boolean): void;
    _readDXFBdr(a: WorksheetCellFormatData, b: boolean, c: boolean, d: boolean, e: boolean, f: boolean, g: boolean): void;
    _writeDXFBdr(a: WorksheetCellFormatData, b: boolean, c: boolean, d: boolean, e: boolean, f: boolean, g: boolean): void;
    _readDXFFntD(a: IWorkbookFont, b: boolean): void;
    _writeDXFFntD(a: IWorkbookFont): void;
    _readDXFN(): WorksheetCellFormatData;
    _writeDXFN(a: WorksheetCellFormatData): void;
    _readDXFN12(): WorksheetCellFormatData;
    private _g0;
    _readDXFN12List(a: number): WorksheetCellFormatData;
    _writeDXFN12List(a: WorksheetCellFormatData): void;
    _readDXFN12NoCB(): WorksheetCellFormatData;
    _writeDXFN12NoCB(a: WorksheetCellFormatData): void;
    _readDXFNum(a: WorksheetCellFormatData, b: boolean, c: boolean): void;
    _writeDXFNum(a: WorksheetCellFormatData, b: boolean): void;
    _readDXFNumIFmt(a: WorksheetCellFormatData, b: boolean): void;
    _writeDXFNumIFmt(a: WorksheetCellFormatData): void;
    _readDXFNumUsr(a: WorksheetCellFormatData): void;
    _writeDXFNumUsr(a: WorksheetCellFormatData): void;
    _readDXFPat(a: WorksheetCellFormatData, b: boolean, c: boolean, d: boolean): void;
    _writeDXFPat(a: WorksheetCellFormatData, b: boolean, c: boolean, d: boolean): void;
    _readDXFProt(a: WorksheetCellFormatData, b: boolean, c: boolean): void;
    _writeDXFProt(a: WorksheetCellFormatData, b: boolean, c: boolean): void;
    _readExtProp(): ExtProp;
    _writeExtProp(a: ExtProp): void;
    _readFeatProtection(): WorksheetProtectedRange;
    _writeFeatProtection(a: WorksheetProtectedRange): void;
    _readFeat11FdaAutoFilter(a: Worksheet, b: WorksheetTableColumn): Filter;
    _writeFeat11FdaAutoFilter(a: WorksheetTableColumn, b: TableColumnFilterData): void;
    private _es;
    _writeFeat11FieldDataItem(a: WorksheetTableColumn, b: SortedList$2<number, TableColumnFilterData>, c: boolean): void;
    private _fc;
    private _hd;
    _ey(): Date;
    _readFontScheme(): FontScheme;
    _writeFontScheme(a: FontScheme): void;
    _readFormat(a: number, b: string): {
        p0: number;
        p1: string;
    };
    _writeFormat(a: number, b: string): void;
    _readFrtHeader(): void;
    _writeFrtHeader(): void;
    protected _ct(a: number): void;
    _readFrtHeaderU(a: Worksheet): WorksheetRegion;
    _writeFrtHeaderU(a: WorksheetRegion): void;
    _readFrtRefHeader(a: Worksheet): WorksheetRegion;
    _readFrtRefHeader1(a: Worksheet, b: BIFF8RecordType): WorksheetRegion;
    _writeFrtRefHeader(a: WorksheetRegion): void;
    _writeFrtRefHeader1(a: WorksheetRegion, b: BIFF8RecordType): void;
    _readFrtRefHeaderNoGrbit(a: Worksheet): WorksheetRegion;
    _writeFrtRefHeaderNoGrbit(a: WorksheetRegion): void;
    _readFullColorExt(): FullColorExtInfo;
    writeFullColorExt(a: WorkbookColorInfo, b: ColorableItem): void;
    _readGradStop(): GradStopInfo;
    _writeGradStop(a: CellFillGradientStop): void;
    _readHorizAlign(): HorizontalCellAlignment;
    _writeHorizAlign(a: HorizontalCellAlignment): void;
    private static readonly _e6;
    private static readonly _e3;
    private static readonly _e2;
    private static readonly _e1;
    private static readonly _e4;
    _readHyperlinkMoniker(): string;
    _writeHyperlinkMoniker(a: string): void;
    _readHyperlinkString(): string;
    _writeHyperlinkString(a: string): void;
    _readList12BlockLevel(a: WorksheetTable): void;
    _writeList12BlockLevel(a: WorksheetTable): void;
    _readList12DisplayName(a: WorksheetTable): void;
    _writeList12DisplayName(a: WorksheetTable): void;
    _readList12TableStyleClientInfo(a: WorksheetTable): void;
    _writeList12TableStyleClientInfo(a: WorksheetTable): void;
    _readLPWideString(): string;
    _writeLPWideString(a: string): void;
    _readRef8U(a: Worksheet): WorksheetRegion;
    _writeRef8U(a: WorksheetRegion): void;
    _readRefU(a: Worksheet): WorksheetRegion;
    _writeRefU(a: WorksheetRegion): void;
    _readRFX(a: Worksheet): WorksheetRegion;
    _writeRFX(a: WorksheetRegion): void;
    _readScript(): FontSuperscriptSubscriptStyle;
    _writeScript(a: FontSuperscriptSubscriptStyle): void;
    private _c2;
    private _hz;
    _readSortCond12$1<T extends ISortable>($t: Type, a: Worksheet, b: SortSettings$1<T>, c: WorksheetRegionAddress, d: (arg1: number) => T): void;
    _writeSortCond12$1<T extends ISortable>($t: Type, a: T, b: SortCondition, c: WorksheetRegion, d: boolean, e: WorksheetSerializationCache): void;
    private _ex;
    private _h1;
    private _f2;
    private _hl;
    private _de;
    private _h2;
    _readTableFeatureType(a: Worksheet, b: WorksheetRegion): WorksheetTable;
    _writeTableFeatureType(a: WorksheetTable, b: SortedList$2<number, TableColumnFilterData>): void;
    private _df;
    private _h4;
    private _c9;
    private _h5;
    _readUnicodeString(a: number): string;
    _writeUnicodeString(a: string): void;
    private static readonly _e5;
    private _fh;
    private _h8;
    private _h7;
    _readXFExtGradient(): XFExtGradientInfo;
    writeXFExtGradient(a: CellFillGradient): void;
    _readXFExtNoFRT(a: WorksheetCellFormatData): void;
    _writeXFExtNoFRT(a: WorksheetCellFormatData): void;
    _readXFProp(): XFProp;
    _writeXFProp(a: XFProp): void;
    private _f8;
    private _ic;
    _readXFPropColor(): XFPropColorInfo;
    _writeXFPropColor(a: WorkbookColorInfo, b: ColorableItem): void;
    _readXFPropGradientFill(): XFPropGradientFill;
    _writeXFPropGradientFill(a: XFPropGradientFill): void;
    _readXFPropGradientStop(): XFPropGradientStopLoaded;
    _writeXFPropGradientStop(a: XFPropGradientStop): void;
    _readXFProps(): XFProp[];
    static _applyXFProps(a: Workbook, b: WorksheetCellFormatData, c: boolean, d: XFProp[]): void;
    _writeXFProps(a: WorksheetCellFormatData): void;
    _readVertAlign(): VerticalCellAlignment;
    _writeVertAlign(a: VerticalCellAlignment): void;
    _readXLUnicodeString(): string;
    _writeXLUnicodeString(a: string): void;
    _readXLUnicodeStringNoCch(a: number): string;
    _writeXLUnicodeStringNoCch(a: string): void;
    _writeXLUnicodeStringNoCch1(a: string, b: boolean): void;
    private _e0;
    private _il;
    private _g2;
    get _loadManagerBiff8(): WorkbookLoadManagerExcel2003;
    get _nextBlockType(): BIFF8RecordType;
    set _nextBlockType(a: BIFF8RecordType);
    get _parentStream(): Biff8RecordStream;
    get _recordType(): BIFF8RecordType;
    get _saveManagerBiff8(): WorkbookSaveManagerExcel2003;
}
/**
 * @hidden
 */
export declare class ObjExtensionMethods extends Base {
    static $t: Type;
    static w(a: Obj, b: WorkbookLoadManagerExcel2003): void;
    static an(a: Obj, b: WorkbookSaveManagerExcel2003): void;
    static a(a: WorkbookLoadManagerExcel2003): FtCbls;
    static x(a: FtCbls, b: WorkbookSaveManagerExcel2003): void;
    static b(a: WorkbookLoadManagerExcel2003, b: Obj): FtCblsData;
    static y(a: FtCblsData, b: WorkbookSaveManagerExcel2003, c: Obj): void;
    static c(a: WorkbookLoadManagerExcel2003): FtCf;
    static z(a: FtCf, b: WorkbookSaveManagerExcel2003): void;
    static d(a: WorkbookLoadManagerExcel2003): FtCmo;
    static aa(a: FtCmo, b: WorkbookSaveManagerExcel2003): void;
    static e(a: WorkbookLoadManagerExcel2003): FtEdoData;
    static ab(a: FtEdoData, b: WorkbookSaveManagerExcel2003): void;
    static f(a: WorkbookLoadManagerExcel2003): FtGboData;
    static ac(a: FtGboData, b: WorkbookSaveManagerExcel2003): void;
    static g(a: WorkbookLoadManagerExcel2003): FtGmo;
    static ad(a: FtGmo, b: WorkbookSaveManagerExcel2003): void;
    static h(a: WorkbookLoadManagerExcel2003, b: Obj): FtLbsData;
    static ae(a: FtLbsData, b: WorkbookSaveManagerExcel2003, c: Obj): void;
    static af(a: FtMacro, b: WorkbookSaveManagerExcel2003): void;
    static i(a: WorkbookLoadManagerExcel2003): FtMacro;
    static j(a: WorkbookLoadManagerExcel2003): FtNts;
    static ag(a: FtNts, b: WorkbookSaveManagerExcel2003): void;
    static ah(a: FtPictFmla, b: WorkbookSaveManagerExcel2003, c: Obj): void;
    static k(a: WorkbookLoadManagerExcel2003, b: Obj): FtPictFmla;
    static l(a: WorkbookLoadManagerExcel2003): FtPioGrbit;
    static ai(a: FtPioGrbit, b: WorkbookSaveManagerExcel2003): void;
    static m(a: WorkbookLoadManagerExcel2003): FtRbo;
    static aj(a: FtRbo, b: WorkbookSaveManagerExcel2003): void;
    static n(a: WorkbookLoadManagerExcel2003): FtRboData;
    static ak(a: FtRboData, b: WorkbookSaveManagerExcel2003): void;
    static o(a: WorkbookLoadManagerExcel2003): FtSbs;
    static al(a: FtSbs, b: WorkbookSaveManagerExcel2003): void;
    static q(a: WorkbookLoadManagerExcel2003): ObjectParsedFormula;
    static ao(a: ObjectParsedFormula, b: WorkbookSaveManagerExcel2003): void;
    static r(a: WorkbookLoadManagerExcel2003): ObjFmla;
    static ap(a: ObjFmla, b: WorkbookSaveManagerExcel2003): void;
    static aq(a: ObjLinkFmla, b: WorkbookSaveManagerExcel2003, c: Obj): void;
    static s(a: WorkbookLoadManagerExcel2003, b: Obj): ObjLinkFmla;
    static u(a: WorkbookLoadManagerExcel2003): PictFmlaKey;
    static as(a: PictFmlaKey, b: WorkbookSaveManagerExcel2003): void;
    static v(a: WorkbookLoadManagerExcel2003, b: number): Rgce;
    static at(a: Rgce, b: WorkbookSaveManagerExcel2003): void;
    static p(a: WorkbookLoadManagerExcel2003): LbsDropData;
    static am(a: LbsDropData, b: Biff8RecordStream): void;
    static t(a: WorkbookLoadManagerExcel2003): PictFmlaEmbedInfo;
    static ar(a: PictFmlaEmbedInfo, b: Biff8RecordStream): void;
}
/**
 * @hidden
 */
export declare class ObjUtilities extends Base {
    static $t: Type;
    static a(a: WorkbookLoadManagerExcel2003, b: OBJRecordType): boolean;
    static b(a: WorkbookLoadManagerExcel2003, b: OBJRecordType, c: boolean): boolean;
}
/**
 * @hidden
 */
export declare abstract class EscherRecordBase extends Base implements IEscherRecord {
    static $t: Type;
    private c;
    private f;
    private h;
    private j;
    constructor(a: number, b: number, c: number);
    get d(): EscherRecordContainerBase;
    set d(a: EscherRecordContainerBase);
    get i(): number;
    set i(a: number);
    get k(): number;
    set k(a: number);
    toString(): string;
    abstract l(a: WorkbookLoadManagerExcel2003): void;
    m(a: WorkbookSaveManagerExcel2003): void;
    abstract get e(): EscherRecordType;
    static b(a: WorkbookLoadManagerExcel2003, b?: EscherRecordContainerBase): EscherRecordBase;
    private static a;
}
/**
 * @hidden
 */
export declare class BLIP extends EscherRecordBase {
    static $t: Type;
    private static v;
    private static w;
    private t;
    private r;
    private p;
    private o;
    private x;
    private u;
    private n;
    static staticInit(): void;
    constructor(a: number, b: ExcelImage);
    constructor(a: number, b: EscherRecordType, c: number, d: number, e: number);
    constructor(a: number, ..._rest: any[]);
    l(a: WorkbookLoadManagerExcel2003): void;
    m(a: WorkbookSaveManagerExcel2003): void;
    private z;
    private aa;
    private ab;
    private ac;
    private ad;
    private ae;
    get s(): BLIPType;
    get q(): ExcelImage;
    get y(): Guid;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare abstract class EscherRecordContainerBase extends EscherRecordBase {
    static $t: Type;
    private p;
    constructor(a: number, b: number, c: number);
    r(a: EscherRecordBase): void;
    n<T extends EscherRecordBase>($t: Type): T;
    l(a: WorkbookLoadManagerExcel2003): void;
    m(a: WorkbookSaveManagerExcel2003): void;
    toString(): string;
    protected abstract o(a: EscherRecordBase): boolean;
    get q(): number;
}
/**
 * @hidden
 */
export declare class BLIPStoreContainer extends EscherRecordContainerBase {
    static $t: Type;
    constructor(a: number, b: List$1<WorkbookSerializationDataExcel2003_ImageHolder>);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    protected o(a: EscherRecordBase): boolean;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class BLIPStoreEntry extends EscherRecordBase {
    static $t: Type;
    private p;
    private o;
    private r;
    private s;
    private t;
    private v;
    private u;
    private q;
    private n;
    constructor(a: number, b: BLIP, c: number);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    l(a: WorkbookLoadManagerExcel2003): void;
    m(a: WorkbookSaveManagerExcel2003): void;
    toString(): string;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class CalloutRule extends EscherRecordBase implements ICalloutRule {
    static $t: Type;
    private n;
    private o;
    constructor(a: number, b: number, c: number);
    l(a: WorkbookLoadManagerExcel2003): void;
    m(a: WorkbookSaveManagerExcel2003): void;
    get shapeId(): number;
    set shapeId(a: number);
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class ChildAnchor extends EscherRecordBase {
    static $t: Type;
    private n;
    constructor(a: number, b: WorksheetShape);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    l(a: WorkbookLoadManagerExcel2003): void;
    m(a: WorkbookSaveManagerExcel2003): void;
    toString(): string;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
    get o(): Rect;
}
/**
 * @hidden
 */
export declare class ClientAnchor extends EscherRecordBase {
    static $t: Type;
    private n;
    private s;
    private t;
    private o;
    private p;
    constructor(a: number, b: WorksheetShape);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    private static q;
    private static r;
    l(a: WorkbookLoadManagerExcel2003): void;
    m(a: WorkbookSaveManagerExcel2003): void;
    toString(): string;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class ClientData extends EscherRecordBase {
    static $t: Type;
    private o;
    constructor(a: number, b: WorksheetShape);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    l(a: WorkbookLoadManagerExcel2003): void;
    private n;
    m(a: WorkbookSaveManagerExcel2003): void;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class ClientTextBox extends EscherRecordBase {
    static $t: Type;
    private n;
    constructor(a: number, b: WorksheetShape);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    l(a: WorkbookLoadManagerExcel2003): void;
    m(a: WorkbookSaveManagerExcel2003): void;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class ConnectorRule extends EscherRecordBase {
    static $t: Type;
    constructor(a: number, b: number, c: number);
    l(a: WorkbookLoadManagerExcel2003): void;
    m(a: WorkbookSaveManagerExcel2003): void;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class Drawing extends EscherRecordBase {
    static $t: Type;
    private o;
    private n;
    constructor(a: number, b: WorkbookSaveManagerExcel2003, c: Worksheet);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    l(a: WorkbookLoadManagerExcel2003): void;
    m(a: WorkbookSaveManagerExcel2003): void;
    toString(): string;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class DrawingContainer extends EscherRecordContainerBase {
    static $t: Type;
    constructor(a: number, b: WorkbookSaveManagerExcel2003);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    protected o(a: EscherRecordBase): boolean;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class DrawingGroup extends EscherRecordBase {
    static $t: Type;
    constructor(a: number, b: IList$1<Sheet>);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    l(a: WorkbookLoadManagerExcel2003): void;
    m(a: WorkbookSaveManagerExcel2003): void;
    toString(): string;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class DrawingGroupContainer extends EscherRecordContainerBase {
    static $t: Type;
    constructor(a: number, b: WorkbookSaveManagerExcel2003);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    protected o(a: EscherRecordBase): boolean;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class GroupContainer extends EscherRecordContainerBase {
    static $t: Type;
    constructor(a: number, b: WorkbookSaveManagerExcel2003, c: Worksheet);
    constructor(a: number, b: WorkbookSaveManagerExcel2003, c: WorksheetShapeGroup);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    private s;
    l(a: WorkbookLoadManagerExcel2003): void;
    protected o(a: EscherRecordBase): boolean;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class GroupShape extends EscherRecordBase {
    static $t: Type;
    private n;
    constructor(a: number, b: WorksheetShapeGroup);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    l(a: WorkbookLoadManagerExcel2003): void;
    m(a: WorkbookSaveManagerExcel2003): void;
    toString(): string;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
    get o(): Rect;
}
/**
 * @hidden
 */
export declare abstract class PropertyTableBase extends EscherRecordBase {
    static $t: Type;
    private n;
    constructor(a: number, b: List$1<PropertyTableBase_PropertyValue>);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    l(a: WorkbookLoadManagerExcel2003): void;
    m(a: WorkbookSaveManagerExcel2003): void;
    protected get o(): List$1<PropertyTableBase_PropertyValue>;
}
/**
 * @hidden
 */
export declare class PropertyTable1 extends PropertyTableBase {
    static $t: Type;
    constructor(a: number, b: WorksheetShape);
    constructor(a: number, b: List$1<PropertyTableBase_PropertyValue>);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    l(a: WorkbookLoadManagerExcel2003): void;
    private static c3;
    private c4;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class PropertyTable2 extends PropertyTableBase {
    static $t: Type;
    constructor(a: number, b: WorksheetShape);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    l(a: WorkbookLoadManagerExcel2003): void;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class PropertyTable3 extends PropertyTableBase {
    static $t: Type;
    constructor(a: number, b: WorksheetShape);
    constructor(a: number, b: List$1<PropertyTableBase_PropertyValue>);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    l(a: WorkbookLoadManagerExcel2003): void;
    private c3;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class Regroup extends EscherRecordBase {
    static $t: Type;
    private n;
    private o;
    constructor(a: number, b: number, c: number);
    l(a: WorkbookLoadManagerExcel2003): void;
    m(a: WorkbookSaveManagerExcel2003): void;
    toString(): string;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class Selections extends EscherRecordBase {
    static $t: Type;
    constructor(a: number, b: number, c: number);
    l(a: WorkbookLoadManagerExcel2003): void;
    m(a: WorkbookSaveManagerExcel2003): void;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class EscherShape extends EscherRecordBase {
    static $t: Type;
    private o;
    private n;
    constructor(a: number, b: WorksheetShape);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    l(a: WorkbookLoadManagerExcel2003): void;
    m(a: WorkbookSaveManagerExcel2003): void;
    toString(): string;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class Shape_PatriarchShape extends WorksheetShapeGroup {
    static $t: Type;
    private _d9;
    constructor(a: WorkbookSaveManagerExcel2003, b: Worksheet);
    _getBoundsInTwips1(a: PositioningOptions): Rect;
    protected get__a8(): boolean;
    protected get__cn(): number;
    protected set__cn(a: number): void;
}
/**
 * @hidden
 */
export declare class ShapeContainer extends EscherRecordContainerBase {
    static $t: Type;
    constructor(a: number, b: WorkbookSaveManagerExcel2003, c: WorksheetShape);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    l(a: WorkbookLoadManagerExcel2003): void;
    private static s;
    protected o(a: EscherRecordBase): boolean;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
    private static t;
    private static u;
}
/**
 * @hidden
 */
export declare class SolverContainer extends EscherRecordContainerBase {
    static $t: Type;
    constructor(a: number, b: Worksheet);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    l(a: WorkbookLoadManagerExcel2003): void;
    protected o(a: EscherRecordBase): boolean;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare class SplitMenuColors extends EscherRecordBase {
    static $t: Type;
    constructor(a: number);
    constructor(a: number, b: number, c: number, d: number);
    constructor(a: number, ..._rest: any[]);
    l(a: WorkbookLoadManagerExcel2003): void;
    m(a: WorkbookSaveManagerExcel2003): void;
    protected get_e(): EscherRecordType;
    get e(): EscherRecordType;
}
/**
 * @hidden
 */
export declare abstract class Biff8RecordBase extends BiffRecordBase$3<BIFF8RecordType, WorkbookLoadManagerExcel2003, WorkbookSaveManagerExcel2003> {
    static $t: Type;
    constructor();
    private static l;
    static get m(): (type: BIFF8RecordType) => BiffRecordBase$3<BIFF8RecordType, WorkbookLoadManagerExcel2003, WorkbookSaveManagerExcel2003>;
    static j(a: BIFF8RecordType): BIFF8RecordType;
    static k(a: BIFF8RecordType): BiffRecordBase$3<BIFF8RecordType, WorkbookLoadManagerExcel2003, WorkbookSaveManagerExcel2003>;
    protected get_n(): boolean;
    get n(): boolean;
}
/**
 * @hidden
 */
export declare class Record1904 extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class ACTIVEXMARKERRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class ARRAYRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare abstract class AUTOFILTERRecordBase extends Biff8RecordBase {
    static $t: Type;
}
/**
 * @hidden
 */
export declare class AUTOFILTER12Record extends AUTOFILTERRecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class AUTOFILTERRecord extends AUTOFILTERRecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class AUTOFILTERINFORecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class BACKUPRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class BITMAPRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare abstract class CellValueRecordBase extends Biff8RecordBase {
    static $t: Type;
    protected abstract o(a: WorkbookLoadManagerExcel2003, b: number[], c: number, d: any, e: any): {
        p1?: number[];
        p2?: number;
        p3: any;
        p4: any;
    };
    protected abstract p(a: WorkbookSaveManagerExcel2003, b: MemoryStream): void;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
}
/**
 * @hidden
 */
export declare class BLANKRecord extends CellValueRecordBase {
    static $t: Type;
    protected o(a: WorkbookLoadManagerExcel2003, b: number[], c: number, d: any, e: any): {
        p1?: number[];
        p2?: number;
        p3: any;
        p4: any;
    };
    protected p(a: WorkbookSaveManagerExcel2003, b: MemoryStream): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class BOFRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_n(): boolean;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class BOOKBOOLRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class BOOKEXTRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class BOOLERRRecord extends CellValueRecordBase {
    static $t: Type;
    protected o(a: WorkbookLoadManagerExcel2003, b: number[], c: number, d: any, e: any): {
        p1?: number[];
        p2?: number;
        p3: any;
        p4: any;
    };
    protected p(a: WorkbookSaveManagerExcel2003, b: MemoryStream): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class BOTTOMMARGINRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class BOUNDSHEETRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class CALCCOUNTRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class CALCMODERecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class CF12Record extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class CFEXRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class CFRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class CODEPAGERecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class COLINFORecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class CONDFMT12Record extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class CONDFMTRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class COUNTRYRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class CRNRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class DBCELLRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class DEFAULTROWHEIGHTRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class DEFCOLWIDTHRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class DELTARecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class DIMENSIONSRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class DSFRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class DVALRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class DVRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
    private static o;
    private static p;
}
/**
 * @hidden
 */
export declare class DXFRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    static o(a: WorkbookLoadManagerExcel2003, b: DXFRecordInfo): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class EOFRecord extends Biff8RecordBase {
    static $t: Type;
    protected get_e(): boolean;
    h(a: WorkbookLoadManagerExcel2003): void;
    a(a: WorkbookLoadManagerExcel2003): WorkItem;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class EXCEL9FILERecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class EXTERNNAMERecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class EXTERNSHEETRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class EXTSSTRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class FEAT11Record extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class FEAT12Record extends FEAT11Record {
    static $t: Type;
    protected get_d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class FEATHEADR11Record extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class FEATHEADRRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class FEATRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class FILEPASSRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    private static q;
    protected get_n(): boolean;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class FILESHARINGRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class FILTERMODERecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class FNGROUPCOUNTRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class FONTRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    static o(a: WorkbookLoadManagerExcel2003, b: FONTRecordInfo): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class FOOTERRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class FORMATRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class FORMULARecord extends CellValueRecordBase {
    static $t: Type;
    protected o(a: WorkbookLoadManagerExcel2003, b: number[], c: number, d: any, e: any): {
        p1?: number[];
        p2?: number;
        p3: any;
        p4: any;
    };
    protected p(a: WorkbookSaveManagerExcel2003, b: MemoryStream): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
    private static s;
    private static t;
    private static q;
    private static r;
}
/**
 * @hidden
 */
export declare class GRIDSETRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class GUTSRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class HCENTERRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class HEADERFOOTERRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class HEADERRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class HFPICTURERecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class HIDEOBJRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class HLINKRecord extends Biff8RecordBase {
    static $t: Type;
    private static readonly o;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class HLINKTOOLTIPRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class HORIZONTALPAGEBREAKSRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class INDEXRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class INTERFACEENDRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class INTERFACEHDRRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_n(): boolean;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class ITERATIONRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class LABELRecord extends CellValueRecordBase {
    static $t: Type;
    protected o(a: WorkbookLoadManagerExcel2003, b: number[], c: number, d: any, e: any): {
        p1?: number[];
        p2?: number;
        p3: any;
        p4: any;
    };
    protected p(a: WorkbookSaveManagerExcel2003, b: MemoryStream): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class LABELSSTRecord extends CellValueRecordBase {
    static $t: Type;
    protected o(a: WorkbookLoadManagerExcel2003, b: number[], c: number, d: any, e: any): {
        p1?: number[];
        p2?: number;
        p3: any;
        p4: any;
    };
    protected p(a: WorkbookSaveManagerExcel2003, b: MemoryStream): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class LEFTMARGINRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class LIST12Record extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class MERGEDCELLSRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class MMSRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class MSODRAWINGGROUPRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class MSODRAWINGRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class MSODRAWINGSELECTIONRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare abstract class MultipleCellValueRecordBase extends Biff8RecordBase {
    static $t: Type;
    protected abstract o(a: WorkbookLoadManagerExcel2003, b: number, c: number[], d: number): {
        ret: CellDefinition[];
        p2?: number[];
        p3?: number;
    };
    protected abstract p(a: WorkbookSaveManagerExcel2003, b: CellDefinition[]): void;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
}
/**
 * @hidden
 */
export declare class MULBLANKRecord extends MultipleCellValueRecordBase {
    static $t: Type;
    protected o(a: WorkbookLoadManagerExcel2003, b: number, c: number[], d: number): {
        ret: CellDefinition[];
        p2?: number[];
        p3?: number;
    };
    protected p(a: WorkbookSaveManagerExcel2003, b: CellDefinition[]): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class MULRKRecord extends MultipleCellValueRecordBase {
    static $t: Type;
    protected o(a: WorkbookLoadManagerExcel2003, b: number, c: number[], d: number): {
        ret: CellDefinition[];
        p2?: number[];
        p3?: number;
    };
    protected p(a: WorkbookSaveManagerExcel2003, b: CellDefinition[]): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class NAMEEXTRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class NAMERecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class NOTERecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class NUMBERRecord extends CellValueRecordBase {
    static $t: Type;
    protected o(a: WorkbookLoadManagerExcel2003, b: number[], c: number, d: any, e: any): {
        p1?: number[];
        p2?: number;
        p3: any;
        p4: any;
    };
    protected p(a: WorkbookSaveManagerExcel2003, b: MemoryStream): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class OBJPROTECTRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class OBJRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class OBPROJRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class OLESIZERecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class PAGELAYOUTINFORecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class PALETTERecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class PANERecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class PASSWORDRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class PLSRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class PRECISIONRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class PRINTGRIDLINESRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class PRINTHEADERSRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class PROT4REVPASSRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class PROT4REVRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class PROTECTRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class RECALCIDRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class REFMODERecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class REFRESHALLRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class RIGHTMARGINRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class RKRecord extends CellValueRecordBase {
    static $t: Type;
    protected o(a: WorkbookLoadManagerExcel2003, b: number[], c: number, d: any, e: any): {
        p1?: number[];
        p2?: number;
        p3: any;
        p4: any;
    };
    protected p(a: WorkbookSaveManagerExcel2003, b: MemoryStream): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class ROWRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class RSTRINGRecord extends CellValueRecordBase {
    static $t: Type;
    protected o(a: WorkbookLoadManagerExcel2003, b: number[], c: number, d: any, e: any): {
        p1?: number[];
        p2?: number;
        p3: any;
        p4: any;
    };
    protected p(a: WorkbookSaveManagerExcel2003, b: MemoryStream): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class SAVERECALCRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class SCENPROTECTRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class SCLRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class SELECTIONRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class SETUPRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class SHEETEXTRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class SHRFMLARecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class SORTDATA12Record extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    private static o;
    i(a: WorkbookSaveManagerExcel2003): void;
    private static p;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class SSTRecord extends Biff8RecordBase {
    static $t: Type;
    protected get_e(): boolean;
    h(a: WorkbookLoadManagerExcel2003): void;
    a(a: WorkbookLoadManagerExcel2003): WorkItem;
    b(a: WorkbookSaveManagerExcel2003): WorkItem;
    i(a: WorkbookSaveManagerExcel2003): void;
    private static o;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class STANDARDWIDTHRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class STRINGRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class STYLEEXTRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    static o(a: WorkbookLoadManagerExcel2003, b: STYLEEXTRecordInfo): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class STYLERecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    static o(a: WorkbookLoadManagerExcel2003, b: STYLERecordInfo): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class SUPBOOKRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class TABIDRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class TABLERecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class TABLESTYLEELEMENTRecord extends Biff8RecordBase {
    static $t: Type;
    protected get_e(): boolean;
    h(a: WorkbookLoadManagerExcel2003): void;
    a(a: WorkbookLoadManagerExcel2003): WorkItem;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class TABLESTYLERecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class TABLESTYLESRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class TEMPLATERecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class THEMERecord extends Biff8RecordBase {
    static $t: Type;
    protected get_e(): boolean;
    h(a: WorkbookLoadManagerExcel2003): void;
    a(a: WorkbookLoadManagerExcel2003): WorkItem;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class TOPMARGINRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class TXORecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    private static o;
    i(a: WorkbookSaveManagerExcel2003): void;
    private static p;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class USERBVIEWRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class USERSVIEWBEGINRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class USERSVIEWENDRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class USESELFSRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class VBAOBJECTNAMERecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class VCENTERRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class VERTICALPAGEBREAKSRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class WINDOW1Record extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class WINDOW2Record extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class WINDOWPROTECTRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class WRITEACCESSRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class WRITEPROTRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class WSBOOLRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class XCTRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class XFCRCRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class XFEXTRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    static o(a: WorkbookLoadManagerExcel2003, b: XFEXTRecordInfo): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
/**
 * @hidden
 */
export declare class XFRecord extends Biff8RecordBase {
    static $t: Type;
    h(a: WorkbookLoadManagerExcel2003): void;
    static o(a: WorkbookLoadManagerExcel2003, b: XFRecordInfo): void;
    i(a: WorkbookSaveManagerExcel2003): void;
    protected get_d(): BIFF8RecordType;
    get d(): BIFF8RecordType;
}
