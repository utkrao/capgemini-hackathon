import { Base, Nullable$1, Type } from "igniteui-react-core";
import { ISupportSetProperty } from "./ISupportSetProperty";
import { List$1 } from "igniteui-react-core";
import { CT_ColorScale } from "./CT_ColorScale";
import { CT_DataBar } from "./CT_DataBar";
import { CT_IconSet } from "./CT_IconSet";
import { CT_ExtensionList } from "./CT_ExtensionList";
import { ST_CfType } from "./ST_CfType";
import { ST_ConditionalFormattingOperator } from "./ST_ConditionalFormattingOperator";
import { ST_TimePeriod } from "./ST_TimePeriod";
import { XmlPartManagerBase } from "./XmlPartManagerBase";
import { ElementPropertyIds } from "./ElementPropertyIds";
/**
 * @hidden
 */
export declare class CT_CfRule extends Base implements ISupportSetProperty {
    static $t: Type;
    constructor();
    k: List$1<string>;
    b: CT_ColorScale;
    c: CT_DataBar;
    d: CT_IconSet;
    a: CT_ExtensionList;
    e: ST_CfType;
    o: Nullable$1<number>;
    l: number;
    u: Nullable$1<boolean>;
    m: Nullable$1<boolean>;
    r: Nullable$1<boolean>;
    n: Nullable$1<boolean>;
    q: Nullable$1<ST_ConditionalFormattingOperator>;
    w: string;
    v: Nullable$1<ST_TimePeriod>;
    s: Nullable$1<number>;
    t: Nullable$1<number>;
    p: Nullable$1<boolean>;
    static y(a: XmlPartManagerBase, b: ST_CfType, c: Nullable$1<number>, d: number, e: Nullable$1<boolean>, f: Nullable$1<boolean>, g: Nullable$1<boolean>, h: Nullable$1<boolean>, i: Nullable$1<ST_ConditionalFormattingOperator>, j: string, k: Nullable$1<ST_TimePeriod>, l: Nullable$1<number>, m: Nullable$1<number>, n: Nullable$1<boolean>): {
        p1: ST_CfType;
        p2: Nullable$1<number>;
        p3: number;
        p4: Nullable$1<boolean>;
        p5: Nullable$1<boolean>;
        p6: Nullable$1<boolean>;
        p7: Nullable$1<boolean>;
        p8: Nullable$1<ST_ConditionalFormattingOperator>;
        p9: string;
        p10: Nullable$1<ST_TimePeriod>;
        p11: Nullable$1<number>;
        p12: Nullable$1<number>;
        p13: Nullable$1<boolean>;
    };
    static z(a: XmlPartManagerBase, b: string, c: Nullable$1<ST_ConditionalFormattingOperator>, d: Nullable$1<boolean>, e: Nullable$1<boolean>, f: Nullable$1<number>, g: Nullable$1<boolean>, h: Nullable$1<boolean>, i: Nullable$1<number>, j: Nullable$1<number>, k: Nullable$1<boolean>, l: string, m: Nullable$1<ST_TimePeriod>, n: number, o: ST_CfType): void;
    setProperty(a: ElementPropertyIds, b: any): void;
    toString(): string;
}
