import { Base, Nullable$1, Type } from "igniteui-react-core";
import { ColorInfo } from "./ColorInfo";
import { List$1 } from "igniteui-react-core";
import { CT_Sparkline } from "./CT_Sparkline";
import { ST_SparklineType } from "./ST_SparklineType";
import { ST_DispBlanksAs } from "./ST_DispBlanksAs";
import { ST_SparklineAxisMinMax } from "./ST_SparklineAxisMinMax";
import { XmlPartManagerBase } from "./XmlPartManagerBase";
/**
 * @hidden
 */
export declare class CT_SparklineGroup extends Base {
    static $t: Type;
    private p;
    private n;
    private b;
    private l;
    private d;
    private h;
    private f;
    private j;
    private bg;
    private af;
    private a0;
    private a2;
    private aw;
    private be;
    private ai;
    private ak;
    private a4;
    private as;
    private ay;
    private aq;
    private au;
    private ba;
    private ao;
    private am;
    private a8;
    private a6;
    private bc;
    constructor();
    get o(): ColorInfo;
    set o(a: ColorInfo);
    get m(): ColorInfo;
    set m(a: ColorInfo);
    get a(): ColorInfo;
    set a(a: ColorInfo);
    get k(): ColorInfo;
    set k(a: ColorInfo);
    get c(): ColorInfo;
    set c(a: ColorInfo);
    get g(): ColorInfo;
    set g(a: ColorInfo);
    get e(): ColorInfo;
    set e(a: ColorInfo);
    get i(): ColorInfo;
    set i(a: ColorInfo);
    get bf(): string;
    set bf(a: string);
    get ae(): List$1<CT_Sparkline>;
    set ae(a: List$1<CT_Sparkline>);
    get az(): Nullable$1<number>;
    set az(a: Nullable$1<number>);
    get a1(): Nullable$1<number>;
    set a1(a: Nullable$1<number>);
    get av(): Nullable$1<number>;
    set av(a: Nullable$1<number>);
    get bd(): Nullable$1<ST_SparklineType>;
    set bd(a: Nullable$1<ST_SparklineType>);
    get ah(): Nullable$1<boolean>;
    set ah(a: Nullable$1<boolean>);
    get aj(): Nullable$1<ST_DispBlanksAs>;
    set aj(a: Nullable$1<ST_DispBlanksAs>);
    get a3(): Nullable$1<boolean>;
    set a3(a: Nullable$1<boolean>);
    get ar(): Nullable$1<boolean>;
    set ar(a: Nullable$1<boolean>);
    get ax(): Nullable$1<boolean>;
    set ax(a: Nullable$1<boolean>);
    get ap(): Nullable$1<boolean>;
    set ap(a: Nullable$1<boolean>);
    get at(): Nullable$1<boolean>;
    set at(a: Nullable$1<boolean>);
    get a9(): Nullable$1<boolean>;
    set a9(a: Nullable$1<boolean>);
    get an(): Nullable$1<boolean>;
    set an(a: Nullable$1<boolean>);
    get al(): Nullable$1<boolean>;
    set al(a: Nullable$1<boolean>);
    get a7(): Nullable$1<ST_SparklineAxisMinMax>;
    set a7(a: Nullable$1<ST_SparklineAxisMinMax>);
    get a5(): Nullable$1<ST_SparklineAxisMinMax>;
    set a5(a: Nullable$1<ST_SparklineAxisMinMax>);
    get bb(): Nullable$1<boolean>;
    set bb(a: Nullable$1<boolean>);
    static bh(a: XmlPartManagerBase, b: Nullable$1<number>, c: Nullable$1<number>, d: Nullable$1<number>, e: Nullable$1<ST_SparklineType>, f: Nullable$1<boolean>, g: Nullable$1<ST_DispBlanksAs>, h: Nullable$1<boolean>, i: Nullable$1<boolean>, j: Nullable$1<boolean>, k: Nullable$1<boolean>, l: Nullable$1<boolean>, m: Nullable$1<boolean>, n: Nullable$1<boolean>, o: Nullable$1<boolean>, p: Nullable$1<ST_SparklineAxisMinMax>, q: Nullable$1<ST_SparklineAxisMinMax>, r: Nullable$1<boolean>): {
        p1: Nullable$1<number>;
        p2: Nullable$1<number>;
        p3: Nullable$1<number>;
        p4: Nullable$1<ST_SparklineType>;
        p5: Nullable$1<boolean>;
        p6: Nullable$1<ST_DispBlanksAs>;
        p7: Nullable$1<boolean>;
        p8: Nullable$1<boolean>;
        p9: Nullable$1<boolean>;
        p10: Nullable$1<boolean>;
        p11: Nullable$1<boolean>;
        p12: Nullable$1<boolean>;
        p13: Nullable$1<boolean>;
        p14: Nullable$1<boolean>;
        p15: Nullable$1<ST_SparklineAxisMinMax>;
        p16: Nullable$1<ST_SparklineAxisMinMax>;
        p17: Nullable$1<boolean>;
    };
    static bi(a: XmlPartManagerBase, b: string, c?: Nullable$1<boolean>, d?: Nullable$1<ST_DispBlanksAs>, e?: Nullable$1<boolean>, f?: Nullable$1<boolean>, g?: Nullable$1<boolean>, h?: Nullable$1<boolean>, i?: Nullable$1<boolean>, j?: Nullable$1<number>, k?: Nullable$1<boolean>, l?: Nullable$1<number>, m?: Nullable$1<number>, n?: Nullable$1<boolean>, o?: Nullable$1<ST_SparklineAxisMinMax>, p?: Nullable$1<ST_SparklineAxisMinMax>, q?: Nullable$1<boolean>, r?: Nullable$1<boolean>, s?: Nullable$1<ST_SparklineType>): void;
}
