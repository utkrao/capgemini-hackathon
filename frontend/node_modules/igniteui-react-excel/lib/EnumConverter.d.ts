import { Base, Nullable$1, Type } from "igniteui-react-core";
import { FormatConditionType } from "./FormatConditionType";
import { ST_CfType } from "./ST_CfType";
import { FormatConditionTextOperator } from "./FormatConditionTextOperator";
import { FormatConditionTimePeriod } from "./FormatConditionTimePeriod";
import { ST_TimePeriod } from "./ST_TimePeriod";
import { ST_ConditionalFormattingOperator } from "./ST_ConditionalFormattingOperator";
import { FormatConditionOperator } from "./FormatConditionOperator";
import { FormatConditionValueType } from "./FormatConditionValueType";
import { ST_CfvoType } from "./ST_CfvoType";
import { DataBarDirection } from "./DataBarDirection";
import { ST_DataBarDirection } from "./ST_DataBarDirection";
import { DataBarAxisPosition } from "./DataBarAxisPosition";
import { ST_DataBarAxisPosition } from "./ST_DataBarAxisPosition";
import { DataBarFillType } from "./DataBarFillType";
import { FormatConditionIcon } from "./FormatConditionIcon";
import { FormatConditionIconSet } from "./FormatConditionIconSet";
import { ST_IconSetType } from "./ST_IconSetType";
/**
 * @hidden
 */
export declare class EnumConverter extends Base {
    static $t: Type;
    static e(a: ST_CfType): FormatConditionType;
    static g(a: FormatConditionType, b: Nullable$1<FormatConditionTextOperator>): ST_CfType;
    static d(a: Nullable$1<ST_TimePeriod>): FormatConditionTimePeriod;
    static n(a: FormatConditionTimePeriod): ST_TimePeriod;
    static q(a: ST_ConditionalFormattingOperator, b: Nullable$1<FormatConditionOperator>, c: Nullable$1<FormatConditionTextOperator>): {
        p1: Nullable$1<FormatConditionOperator>;
        p2: Nullable$1<FormatConditionTextOperator>;
    };
    static j(a: FormatConditionOperator): ST_ConditionalFormattingOperator;
    static k(a: FormatConditionTextOperator): ST_ConditionalFormattingOperator;
    static f(a: ST_CfvoType): FormatConditionValueType;
    static h(a: FormatConditionValueType): ST_CfvoType;
    static b(a: ST_DataBarDirection): DataBarDirection;
    static m(a: DataBarDirection): ST_DataBarDirection;
    static a(a: ST_DataBarAxisPosition): DataBarAxisPosition;
    static l(a: DataBarAxisPosition): ST_DataBarAxisPosition;
    static c(a: boolean): DataBarFillType;
    static o(a: DataBarFillType): boolean;
    static p(a: FormatConditionIcon, b: FormatConditionIconSet, c: ST_IconSetType, d: number): {
        p2: ST_IconSetType;
        p3: number;
    };
    static i(a: FormatConditionTextOperator): ST_ConditionalFormattingOperator;
}
