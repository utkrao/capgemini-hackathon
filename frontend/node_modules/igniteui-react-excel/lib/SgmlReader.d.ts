import { XmlReader } from "igniteui-react-core";
import { SgmlDtd } from "./SgmlDtd";
import { TextReader } from "igniteui-react-core";
import { CaseFolding } from "./CaseFolding";
import { TextWriter } from "igniteui-react-core";
import { XmlNodeType } from "igniteui-react-core";
import { XmlSpace } from "igniteui-react-core";
import { WhitespaceHandling } from "igniteui-react-core";
import { ReadState } from "igniteui-react-core";
import { XmlNameTable } from "igniteui-react-core";
import { Type } from "igniteui-react-core";
import { StringBuilder } from "igniteui-react-core";
import { Encoding } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class SgmlReader extends XmlReader {
    static $t: Type;
    private _bk;
    private _bc;
    private _bm;
    private _dh;
    private _b2;
    private _ca;
    private _be;
    private _bg;
    private _a9;
    private _b3;
    private _c0;
    private _cz;
    private _cy;
    private _b9;
    private _bn;
    private _bf;
    private _b4;
    private _b5;
    private _bo;
    private _cp;
    private _ci;
    private _bd;
    private _cm;
    private _b6;
    private _ct;
    private _cn;
    private _cs;
    private _cf;
    private _de;
    private _bb;
    private _b0;
    private _dg;
    constructor();
    get _bl(): SgmlDtd;
    set _bl(a: SgmlDtd);
    private _c3;
    get _cg(): string;
    set _cg(a: string);
    get _co(): string;
    set _co(a: string);
    get _cu(): string;
    set _cu(a: string);
    get _ck(): string;
    set _ck(a: string);
    get _b7(): TextReader;
    set _b7(a: TextReader);
    get _cw(): string;
    set _cw(a: string);
    _c9(a: string): void;
    get _cj(): string;
    set _cj(a: string);
    get _b1(): boolean;
    set _b1(a: boolean);
    get _ba(): CaseFolding;
    set _ba(a: CaseFolding);
    get _b8(): TextWriter;
    set _b8(a: TextWriter);
    private _c4;
    private _c5;
    private c2;
    private _bi;
    private _da;
    private _bh;
    private _c8;
    private _bj;
    protected get_a7(): XmlNodeType;
    get a7(): XmlNodeType;
    protected get_ai(): string;
    get ai(): string;
    protected get_ag(): string;
    get ag(): string;
    protected get_aj(): string;
    get aj(): string;
    protected get_ak(): string;
    get ak(): string;
    protected get_f(): boolean;
    get f(): boolean;
    protected get_ar(): string;
    get ar(): string;
    protected get_x(): number;
    get x(): number;
    protected get_z(): string;
    get z(): string;
    protected get_i(): boolean;
    get i(): boolean;
    protected get_h(): boolean;
    get h(): boolean;
    protected get_v(): string;
    get v(): string;
    protected get_a8(): XmlSpace;
    get a8(): XmlSpace;
    protected get_as(): string;
    get as(): string;
    get _df(): WhitespaceHandling;
    set _df(a: WhitespaceHandling);
    protected get_w(): number;
    get w(): number;
    ab(a: string): string;
    ac(a: string, b: string): string;
    aa(a: number): string;
    item(a: number): string;
    item1(a: string): string;
    item2(a: string, b: string): string;
    o(a: string): boolean;
    p(a: string, b: string): boolean;
    aw(a: number): void;
    r(): boolean;
    s(): boolean;
    q(): boolean;
    private get _bp();
    _cx(): Encoding;
    private _c6;
    t(): boolean;
    private _bv;
    private static _ce;
    private _by;
    private _cr;
    private static _cv;
    private static _cb;
    private static _cc;
    private _bx;
    private _bu;
    private _bq;
    private _bs;
    private static _cd;
    private _bt;
    private static _ch;
    private _c7;
    private static _cl;
    private _bw;
    private _bz;
    _cq(a: StringBuilder, b: string): string;
    private _br;
    private _c1;
    protected get_d(): boolean;
    get d(): boolean;
    au(): void;
    protected disposeCore(a: boolean): void;
    protected get_a3(): ReadState;
    get a3(): ReadState;
    aq(): string;
    ao(): string;
    ap(): string;
    protected get_a5(): XmlNameTable;
    get a5(): XmlNameTable;
    ah(a: string): string;
    a1(): void;
    u(): boolean;
    private _db;
    private _dc;
    private _dd;
}
