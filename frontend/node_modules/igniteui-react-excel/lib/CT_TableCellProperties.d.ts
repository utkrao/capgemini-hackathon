import { Base, Nullable$1, Type } from "igniteui-react-core";
import { ISupportSetProperty } from "./ISupportSetProperty";
import { CT_LineProperties_DML } from "./CT_LineProperties_DML";
import { CT_Cell3D } from "./CT_Cell3D";
import { CT_OfficeArtExtensionList } from "./CT_OfficeArtExtensionList";
import { ST_TextVerticalType } from "./ST_TextVerticalType";
import { ST_TextAnchoringType } from "./ST_TextAnchoringType";
import { ST_TextHorzOverflowType } from "./ST_TextHorzOverflowType";
import { EG_FillProperties } from "./EG_FillProperties";
import { XmlPartManagerBase } from "./XmlPartManagerBase";
import { ElementPropertyIds } from "./ElementPropertyIds";
/**
 * @hidden
 */
export declare class CT_TableCellProperties extends Base implements ISupportSetProperty {
    static $t: Type;
    private h;
    private j;
    private l;
    private d;
    private n;
    private f;
    private b;
    private p;
    private ag;
    private ai;
    private ak;
    private ae;
    private am;
    private aa;
    private z;
    private ac;
    private q;
    constructor();
    get g(): CT_LineProperties_DML;
    set g(a: CT_LineProperties_DML);
    get i(): CT_LineProperties_DML;
    set i(a: CT_LineProperties_DML);
    get k(): CT_LineProperties_DML;
    set k(a: CT_LineProperties_DML);
    get c(): CT_LineProperties_DML;
    set c(a: CT_LineProperties_DML);
    get m(): CT_LineProperties_DML;
    set m(a: CT_LineProperties_DML);
    get e(): CT_LineProperties_DML;
    set e(a: CT_LineProperties_DML);
    get a(): CT_Cell3D;
    set a(a: CT_Cell3D);
    get o(): CT_OfficeArtExtensionList;
    set o(a: CT_OfficeArtExtensionList);
    get af(): Nullable$1<number>;
    set af(a: Nullable$1<number>);
    get ah(): Nullable$1<number>;
    set ah(a: Nullable$1<number>);
    get aj(): Nullable$1<number>;
    set aj(a: Nullable$1<number>);
    get ad(): Nullable$1<number>;
    set ad(a: Nullable$1<number>);
    get al(): Nullable$1<ST_TextVerticalType>;
    set al(a: Nullable$1<ST_TextVerticalType>);
    get x(): Nullable$1<ST_TextAnchoringType>;
    set x(a: Nullable$1<ST_TextAnchoringType>);
    get y(): Nullable$1<boolean>;
    set y(a: Nullable$1<boolean>);
    get ab(): Nullable$1<ST_TextHorzOverflowType>;
    set ab(a: Nullable$1<ST_TextHorzOverflowType>);
    get r(): EG_FillProperties;
    static ao(a: XmlPartManagerBase, b: Nullable$1<number>, c: Nullable$1<number>, d: Nullable$1<number>, e: Nullable$1<number>, f: Nullable$1<ST_TextVerticalType>, g: Nullable$1<ST_TextAnchoringType>, h: Nullable$1<boolean>, i: Nullable$1<ST_TextHorzOverflowType>): {
        p1: Nullable$1<number>;
        p2: Nullable$1<number>;
        p3: Nullable$1<number>;
        p4: Nullable$1<number>;
        p5: Nullable$1<ST_TextVerticalType>;
        p6: Nullable$1<ST_TextAnchoringType>;
        p7: Nullable$1<boolean>;
        p8: Nullable$1<ST_TextHorzOverflowType>;
    };
    static ap(a: XmlPartManagerBase, b: string, c?: Nullable$1<ST_TextAnchoringType>, d?: Nullable$1<boolean>, e?: Nullable$1<ST_TextHorzOverflowType>, f?: Nullable$1<number>, g?: Nullable$1<number>, h?: Nullable$1<number>, i?: Nullable$1<number>, j?: Nullable$1<ST_TextVerticalType>): void;
    setProperty(a: ElementPropertyIds, b: any): void;
    toString(): string;
}
