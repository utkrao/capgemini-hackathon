import { Base, Nullable$1, Type } from "igniteui-react-core";
import { CT_DataValidationFormula } from "./CT_DataValidationFormula";
import { CT_Sqref } from "./CT_Sqref";
import { ST_DataValidationType } from "./ST_DataValidationType";
import { ST_DataValidationErrorStyle } from "./ST_DataValidationErrorStyle";
import { ST_DataValidationImeMode } from "./ST_DataValidationImeMode";
import { ST_DataValidationOperator } from "./ST_DataValidationOperator";
import { XmlPartManagerBase } from "./XmlPartManagerBase";
/**
 * @hidden
 */
export declare class CT_DataValidation_SML2009 extends Base {
    static $t: Type;
    private d;
    private f;
    private b;
    private z;
    private n;
    private p;
    private r;
    private l;
    private t;
    private x;
    private v;
    private ad;
    private ab;
    private ah;
    private af;
    constructor();
    get c(): CT_DataValidationFormula;
    set c(a: CT_DataValidationFormula);
    get e(): CT_DataValidationFormula;
    set e(a: CT_DataValidationFormula);
    get a(): CT_Sqref;
    set a(a: CT_Sqref);
    get y(): Nullable$1<ST_DataValidationType>;
    set y(a: Nullable$1<ST_DataValidationType>);
    get m(): Nullable$1<ST_DataValidationErrorStyle>;
    set m(a: Nullable$1<ST_DataValidationErrorStyle>);
    get o(): Nullable$1<ST_DataValidationImeMode>;
    set o(a: Nullable$1<ST_DataValidationImeMode>);
    get q(): Nullable$1<ST_DataValidationOperator>;
    set q(a: Nullable$1<ST_DataValidationOperator>);
    get k(): Nullable$1<boolean>;
    set k(a: Nullable$1<boolean>);
    get s(): Nullable$1<boolean>;
    set s(a: Nullable$1<boolean>);
    get w(): Nullable$1<boolean>;
    set w(a: Nullable$1<boolean>);
    get u(): Nullable$1<boolean>;
    set u(a: Nullable$1<boolean>);
    get ac(): string;
    set ac(a: string);
    get aa(): string;
    set aa(a: string);
    get ag(): string;
    set ag(a: string);
    get ae(): string;
    set ae(a: string);
    static ai(a: XmlPartManagerBase, b: Nullable$1<ST_DataValidationType>, c: Nullable$1<ST_DataValidationErrorStyle>, d: Nullable$1<ST_DataValidationImeMode>, e: Nullable$1<ST_DataValidationOperator>, f: Nullable$1<boolean>, g: Nullable$1<boolean>, h: Nullable$1<boolean>, i: Nullable$1<boolean>, j: string, k: string, l: string, m: string): {
        p1: Nullable$1<ST_DataValidationType>;
        p2: Nullable$1<ST_DataValidationErrorStyle>;
        p3: Nullable$1<ST_DataValidationImeMode>;
        p4: Nullable$1<ST_DataValidationOperator>;
        p5: Nullable$1<boolean>;
        p6: Nullable$1<boolean>;
        p7: Nullable$1<boolean>;
        p8: Nullable$1<boolean>;
        p9: string;
        p10: string;
        p11: string;
        p12: string;
    };
    static aj(a: XmlPartManagerBase, b: string, c?: Nullable$1<ST_DataValidationOperator>, d?: Nullable$1<boolean>, e?: string, f?: Nullable$1<ST_DataValidationErrorStyle>, g?: string, h?: Nullable$1<ST_DataValidationImeMode>, i?: string, j?: string, k?: Nullable$1<boolean>, l?: Nullable$1<boolean>, m?: Nullable$1<boolean>, n?: Nullable$1<ST_DataValidationType>): void;
}
