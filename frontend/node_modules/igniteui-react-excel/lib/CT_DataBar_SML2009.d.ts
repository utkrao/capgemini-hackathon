import { Base, Nullable$1, Type } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { CT_Cfvo } from "./CT_Cfvo";
import { ColorInfo } from "./ColorInfo";
import { ST_DataBarDirection } from "./ST_DataBarDirection";
import { ST_DataBarAxisPosition } from "./ST_DataBarAxisPosition";
import { XmlPartManagerBase } from "./XmlPartManagerBase";
/**
 * @hidden
 */
export declare class CT_DataBar_SML2009 extends Base {
    static $t: Type;
    private q;
    private f;
    private d;
    private j;
    private h;
    private b;
    private ac;
    private aa;
    private ai;
    private u;
    private y;
    private w;
    private ag;
    private ae;
    private s;
    constructor();
    get p(): List$1<CT_Cfvo>;
    set p(a: List$1<CT_Cfvo>);
    get e(): ColorInfo;
    set e(a: ColorInfo);
    get c(): ColorInfo;
    set c(a: ColorInfo);
    get i(): ColorInfo;
    set i(a: ColorInfo);
    get g(): ColorInfo;
    set g(a: ColorInfo);
    get a(): ColorInfo;
    set a(a: ColorInfo);
    get ab(): Nullable$1<number>;
    set ab(a: Nullable$1<number>);
    get z(): Nullable$1<number>;
    set z(a: Nullable$1<number>);
    get ah(): Nullable$1<boolean>;
    set ah(a: Nullable$1<boolean>);
    get t(): Nullable$1<boolean>;
    set t(a: Nullable$1<boolean>);
    get x(): Nullable$1<boolean>;
    set x(a: Nullable$1<boolean>);
    get v(): Nullable$1<ST_DataBarDirection>;
    set v(a: Nullable$1<ST_DataBarDirection>);
    get af(): Nullable$1<boolean>;
    set af(a: Nullable$1<boolean>);
    get ad(): Nullable$1<boolean>;
    set ad(a: Nullable$1<boolean>);
    get r(): Nullable$1<ST_DataBarAxisPosition>;
    set r(a: Nullable$1<ST_DataBarAxisPosition>);
    static al(a: XmlPartManagerBase, b: Nullable$1<number>, c: Nullable$1<number>, d: Nullable$1<boolean>, e: Nullable$1<boolean>, f: Nullable$1<boolean>, g: Nullable$1<ST_DataBarDirection>, h: Nullable$1<boolean>, i: Nullable$1<boolean>, j: Nullable$1<ST_DataBarAxisPosition>): {
        p1: Nullable$1<number>;
        p2: Nullable$1<number>;
        p3: Nullable$1<boolean>;
        p4: Nullable$1<boolean>;
        p5: Nullable$1<boolean>;
        p6: Nullable$1<ST_DataBarDirection>;
        p7: Nullable$1<boolean>;
        p8: Nullable$1<boolean>;
        p9: Nullable$1<ST_DataBarAxisPosition>;
    };
    static am(a: XmlPartManagerBase, b: string, c?: Nullable$1<ST_DataBarAxisPosition>, d?: Nullable$1<boolean>, e?: Nullable$1<ST_DataBarDirection>, f?: Nullable$1<boolean>, g?: Nullable$1<number>, h?: Nullable$1<number>, i?: Nullable$1<boolean>, j?: Nullable$1<boolean>, k?: Nullable$1<boolean>): void;
}
