import { DrawingNamespaceDefinitionBase } from "./DrawingNamespaceDefinitionBase";
import { XmlPartManagerBase } from "./XmlPartManagerBase";
import { ST_Coordinate } from "./ST_Coordinate";
import { Type } from "igniteui-react-core";
import { ST_PositiveCoordinate } from "./ST_PositiveCoordinate";
import { ST_EditAs } from "./ST_EditAs";
/**
 * @hidden
 */
export declare class DrawingMLSpreadsheetDrawing extends DrawingNamespaceDefinitionBase {
    static $t: Type;
    private static readonly ds;
    private static readonly dr;
    static readonly dt: string;
    static readonly du: string;
    static readonly dx: string;
    static readonly dy: string;
    static readonly d1: string;
    static readonly d4: string;
    static readonly eb: string;
    static readonly ed: string;
    static readonly ee: string;
    static readonly ef: string;
    static readonly ej: string;
    static readonly ek: string;
    static readonly em: string;
    static readonly dz: string;
    static readonly d5: string;
    static readonly d6: string;
    static readonly ec: string;
    static readonly eg: string;
    static readonly ea: string;
    static readonly dv: string;
    static readonly dw: string;
    static readonly eh: string;
    static readonly el: string;
    static readonly dp: DrawingMLSpreadsheetDrawing;
    constructor();
    protected get_t(): string;
    get t(): string;
    private static er;
    private static e6;
    private static ey;
    private static fd;
    static en(a: XmlPartManagerBase): void;
    static e2(a: XmlPartManagerBase): void;
    static eo(a: XmlPartManagerBase, b: boolean, c: boolean): {
        p1: boolean;
        p2: boolean;
    };
    static e3(a: XmlPartManagerBase, b?: boolean, c?: boolean): void;
    static ep(a: XmlPartManagerBase, b: number): {
        p1: number;
    };
    static e4(a: XmlPartManagerBase, b: number): void;
    static eq(a: XmlPartManagerBase, b: ST_Coordinate): {
        p1: ST_Coordinate;
    };
    static e5(a: XmlPartManagerBase, b: ST_Coordinate): void;
    static es(a: XmlPartManagerBase, b: ST_PositiveCoordinate, c: ST_PositiveCoordinate): {
        p1: ST_PositiveCoordinate;
        p2: ST_PositiveCoordinate;
    };
    static e7(a: XmlPartManagerBase, b: ST_PositiveCoordinate, c: ST_PositiveCoordinate): void;
    static et(a: XmlPartManagerBase): void;
    static e8(a: XmlPartManagerBase): void;
    static eu(a: XmlPartManagerBase): void;
    static e9(a: XmlPartManagerBase): void;
    static ev(a: XmlPartManagerBase, b: ST_Coordinate, c: ST_Coordinate): {
        p1: ST_Coordinate;
        p2: ST_Coordinate;
    };
    static fa(a: XmlPartManagerBase, b: ST_Coordinate, c: ST_Coordinate): void;
    static ew(a: XmlPartManagerBase, b: number): {
        p1: number;
    };
    static fb(a: XmlPartManagerBase, b: number): void;
    static ex(a: XmlPartManagerBase, b: ST_Coordinate): {
        p1: ST_Coordinate;
    };
    static fc(a: XmlPartManagerBase, b: ST_Coordinate): void;
    static ez(a: XmlPartManagerBase): void;
    static fe(a: XmlPartManagerBase): void;
    static e0(a: XmlPartManagerBase, b: ST_EditAs): {
        p1: ST_EditAs;
    };
    static ff(a: XmlPartManagerBase, b?: ST_EditAs): void;
    static e1(a: XmlPartManagerBase): void;
    static fg(a: XmlPartManagerBase): void;
}
