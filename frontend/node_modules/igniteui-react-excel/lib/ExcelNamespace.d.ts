import { XmlNamespaceDefinitionBase } from "./XmlNamespaceDefinitionBase";
import { ST_ConformanceClass } from "./ST_ConformanceClass";
import { XmlPartManagerBase } from "./XmlPartManagerBase";
import { ST_CF } from "./ST_CF";
import { ST_ObjectType } from "./ST_ObjectType";
import { Type } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class ExcelNamespace extends XmlNamespaceDefinitionBase {
    static $t: Type;
    static readonly aq: string;
    static readonly ar: string;
    static readonly as: string;
    static readonly at: string;
    static readonly au: string;
    static readonly av: string;
    static readonly aw: string;
    static readonly ax: string;
    static readonly ay: string;
    static readonly az: string;
    static readonly a0: string;
    static readonly a1: string;
    static readonly a2: string;
    static readonly a3: string;
    static readonly a4: string;
    static readonly a5: string;
    static readonly a6: string;
    static readonly a7: string;
    static readonly a8: string;
    static readonly a9: string;
    static readonly ba: string;
    static readonly bb: string;
    static readonly bc: string;
    static readonly bd: string;
    static readonly be: string;
    static readonly bf: string;
    static readonly bg: string;
    static readonly bh: string;
    static readonly bi: string;
    static readonly bj: string;
    static readonly bl: string;
    static readonly bk: string;
    static readonly bo: string;
    static readonly bm: string;
    static readonly bn: string;
    static readonly bp: string;
    static readonly bq: string;
    static readonly bs: string;
    static readonly bt: string;
    static readonly bv: string;
    static readonly bw: string;
    static readonly bx: string;
    static readonly by: string;
    static readonly bz: string;
    static readonly b0: string;
    static readonly b1: string;
    static readonly b2: string;
    static readonly b3: string;
    static readonly b4: string;
    static readonly b5: string;
    static readonly b6: string;
    static readonly ca: string;
    static readonly b7: string;
    static readonly b8: string;
    static readonly b9: string;
    static readonly ao: ExcelNamespace;
    constructor();
    s(a: ST_ConformanceClass): string;
    protected get_t(): string;
    get t(): string;
    private static dn;
    private static e8;
    static cb(a: XmlPartManagerBase, b: string): {
        p1: string;
    };
    static dw(a: XmlPartManagerBase, b: string): void;
    static cc(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static dx(a: XmlPartManagerBase, b: boolean): void;
    static cd(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static dy(a: XmlPartManagerBase, b: boolean): void;
    static ce(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static dz(a: XmlPartManagerBase, b: boolean): void;
    static cf(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static d0(a: XmlPartManagerBase, b: boolean): void;
    static cg(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static d1(a: XmlPartManagerBase, b: boolean): void;
    static ch(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static d2(a: XmlPartManagerBase, b: boolean): void;
    static ci(a: XmlPartManagerBase, b: ST_CF): {
        p1: ST_CF;
    };
    static d3(a: XmlPartManagerBase, b: ST_CF): void;
    static cj(a: XmlPartManagerBase, b: number): {
        p1: number;
    };
    static d4(a: XmlPartManagerBase, b: number): void;
    static ck(a: XmlPartManagerBase, b: ST_ObjectType): {
        p1: ST_ObjectType;
    };
    static d5(a: XmlPartManagerBase, b: ST_ObjectType): void;
    static cl(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static d6(a: XmlPartManagerBase, b: boolean): void;
    static cm(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static d7(a: XmlPartManagerBase, b: boolean): void;
    static cn(a: XmlPartManagerBase, b: number): {
        p1: number;
    };
    static d8(a: XmlPartManagerBase, b: number): void;
    static co(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static d9(a: XmlPartManagerBase, b: boolean): void;
    static cp(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static ea(a: XmlPartManagerBase, b: boolean): void;
    static cq(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static eb(a: XmlPartManagerBase, b: boolean): void;
    static cr(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static ec(a: XmlPartManagerBase, b: boolean): void;
    static cs(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static ed(a: XmlPartManagerBase, b: boolean): void;
    static ct(a: XmlPartManagerBase, b: number): {
        p1: number;
    };
    static ee(a: XmlPartManagerBase, b: number): void;
    static cu(a: XmlPartManagerBase, b: string): {
        p1: string;
    };
    static ef(a: XmlPartManagerBase, b: string): void;
    static cv(a: XmlPartManagerBase, b: number): {
        p1: number;
    };
    static eg(a: XmlPartManagerBase, b: number): void;
    static cw(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static eh(a: XmlPartManagerBase, b: boolean): void;
    static cx(a: XmlPartManagerBase, b: string): {
        p1: string;
    };
    static ei(a: XmlPartManagerBase, b: string): void;
    static cy(a: XmlPartManagerBase, b: string): {
        p1: string;
    };
    static ej(a: XmlPartManagerBase, b: string): void;
    static cz(a: XmlPartManagerBase, b: string): {
        p1: string;
    };
    static ek(a: XmlPartManagerBase, b: string): void;
    static c0(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static el(a: XmlPartManagerBase, b: boolean): void;
    static c1(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static em(a: XmlPartManagerBase, b: boolean): void;
    static c2(a: XmlPartManagerBase, b: number): {
        p1: number;
    };
    static en(a: XmlPartManagerBase, b: number): void;
    static c3(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static eo(a: XmlPartManagerBase, b: boolean): void;
    static c4(a: XmlPartManagerBase, b: string): {
        p1: string;
    };
    static ep(a: XmlPartManagerBase, b: string): void;
    static c6(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static er(a: XmlPartManagerBase, b: boolean): void;
    static c5(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static eq(a: XmlPartManagerBase, b: boolean): void;
    static c7(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static es(a: XmlPartManagerBase, b: boolean): void;
    static c8(a: XmlPartManagerBase, b: number): {
        p1: number;
    };
    static et(a: XmlPartManagerBase, b: number): void;
    static c9(a: XmlPartManagerBase, b: number): {
        p1: number;
    };
    static eu(a: XmlPartManagerBase, b: number): void;
    static da(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static ev(a: XmlPartManagerBase, b: boolean): void;
    static db(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static ew(a: XmlPartManagerBase, b: boolean): void;
    static dd(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static ey(a: XmlPartManagerBase, b: boolean): void;
    static dc(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static ex(a: XmlPartManagerBase, b: boolean): void;
    static de(a: XmlPartManagerBase, b: number): {
        p1: number;
    };
    static ez(a: XmlPartManagerBase, b: number): void;
    static df(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static e0(a: XmlPartManagerBase, b: boolean): void;
    static dg(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static e1(a: XmlPartManagerBase, b: boolean): void;
    static dh(a: XmlPartManagerBase, b: number): {
        p1: number;
    };
    static e2(a: XmlPartManagerBase, b: number): void;
    static di(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static e3(a: XmlPartManagerBase, b: boolean): void;
    static dj(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static e4(a: XmlPartManagerBase, b: boolean): void;
    static dk(a: XmlPartManagerBase, b: number): {
        p1: number;
    };
    static e5(a: XmlPartManagerBase, b: number): void;
    static dl(a: XmlPartManagerBase, b: string): {
        p1: string;
    };
    static e6(a: XmlPartManagerBase, b: string): void;
    static dm(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static e7(a: XmlPartManagerBase, b: boolean): void;
    static dp(a: XmlPartManagerBase, b: string): {
        p1: string;
    };
    static e9(a: XmlPartManagerBase, b: string): void;
    static dq(a: XmlPartManagerBase, b: string): {
        p1: string;
    };
    static fa(a: XmlPartManagerBase, b: string): void;
    static dr(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static fb(a: XmlPartManagerBase, b: boolean): void;
    static dv(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static ff(a: XmlPartManagerBase, b: boolean): void;
    static dt(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static fd(a: XmlPartManagerBase, b: boolean): void;
    static ds(a: XmlPartManagerBase, b: number): {
        p1: number;
    };
    static fc(a: XmlPartManagerBase, b: number): void;
    static du(a: XmlPartManagerBase, b: boolean): {
        p1: boolean;
    };
    static fe(a: XmlPartManagerBase, b: boolean): void;
}
