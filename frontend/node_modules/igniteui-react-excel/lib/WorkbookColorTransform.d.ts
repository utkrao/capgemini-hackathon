import { Base, Nullable$1, Type } from "igniteui-react-core";
/**
 * Defines color transforms for a [[WorkbookColorInfo]] instance.
 * <p class="body">
 * This class is immutable.
 * </p>
 * <p class="body">
 * Color transforms are not applicable to all contexts within which a WorkbookColorInfo is used;
 * currently they are only used by <see cref="WorksheetChart">charts</see>.
 * </p>
 * @see [[ChartSolidFill]]
 * @see [[GradientStop]]
 * @see [[ChartGradientFill]]
 */
export declare class WorkbookColorTransform extends Base {
    static $t: Type;
    /**
     * @hidden
     */
    private static readonly _c;
    constructor(alpha?: number, luminanceModulation?: number, luminanceOffset?: number, shade?: number);
    constructor(..._rest: any[]);
    /**
     * Defines the value of the alpha channel for the associated
     * [[WorkbookColorInfo]] instance, expressed
     * as a number between 0 and 1.
     * <p class="body">
     * Use this property to control the transparency of the associated color.
     * </p>
     * <p class="body">
     * For example, to make the associated color 50% transparent, assign a value of <b>.5</b> to this property.
     * </p>
     * <p class="body">
     * Assigning a value of null to this property implies that the associated
     * color has no specific alpha channel setting, i.e., the associated color
     * is fully opaque.
     * </p>
     */
    get alpha(): number | null;
    set alpha(a: number | null);
    private _alpha$i_1;
    /**
     * @hidden
     */
    get _alpha$i(): Nullable$1<number>;
    /**
     * @hidden
     */
    set _alpha$i(a: Nullable$1<number>);
    /**
     * Defines the luminance modulation for the associated
     * [[WorkbookColorInfo]] instance, expressed
     * as a fractional number.
     * <p class="body">
     * Luminance is also referred to as brightness.
     * </p>
     * <p class="body">
     * This property specifies the amount by which the luminance of the associated
     * base color is increased. For example, a value of .5 yields a 50% reduction
     * in luminance. A value of 1.0 implies no change in luminance. A value greater
     * than 1.0 implies an increase in luminance; for example, a value of 2.0 doubles
     * the luminance.
     * </p>
     * <p class="body">
     * Assigning a value of null to this property implies that the associated color has no specific luminance modulation.
     * </p>
     * <p class="body">
     * Luminance modulation is applied by converting the base color from RGB to HSL, then
     * multiplying the luminance channel by the value of this property, then converting
     * back to RGB.
     * </p>
     * @see [[luminanceOffset]]
     */
    get luminanceModulation(): number | null;
    set luminanceModulation(a: number | null);
    private _luminanceModulation$i_1;
    /**
     * @hidden
     */
    get _luminanceModulation$i(): Nullable$1<number>;
    /**
     * @hidden
     */
    set _luminanceModulation$i(a: Nullable$1<number>);
    /**
     * Defines the luminance offset for the associated
     * [[WorkbookColorInfo]] instance, expressed
     * as a fractional number.
     * <p class="body">
     * Luminance is also referred to as brightness.
     * </p>
     * <p class="body">
     * The luminance offset is applied by converting the base color from RGB to HSL, then
     * the value of this property to the luminance channel, then converting back to RGB.
     * </p>
     * <p class="body">
     * Assigning a value of null to this property implies that the associated color has no specific luminance offset.
     * </p>
     * @see [[luminanceModulation]]
     */
    get luminanceOffset(): number | null;
    set luminanceOffset(a: number | null);
    private _luminanceOffset$i_1;
    /**
     * @hidden
     */
    get _luminanceOffset$i(): Nullable$1<number>;
    /**
     * @hidden
     */
    set _luminanceOffset$i(a: Nullable$1<number>);
    /**
     * Defines the shading for the associated
     * [[WorkbookColorInfo]] instance, expressed
     * as a fractional number.
     * @see [[alpha]]
     */
    get shade(): number | null;
    set shade(a: number | null);
    private _shade$i_1;
    /**
     * @hidden
     */
    get _shade$i(): Nullable$1<number>;
    /**
     * @hidden
     */
    set _shade$i(a: Nullable$1<number>);
    /**
     * @hidden
     */
    _b(): boolean;
    /**
     * @hidden
     */
    static _a(a: WorkbookColorTransform, b: WorkbookColorTransform): boolean;
}
