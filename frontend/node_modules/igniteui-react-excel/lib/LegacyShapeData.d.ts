import { Base, Nullable$1, Type } from "igniteui-react-core";
import { ILegacyShapeData } from "./ILegacyShapeData";
import { Formula } from "./Formula";
import { ImageHolder } from "./ImageHolder";
import { WorksheetShape } from "./WorksheetShape";
import { ST_CF } from "./ST_CF";
import { ST_InsetMode } from "./ST_InsetMode";
import { LegacyShapeLockData } from "./LegacyShapeLockData";
import { ST_ObjectType } from "./ST_ObjectType";
import { LegacyShapePathData } from "./LegacyShapePathData";
import { UnknownStructure } from "./UnknownStructure";
/**
 * @hidden
 */
export declare class LegacyShapeData extends Base implements ILegacyShapeData {
    static $t: Type;
    n: Nullable$1<boolean>;
    o: Nullable$1<boolean>;
    p: Nullable$1<boolean>;
    q: Nullable$1<ST_CF>;
    r: Nullable$1<number>;
    s: Nullable$1<boolean>;
    t: Nullable$1<number>;
    u: Nullable$1<boolean>;
    v: Nullable$1<number>;
    an: string;
    w: Nullable$1<number>;
    x: Nullable$1<boolean>;
    ao: string;
    private _fmlaMacro;
    get fmlaMacro(): Formula;
    set fmlaMacro(a: Formula);
    ap: string;
    k: boolean;
    aq: string;
    y: Nullable$1<number>;
    z: Nullable$1<ST_InsetMode>;
    c: LegacyShapeLockData;
    ar: string;
    ab: Nullable$1<number>;
    ac: Nullable$1<number>;
    aa: Nullable$1<boolean>;
    ad: Nullable$1<boolean>;
    ae: Nullable$1<boolean>;
    j: ST_ObjectType;
    af: Nullable$1<number>;
    d: LegacyShapePathData;
    ag: Nullable$1<boolean>;
    ah: Nullable$1<number>;
    ai: Nullable$1<boolean>;
    m: number;
    as: string;
    at: string;
    aj: Nullable$1<boolean>;
    au: string;
    aw: string;
    ak: Nullable$1<boolean>;
    av: string;
    i: UnknownStructure;
    ax: string;
    ay: string;
    az: string;
    al: Nullable$1<number>;
    am: Nullable$1<boolean>;
    private a;
    private e;
    private g;
    constructor();
    a0(a: WorksheetShape): void;
    get b(): number[];
    get f(): ImageHolder;
    set f(a: ImageHolder);
    get h(): WorksheetShape;
    get l(): boolean;
}
