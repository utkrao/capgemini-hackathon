import { Base, Nullable$1, Type } from "igniteui-react-core";
import { CT_ListItems } from "./CT_ListItems";
import { CT_ExtensionList } from "./CT_ExtensionList";
import { ST_ObjectType } from "./ST_ObjectType";
import { ST_Checked } from "./ST_Checked";
import { ST_DropStyle } from "./ST_DropStyle";
import { ST_SelType } from "./ST_SelType";
import { ST_TextHAlign } from "./ST_TextHAlign";
import { ST_TextVAlign } from "./ST_TextVAlign";
import { ST_EditValidation } from "./ST_EditValidation";
import { XmlPartManagerBase } from "./XmlPartManagerBase";
/**
 * @hidden
 */
export declare class CT_FormControlPr extends Base {
    static $t: Type;
    private d;
    private b;
    private ay;
    private s;
    private u;
    private w;
    private y;
    private aa;
    private ae;
    private bi;
    private bk;
    private bm;
    private bo;
    private ag;
    private ai;
    private ak;
    private am;
    private ao;
    private aq;
    private bq;
    private aw;
    private av;
    private a0;
    private a4;
    private a6;
    private a8;
    private ba;
    private bc;
    private bg;
    private ac;
    private as;
    private be;
    private a2;
    constructor();
    get c(): CT_ListItems;
    set c(a: CT_ListItems);
    get a(): CT_ExtensionList;
    set a(a: CT_ExtensionList);
    get ax(): Nullable$1<ST_ObjectType>;
    set ax(a: Nullable$1<ST_ObjectType>);
    get r(): Nullable$1<ST_Checked>;
    set r(a: Nullable$1<ST_Checked>);
    get t(): Nullable$1<boolean>;
    set t(a: Nullable$1<boolean>);
    get v(): Nullable$1<number>;
    set v(a: Nullable$1<number>);
    get x(): Nullable$1<ST_DropStyle>;
    set x(a: Nullable$1<ST_DropStyle>);
    get z(): Nullable$1<number>;
    set z(a: Nullable$1<number>);
    get ad(): Nullable$1<boolean>;
    set ad(a: Nullable$1<boolean>);
    get bh(): string;
    set bh(a: string);
    get bj(): string;
    set bj(a: string);
    get bl(): string;
    set bl(a: string);
    get bn(): string;
    set bn(a: string);
    get af(): Nullable$1<boolean>;
    set af(a: Nullable$1<boolean>);
    get ah(): Nullable$1<number>;
    set ah(a: Nullable$1<number>);
    get aj(): Nullable$1<boolean>;
    set aj(a: Nullable$1<boolean>);
    get al(): Nullable$1<boolean>;
    set al(a: Nullable$1<boolean>);
    get an(): Nullable$1<number>;
    set an(a: Nullable$1<number>);
    get ap(): Nullable$1<number>;
    set ap(a: Nullable$1<number>);
    get bp(): string;
    set bp(a: string);
    get at(): Nullable$1<boolean>;
    set at(a: Nullable$1<boolean>);
    get au(): Nullable$1<boolean>;
    set au(a: Nullable$1<boolean>);
    get az(): Nullable$1<number>;
    set az(a: Nullable$1<number>);
    get a3(): Nullable$1<number>;
    set a3(a: Nullable$1<number>);
    get a5(): Nullable$1<ST_SelType>;
    set a5(a: Nullable$1<ST_SelType>);
    get a7(): Nullable$1<ST_TextHAlign>;
    set a7(a: Nullable$1<ST_TextHAlign>);
    get a9(): Nullable$1<ST_TextVAlign>;
    set a9(a: Nullable$1<ST_TextVAlign>);
    get bb(): Nullable$1<number>;
    set bb(a: Nullable$1<number>);
    get bf(): Nullable$1<number>;
    set bf(a: Nullable$1<number>);
    get ab(): Nullable$1<ST_EditValidation>;
    set ab(a: Nullable$1<ST_EditValidation>);
    get ar(): Nullable$1<boolean>;
    set ar(a: Nullable$1<boolean>);
    get bd(): Nullable$1<boolean>;
    set bd(a: Nullable$1<boolean>);
    get a1(): Nullable$1<boolean>;
    set a1(a: Nullable$1<boolean>);
    static bv(a: XmlPartManagerBase, b: Nullable$1<ST_ObjectType>, c: Nullable$1<ST_Checked>, d: Nullable$1<boolean>, e: Nullable$1<number>, f: Nullable$1<ST_DropStyle>, g: Nullable$1<number>, h: Nullable$1<boolean>, i: string, j: string, k: string, l: string, m: Nullable$1<boolean>, n: Nullable$1<number>, o: Nullable$1<boolean>, p: Nullable$1<boolean>, q: Nullable$1<number>, r: Nullable$1<number>, s: string, t: Nullable$1<boolean>, u: Nullable$1<boolean>, v: Nullable$1<number>, w: Nullable$1<number>, x: Nullable$1<ST_SelType>, y: Nullable$1<ST_TextHAlign>, z: Nullable$1<ST_TextVAlign>, aa: Nullable$1<number>, ab: Nullable$1<number>, ac: Nullable$1<ST_EditValidation>, ad: Nullable$1<boolean>, ae: Nullable$1<boolean>, af: Nullable$1<boolean>): {
        p1: Nullable$1<ST_ObjectType>;
        p2: Nullable$1<ST_Checked>;
        p3: Nullable$1<boolean>;
        p4: Nullable$1<number>;
        p5: Nullable$1<ST_DropStyle>;
        p6: Nullable$1<number>;
        p7: Nullable$1<boolean>;
        p8: string;
        p9: string;
        p10: string;
        p11: string;
        p12: Nullable$1<boolean>;
        p13: Nullable$1<number>;
        p14: Nullable$1<boolean>;
        p15: Nullable$1<boolean>;
        p16: Nullable$1<number>;
        p17: Nullable$1<number>;
        p18: string;
        p19: Nullable$1<boolean>;
        p20: Nullable$1<boolean>;
        p21: Nullable$1<number>;
        p22: Nullable$1<number>;
        p23: Nullable$1<ST_SelType>;
        p24: Nullable$1<ST_TextHAlign>;
        p25: Nullable$1<ST_TextVAlign>;
        p26: Nullable$1<number>;
        p27: Nullable$1<number>;
        p28: Nullable$1<ST_EditValidation>;
        p29: Nullable$1<boolean>;
        p30: Nullable$1<boolean>;
        p31: Nullable$1<boolean>;
    };
    static bw(a: XmlPartManagerBase, b: string, c?: Nullable$1<ST_Checked>, d?: Nullable$1<boolean>, e?: Nullable$1<number>, f?: Nullable$1<ST_DropStyle>, g?: Nullable$1<number>, h?: Nullable$1<ST_EditValidation>, i?: Nullable$1<boolean>, j?: string, k?: string, l?: string, m?: string, n?: Nullable$1<boolean>, o?: Nullable$1<number>, p?: Nullable$1<boolean>, q?: Nullable$1<boolean>, r?: Nullable$1<number>, s?: Nullable$1<number>, t?: Nullable$1<boolean>, u?: string, v?: Nullable$1<boolean>, w?: Nullable$1<boolean>, x?: Nullable$1<ST_ObjectType>, y?: Nullable$1<number>, z?: Nullable$1<boolean>, aa?: Nullable$1<number>, ab?: Nullable$1<ST_SelType>, ac?: Nullable$1<ST_TextHAlign>, ad?: Nullable$1<ST_TextVAlign>, ae?: Nullable$1<number>, af?: Nullable$1<boolean>, ag?: Nullable$1<number>): void;
}
