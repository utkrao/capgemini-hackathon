import { Base, Nullable$1, Type } from "igniteui-react-core";
import { HorizontalCellAlignment } from "./HorizontalCellAlignment";
import { VerticalCellAlignment } from "./VerticalCellAlignment";
import { WorksheetCellFormatData } from "./WorksheetCellFormatData";
/**
 * @hidden
 */
export declare class AlignmentInfo extends Base {
    static $t: Type;
    static f: AlignmentInfo;
    private b;
    private aa;
    private p;
    private ac;
    private ae;
    private r;
    private ag;
    private h;
    private t;
    static staticInit(): void;
    constructor(a: number);
    constructor(a: number, b: HorizontalCellAlignment, c: Nullable$1<number>, d: boolean, e: Nullable$1<number>, f: Nullable$1<number>, g: Nullable$1<number>, h: Nullable$1<boolean>, i: VerticalCellAlignment, j: Nullable$1<boolean>);
    constructor(a: number, ..._rest: any[]);
    equals(a: any): boolean;
    getHashCode(): number;
    get c(): HorizontalCellAlignment;
    set c(a: HorizontalCellAlignment);
    get ab(): Nullable$1<number>;
    set ab(a: Nullable$1<number>);
    get q(): boolean;
    set q(a: boolean);
    get ad(): Nullable$1<number>;
    set ad(a: Nullable$1<number>);
    get af(): Nullable$1<number>;
    set af(a: Nullable$1<number>);
    get s(): boolean;
    set s(a: boolean);
    get ah(): Nullable$1<number>;
    set ah(a: Nullable$1<number>);
    get i(): VerticalCellAlignment;
    set i(a: VerticalCellAlignment);
    get u(): boolean;
    set u(a: boolean);
    get o(): boolean;
    ai(a: WorksheetCellFormatData, b?: boolean): void;
    static d(a: WorksheetCellFormatData): AlignmentInfo;
    static e(a: WorksheetCellFormatData, b: boolean): AlignmentInfo;
    static n(a: AlignmentInfo, b: AlignmentInfo): boolean;
}
