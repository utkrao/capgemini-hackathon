import { Base, Nullable$1, Type } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { CT_PivotEdit } from "./CT_PivotEdit";
import { CT_PivotChange } from "./CT_PivotChange";
import { CT_ConditionalFormats } from "./CT_ConditionalFormats";
import { ST_AllocationMethod } from "./ST_AllocationMethod";
import { XmlPartManagerBase } from "./XmlPartManagerBase";
/**
 * @hidden
 */
export declare class CT_PivotTableDefinition extends Base {
    static $t: Type;
    private m;
    private k;
    private b;
    private w;
    private aa;
    private s;
    private ac;
    private ae;
    private u;
    private q;
    private o;
    private ag;
    private y;
    constructor();
    get l(): List$1<CT_PivotEdit>;
    set l(a: List$1<CT_PivotEdit>);
    get j(): List$1<CT_PivotChange>;
    set j(a: List$1<CT_PivotChange>);
    get a(): CT_ConditionalFormats;
    set a(a: CT_ConditionalFormats);
    get v(): Nullable$1<boolean>;
    set v(a: Nullable$1<boolean>);
    get z(): Nullable$1<boolean>;
    set z(a: Nullable$1<boolean>);
    get r(): Nullable$1<boolean>;
    set r(a: Nullable$1<boolean>);
    get ab(): string;
    set ab(a: string);
    get ad(): string;
    set ad(a: string);
    get t(): Nullable$1<boolean>;
    set t(a: Nullable$1<boolean>);
    get p(): Nullable$1<boolean>;
    set p(a: Nullable$1<boolean>);
    get n(): Nullable$1<ST_AllocationMethod>;
    set n(a: Nullable$1<ST_AllocationMethod>);
    get af(): string;
    set af(a: string);
    get x(): Nullable$1<boolean>;
    set x(a: Nullable$1<boolean>);
    static ah(a: XmlPartManagerBase, b: Nullable$1<boolean>, c: Nullable$1<boolean>, d: Nullable$1<boolean>, e: string, f: string, g: Nullable$1<boolean>, h: Nullable$1<boolean>, i: Nullable$1<ST_AllocationMethod>, j: string, k: Nullable$1<boolean>): {
        p1: Nullable$1<boolean>;
        p2: Nullable$1<boolean>;
        p3: Nullable$1<boolean>;
        p4: string;
        p5: string;
        p6: Nullable$1<boolean>;
        p7: Nullable$1<boolean>;
        p8: Nullable$1<ST_AllocationMethod>;
        p9: string;
        p10: Nullable$1<boolean>;
    };
    static ai(a: XmlPartManagerBase, b: string, c?: Nullable$1<ST_AllocationMethod>, d?: string, e?: string, f?: Nullable$1<boolean>, g?: Nullable$1<boolean>, h?: Nullable$1<boolean>, i?: Nullable$1<boolean>, j?: Nullable$1<boolean>, k?: Nullable$1<boolean>, l?: string): void;
}
