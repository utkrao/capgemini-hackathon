import { ValueType, Nullable$1, Type } from "igniteui-react-core";
import { ST_UniversalMeasure } from "./ST_UniversalMeasure";
import { ST_DecimalNumberOrPercent } from "./ST_DecimalNumberOrPercent";
import { ST_ConformanceClass } from "./ST_ConformanceClass";
/**
 * @hidden
 */
export declare class ST_MeasurementOrPercent extends ValueType {
    static $t: Type;
    constructor(a: number, b: ST_DecimalNumberOrPercent);
    constructor(a: number, b: ST_UniversalMeasure);
    constructor();
    constructor(a: number, ..._rest: any[]);
    private readonly m;
    private readonly n;
    equals(a: any): boolean;
    getHashCode(): number;
    toString(): string;
    r(a: ST_ConformanceClass): string;
    o(a: boolean): {
        ret: Nullable$1<number>;
        p0: boolean;
    };
    static e(a: string, b: ST_ConformanceClass): ST_MeasurementOrPercent;
    get f(): boolean;
    static g(a: ST_MeasurementOrPercent, b: ST_MeasurementOrPercent): boolean;
    static h(a: Nullable$1<ST_MeasurementOrPercent>, b: Nullable$1<ST_MeasurementOrPercent>): boolean;
    static i(a: ST_MeasurementOrPercent, b: ST_MeasurementOrPercent): boolean;
    static j(a: Nullable$1<ST_MeasurementOrPercent>, b: Nullable$1<ST_MeasurementOrPercent>): boolean;
    static a(a: ST_DecimalNumberOrPercent): ST_MeasurementOrPercent;
    static p(a: Nullable$1<ST_DecimalNumberOrPercent>): Nullable$1<ST_MeasurementOrPercent>;
    static b(a: ST_UniversalMeasure): ST_MeasurementOrPercent;
    static q(a: Nullable$1<ST_UniversalMeasure>): Nullable$1<ST_MeasurementOrPercent>;
}
