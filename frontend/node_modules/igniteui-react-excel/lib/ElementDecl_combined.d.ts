import { Base, Type } from "igniteui-react-core";
import { AttDef } from "./AttDef";
import { AttList } from "./AttList";
import { DeclaredContent } from "./DeclaredContent";
import { List$1 } from "igniteui-react-core";
import { GroupType } from "./GroupType";
import { Occurrence } from "./Occurrence";
import { XmlNameTable } from "igniteui-react-core";
import { Entity } from "./Entity";
import { Uri } from "igniteui-react-core";
import { TextReader } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class ElementDecl extends Base {
    static $t: Type;
    constructor(a: string, b: boolean, c: boolean, d: ContentModel, e: string[], f: string[]);
    i: string;
    h: boolean;
    g: boolean;
    e: ContentModel;
    b: string[];
    a: string[];
    d: AttList;
    c(a: string): AttDef;
    j(a: AttList): void;
    f(a: string, b: SgmlDtd): boolean;
}
/**
 * @hidden
 */
export declare class ContentModel extends Base {
    static $t: Type;
    a: DeclaredContent;
    d: number;
    b: Group;
    constructor();
    i(): void;
    e(): number;
    h(a: string): void;
    f(a: string): void;
    g(a: string): void;
    j(a: string): void;
    c(a: string, b: SgmlDtd): boolean;
}
/**
 * @hidden
 */
export declare class Group extends Base {
    static $t: Type;
    a: Group;
    g: List$1<any>;
    b: GroupType;
    c: Occurrence;
    e: boolean;
    get f(): boolean;
    constructor(a: Group);
    i(a: Group): void;
    k(a: string): void;
    h(a: string): void;
    j(a: string): void;
    d(a: string, b: SgmlDtd): boolean;
}
/**
 * @hidden
 */
export declare class SgmlDtd extends Base {
    static $t: Type;
    r: string;
    private m;
    private o;
    private n;
    private w;
    private e;
    private am;
    constructor(a: string, b: XmlNameTable);
    get an(): XmlNameTable;
    static j(a: Uri, b: string, c: string, d: string, e: string, f: string, g: XmlNameTable): SgmlDtd;
    static i(a: Uri, b: string, c: string, d: TextReader, e: string, f: string, g: XmlNameTable): SgmlDtd;
    f(a: string): Entity;
    d(a: string): ElementDecl;
    private al;
    private ak;
    private x;
    private ah;
    private l;
    private k;
    private ag;
    private af;
    private ae;
    private u;
    private h;
    private g;
    private static v;
    private ad;
    private ac;
    private static s;
    private a;
    private aj;
    private static q;
    private c;
    private static p;
    private ai;
    private z;
    private static t;
    private aa;
    private b;
    private ab;
    private y;
}
