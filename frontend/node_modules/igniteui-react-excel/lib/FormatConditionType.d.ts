import { Type } from "igniteui-react-core";
/**
 * Constants which determine the criteria for a format <see cref="ConditionBase">condition</see>.
 */
export declare enum FormatConditionType {
    /**
     * The format is based on the cell's value, which is evaluated against
     * one or more conditions to determine whether the value meets a particular
     * criteria.
     */
    CellValue = 0,
    /**
     * The format is determined by evaluating a formula.
     */
    Expression = 1,
    /**
     * Represents a conditional formatting rule which applies gradations to
     * cell colors to indicate relative differences in the values of cells
     * which belong to the associated range.
     */
    ColorScale = 2,
    /**
     * Represents a conditional formatting rule which renders a color bar
     * inside the cell to indicate relative differences in the values of cells
     * which belong to the associated range.
     */
    DataBar = 3,
    /**
     * Cells with the top/bottom <i>n</i> values are formatted, where <i>n</i>
     * represents a numeric, percentage, or percentile ranking. For example,
     * this type can be used to to enable a 'top ten' condition.
     */
    Rank = 4,
    /**
     * Represents a conditional formatting rule which displays an icon
     * inside the cell which indicates the cell's value as relative to
     * the highest and lowest value in the associated range.
     */
    IconSets = 5,
    /**
     * Cells with values which are unique across the associated range are formatted.
     */
    UniqueValues = 6,
    /**
     * Cells with values which are duplicated (non-unique) across the associated range are formatted.
     */
    DuplicateValues = 7,
    /**
     * The format is determined by whether the cell's value matches a literal string value.
     */
    TextString = 8,
    /**
     * Cells with no value are formatted. Note that foreground-related
     * properties such as font colors are not applicable.
     */
    Blanks = 9,
    /**
     * The format is determined by whether a cell's date value falls within
     * a given period of time.
     */
    TimePeriod = 10,
    /**
     * Cells with values which are greater than or less than the average value
     * for the associated region are formatted.
     */
    Average = 11,
    /**
     * Cells with a non-empty value are formatted.
     */
    NoBlanks = 12,
    /**
     * The format is applied to cells which contain an error.
     */
    Errors = 13,
    /**
     * The format is applied to cells which do not contain an error.
     */
    NoErrors = 14
}
/**
 * @hidden
 */
export declare let FormatConditionType_$type: Type;
