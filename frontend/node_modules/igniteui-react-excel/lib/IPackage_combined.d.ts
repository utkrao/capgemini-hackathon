import { IDisposable, IEnumerable$1, Type, Stream } from "igniteui-react-core";
import { Uri } from "igniteui-react-core";
import { IPackageRelationship } from "./IPackageRelationship";
import { RelationshipTargetMode } from "./RelationshipTargetMode";
import { WorkItem$1 } from "./WorkItem$1";
import { FileMode } from "./FileMode";
import { FileAccess } from "./FileAccess";
/**
 * @hidden
 */
export interface IPackage extends IDisposable {
    createPart(a: Uri, b: string): IPackagePart;
    createRelationship(a: Uri, b: RelationshipTargetMode, c: string, d: string): IPackageRelationship;
    getRelationships(): IEnumerable$1<IPackageRelationship>;
    getRelationship(a: string): IPackageRelationship;
    getPart(a: Uri): IPackagePart;
    getParts(): IEnumerable$1<IPackagePart>;
    partExists(a: Uri): boolean;
}
/**
 * @hidden
 */
export declare let IPackage_$type: Type;
/**
 * @hidden
 */
export interface IPackagePart {
    readonly $package: IPackage;
    readonly uri: Uri;
    readonly contentType: string;
    getStream(a: FileMode, b: FileAccess): WorkItem$1<Stream>;
    createRelationship(a: Uri, b: RelationshipTargetMode, c: string, d: string): IPackageRelationship;
    getRelationships(): IEnumerable$1<IPackageRelationship>;
    getRelationship(a: string): IPackageRelationship;
}
/**
 * @hidden
 */
export declare let IPackagePart_$type: Type;
