/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
import { IComparer$1_$type } from "igniteui-react-core";
import { ConditionBase } from "./ConditionBase";
/**
 * @hidden
 */
export let ConditionalFormatCollection_PriorityConditionComparer = /*@__PURE__*/ (() => {
    class ConditionalFormatCollection_PriorityConditionComparer extends Base {
        compare(a, b) {
            if (a == null) {
                return b == null ? 0 : -1;
            }
            else if (b == null) {
                return 1;
            }
            return Base.compareSimple(a.priority, b.priority);
        }
    }
    ConditionalFormatCollection_PriorityConditionComparer.$t = /*@__PURE__*/ markType(ConditionalFormatCollection_PriorityConditionComparer, 'ConditionalFormatCollection_PriorityConditionComparer', Base.$, [/*@__PURE__*/ IComparer$1_$type.specialize(ConditionBase.$)]);
    ConditionalFormatCollection_PriorityConditionComparer._a = /*@__PURE__*/ new ConditionalFormatCollection_PriorityConditionComparer();
    return ConditionalFormatCollection_PriorityConditionComparer;
})();
