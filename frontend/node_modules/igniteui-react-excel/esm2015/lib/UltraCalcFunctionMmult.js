/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { MatrixUtilities } from "./MatrixUtilities";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionMmult = /*@__PURE__*/ (() => {
    class UltraCalcFunctionMmult extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = a.pop();
            let d = a.pop();
            if (d.isError) {
                return d;
            }
            if (c.isError) {
                return c;
            }
            let e = d.toArrayProxy();
            let f = e.getLength(0);
            let g = e.getLength(1);
            let h = c.toArrayProxy();
            let i = h.getLength(0);
            let j = h.getLength(1);
            if (f != j) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(1));
            }
            let k;
            let l = ((() => { let m = MatrixUtilities.b(e, 0, k); k = m.p2; return m.ret; })());
            if (k != null) {
                return new ExcelCalcValue(k);
            }
            let m = ((() => { let n = MatrixUtilities.b(h, 0, k); k = n.p2; return n.ret; })());
            if (k != null) {
                return new ExcelCalcValue(k);
            }
            let n = ((() => {
                let $firstRank;
                let $ret = new Array($firstRank = i);
                let $currRet = $ret;
                for (let $rankInit = 0; $rankInit < $firstRank; $rankInit++) {
                    $currRet[$rankInit] = new Array(g);
                }
                return $ret;
            })());
            for (let o = 0; o < i; o++) {
                for (let p = 0; p < g; p++) {
                    let q = 0;
                    for (let r = 0; r < f; r++) {
                        q += l[r][p] * m[o][r];
                    }
                    n[o][p] = new ExcelCalcValue(q);
                }
            }
            return new ExcelCalcValue(n);
        }
        get_name() {
            return "mmult";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 2;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 2;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
    }
    UltraCalcFunctionMmult.$t = /*@__PURE__*/ markType(UltraCalcFunctionMmult, 'UltraCalcFunctionMmult', BuiltInFunctionBase.$);
    return UltraCalcFunctionMmult;
})();
