/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
import { StringBuilder } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
import { stringFormat } from "igniteui-react-core";
import { stringIsNullOrEmpty, stringEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
export let XValue = /*@__PURE__*/ (() => {
    class XValue extends Base {
        constructor() {
            super(...arguments);
            this.d = 0;
            this.b = 0;
            this.f = null;
            this.a = null;
        }
        get c() {
            return isNaN_(this.b) == false ? this.b : this.d;
        }
        toString() {
            if (isNaN_(this.b) == false) {
                return stringFormat("Number: {0}", this.b);
            }
            else if (stringIsNullOrEmpty(this.f) == false) {
                return stringFormat("String: {0}", this.f);
            }
            else {
                let a = this.e();
                return stringFormat("StringArray: {0}", a);
            }
        }
        e(a = ", ") {
            if (this.a == null) {
                return stringEmpty();
            }
            let b = new StringBuilder(0);
            for (let c = 0; c < this.a.length; c++) {
                if (c > 0) {
                    b.l(a);
                }
                b.l(this.a[c]);
            }
            return b.toString();
        }
    }
    XValue.$t = /*@__PURE__*/ markType(XValue, 'XValue');
    return XValue;
})();
