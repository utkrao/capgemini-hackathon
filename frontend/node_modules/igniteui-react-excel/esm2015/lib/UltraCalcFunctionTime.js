/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
import { intDivide } from "igniteui-react-core";
import { timeSpanInit1 } from "igniteui-react-core";
import { dateFromValues } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionTime = /*@__PURE__*/ (() => {
    class UltraCalcFunctionTime extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = a.pop();
            let d = a.pop();
            let e = a.pop();
            if (e.isError) {
                return e;
            }
            if (d.isError) {
                return d;
            }
            if (c.isError) {
                return c;
            }
            let f = c._toInt321();
            let g = d._toInt321();
            let h = e._toInt321();
            if (true) {
                let i = 32767;
                if (f < 0 || g < 0 || h < 0 || i < f || i < g || i < h) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(4));
                }
                g += (intDivide(f, 60));
                f = f % 60;
                h += (intDivide(g, 60));
                g = g % 60;
                h = h % 24;
            }
            if (true) {
                let j = timeSpanInit1(h, g, f);
                let k = ExcelCalcValue._ay(j);
                return new ExcelCalcValue(k);
            }
            else {
                let l = dateFromValues(1, 1, 1, h, g, f, 0);
                return new ExcelCalcValue(l.getTime());
            }
        }
        get_name() {
            return "time";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 3;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 3;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
        doesParameterAllowIntermediateResultArray(a, b) {
            return true;
        }
    }
    UltraCalcFunctionTime.$t = /*@__PURE__*/ markType(UltraCalcFunctionTime, 'UltraCalcFunctionTime', BuiltInFunctionBase.$);
    return UltraCalcFunctionTime;
})();
