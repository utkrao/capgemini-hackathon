/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, fromEnum, markType } from "igniteui-react-core";
import { ST_IconSetType_$type } from "./ST_IconSetType";
import { XmlNamespaceDefinitionBase } from "./XmlNamespaceDefinitionBase";
import { CultureInfo } from "igniteui-react-core";
import { parseUInt32_1 } from "igniteui-react-core";
/**
 * @hidden
 */
export let CT_CfIcon = /*@__PURE__*/ (() => {
    class CT_CfIcon extends Base {
        constructor() {
            super(...arguments);
            this.b = 0;
            this.d = 0;
        }
        get a() {
            return this.b;
        }
        set a(a) {
            this.b = a;
        }
        get c() {
            return this.d;
        }
        set c(a) {
            this.d = a;
        }
        static e(a, b, c) {
            b = 0;
            c = 0;
            for (let d of fromEnum(a.ab.u)) {
                switch (d.a.e(a.d)) {
                    case "iconSet":
                        b = XmlNamespaceDefinitionBase.b(ST_IconSetType_$type, d.d);
                        break;
                    case "iconId":
                        c = parseUInt32_1(d.d, CultureInfo.invariantCulture);
                        break;
                    default: break;
                }
            }
            ;
            return {
                p1: b,
                p2: c
            };
        }
        static f(a, b, c, d) {
            a.ad.p(b, null);
            let e = null;
            let f = null;
            f = "iconId";
            e = c.toString();
            a.ad.h(f, e);
            f = "iconSet";
            e = XmlNamespaceDefinitionBase.p(ST_IconSetType_$type, d);
            a.ad.h(f, e);
            ;
        }
    }
    CT_CfIcon.$t = /*@__PURE__*/ markType(CT_CfIcon, 'CT_CfIcon');
    return CT_CfIcon;
})();
