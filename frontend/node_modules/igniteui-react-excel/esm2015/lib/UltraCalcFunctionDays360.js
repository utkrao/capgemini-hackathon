/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { markType } from "igniteui-react-core";
import { dateFromValues, dateGetMonth } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionDays360 = /*@__PURE__*/ (() => {
    class UltraCalcFunctionDays360 extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = false;
            if (b > 2) {
                if (a.peek().isError) {
                    return new ExcelCalcValue(a.pop().toErrorValue());
                }
                c = a.pop()._toBoolean1();
            }
            let d = a.pop()._toDateTime1();
            let e = a.pop()._toDateTime1();
            return UltraCalcFunctionDays360._ak(e, d, c);
        }
        static _ak(a, b, c) {
            if (a.getDate() == 31) {
                a = dateFromValues(a.getFullYear(), dateGetMonth(a), 30, 0, 0, 0, 0);
            }
            if (b.getDate() == 31) {
                if (!c) {
                    if (a.getDate() < 30) {
                        b = dateFromValues(dateGetMonth(b) < 12 ? b.getFullYear() : b.getFullYear() + 1, dateGetMonth(b) < 12 ? dateGetMonth(b) + 1 : 1, 1, 0, 0, 0, 0);
                    }
                    else {
                        b = dateFromValues(b.getFullYear(), dateGetMonth(b), 30, 0, 0, 0, 0);
                    }
                }
                else {
                    b = dateFromValues(b.getFullYear(), dateGetMonth(b), 30, 0, 0, 0, 0);
                }
            }
            return new ExcelCalcValue((b.getFullYear() * 360 + dateGetMonth(b) * 30 + b.getDate()) - (a.getFullYear() * 360 + dateGetMonth(a) * 30 + a.getDate()));
        }
        get_name() {
            return "days360";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 2;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 3;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
    }
    UltraCalcFunctionDays360.$t = /*@__PURE__*/ markType(UltraCalcFunctionDays360, 'UltraCalcFunctionDays360', BuiltInFunctionBase.$);
    return UltraCalcFunctionDays360;
})();
