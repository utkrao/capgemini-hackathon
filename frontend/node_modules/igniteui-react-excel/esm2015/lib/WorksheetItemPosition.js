/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { ValueType, IEquatable$1_$type, typeCast, markStruct } from "igniteui-react-core";
import { stringFormat } from "igniteui-react-core";
/**
 * @hidden
 */
export let WorksheetItemPosition = /*@__PURE__*/ (() => {
    class WorksheetItemPosition extends ValueType {
        constructor(a, ..._rest) {
            super();
            this._g = 0;
            this._h = 0;
            this._k = 0;
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0: break;
                case 1:
                    {
                        let c = _rest[0];
                        let d = _rest[1];
                        let e = _rest[2];
                        this._h = c;
                        this._g = e;
                        this._k = d;
                    }
                    break;
            }
        }
        equals1(a) {
            if (typeCast(WorksheetItemPosition.$, a) !== null) {
                return this.equals(a);
            }
            return false;
        }
        getHashCode() {
            return this._h + (this._g) ^ (this._k);
        }
        toString() {
            return stringFormat("Index {0}: Offset {1}, Extent {2}", this._j, this._m, this._i);
        }
        get _l() {
            return this._k + this._g;
        }
        get _i() {
            return this._g;
        }
        get _j() {
            return this._h;
        }
        get _m() {
            return this._k;
        }
        equals(a) {
            return a._h == this._h && a._k == this._k && a._g == this._g;
        }
        static _a(a, b) {
            return a.equals(b);
        }
        static _b(a, b) {
            if (!a.hasValue) {
                return !b.hasValue;
            }
            else if (!b.hasValue) {
                return false;
            }
            return WorksheetItemPosition._a(a.value, b.value);
        }
        static _c(a, b) {
            return !(WorksheetItemPosition._a(a, b));
        }
        static _d(a, b) {
            if (!a.hasValue) {
                return b.hasValue;
            }
            else if (!b.hasValue) {
                return true;
            }
            return WorksheetItemPosition._c(a.value, b.value);
        }
    }
    WorksheetItemPosition.$t = /*@__PURE__*/ /*@__PURE__*/ markStruct(WorksheetItemPosition, 'WorksheetItemPosition', ValueType.$, [/*@__PURE__*/ IEquatable$1_$type.specialize(-1)]).initSelfReferences();
    return WorksheetItemPosition;
})();
