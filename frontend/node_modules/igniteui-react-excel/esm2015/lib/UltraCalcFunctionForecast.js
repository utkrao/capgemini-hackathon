/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { UltraCalcFunctionTwoMatrixFunction } from "./UltraCalcFunctionTwoMatrixFunction";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionForecast = /*@__PURE__*/ (() => {
    class UltraCalcFunctionForecast extends UltraCalcFunctionTwoMatrixFunction {
        evaluate(a, b) {
            let c;
            let d;
            let e;
            let f = UltraCalcFunctionTwoMatrixFunction._ao(a, c, d, e);
            c = f.p1;
            d = f.p2;
            e = f.p3;
            let g = a.pop();
            if (g.isError) {
                return g;
            }
            let h = g._toDouble3();
            if (c != null) {
                return new ExcelCalcValue(c);
            }
            let i;
            let j;
            let k;
            let l;
            let m = UltraCalcFunctionTwoMatrixFunction._ap(d, e, i, j, k, l, c);
            i = m.p2;
            j = m.p3;
            k = m.p4;
            l = m.p5;
            c = m.p6;
            if (c != null) {
                return new ExcelCalcValue(c);
            }
            return new ExcelCalcValue(l + (k * h));
        }
        get_name() {
            return "forecast";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 3;
        }
        get_maxArgs() {
            return 3;
        }
        doesParameterAllowIntermediateResultArray(a, b) {
            return true;
        }
    }
    UltraCalcFunctionForecast.$t = /*@__PURE__*/ markType(UltraCalcFunctionForecast, 'UltraCalcFunctionForecast', UltraCalcFunctionTwoMatrixFunction.$);
    return UltraCalcFunctionForecast;
})();
