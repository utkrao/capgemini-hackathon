/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
import { stringIsNullOrEmpty, stringReplace } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionSubstitute = /*@__PURE__*/ (() => {
    class UltraCalcFunctionSubstitute extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = 0;
            let d = null;
            if (b == 4) {
                d = a.pop();
            }
            let e = a.pop();
            let f = a.pop();
            let g = a.pop();
            if (g.isError) {
                return new ExcelCalcValue(g.toErrorValue());
            }
            if (f.isError) {
                return new ExcelCalcValue(f.toErrorValue());
            }
            if (e.isError) {
                return new ExcelCalcValue(e.toErrorValue());
            }
            if (d != null) {
                if (d.isError) {
                    return new ExcelCalcValue(d.toErrorValue());
                }
                c = d._toInt();
                if (c < 1) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(1));
                }
            }
            let h = g.toString();
            let i = f.toString();
            if (!stringIsNullOrEmpty(h) && !stringIsNullOrEmpty(i)) {
                let j = e.toString();
                if (c == 0) {
                    h = stringReplace(h, i, j);
                }
                else {
                    let k = 0;
                    while (c > 0) {
                        k = h.indexOf(i, k);
                        c--;
                        if (c > 0 && k >= 0) {
                            k++;
                        }
                    }
                    if (k >= 0) {
                        let l = k > 0 ? h.substr(0, k) : "";
                        let m = k + i.length < h.length ? h.substr(k + i.length) : "";
                        h = l + j + m;
                    }
                }
            }
            return new ExcelCalcValue(h);
        }
        get_name() {
            return "substitute";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 3;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 4;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
    }
    UltraCalcFunctionSubstitute.$t = /*@__PURE__*/ markType(UltraCalcFunctionSubstitute, 'UltraCalcFunctionSubstitute', BuiltInFunctionBase.$);
    return UltraCalcFunctionSubstitute;
})();
