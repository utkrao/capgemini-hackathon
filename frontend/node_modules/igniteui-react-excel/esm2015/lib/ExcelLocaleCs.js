/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
export class ExcelLocaleCs {
    constructor() {
        this["DefaultTotalLabel"] = "Celkový";
        this["Error_AnchoredReference"] = "Pokus o přístup k {0} jako neukotvená reference";
        this["Error_ExplicitThis"] = "{0} - Explicitní Toto není podporováno";
        this["Error_ExternalRange"] = "Rozsah obsahuje externí referenci";
        this["Error_FormulaNotSupported"] = "{0} - Pokus o přístup k vzorci u reference, která vzorce nepodporuje";
        this["Error_Internal"] = "V metodě {0} došlo k interní chybě.";
        this["Error_InvalidFunction"] = "Neplatná funkce '{0}' v {1}.";
        this["Error_InvalidFunctionArgCountTooFew"] = "Funkce '{0}' odkazovaná na {1} neobsahuje správný počet argumentů. Funkce vyžaduje minimálně {2} parametrů.";
        this["Error_InvalidFunctionArgCountTooMany"] = "Funkce '{0}' odkazovaná na {1} neobsahuje správný počet argumentů. Počet argumentů by neměl přesáhnout parametry ({2}).";
        this["Error_InvalidNumberSystemDigit"] = "V číselné soustavě se základnou {2} došlo v hodnotě '{1}' k neplatné číslici '{0}'.";
        this["Error_InvalidOperand"] = "Neplatný operand";
        this["Error_InvalidOperatorArgCount"] = "Funkce '{0}' musí přijmout argumenty {1}.";
        this["Error_InvalidReference"] = "Neplatný nebo nedostupný odkaz";
        this["Error_Location"] = "řádek {0} sloupec {1}";
        this["Error_MethodNotSupported"] = "{0} nepodporuje {1}.";
        this["Error_NoCurrentRangeElement"] = "Žádný aktuální prvek rozsahu";
        this["Error_NullFunctionResult"] = "Vyhodnocení '{0}' vrátilo hodnotu null.";
        this["Error_NullOperand"] = "Nulový operand";
        this["Error_ParseRef"] = "Neznámá reference v {0}.";
        this["Error_RangeFromLast"] = "fromT.Last not set";
        this["Error_RangeFromNull"] = "RefRange: from je null";
        this["Error_RangeFromRefBase"] = "RefRange: from není RefBase: {0}";
        this["Error_RangeLast"] = "Ověření RefRange: poslední n-tice [{0}] != [{1}]";
        this["Error_RangeNormalizeScope"] = "RefRange Normalize: špatný rozsah [{0}/{1}]";
        this["Error_RangeToNull"] = "RefRange: to je null";
        this["Error_RangeToRefBase"] = "RefRange: to není RefBase: {0}";
        this["Error_RangeTuple"] = "RefRange Validate: n-tice [{0}] != [{1}]";
        this["Error_RangeValidateCount"] = "RefRange Validate: od počtu {0}! = Do počtu {1}";
        this["Error_ReadOnlyReference"] = "{0} - Pokus o nastavení hodnoty na odkaz pouze pro čtení";
        this["Error_ReferenceNotEumerable"] = "{0} není vyčíslitelný odkaz";
        this["Error_RefMalformed"] = "{0} - Poškozená reference {1}";
        this["Error_RP_ContainsBase"] = "RefParser.Contains - Prázdná základna";
        this["Error_RP_ContainsTarget"] = "RefParser.Contains - Prázdný cíl";
        this["Error_RP_EmptyElement"] = "Neplatná reference {0}. Na místě {1} došlo k prázdnému prvku.";
        this["Error_RP_EmptyReference"] = "Neplatná reference {0}. Odkaz je prázdný.";
        this["Error_RP_MalformedExtra"] = "RefParser Malformed Reference: Nečekané [{0}] nalezeno v [{1}]";
        this["Error_RP_MalformedUnexpected"] = "RefParser Malformed Reference: Nečekané [{0}] nalezeno v [{1}]";
        this["Error_RP_MergeRelativeBase"] = "RefParser.Merge: Základna je relativní";
        this["Error_RP_MissingCloseParenthesis"] = "Neplatná reference {0}. Chybí úzká závorka.";
        this["Error_RP_MissingEndQuotes"] = "Neplatná reference {0}. Chybějící uvozovky.";
        this["Error_RT_Expected"] = "RefTuple: Očekáváno [{0}] v [{1}]";
        this["Error_RT_InvalidScope"] = "Neplatný rozsah: {0}.";
        this["Error_RT_InvalidScope_CharactersAfterClosingQuotes"] = "Znaky, které se vyskytly po uzavření uvozovek v {0} rozsahu na místě {1}.";
        this["Error_RT_InvalidTuple_CharactersAfterScopeEnd"] = "Neplatný prvek {0}. Postavy, které se vyskytly po skončení rozsahu.";
        this["Error_RT_InvalidTuple_MissingCloseParenthesis"] = "Neplatný prvek {0}. Chybí úzká závorka.";
        this["Error_RT_InvalidTuple_MissingEndQuotes"] = "Neplatný prvek {0}. Chybějící uvozovky.";
        this["Error_RT_InvalidTuple_NamePortionEmpty"] = "Neplatný prvek {0}. Část názvu prvku je prázdná.";
        this["Error_RT_InvalidTuple_ScopeIndexLarge"] = "Neplatný prvek {0}. Index {1} je neplatný: {2}.";
        this["Error_RT_InvalidTuple_UnescapedCharacter"] = "V umístění {2} na místě {2} došlo k {0} znaku bez znaků.";
        this["Error_RT_NullRefName"] = "RefTuple: null RefName";
        this["Error_RT_Unexpected"] = "RefTuple: neočekávané [{0}] v [{1}]";
        this["Error_ScopeAllNotLast"] = "{0} - Rozsah Vše se musí objevit v posledním prvku {1}";
        this["Error_UCErrorCode_Div"] = "Vydělte nulou";
        this["Error_UCErrorCode_Fail"] = "Selhat";
        this["Error_UCErrorCode_NA"] = "Nelze použít";
        this["Error_UCErrorCode_Name"] = "Neplatné jméno";
        this["Error_UCErrorCode_Null"] = "Nulová hodnota";
        this["Error_UCErrorCode_Num"] = "Neplatné číselné hodnoty ve funkci nebo vzorci.";
        this["Error_UCErrorCode_Ok"] = "Povést se";
        this["Error_UCErrorCode_Reference"] = "Neplatný nebo nedostupný odkaz";
        this["Error_UCErrorCode_Unknown"] = "Neplatný kód";
        this["Error_UCErrorCode_Value"] = "Nesprávný typ argumentu nebo operandu.";
        this["Error_UnexpectedScope"] = "{0} - Neočekávaný rozsah pro rodiče {1}";
        this["Error_UnknownRange"] = "Neznámý typ rozsahu";
        this["Error_UnknownRefType"] = "{0} - Neznámý typ odkazu {1}";
        this["Error_UnknownScope"] = "{0} - Neznámý rozsah {1}";
        this["Error_UnresolvedExternal"] = "Nevyřešená externí reference";
        this["Func_abs_Arg_0"] = "číslo";
        this["Func_abs_ArgDesc_0"] = "Skutečné číslo, které získá absolutní hodnotu.";
        this["Func_abs_Category"] = "Matematika";
        this["Func_abs_CategoryURL"] = "Matematika";
        this["Func_abs_Desc"] = "Vrátí absolutní hodnotu čísla. Absolutní hodnota čísla je číslo bez jeho znaménka.";
        this["Func_acos_Arg_0"] = "číslo";
        this["Func_acos_ArgDesc_0"] = "Kosinus úhlu, který se má dostat, který musí být od -1 do 1.";
        this["Func_acos_Category"] = "Matematika";
        this["Func_acos_CategoryURL"] = "Matematika";
        this["Func_acos_Desc"] = "Vrátí arkuskosinus nebo inverzní kosinus čísla. Arccosine je úhel, jehož kosinus je zadané číslo. Vrácený úhel je uveden v radiánech v rozsahu od nuly do pi. Chcete-li převést výsledek z radiánů na stupně, vynásobte je 180 / PI ().";
        this["Func_acosh_Arg_0"] = "číslo";
        this["Func_acosh_ArgDesc_0"] = "Skutečné číslo větší než 1, pro které se nachází inverzní hyperbolický kosinus.";
        this["Func_acosh_Category"] = "Matematika";
        this["Func_acosh_CategoryURL"] = "Matematika";
        this["Func_acosh_Desc"] = "Vrátí inverzní hyperbolický kosinus daného čísla. Inverzní hyperbolický kosinus je úhel, jehož hyperbolický kosinus je zadané číslo.";
        this["Func_and_Arg_0"] = "logický {0}";
        this["Func_and_ArgDesc_0"] = "Logická hodnota (true nebo false).";
        this["Func_and_Category"] = "Logický";
        this["Func_and_CategoryURL"] = "Logický";
        this["Func_and_Desc"] = "Vrátí true, pokud jsou všechny hodnoty true, nebo vrátí false, pokud je jedna nebo více hodnot false.";
        this["Func_asin_Arg_0"] = "číslo";
        this["Func_asin_ArgDesc_0"] = "Sinus úhlu, který se má dostat, který musí být od -1 do 1 radiánu.";
        this["Func_asin_Category"] = "Matematika";
        this["Func_asin_CategoryURL"] = "Matematika";
        this["Func_asin_Desc"] = "Vrátí arkusinus nebo inverzní sinus čísla. Arcsine je úhel, jehož sinus je zadané číslo. Vrácený úhel se udává v radiánech v rozsahu -pi/2 až pi/2. Chcete-li arcsine vyjádřit ve stupních, vynásobte výsledek 180/PI().";
        this["Func_asinh_Arg_0"] = "číslo";
        this["Func_asinh_ArgDesc_0"] = "Skutečné číslo, pro které lze najít inverzní hyperbolický sinus.";
        this["Func_asinh_Category"] = "Matematika";
        this["Func_asinh_CategoryURL"] = "Matematika";
        this["Func_asinh_Desc"] = "Vrátí inverzní hyperbolický sinus daného čísla. Inverzní hyperbolický sinus je úhel, jehož hyperbolický sinus je zadané číslo.";
        this["Func_atan_Arg_0"] = "číslo";
        this["Func_atan_ArgDesc_0"] = "Tečna úhlu, který se má získat.";
        this["Func_atan_Category"] = "Matematika";
        this["Func_atan_CategoryURL"] = "Matematika";
        this["Func_atan_Desc"] = "Vrátí arkustangens nebo inverzní tangens čísla. Arkustangens je úhel, jehož tangens je zadané číslo. Vrácený úhel se udává v radiánech v rozsahu -pi/2 až pi/2. Chcete-li arkustangens vyjádřit ve stupních, vynásobte výsledek 180/PI().";
        this["Func_atan2_Arg_0"] = "X";
        this["Func_atan2_Arg_1"] = "y";
        this["Func_atan2_ArgDesc_0"] = "Souřadnice x bodu.";
        this["Func_atan2_ArgDesc_1"] = "Souřadnice y bodu.";
        this["Func_atan2_Category"] = "Matematika";
        this["Func_atan2_CategoryURL"] = "Matematika";
        this["Func_atan2_Desc"] = "Vrátí arkustangens nebo inverzní tangens zadaných souřadnic x a y. Arktangens je úhel od osy x k přímce obsahující počátek (0, 0) a bod se souřadnicemi (x_num, y_num). Úhel je uveden v radiánech mezi -pi a pi, s výjimkou -pi.";
        this["Func_atanh_Arg_0"] = "číslo";
        this["Func_atanh_ArgDesc_0"] = "Skutečné číslo mezi -1 a 1, pro které se získá inverzní hyperbolická tečna.";
        this["Func_atanh_Category"] = "Matematika";
        this["Func_atanh_CategoryURL"] = "Matematika";
        this["Func_atanh_Desc"] = "Vrátí inverzní hyperbolický tangens daného čísla. Inverzní hyperbolická tangenta je úhel, jehož hyperbolická tangenta je zadané číslo.";
        this["Func_avedev_Arg_0"] = "číslo {0}";
        this["Func_avedev_ArgDesc_0"] = "Number1, number2, ... are one or more numeric values or references to numeric values.";
        this["Func_avedev_Category"] = "Statistický";
        this["Func_avedev_CategoryURL"] = "Statistický";
        this["Func_avedev_Desc"] = "Vrátí průměrnou odchylku od průměru všech číselných hodnot.";
        this["Func_average_Arg_0"] = "číslo {0}";
        this["Func_average_ArgDesc_0"] = "Počet nebo rozsah čísel, pro které je třeba najít průměr s ostatními argumenty.";
        this["Func_average_Category"] = "Statistický";
        this["Func_average_CategoryURL"] = "Statistický";
        this["Func_average_Desc"] = "Vrátí průměr (aritmetický průměr) jedné nebo více hodnot.";
        this["Func_bin2dec_Arg_0"] = "Číslo";
        this["Func_bin2dec_ArgDesc_0"] = "Textový výraz reprezentující binární číslo.";
        this["Func_bin2dec_Category"] = "Inženýrství";
        this["Func_bin2dec_CategoryURL"] = "Inženýrství";
        this["Func_bin2dec_Desc"] = "Vrátí desítkovou hodnotu textové reprezentace čísla v binárním číselném systému.";
        this["Func_bin2hex_Arg_0"] = "Číslo";
        this["Func_bin2hex_Arg_1"] = "Místa";
        this["Func_bin2hex_ArgDesc_0"] = "Textový výraz reprezentující binární číslo.";
        this["Func_bin2hex_ArgDesc_1"] = "Počet znaků, které se mají použít při reprezentaci hodnoty. Pokud to není zadáno, použije se minimální počet znaků potřebných k reprezentaci hodnoty. To vám umožní určit úvodní nuly.";
        this["Func_bin2hex_Category"] = "Inženýrství";
        this["Func_bin2hex_CategoryURL"] = "Inženýrství";
        this["Func_bin2hex_Desc"] = "Převede textový výraz představující binární číslo na textový výraz představující stejné číslo v hexadecimálním číselném systému.";
        this["Func_bin2oct_Arg_0"] = "Číslo";
        this["Func_bin2oct_Arg_1"] = "Místa";
        this["Func_bin2oct_ArgDesc_0"] = "Textový výraz reprezentující binární číslo.";
        this["Func_bin2oct_ArgDesc_1"] = "Počet znaků, které se mají použít při reprezentaci hodnoty. Pokud to není zadáno, použije se minimální počet znaků potřebných k reprezentaci hodnoty. To vám umožní určit úvodní nuly.";
        this["Func_bin2oct_Category"] = "Inženýrství";
        this["Func_bin2oct_CategoryURL"] = "Inženýrství";
        this["Func_bin2oct_Desc"] = "Převede textový výraz představující binární číslo na textový výraz představující stejné číslo v systému osmičkových čísel.";
        this["Func_binomdist_Arg_0"] = "Číslo";
        this["Func_binomdist_Arg_1"] = "Zkoušky";
        this["Func_binomdist_Arg_2"] = "Pravděpodobnost";
        this["Func_binomdist_Arg_3"] = "Kumulativní";
        this["Func_binomdist_ArgDesc_0"] = "Počet úspěchů ve zkouškách.";
        this["Func_binomdist_ArgDesc_1"] = "Počet nezávislých studií.";
        this["Func_binomdist_ArgDesc_2"] = "Pravděpodobnost úspěchu v každém pokusu.";
        this["Func_binomdist_ArgDesc_3"] = "Logická hodnota, která určuje formu funkce. Pokud je to pravda, funkce vrátí kumulativní rozdělení, což je pravděpodobnost, že bude maximálně 'počet' úspěchů, jinak vrátí hmotnost pravděpodobnosti, což je pravděpodobnost, že budou 'počet' úspěchů.";
        this["Func_binomdist_Category"] = "Statistický";
        this["Func_binomdist_CategoryURL"] = "Statistický";
        this["Func_binomdist_Desc"] = "Vrátí počet možných kombinací (s opakováním) s danou sadou položek a počtem vybraných položek z této sady.";
        this["Func_CategoryURL_Template"] = "ms-help://INFRAGISTICS_HELP/NetAdvantagev{2}{3}/Win/WinElements/WinCalcManager_{0}_Functions.html#FUNC_{1}";
        this["Func_ceiling_Arg_0"] = "číslo";
        this["Func_ceiling_Arg_1"] = "význam";
        this["Func_ceiling_ArgDesc_0"] = "Číslo, které se má zaokrouhlit.";
        this["Func_ceiling_ArgDesc_1"] = "Násobek, na který se má zaokrouhlit. Pokud je vynechán, předpokládá se, že je jeden.";
        this["Func_ceiling_Category"] = "Matematika";
        this["Func_ceiling_CategoryURL"] = "Matematika";
        this["Func_ceiling_Desc"] = "Vrátí nejmenší násobek významnosti (výchozí hodnota 1) větší nebo rovný zadanému číslu.";
        this["Func_char_Arg_0"] = "charCode";
        this["Func_char_ArgDesc_0"] = "Číslo, které má být převedeno na znak.";
        this["Func_char_Category"] = "TextAndData";
        this["Func_char_CategoryURL"] = "Text_and_Data";
        this["Func_char_Desc"] = "Vrátí znak určený číslem kódu ze znakové sady pro váš počítač.";
        this["Func_choose_Arg_0"] = "Indexové číslo";
        this["Func_choose_Arg_1"] = "Value{0}";
        this["Func_choose_ArgDesc_0"] = "Index založený na 1 do zbytku argumentů pro hodnotu, která se má použít.";
        this["Func_choose_ArgDesc_1"] = "Hodnota, kterou lze vybrat v závislosti na hodnotě IndexNum.";
        this["Func_choose_Category"] = "LookupAndReference";
        this["Func_choose_CategoryURL"] = "Lookup_And_Reference";
        this["Func_choose_Desc"] = "Vrátí jednu z hodnot uvedených v jejích argumentech na základě čísla v prvním argumentu.";
        this["Func_code_Arg_0"] = "text";
        this["Func_code_ArgDesc_0"] = "Textový výraz, jehož první znak bude vyhodnocen.";
        this["Func_code_Category"] = "TextAndData";
        this["Func_code_CategoryURL"] = "Text_and_Data";
        this["Func_code_Desc"] = "Vrátí číselný kód pro první znak v textovém výrazu pomocí znakové sady používané vaším počítačem.";
        this["Func_combin_Arg_0"] = "Číslo";
        this["Func_combin_Arg_1"] = "NumberChosen";
        this["Func_combin_ArgDesc_0"] = "Počet položek.";
        this["Func_combin_ArgDesc_1"] = "Počet položek vybraných v každé kombinaci.";
        this["Func_combin_Category"] = "Matematika";
        this["Func_combin_CategoryURL"] = "Matematika";
        this["Func_combin_Desc"] = "Vrátí počet možných kombinací dané sady položek a počtu vybraných položek z dané sady.";
        this["Func_combina_Arg_0"] = "Číslo";
        this["Func_combina_Arg_1"] = "NumberChosen";
        this["Func_combina_ArgDesc_0"] = "Počet položek.";
        this["Func_combina_ArgDesc_1"] = "Počet položek vybraných v každé kombinaci.";
        this["Func_combina_Category"] = "Matematika";
        this["Func_combina_CategoryURL"] = "Matematika";
        this["Func_combina_Desc"] = "Vrátí počet možných kombinací (s opakováním) s danou sadou položek a počtem vybraných položek z této sady.";
        this["Func_complex_Arg_0"] = "Reálné číslo";
        this["Func_complex_Arg_1"] = "Imaginární číslo";
        this["Func_complex_Arg_2"] = "Přípona";
        this["Func_complex_ArgDesc_0"] = "Skutečný koeficient komplexního čísla.";
        this["Func_complex_ArgDesc_1"] = "Imaginární koeficient čísla.";
        this["Func_complex_ArgDesc_2"] = "Určuje příponu, která se má použít. Přijatelné hodnoty jsou 'i' nebo 'j'. Pokud je vynecháno, použije se 'i'. Všimněte si, že přípona rozlišuje velká a malá písmena; velká písmena 'I' a 'J' nejsou povolena a budou mít za následek chybu #HODNOTA.";
        this["Func_complex_Category"] = "Inženýrství";
        this["Func_complex_CategoryURL"] = "Inženýrství";
        this["Func_complex_Desc"] = "Vrátí komplexní číslo reprezentované jako textový výraz ve formátu 'x + yi' nebo 'x + yj' kombinací reálného a imaginárního čísla.";
        this["Func_concatenate_Arg_0"] = "textová zpráva {0}";
        this["Func_concatenate_ArgDesc_0"] = "Textový výraz nebo rozsah textových výrazů, které se mají spojit do jednoho textového výrazu.";
        this["Func_concatenate_Category"] = "TextAndData";
        this["Func_concatenate_CategoryURL"] = "Text_and_Data";
        this["Func_concatenate_Desc"] = "Spojí všechny argumenty do jednoho textového výrazu.";
        this["Func_convert_Arg_0"] = "Číslo";
        this["Func_convert_Arg_1"] = "FromUnit";
        this["Func_convert_Arg_2"] = "ToUnit";
        this["Func_convert_ArgDesc_0"] = "Hodnota, která se má převést.";
        this["Func_convert_ArgDesc_1"] = "Jednotka, ve které je uvedeno číslo.\r\n\r\nJednotky hmotnosti a hmotnosti: \" g \" = gram; \" sg \" = slimák; \" lbm \" = hmotnost libry (avoirdupois); \" u \" = U (atomová hmotnostní jednotka); \" ozm \" = unce hmotnost (avoirdupois)\r\nJednotky vzdálenosti: \" m \" = Měřič; \" mi \" = míle zákona; \" Nmi \" = námořní míle; \" in \" = Palec; \" ft \" = Noha; \" yd \" = Yard; \" ang \" = Angstrom; \" Pica \" = Pica (1/72 palce)\r\nČasové jednotky: \" yr \" = rok; \" day \" = den; \" hr \" = hodina; \" mn \" = minuta; \" sec \" = Sekunda\r\nJednotky tlaku: \" Pa \" (nebo \" p \") = Pascal; \" atm \" (nebo \" at \") = Atmosféra; \" mmHg \" = mm rtuti\r\nSilové jednotky: \" N \" = Newton; \" dyn \" (nebo \" dy \") = Dyne; \" lbf \" = Libra síla\r\nEnergetické jednotky: \" J \" = Joule; \" e \" = Erg; \" c \" = termodynamická kalorie; \" cal \" = IT kalorie; \" eV \" (nebo \" ev \") = elektronový volt; \" HPh \" (nebo \" hh \") = koňská síla za hodinu; \" Wh \" (nebo \" wh \") = watthodina; \" flb \" = Foot-pound; \" BTU \" (nebo \" btu \") = BTU\r\nPohonné jednotky: \" HP \" (nebo \" h \") = výkon; \" W \" (nebo \" w \") = Watt\r\nJednotky magentismu: \" T \" = Tesla; \" ga \" = Gauss\r\nJednotky teploty: \" C \" (nebo \" cel \") = stupeň Celsia; \" F \" (nebo \" fah \") = stupeň Fahrenheita; \" K \" (nebo \" kel \") = Kelvin\r\nJednotky míry kapaliny: \" lžička \" = lžička; \" tbs \" = Lžíce; \" oz \" = Unce kapaliny; \" pohár \" = pohár; \" pt \" (nebo \" us_pt \") = americký pint; \" uk_pt \" = UK pint; \" qt \" = Plot; \" gal \" = galon; \" l \" (nebo \" lt \") = litr\r\n\r\nKaždá metrická jednotka může mít předponu s jednou z následujících možností: exa (\" E \") = 1E + 18; peta (\" P \") = 1E + 15; tera (\" T \") = 1E + 12; giga (\" G \") = 1E + 09; mega (\" M \") = 1E + 06; kilo (\" k \") = 1E + 03; hecto (\" h \") = 1E + 02; dekao (\" e \") = 1E + 01; deci (\" d \") = 1E-01; centi (\" c \") = 1E-02; milli (\" m \") = 1E-03; mikro (\" u \") = 1E-06; nano (\" n \") = 1E-09; pico (\" p \") = 1E-12; femto (\" f \") = 1E-15; atto (\" a \") = 1E-18\r\n    ";
        this["Func_convert_ArgDesc_2"] = "Jednotky, ve kterých se má vrátit převedená hodnota.\r\n\r\nJednotky hmotnosti a hmotnosti: \" g \" = gram; \" sg \" = slimák; \" lbm \" = hmotnost libry (avoirdupois); \" u \" = U (atomová hmotnostní jednotka); \" ozm \" = unce hmotnost (avoirdupois)\r\nJednotky vzdálenosti: \" m \" = Měřič; \" mi \" = míle zákona; \" Nmi \" = námořní míle; \" in \" = Palec; \" ft \" = Noha; \" yd \" = Yard; \" ang \" = Angstrom; \" Pica \" = Pica (1/72 palce)\r\nČasové jednotky: \" yr \" = rok; \" day \" = den; \" hr \" = hodina; \" mn \" = minuta; \" sec \" = Sekunda\r\nJednotky tlaku: \" Pa \" (nebo \" p \") = Pascal; \" atm \" (nebo \" at \") = Atmosféra; \" mmHg \" = mm rtuti\r\nSilové jednotky: \" N \" = Newton; \" dyn \" (nebo \" dy \") = Dyne; \" lbf \" = Libra síla\r\nEnergetické jednotky: \" J \" = Joule; \" e \" = Erg; \" c \" = termodynamická kalorie; \" cal \" = IT kalorie; \" eV \" (nebo \" ev \") = elektronový volt; \" HPh \" (nebo \" hh \") = koňská síla za hodinu; \" Wh \" (nebo \" wh \") = watthodina; \" flb \" = Foot-Pound; \" BTU \" (nebo \" btu \") = BTU\r\nPohonné jednotky: \" HP \" (nebo \" h \") = výkon; \" W \" (nebo \" w \") = Watt\r\nJednotky magentismu: \" T \" = Tesla; \" ga \" = Gauss\r\nJednotky teploty: \" C \" (nebo \" cel \") = stupeň Celsia; \" F \" (nebo \" fah \") = stupeň Fahrenheita; \" K \" (nebo \" kel \") = Kelvin\r\nJednotky míry kapaliny: \" lžička \" = lžička; \" tbs \" = Lžíce; \" oz \" = Unce kapaliny; \" pohár \" = pohár; \" pt \" (nebo \" us_pt \") = americký pint; \" uk_pt \" = UK pint; \" qt \" = Plot; \" gal \" = galon; \" l \" (nebo \" lt \") = litr\r\n\r\nKaždá metrická jednotka může mít předponu s jednou z následujících možností: exa (\" E \") = 1E + 18; peta (\" P \") = 1E + 15; tera (\" T \") = 1E + 12; giga (\" G \") = 1E + 09; mega (\" M \") = 1E + 06; kilo (\" k \") = 1E + 03; hecto (\" h \") = 1E + 02; dekao (\" e \") = 1E + 01; deci (\" d \") = 1E-01; centi (\" c \") = 1E-02; milli (\" m \") = 1E-03; mikro (\" u \") = 1E-06; nano (\" n \") = 1E-09; pico (\" p \") = 1E-12; femto (\" f \") = 1E-15; atto (\" a \") = 1E-18\r\n    ";
        this["Func_convert_Category"] = "Inženýrství";
        this["Func_convert_CategoryURL"] = "Inženýrství";
        this["Func_convert_Desc"] = "Převede hodnotu z jednoho systému měření na jiný, například metry na palce nebo hodiny na sekundy.";
        this["Func_cos_Arg_0"] = "číslo";
        this["Func_cos_ArgDesc_0"] = "Úhel v radiánech, pro který dostaneme kosinus.";
        this["Func_cos_Category"] = "Matematika";
        this["Func_cos_CategoryURL"] = "Matematika";
        this["Func_cos_Desc"] = "Vrátí kosinus daného úhlu.";
        this["Func_cosh_Arg_0"] = "číslo";
        this["Func_cosh_ArgDesc_0"] = "Skutečné číslo, pro které lze najít hyperbolický kosinus.";
        this["Func_cosh_Category"] = "Matematika";
        this["Func_cosh_CategoryURL"] = "Matematika";
        this["Func_cosh_Desc"] = "Vrátí hyperbolický kosinus čísla.";
        this["Func_count_Arg_0"] = "hodnota {0}";
        this["Func_count_ArgDesc_0"] = "Odkaz nebo rozsah odkazů, které mohou obsahovat čísla.";
        this["Func_count_Category"] = "Statistický";
        this["Func_count_CategoryURL"] = "Statistický";
        this["Func_count_Desc"] = "Spočítá počet odkazů, které obsahují čísla.";
        this["Func_counta_Arg_0"] = "hodnota {0}";
        this["Func_counta_ArgDesc_0"] = "Odkaz nebo rozsah odkazů, které mohou obsahovat čísla.";
        this["Func_counta_Category"] = "Statistický";
        this["Func_counta_CategoryURL"] = "Statistický";
        this["Func_counta_Desc"] = "Spočítá počet odkazů, které nejsou prázdné.";
        this["Func_critbinom_Arg_0"] = "Zkoušky";
        this["Func_critbinom_Arg_1"] = "Pravděpodobnost";
        this["Func_critbinom_Arg_2"] = "Alfa";
        this["Func_critbinom_ArgDesc_0"] = "Počet nezávislých studií.";
        this["Func_critbinom_ArgDesc_1"] = "Pravděpodobnost úspěchu v každém pokusu.";
        this["Func_critbinom_ArgDesc_2"] = "Hodnota kritéria.";
        this["Func_critbinom_Category"] = "Statistický";
        this["Func_critbinom_CategoryURL"] = "Statistický";
        this["Func_critbinom_Desc"] = "Vrátí nejmenší hodnotu, pro kterou je kumulativní binomické rozdělení větší nebo rovno hodnotě kritéria.";
        this["Func_date_Arg_0"] = "rok";
        this["Func_date_Arg_1"] = "Měsíc";
        this["Func_date_Arg_2"] = "den";
        this["Func_date_ArgDesc_0"] = "Číslo představující rok.";
        this["Func_date_ArgDesc_1"] = "Číslo představující měsíc roku.";
        this["Func_date_ArgDesc_2"] = "Číslo představující den v měsíci.";
        this["Func_date_Category"] = "Datum a čas";
        this["Func_date_CategoryURL"] = "Date_and_Time";
        this["Func_date_Desc"] = "Vrátí pořadové číslo, které představuje konkrétní datum.";
        this["Func_dateadd_Arg_0"] = "interval";
        this["Func_dateadd_Arg_1"] = "číslo";
        this["Func_dateadd_Arg_2"] = "datum";
        this["Func_dateadd_ArgDesc_0"] = "Textový výraz představující časový interval, který se má přidat.\r\nd = den\r\ny = rok\r\nh = hodina\r\nn = minuta\r\nm = měsíc\r\nq = čtvrtletí\r\ns = druhý\r\nw = týden\r\nww = kalendářní týden\r\nyyyy = rok\r\n";
        this["Func_dateadd_ArgDesc_1"] = "Počet intervalů, které se mají přidat. Tato hodnota může být kladná (pro získání DateTime v budoucnosti) nebo záporná (pro získání DateTime v minulosti). Může obsahovat zlomkovou část, když Interval určuje hodiny, minuty nebo sekundy. U ostatních hodnot intervalu je jakákoli zlomková část čísla ignorována.";
        this["Func_dateadd_ArgDesc_2"] = "Datum, ke kterému má být interval přidán.";
        this["Func_dateadd_Category"] = "Datum a čas";
        this["Func_dateadd_CategoryURL"] = "Date_and_Time";
        this["Func_dateadd_Desc"] = "Vrátí datum, ke kterému byl přidán zadaný interval.";
        this["Func_datediff_Arg_0"] = "interval";
        this["Func_datediff_Arg_1"] = "datum1";
        this["Func_datediff_Arg_2"] = "datum2";
        this["Func_datediff_ArgDesc_0"] = "Textový výraz představující časový interval, který se má použít jako jednotka rozdílu mezi datem1 a datem2.\r\nd = den\r\ny = rok\r\nh = hodina\r\nn = minuta\r\nm = měsíc\r\nq = čtvrtletí\r\ns = druhý\r\nw = týden\r\nww = kalendářní týden\r\nyyyy = rok\r\n";
        this["Func_datediff_ArgDesc_1"] = "První datum, které se má použít při výpočtu rozdílu.";
        this["Func_datediff_ArgDesc_2"] = "Druhé datum, které se použije při výpočtu rozdílu.";
        this["Func_datediff_Category"] = "Datum a čas";
        this["Func_datediff_CategoryURL"] = "Date_and_Time";
        this["Func_datediff_Desc"] = "Vrátí hodnotu označující počet intervalů mezi dvěma hodnotami DateTime.";
        this["Func_datevalue_Arg_0"] = "date_text";
        this["Func_datevalue_ArgDesc_0"] = "Textový výraz představující datum.";
        this["Func_datevalue_Category"] = "Datum a čas";
        this["Func_datevalue_CategoryURL"] = "Date_and_Time";
        this["Func_datevalue_Desc"] = "Vrátí hodnotu data zadaného textu data.";
        this["Func_day_Arg_0"] = "Date_value";
        this["Func_day_ArgDesc_0"] = "Hodnota data, od které se má získat den.";
        this["Func_day_Category"] = "Datum a čas";
        this["Func_day_CategoryURL"] = "Date_and_Time";
        this["Func_day_Desc"] = "Vrátí den v měsíci hodnoty data.";
        this["Func_days360_Arg_0"] = "start_date";
        this["Func_days360_Arg_1"] = "end_date";
        this["Func_days360_Arg_2"] = "metoda";
        this["Func_days360_ArgDesc_0"] = "Počáteční datum rozsahu dnů. Pokud je to po datu ukončení, funkce vrátí záporné číslo.";
        this["Func_days360_ArgDesc_1"] = "Datum ukončení rozsahu dnů. Pokud je to před datem zahájení, funkce vrátí záporné číslo.";
        this["Func_days360_ArgDesc_2"] = "Logická hodnota, která určuje, zda se má při výpočtu použít metoda USA (false) nebo Evropská (true).";
        this["Func_days360_Category"] = "Datum a čas";
        this["Func_days360_CategoryURL"] = "Date_and_Time";
        this["Func_days360_Desc"] = "Vrátí počet dní mezi dvěma daty na základě 360denního roku.";
        this["Func_db_Arg_0"] = "náklady";
        this["Func_db_Arg_1"] = "zachránit";
        this["Func_db_Arg_2"] = "život";
        this["Func_db_Arg_3"] = "doba";
        this["Func_db_Arg_4"] = "Měsíc";
        this["Func_db_ArgDesc_0"] = "Počáteční cena aktiva.";
        this["Func_db_ArgDesc_1"] = "Hodnota na konci odpisu (někdy označovaná jako záchranná hodnota aktiva).";
        this["Func_db_ArgDesc_2"] = "Počet období, během nichž se aktivum odepisuje (někdy se nazývá doba použitelnosti aktiva).";
        this["Func_db_ArgDesc_3"] = "Období, za které se počítá odpis. Období musí používat stejné jednotky jako život.";
        this["Func_db_ArgDesc_4"] = "Počet měsíců v prvním roce. Pokud je měsíc vynechán, předpokládá se, že je 12.";
        this["Func_db_Category"] = "Finanční";
        this["Func_db_CategoryURL"] = "Finanční";
        this["Func_db_Desc"] = "Vrátí amortizaci aktiva po určité období pomocí metody fixně klesajícího zůstatku.";
        this["Func_dbnull_Category"] = "Informace";
        this["Func_dbnull_CategoryURL"] = "Informace";
        this["Func_dbnull_Desc"] = "Vrátí něco, co představuje neexistující hodnotu.";
        this["Func_ddb_Arg_0"] = "náklady";
        this["Func_ddb_Arg_1"] = "zachránit";
        this["Func_ddb_Arg_2"] = "život";
        this["Func_ddb_Arg_3"] = "doba";
        this["Func_ddb_Arg_4"] = "faktor";
        this["Func_ddb_ArgDesc_0"] = "Počáteční cena aktiva.";
        this["Func_ddb_ArgDesc_1"] = "Hodnota na konci odpisu (někdy označovaná jako záchranná hodnota aktiva).";
        this["Func_ddb_ArgDesc_2"] = "Počet období, během nichž se aktivum odepisuje (někdy se nazývá doba použitelnosti aktiva).";
        this["Func_ddb_ArgDesc_3"] = "Období, za které se počítá odpis. Období musí používat stejné jednotky jako život.";
        this["Func_ddb_ArgDesc_4"] = "Míra snižování zůstatku. Pokud je faktor vynechán, předpokládá se, že je 2 (metoda dvojitého klesajícího zůstatku).";
        this["Func_ddb_Category"] = "Finanční";
        this["Func_ddb_CategoryURL"] = "Finanční";
        this["Func_ddb_Desc"] = "Vrátí odpisy aktiva po určité období pomocí metody dvojitého klesajícího zůstatku nebo jiné zadané metody.";
        this["Func_dec2bin_Arg_0"] = "Číslo";
        this["Func_dec2bin_Arg_1"] = "Místa";
        this["Func_dec2bin_ArgDesc_0"] = "Desetinná hodnota, která se má převést.";
        this["Func_dec2bin_ArgDesc_1"] = "Počet znaků, které se mají použít při reprezentaci hodnoty. Není-li zadáno místo, použije se minimální počet znaků potřebných k reprezentaci hodnoty. To vám umožní určit úvodní nuly.";
        this["Func_dec2bin_Category"] = "Inženýrství";
        this["Func_dec2bin_CategoryURL"] = "Inženýrství";
        this["Func_dec2bin_Desc"] = "Vrátí textový výraz představující zadanou desetinnou hodnotu jako binární číslo.";
        this["Func_dec2hex_Arg_0"] = "Číslo";
        this["Func_dec2hex_Arg_1"] = "Místa";
        this["Func_dec2hex_ArgDesc_0"] = "Desetinná hodnota, která se má převést.";
        this["Func_dec2hex_ArgDesc_1"] = "Počet znaků, které se mají použít při reprezentaci hodnoty. Není-li zadáno místo, použije se minimální počet znaků potřebných k reprezentaci hodnoty. To vám umožní určit úvodní nuly.";
        this["Func_dec2hex_Category"] = "Inženýrství";
        this["Func_dec2hex_CategoryURL"] = "Inženýrství";
        this["Func_dec2hex_Desc"] = "Vrátí textový výraz představující zadanou desetinnou hodnotu jako šestnáctkové číslo.";
        this["Func_dec2oct_Arg_0"] = "Číslo";
        this["Func_dec2oct_Arg_1"] = "Místa";
        this["Func_dec2oct_ArgDesc_0"] = "Desetinná hodnota, která se má převést.";
        this["Func_dec2oct_ArgDesc_1"] = "Počet znaků, které se mají použít při reprezentaci hodnoty. Není-li zadáno místo, použije se minimální počet znaků potřebných k reprezentaci hodnoty. To vám umožní určit úvodní nuly.";
        this["Func_dec2oct_Category"] = "Inženýrství";
        this["Func_dec2oct_CategoryURL"] = "Inženýrství";
        this["Func_dec2oct_Desc"] = "Vrátí textový výraz představující zadanou desetinnou hodnotu jako osmičkové číslo.";
        this["Func_degrees_Arg_0"] = "Radiány";
        this["Func_degrees_ArgDesc_0"] = "Hodnota v radiánech, která bude převedena na stupně.";
        this["Func_degrees_Category"] = "Matematika";
        this["Func_degrees_CategoryURL"] = "Matematika";
        this["Func_degrees_Desc"] = "Převádí radiány na stupně.";
        this["Func_delta_Arg_0"] = "Číslo 1";
        this["Func_delta_Arg_1"] = "Číslo 2";
        this["Func_delta_ArgDesc_0"] = "První číslo k porovnání.";
        this["Func_delta_ArgDesc_1"] = "Druhé číslo k porovnání. Pokud není uvedeno, bude se předpokládat, že bude nula.";
        this["Func_delta_Category"] = "Inženýrství";
        this["Func_delta_CategoryURL"] = "Inženýrství";
        this["Func_delta_Desc"] = "Porovná dvě čísla a vrátí jedno, pokud jsou stejné nebo nula, pokud nejsou.";
        this["Func_dollarde_Arg_0"] = "FractionDollarAmount";
        this["Func_dollarde_Arg_1"] = "Zlomek";
        this["Func_dollarde_ArgDesc_0"] = "Částka dolaru vyjádřená jako zlomek.";
        this["Func_dollarde_ArgDesc_1"] = "Hodnota použitá jako jmenovatel zlomku. Pokud tato hodnota není celé číslo, bude zkrácena.";
        this["Func_dollarde_Category"] = "Finanční";
        this["Func_dollarde_CategoryURL"] = "Finanční";
        this["Func_dollarde_Desc"] = "Převede částku v dolarech vyjádřenou jako zlomek na částku v dolaru vyjádřenou jako desetinné číslo.";
        this["Func_dollarfr_Arg_0"] = "DecimalDollarAmount";
        this["Func_dollarfr_Arg_1"] = "Zlomek";
        this["Func_dollarfr_ArgDesc_0"] = "Částka dolaru vyjádřená jako desetinné číslo.";
        this["Func_dollarfr_ArgDesc_1"] = "Hodnota použitá jako jmenovatel zlomku. Pokud tato hodnota není celé číslo, bude zkrácena.";
        this["Func_dollarfr_Category"] = "Finanční";
        this["Func_dollarfr_CategoryURL"] = "Finanční";
        this["Func_dollarfr_Desc"] = "Převede částku v dolarech vyjádřenou jako desetinné číslo na částku v dolaru vyjádřenou jako zlomek.";
        this["Func_edate_Arg_0"] = "datum";
        this["Func_edate_Arg_1"] = "numberOfMonths";
        this["Func_edate_ArgDesc_0"] = "Počáteční datum.";
        this["Func_edate_ArgDesc_1"] = "Počet měsíců pro posunutí data. Kladné číslo znamená datum po datu zahájení. Záporné číslo označuje datum před datem zahájení.";
        this["Func_edate_Category"] = "Datum a čas";
        this["Func_edate_CategoryURL"] = "Datum a čas";
        this["Func_edate_Desc"] = "Vrátí datum, které je zadaným počtem měsíců před nebo po datu zahájení.";
        this["Func_eomonth_Arg_0"] = "datum";
        this["Func_eomonth_Arg_1"] = "numberOfMonths";
        this["Func_eomonth_ArgDesc_0"] = "Počáteční datum.";
        this["Func_eomonth_ArgDesc_1"] = "Počet měsíců pro posunutí data. Kladné číslo znamená datum po datu zahájení. Záporné číslo označuje datum před datem zahájení.";
        this["Func_eomonth_Category"] = "Datum a čas";
        this["Func_eomonth_CategoryURL"] = "Datum a čas";
        this["Func_eomonth_Desc"] = "Vrátí datum, které je na konci měsíce, což je zadaný počet měsíců před nebo po datu zahájení.";
        this["Func_errortype_Arg_0"] = "error_value";
        this["Func_errortype_ArgDesc_0"] = "Chybová hodnota, jejíž identifikační číslo by mělo být nalezeno.";
        this["Func_errortype_Category"] = "Informace";
        this["Func_errortype_CategoryURL"] = "Informace";
        this["Func_errortype_Desc"] = "Vrátí číslo odpovídající chybové hodnotě.";
        this["Func_even_Arg_0"] = "číslo";
        this["Func_even_ArgDesc_0"] = "Hodnota zaokrouhlená.";
        this["Func_even_Category"] = "Matematika";
        this["Func_even_CategoryURL"] = "Matematika";
        this["Func_even_Desc"] = "Zaokrouhlí kladné číslo nahoru a záporné číslo dolů na nejbližší sudé celé číslo.";
        this["Func_exp_Arg_0"] = "číslo";
        this["Func_exp_ArgDesc_0"] = "Použitý exponent, na který se má zvýšit e.";
        this["Func_exp_Category"] = "Matematika";
        this["Func_exp_CategoryURL"] = "Matematika";
        this["Func_exp_Desc"] = "Vrátí hodnotu e zvýšenou na sílu zadaného čísla. Konstanta e se rovná 2,71828182845904.";
        this["Func_fact_Arg_0"] = "Číslo";
        this["Func_fact_ArgDesc_0"] = "Kladné číslo, pro které bude vypočítán faktoriál.";
        this["Func_fact_Category"] = "Matematika";
        this["Func_fact_CategoryURL"] = "Matematika";
        this["Func_fact_Desc"] = "Vrátí faktoriál čísla.";
        this["Func_factdouble_Arg_0"] = "Číslo";
        this["Func_factdouble_ArgDesc_0"] = "Kladné číslo, pro které bude vypočítán dvojitý faktoriál.";
        this["Func_factdouble_Category"] = "Matematika";
        this["Func_factdouble_CategoryURL"] = "Matematika";
        this["Func_factdouble_Desc"] = "Vrátí dvojitý faktoriál čísla.";
        this["Func_false_Category"] = "Logický";
        this["Func_false_CategoryURL"] = "Logický";
        this["Func_false_Desc"] = "Vrátí logickou hodnotu false.";
        this["Func_find_Arg_0"] = "find_text";
        this["Func_find_Arg_1"] = "within_text";
        this["Func_find_Arg_2"] = "start_num";
        this["Func_find_ArgDesc_0"] = "Text k vyhledání.";
        this["Func_find_ArgDesc_1"] = "Text obsahující text, který chcete vyhledat.";
        this["Func_find_ArgDesc_2"] = "Znak indexu založený na 1, od kterého se má zahájit hledání. Pokud je vynechán, předpokládá se, že je jeden.";
        this["Func_find_Category"] = "TextAndData";
        this["Func_find_CategoryURL"] = "Text_and_Data";
        this["Func_find_Desc"] = "Vrátí počáteční pozici jednoho textového výrazu v jiném, rozlišují se malá a velká písmena.";
        this["Func_fixed_Arg_0"] = "číslo";
        this["Func_fixed_Arg_1"] = "desetinná místa";
        this["Func_fixed_Arg_2"] = "no_commas";
        this["Func_fixed_ArgDesc_0"] = "Číslo, které se má zaokrouhlit a převést na text.";
        this["Func_fixed_ArgDesc_1"] = "Počet číslic napravo od desetinné čárky ve návratové hodnotě. Pokud je tato hodnota záporná, zařadí se \"číslo\" nalevo od desetinné čárky. Výchozí hodnota je 2.";
        this["Func_fixed_ArgDesc_2"] = "True, pokud by čárky neměly být ve návratové hodnotě. Pokud je vynechán, předpokládá se, že je nepravdivý.";
        this["Func_fixed_Category"] = "TextAndData";
        this["Func_fixed_CategoryURL"] = "Text_and_Data";
        this["Func_fixed_Desc"] = "Zaokrouhlí číslo na zadaný počet desetinných míst a vrátí výsledek jako text s čárkami nebo bez nich.";
        this["Func_floor_Arg_0"] = "číslo";
        this["Func_floor_Arg_1"] = "význam";
        this["Func_floor_ArgDesc_0"] = "Číslo, které se má zaokrouhlit.";
        this["Func_floor_ArgDesc_1"] = "Násobek, na který se má zaokrouhlit. Pokud je vynechán, předpokládá se, že je jeden.";
        this["Func_floor_Category"] = "Matematika";
        this["Func_floor_CategoryURL"] = "Matematika";
        this["Func_floor_Desc"] = "Vrátí největší násobek významnosti (výchozí hodnota je 1) menší nebo rovný danému číslu.";
        this["Func_fv_Arg_0"] = "hodnotit";
        this["Func_fv_Arg_1"] = "nper";
        this["Func_fv_Arg_2"] = "pmt";
        this["Func_fv_Arg_3"] = "pv";
        this["Func_fv_Arg_4"] = "type";
        this["Func_fv_ArgDesc_0"] = "Úroková sazba za období.";
        this["Func_fv_ArgDesc_1"] = "Celkový počet platebních období v anuitě.";
        this["Func_fv_ArgDesc_2"] = "Platba provedena za každé období, které se během životnosti anuity nemůže změnit.";
        this["Func_fv_ArgDesc_3"] = "Současná hodnota nebo paušální částka, kterou právě teď má řada budoucích plateb. Pokud je vynechán, předpokládá se, že je nula.";
        this["Func_fv_ArgDesc_4"] = "Číslo nula nebo číslo, které označuje, zda jsou platby splatné na konci období (nula, výchozí hodnota) nebo na začátku (jedna).";
        this["Func_fv_Category"] = "Finanční";
        this["Func_fv_CategoryURL"] = "Finanční";
        this["Func_fv_Desc"] = "Vrátí budoucí hodnotu investice na základě pravidelnosti.";
        this["Func_gcd_Arg_0"] = "číslo {0}";
        this["Func_gcd_ArgDesc_0"] = "Celočíselná hodnota. Celočíselná hodnota bude zkrácena.";
        this["Func_gcd_Category"] = "Matematika";
        this["Func_gcd_CategoryURL"] = "Matematika";
        this["Func_gcd_Desc"] = "Vrátí největšího společného dělitele jedné nebo více celočíselných hodnot.";
        this["Func_gestep_Arg_0"] = "Číslo 1";
        this["Func_gestep_Arg_1"] = "Krok";
        this["Func_gestep_ArgDesc_0"] = "První číslo k porovnání.";
        this["Func_gestep_ArgDesc_1"] = "Druhé číslo k porovnání. Pokud není uvedeno, bude se předpokládat, že bude nula.";
        this["Func_gestep_Category"] = "Inženýrství";
        this["Func_gestep_CategoryURL"] = "Inženýrství";
        this["Func_gestep_Desc"] = "Porovná dvě čísla a vrátí jedno, pokud je první číslo větší nebo rovno druhému, nebo vrátí nulu, pokud ne.";
        this["Func_hex2bin_Arg_0"] = "Číslo";
        this["Func_hex2bin_Arg_1"] = "Místa";
        this["Func_hex2bin_ArgDesc_0"] = "Textový výraz vyjadřující šestnáctkové číslo.";
        this["Func_hex2bin_ArgDesc_1"] = "Počet znaků, které se mají použít při reprezentaci hodnoty. Pokud to není zadáno, použije se minimální počet znaků potřebných k reprezentaci hodnoty. To vám umožní určit úvodní nuly.";
        this["Func_hex2bin_Category"] = "Inženýrství";
        this["Func_hex2bin_CategoryURL"] = "Inženýrství";
        this["Func_hex2bin_Desc"] = "Převede textový výraz představující šestnáctkové číslo na textový výraz představující stejné číslo v binárním číselném systému.";
        this["Func_hex2dec_Arg_0"] = "Číslo";
        this["Func_hex2dec_ArgDesc_0"] = "Textový výraz vyjadřující šestnáctkové číslo.";
        this["Func_hex2dec_Category"] = "Inženýrství";
        this["Func_hex2dec_CategoryURL"] = "Inženýrství";
        this["Func_hex2dec_Desc"] = "Vrátí desítkovou hodnotu textové reprezentace čísla v hexadecimálním číselném systému.";
        this["Func_hex2oct_Arg_0"] = "Číslo";
        this["Func_hex2oct_Arg_1"] = "Místa";
        this["Func_hex2oct_ArgDesc_0"] = "Textový výraz vyjadřující šestnáctkové číslo.";
        this["Func_hex2oct_ArgDesc_1"] = "Počet znaků, které se mají použít při reprezentaci hodnoty. Pokud to není zadáno, použije se minimální počet znaků potřebných k reprezentaci hodnoty. To vám umožní určit úvodní nuly.";
        this["Func_hex2oct_Category"] = "Inženýrství";
        this["Func_hex2oct_CategoryURL"] = "Inženýrství";
        this["Func_hex2oct_Desc"] = "Převede textový výraz představující šestnáctkové číslo na textový výraz představující stejné číslo v systému osmičkových čísel.";
        this["Func_hour_Arg_0"] = "Time_value";
        this["Func_hour_ArgDesc_0"] = "Časová hodnota, od které se má získat hodina.";
        this["Func_hour_Category"] = "Datum a čas";
        this["Func_hour_CategoryURL"] = "Date_and_Time";
        this["Func_hour_Desc"] = "Vrátí hodinu hodnoty času.";
        this["Func_if_Arg_0"] = "logical_test";
        this["Func_if_Arg_1"] = "value_if_true";
        this["Func_if_Arg_2"] = "value_if_false";
        this["Func_if_ArgDesc_0"] = "Podmínka k testování.";
        this["Func_if_ArgDesc_1"] = "Výsledek, pokud je podmínka vyhodnocena jako true.";
        this["Func_if_ArgDesc_2"] = "Výsledek, pokud je podmínka vyhodnocena jako nepravdivá. Pokud je vynechán, předpokládá se, že jde o logickou hodnotu false.";
        this["Func_if_Category"] = "Logický";
        this["Func_if_CategoryURL"] = "Logický";
        this["Func_if_Desc"] = "Vrátí jednu hodnotu, pokud je zadaná podmínka vyhodnocena jako true, a jinou hodnotu, pokud je vyhodnocena jako false.";
        this["Func_iferror_Arg_0"] = "hodnota";
        this["Func_iferror_Arg_1"] = "value_if_error";
        this["Func_iferror_ArgDesc_0"] = "Hodnota, která se má použít, když nejde o chybu.";
        this["Func_iferror_ArgDesc_1"] = "Hodnota, která se má použít, pokud je argumentem hodnota chyba.";
        this["Func_iferror_Category"] = "Logický";
        this["Func_iferror_CategoryURL"] = "Logický";
        this["Func_iferror_Desc"] = "Vrátí jednu ze dvou hodnot v závislosti na tom, zda je první hodnota chybou či nikoli.";
        this["Func_imabs_Arg_0"] = "Komplexní číslo";
        this["Func_imabs_ArgDesc_0"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj'.";
        this["Func_imabs_Category"] = "Inženýrství";
        this["Func_imabs_CategoryURL"] = "Inženýrství";
        this["Func_imabs_Desc"] = "Vrátí absolutní hodnotu komplexního čísla.";
        this["Func_imaginary_Arg_0"] = "Komplexní číslo";
        this["Func_imaginary_ArgDesc_0"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj'.";
        this["Func_imaginary_Category"] = "Inženýrství";
        this["Func_imaginary_CategoryURL"] = "Inženýrství";
        this["Func_imaginary_Desc"] = "Vrátí imaginární koeficient komplexního čísla.";
        this["Func_imargument_Arg_0"] = "Komplexní číslo";
        this["Func_imargument_ArgDesc_0"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj'.";
        this["Func_imargument_Category"] = "Inženýrství";
        this["Func_imargument_CategoryURL"] = "Inženýrství";
        this["Func_imargument_Desc"] = "Vrátí argument theta, úhel vyjádřený v radiánech.";
        this["Func_imconjugate_Arg_0"] = "Komplexní číslo";
        this["Func_imconjugate_ArgDesc_0"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj'.";
        this["Func_imconjugate_Category"] = "Inženýrství";
        this["Func_imconjugate_CategoryURL"] = "Inženýrství";
        this["Func_imconjugate_Desc"] = "Vrátí konjugát komplexního čísla.";
        this["Func_imcos_Arg_0"] = "Komplexní číslo";
        this["Func_imcos_ArgDesc_0"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj'.";
        this["Func_imcos_Category"] = "Inženýrství";
        this["Func_imcos_CategoryURL"] = "Inženýrství";
        this["Func_imcos_Desc"] = "Vrátí kosinus komplexního čísla.";
        this["Func_imdiv_Arg_0"] = "Dividenda";
        this["Func_imdiv_Arg_1"] = "dělitel";
        this["Func_imdiv_ArgDesc_0"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj'.";
        this["Func_imdiv_ArgDesc_1"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj'.";
        this["Func_imdiv_Category"] = "Inženýrství";
        this["Func_imdiv_CategoryURL"] = "Inženýrství";
        this["Func_imdiv_Desc"] = "Vrátí podíl dvou komplexních čísel (Dividenda / Dělitel).";
        this["Func_imexp_Arg_0"] = "Komplexní číslo";
        this["Func_imexp_ArgDesc_0"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj'.";
        this["Func_imexp_Category"] = "Inženýrství";
        this["Func_imexp_CategoryURL"] = "Inženýrství";
        this["Func_imexp_Desc"] = "Vrátí exponenciál komplexního čísla.";
        this["Func_imln_Arg_0"] = "Komplexní číslo";
        this["Func_imln_ArgDesc_0"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj'.";
        this["Func_imln_Category"] = "Inženýrství";
        this["Func_imln_CategoryURL"] = "Inženýrství";
        this["Func_imln_Desc"] = "Vrátí přirozený logaritmus komplexního čísla.";
        this["Func_imlog10_Arg_0"] = "Komplexní číslo";
        this["Func_imlog10_ArgDesc_0"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj'.";
        this["Func_imlog10_Category"] = "Inženýrství";
        this["Func_imlog10_CategoryURL"] = "Inženýrství";
        this["Func_imlog10_Desc"] = "Vrátí logaritmus základu-10 komplexního čísla.";
        this["Func_imlog2_Arg_0"] = "Komplexní číslo";
        this["Func_imlog2_ArgDesc_0"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj'.";
        this["Func_imlog2_Category"] = "Inženýrství";
        this["Func_imlog2_CategoryURL"] = "Inženýrství";
        this["Func_imlog2_Desc"] = "Vrátí logaritmus základu-2 komplexního čísla.";
        this["Func_impower_Arg_0"] = "Komplexní číslo";
        this["Func_impower_Arg_1"] = "Napájení";
        this["Func_impower_ArgDesc_0"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj'.";
        this["Func_impower_ArgDesc_1"] = "Síla, na kterou bude ComplexNumber zvýšena.";
        this["Func_impower_Category"] = "Inženýrství";
        this["Func_impower_CategoryURL"] = "Inženýrství";
        this["Func_impower_Desc"] = "Vrátí komplexní číslo získané na zadanou mocninu.";
        this["Func_improduct_Arg_0"] = "Komplexní číslo {0}";
        this["Func_improduct_ArgDesc_0"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj'.";
        this["Func_improduct_Category"] = "Inženýrství";
        this["Func_improduct_CategoryURL"] = "Inženýrství";
        this["Func_improduct_Desc"] = "Vrátí součin jednoho nebo více komplexních čísel.";
        this["Func_imreal_Arg_0"] = "Komplexní číslo";
        this["Func_imreal_ArgDesc_0"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj'.";
        this["Func_imreal_Category"] = "Inženýrství";
        this["Func_imreal_CategoryURL"] = "Inženýrství";
        this["Func_imreal_Desc"] = "Vrátí skutečný koeficient komplexního čísla.";
        this["Func_imsin_Arg_0"] = "Komplexní číslo";
        this["Func_imsin_ArgDesc_0"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj'.";
        this["Func_imsin_Category"] = "Inženýrství";
        this["Func_imsin_CategoryURL"] = "Inženýrství";
        this["Func_imsin_Desc"] = "Vrátí sinus komplexního čísla.";
        this["Func_imsqrt_Arg_0"] = "Komplexní číslo";
        this["Func_imsqrt_ArgDesc_0"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj'.";
        this["Func_imsqrt_Category"] = "Inženýrství";
        this["Func_imsqrt_CategoryURL"] = "Inženýrství";
        this["Func_imsqrt_Desc"] = "Vrátí druhou odmocninu komplexního čísla.";
        this["Func_imsub_Arg_0"] = "Komplexní číslo 1";
        this["Func_imsub_Arg_1"] = "Komplexní číslo 2";
        this["Func_imsub_ArgDesc_0"] = "Textová reprezentace komplexního čísla ve formátu: \"x + yi\" nebo \"x + yj\", od kterého bude odečteno ComplexNumber2.";
        this["Func_imsub_ArgDesc_1"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj', která bude odečtena od ComplexNumber1.";
        this["Func_imsub_Category"] = "Inženýrství";
        this["Func_imsub_CategoryURL"] = "Inženýrství";
        this["Func_imsub_Desc"] = "Vrátí rozdíl mezi dvěma komplexními čísly.";
        this["Func_imsum_Arg_0"] = "Komplexní číslo {0}";
        this["Func_imsum_ArgDesc_0"] = "Textová reprezentace komplexního čísla ve formátu: 'x + yi' nebo 'x + yj'.";
        this["Func_imsum_Category"] = "Inženýrství";
        this["Func_imsum_CategoryURL"] = "Inženýrství";
        this["Func_imsum_Desc"] = "Vrátí součet jednoho nebo více komplexních čísel.";
        this["Func_info_Arg_0"] = "Typ";
        this["Func_info_ArgDesc_0"] = "Textový výraz označující typ informace, která se má vrátit.\r\n\"directory\" = Úplná cesta k aktuální složce.\r\n\"osversion\" = Aktuálně verze operačního systému jako textový výraz.\r\n\"system\" = aktuální operační systém. Macintosh = \"mac\", Windows = \"pcdos\".\r\n    ";
        this["Func_info_Category"] = "Informace";
        this["Func_info_CategoryURL"] = "Informace";
        this["Func_info_Desc"] = "Vrátí informace o aktuálním operačním prostředí.";
        this["Func_int_Arg_0"] = "číslo";
        this["Func_int_ArgDesc_0"] = "Skutečné číslo zaokrouhlit dolů na celé číslo.";
        this["Func_int_Category"] = "Matematika";
        this["Func_int_CategoryURL"] = "Matematika";
        this["Func_int_Desc"] = "Zaokrouhlí číslo dolů na nejbližší celé číslo.";
        this["Func_intrate_Arg_0"] = "vyrovnání";
        this["Func_intrate_Arg_1"] = "splatnost";
        this["Func_intrate_Arg_2"] = "investice";
        this["Func_intrate_Arg_3"] = "Vykoupení";
        this["Func_intrate_Arg_4"] = "základ";
        this["Func_intrate_ArgDesc_0"] = "Datum vypořádání cenného papíru.";
        this["Func_intrate_ArgDesc_1"] = "Datum splatnosti cenného papíru.";
        this["Func_intrate_ArgDesc_2"] = "Částka investovaná do zajištění.";
        this["Func_intrate_ArgDesc_3"] = "Částka, která má být přijata ke dni splatnosti.";
        this["Func_intrate_ArgDesc_4"] = "Typ základu pro počítání dnů, který se má použít.\r\n0 nebo vynecháno = USA (NASD) 30/360,\r\n1 = skutečný / skutečný,\r\n2 = Skutečná / 360,\r\n3 = Skutečná / 365,\r\n4 = evropská 30/360\r\n    ";
        this["Func_intrate_Category"] = "Finanční";
        this["Func_intrate_CategoryURL"] = "Finanční";
        this["Func_intrate_Desc"] = "Vrátí úrokovou sazbu pro plně investovaný cenný papír.";
        this["Func_ipmt_Arg_0"] = "hodnotit";
        this["Func_ipmt_Arg_1"] = "za";
        this["Func_ipmt_Arg_2"] = "nper";
        this["Func_ipmt_Arg_3"] = "pv";
        this["Func_ipmt_Arg_4"] = "fv";
        this["Func_ipmt_Arg_5"] = "type";
        this["Func_ipmt_ArgDesc_0"] = "Úroková sazba za období.";
        this["Func_ipmt_ArgDesc_1"] = "Období, které musí být v rozsahu od jedné do nper.";
        this["Func_ipmt_ArgDesc_2"] = "Celkový počet platebních období v anuitě.";
        this["Func_ipmt_ArgDesc_3"] = "Současná hodnota nebo paušální částka, kterou nyní má řada budoucích plateb.";
        this["Func_ipmt_ArgDesc_4"] = "Budoucí hodnota nebo hotovostní zůstatek, kterého chcete dosáhnout po provedení poslední platby. Pokud je vynechán, předpokládá se, že je nula.";
        this["Func_ipmt_ArgDesc_5"] = "Číslo nula nebo číslo, které označuje, zda jsou platby splatné na konci období (nula, výchozí hodnota) nebo na začátku (jedna).";
        this["Func_ipmt_Category"] = "Finanční";
        this["Func_ipmt_CategoryURL"] = "Finanční";
        this["Func_ipmt_Desc"] = "Vrátí úrokovou platbu za dané období pro investici na základě pravidelných, stálých plateb a konstantní úrokové sazby.";
        this["Func_irr_Arg_0"] = "hodnoty";
        this["Func_irr_Arg_1"] = "tipni si";
        this["Func_irr_ArgDesc_0"] = "Sbírka hodnot plateb (záporné hodnoty) a příjmů (kladné hodnoty), ke kterým dochází v pravidelných intervalech.";
        this["Func_irr_ArgDesc_1"] = "Číslo, které uhodnete, se blíží výsledku. Výchozí hodnota je 0,1 (10%).";
        this["Func_irr_Category"] = "Finanční";
        this["Func_irr_CategoryURL"] = "Finanční";
        this["Func_irr_Desc"] = "Vrátí vnitřní míru návratnosti řady peněžních toků.";
        this["Func_isblank_Arg_0"] = "hodnota";
        this["Func_isblank_ArgDesc_0"] = "Hodnota k testování.";
        this["Func_isblank_Category"] = "Informace";
        this["Func_isblank_CategoryURL"] = "Informace";
        this["Func_isblank_Desc"] = "Vrátí true, pokud je hodnota prázdná.";
        this["Func_isdbnull_Arg_0"] = "hodnota";
        this["Func_isdbnull_ArgDesc_0"] = "Hodnota k testování.";
        this["Func_isdbnull_Category"] = "Informace";
        this["Func_isdbnull_CategoryURL"] = "Informace";
        this["Func_isdbnull_Desc"] = "Vrátí hodnotu true, pokud hodnota představuje neexistující hodnotu.";
        this["Func_iserr_Arg_0"] = "hodnota";
        this["Func_iserr_ArgDesc_0"] = "Hodnota k testování.";
        this["Func_iserr_Category"] = "Informace";
        this["Func_iserr_CategoryURL"] = "Informace";
        this["Func_iserr_Desc"] = "Vrátí hodnotu true, pokud je hodnotou jakákoli chybová hodnota kromě # N / A.";
        this["Func_iserror_Arg_0"] = "hodnota";
        this["Func_iserror_ArgDesc_0"] = "Hodnota k testování.";
        this["Func_iserror_Category"] = "Informace";
        this["Func_iserror_CategoryURL"] = "Informace";
        this["Func_iserror_Desc"] = "Vrátí hodnotu true, pokud je hodnotou jakákoli chybová hodnota.";
        this["Func_iseven_Arg_0"] = "hodnota";
        this["Func_iseven_ArgDesc_0"] = "Hodnota k testování.";
        this["Func_iseven_Category"] = "Informace";
        this["Func_iseven_CategoryURL"] = "Informace";
        this["Func_iseven_Desc"] = "Vrátí true, pokud je hodnota sudé číslo, jinak vrátí false.";
        this["Func_islogical_Arg_0"] = "hodnota";
        this["Func_islogical_ArgDesc_0"] = "Hodnota k testování.";
        this["Func_islogical_Category"] = "Informace";
        this["Func_islogical_CategoryURL"] = "Informace";
        this["Func_islogical_Desc"] = "Vrátí true, pokud je hodnota logickou hodnotou (true nebo false).";
        this["Func_isna_Arg_0"] = "hodnota";
        this["Func_isna_ArgDesc_0"] = "Hodnota k testování.";
        this["Func_isna_Category"] = "Informace";
        this["Func_isna_CategoryURL"] = "Informace";
        this["Func_isna_Desc"] = "Vrátí true, pokud je hodnota chybová hodnota # N / A (hodnota není k dispozici).";
        this["Func_isnontext_Arg_0"] = "hodnota";
        this["Func_isnontext_ArgDesc_0"] = "Hodnota k testování.";
        this["Func_isnontext_Category"] = "Informace";
        this["Func_isnontext_CategoryURL"] = "Informace";
        this["Func_isnontext_Desc"] = "Vrátí hodnotu true, pokud je hodnotou jakákoli položka, která není textová.";
        this["Func_isnull_Arg_0"] = "hodnota";
        this["Func_isnull_ArgDesc_0"] = "Hodnota k testování.";
        this["Func_isnull_Category"] = "Informace";
        this["Func_isnull_CategoryURL"] = "Informace";
        this["Func_isnull_Desc"] = "Vrátí true, pokud hodnota neexistuje.";
        this["Func_isnumber_Arg_0"] = "hodnota";
        this["Func_isnumber_ArgDesc_0"] = "Hodnota k testování.";
        this["Func_isnumber_Category"] = "Informace";
        this["Func_isnumber_CategoryURL"] = "Informace";
        this["Func_isnumber_Desc"] = "Vrátí hodnotu true, pokud je hodnotou číslo.";
        this["Func_isodd_Arg_0"] = "hodnota";
        this["Func_isodd_ArgDesc_0"] = "Hodnota k testování.";
        this["Func_isodd_Category"] = "Informace";
        this["Func_isodd_CategoryURL"] = "Informace";
        this["Func_isodd_Desc"] = "Vrátí true, pokud je hodnota lichého čísla, jinak vrátí false.";
        this["Func_isref_Arg_0"] = "hodnota";
        this["Func_isref_ArgDesc_0"] = "Hodnota k testování.";
        this["Func_isref_Category"] = "Informace";
        this["Func_isref_CategoryURL"] = "Informace";
        this["Func_isref_Desc"] = "Vrátí true, pokud je hodnotou reference.";
        this["Func_istext_Arg_0"] = "hodnota";
        this["Func_istext_ArgDesc_0"] = "Hodnota k testování.";
        this["Func_istext_Category"] = "Informace";
        this["Func_istext_CategoryURL"] = "Informace";
        this["Func_istext_Desc"] = "Vrátí hodnotu true, pokud je hodnotou textová hodnota.";
        this["Func_lcm_Arg_0"] = "číslo {0}";
        this["Func_lcm_ArgDesc_0"] = "Celočíselná hodnota. Celočíselná hodnota bude zkrácena.";
        this["Func_lcm_Category"] = "Matematika";
        this["Func_lcm_CategoryURL"] = "Matematika";
        this["Func_lcm_Desc"] = "Vrátí nejméně běžný násobek jedné nebo více celočíselných hodnot.";
        this["Func_left_Arg_0"] = "text";
        this["Func_left_Arg_1"] = "num_chars";
        this["Func_left_ArgDesc_0"] = "Textový výraz obsahující znaky, které se mají extrahovat.";
        this["Func_left_ArgDesc_1"] = "Počet znaků, které se mají extrahovat.";
        this["Func_left_Category"] = "TextAndData";
        this["Func_left_CategoryURL"] = "Text_and_Data";
        this["Func_left_Desc"] = "Vrátí první znak nebo znaky v textovém výrazu.";
        this["Func_len_Arg_0"] = "text";
        this["Func_len_ArgDesc_0"] = "Textový výraz, jehož délku je třeba vyhledat. Mezery se počítají jako znaky.";
        this["Func_len_Category"] = "TextAndData";
        this["Func_len_CategoryURL"] = "Text_and_Data";
        this["Func_len_Desc"] = "Vrátí počet znaků v textovém výrazu.";
        this["Func_ln_Arg_0"] = "číslo";
        this["Func_ln_ArgDesc_0"] = "Kladné reálné číslo, za které se získá přirozený logaritmus.";
        this["Func_ln_Category"] = "Matematika";
        this["Func_ln_CategoryURL"] = "Matematika";
        this["Func_ln_Desc"] = "Vrátí přirozený logaritmus čísla.";
        this["Func_log_Arg_0"] = "číslo";
        this["Func_log_Arg_1"] = "základna";
        this["Func_log_ArgDesc_0"] = "Kladné reálné číslo, pro které se má získat logaritmus.";
        this["Func_log_ArgDesc_1"] = "Základ logaritmu.";
        this["Func_log_Category"] = "Matematika";
        this["Func_log_CategoryURL"] = "Matematika";
        this["Func_log_Desc"] = "Vrátí logaritmus čísla na zadanou základnu.";
        this["Func_log10_Arg_0"] = "číslo";
        this["Func_log10_ArgDesc_0"] = "Kladné reálné číslo, za které se získá logaritmus základu-10.";
        this["Func_log10_Category"] = "Matematika";
        this["Func_log10_CategoryURL"] = "Matematika";
        this["Func_log10_Desc"] = "Vrátí logaritmus základu-10 čísla.";
        this["Func_lower_Arg_0"] = "text";
        this["Func_lower_ArgDesc_0"] = "Text, který se má převést na malá písmena.";
        this["Func_lower_Category"] = "TextAndData";
        this["Func_lower_CategoryURL"] = "Text_and_Data";
        this["Func_lower_Desc"] = "Převede všechna velká písmena v textovém výrazu na malá.";
        this["Func_max_Arg_0"] = "číslo {0}";
        this["Func_max_ArgDesc_0"] = "Číslo nebo rozsah čísel.";
        this["Func_max_Category"] = "Statistický";
        this["Func_max_CategoryURL"] = "Statistický";
        this["Func_max_Desc"] = "Vrátí největší číslo ze sady čísel.";
        this["Func_median_Arg_0"] = "číslo {0}";
        this["Func_median_ArgDesc_0"] = "Číslo nebo rozsah čísel.";
        this["Func_median_Category"] = "Statistický";
        this["Func_median_CategoryURL"] = "Statistický";
        this["Func_median_Desc"] = "Vrátí medián sady čísel. Medián je střední číslo, když jsou čísla tříděna, nebo průměr dvou středních čísel, pokud existuje sudý počet zadaných čísel.";
        this["Func_mid_Arg_0"] = "text";
        this["Func_mid_Arg_1"] = "start_num";
        this["Func_mid_Arg_2"] = "num_chars";
        this["Func_mid_ArgDesc_0"] = "Textový výraz obsahující znaky, které se mají extrahovat.";
        this["Func_mid_ArgDesc_1"] = "Index založený na 1 prvního znaku, který se má extrahovat.";
        this["Func_mid_ArgDesc_2"] = "Počet znaků, které se mají extrahovat.";
        this["Func_mid_Category"] = "TextAndData";
        this["Func_mid_CategoryURL"] = "Text_and_Data";
        this["Func_mid_Desc"] = "Vrátí určitý počet znaků z textového výrazu.";
        this["Func_min_Arg_0"] = "číslo {0}";
        this["Func_min_ArgDesc_0"] = "Číslo nebo rozsah čísel.";
        this["Func_min_Category"] = "Statistický";
        this["Func_min_CategoryURL"] = "Statistický";
        this["Func_min_Desc"] = "Vrátí nejmenší číslo ze sady čísel.";
        this["Func_minute_Arg_0"] = "Time_value";
        this["Func_minute_ArgDesc_0"] = "Časová hodnota, od které se získá minuta.";
        this["Func_minute_Category"] = "Datum a čas";
        this["Func_minute_CategoryURL"] = "Date_and_Time";
        this["Func_minute_Desc"] = "Vrátí minutu časové hodnoty.";
        this["Func_mod_Arg_0"] = "číslo";
        this["Func_mod_Arg_1"] = "dělitel";
        this["Func_mod_ArgDesc_0"] = "Číslo, pro které se má najít zbytek.";
        this["Func_mod_ArgDesc_1"] = "Hodnota, o kterou se vydělí číslo.";
        this["Func_mod_Category"] = "Matematika";
        this["Func_mod_CategoryURL"] = "Matematika";
        this["Func_mod_Desc"] = "Vrátí zbytek poté, co je číslo rozděleno dělitelem. Výsledek má stejné znaménko jako dělitel.";
        this["Func_month_Arg_0"] = "Date_value";
        this["Func_month_ArgDesc_0"] = "Hodnota data, od které se má získat měsíc.";
        this["Func_month_Category"] = "Datum a čas";
        this["Func_month_CategoryURL"] = "Date_and_Time";
        this["Func_month_Desc"] = "Vrátí měsíc hodnoty data.";
        this["Func_mround_Arg_0"] = "Číslo";
        this["Func_mround_Arg_1"] = "Násobek";
        this["Func_mround_ArgDesc_0"] = "Číslo, které má být zaokrouhleno.";
        this["Func_mround_ArgDesc_1"] = "Číslo označující násobek, na který se má zaokrouhlit.";
        this["Func_mround_Category"] = "Matematika";
        this["Func_mround_CategoryURL"] = "Matematika";
        this["Func_mround_Desc"] = "Zaokrouhlí číslo na nejbližší násobek jiného čísla.";
        this["Func_multinomial_Arg_0"] = "číslo {0}";
        this["Func_multinomial_ArgDesc_0"] = "Jedno z čísel, pro které získáte multinomial.";
        this["Func_multinomial_Category"] = "Matematika";
        this["Func_multinomial_CategoryURL"] = "Matematika";
        this["Func_multinomial_Desc"] = "Vrátí multinomial množiny čísel. Multinomial je poměr faktoriálu součtu hodnot k produktu jejich faktoriálů.";
        this["Func_n_Arg_0"] = "Hodnota";
        this["Func_n_ArgDesc_0"] = "Hodnota, která má být převedena na číslo. Přijatelné hodnoty jsou následující:\r\nČíslo - vrátí číslo.\r\nDatum - vrátí datum.\r\nTrue - vrátí 1.\r\nFalse - vrátí 0.\r\nChybová hodnota - vrátí chybovou hodnotu.\r\nJakákoli jiná hodnota - vrací 0.\r\n    ";
        this["Func_n_Category"] = "Informace";
        this["Func_n_CategoryURL"] = "Informace";
        this["Func_n_Desc"] = "Převede hodnotu na číslo.";
        this["Func_na_Category"] = "Informace";
        this["Func_na_CategoryURL"] = "Informace";
        this["Func_na_Desc"] = "Vrátí chybovou hodnotu # N / A (hodnota není k dispozici).";
        this["Func_networkdays_Arg_0"] = "datum začátku";
        this["Func_networkdays_Arg_1"] = "datum ukončení";
        this["Func_networkdays_Arg_2"] = "dovolená";
        this["Func_networkdays_ArgDesc_0"] = "Datum, od kterého se má začít.";
        this["Func_networkdays_ArgDesc_1"] = "Datum, kdy končí.";
        this["Func_networkdays_ArgDesc_2"] = "Rozsah jedné nebo více referencí obsahujících data, která mají být považována za dny pracovního klidu.";
        this["Func_networkdays_Category"] = "Datum a čas";
        this["Func_networkdays_CategoryURL"] = "Datum a čas";
        this["Func_networkdays_Desc"] = "Vrátí celkový počet celých pracovních dnů mezi zadanými daty, kromě zadaných svátků.";
        this["Func_not_Arg_0"] = "Logický";
        this["Func_not_ArgDesc_0"] = "Logická hodnota (true nebo false).";
        this["Func_not_Category"] = "Logický";
        this["Func_not_CategoryURL"] = "Logický";
        this["Func_not_Desc"] = "Obrátí logickou hodnotu (změny true na false a false na true).";
        this["Func_now_Category"] = "Datum a čas";
        this["Func_now_CategoryURL"] = "Date_and_Time";
        this["Func_now_Desc"] = "Vrátí hodnotu představující aktuální datum a čas.";
        this["Func_nper_Arg_0"] = "hodnotit";
        this["Func_nper_Arg_1"] = "pmt";
        this["Func_nper_Arg_2"] = "pv";
        this["Func_nper_Arg_3"] = "fv";
        this["Func_nper_Arg_4"] = "type";
        this["Func_nper_ArgDesc_0"] = "Úroková sazba za období.";
        this["Func_nper_ArgDesc_1"] = "Platba provedena za každé období, které se během životnosti anuity nemůže změnit.";
        this["Func_nper_ArgDesc_2"] = "Současná hodnota nebo paušální částka, kterou právě teď má řada budoucích plateb.";
        this["Func_nper_ArgDesc_3"] = "Budoucí hodnota nebo hotovostní zůstatek, kterého chcete dosáhnout po provedení poslední platby.";
        this["Func_nper_ArgDesc_4"] = "Číslo nula nebo číslo, které označuje, zda jsou platby splatné na konci období (nula, výchozí hodnota) nebo na začátku (jedna).";
        this["Func_nper_Category"] = "Finanční";
        this["Func_nper_CategoryURL"] = "Finanční";
        this["Func_nper_Desc"] = "Vrátí počet období investice na základě pravidelných, stálých plateb a konstantní úrokové sazby.";
        this["Func_npv_Arg_0"] = "hodnotit";
        this["Func_npv_Arg_1"] = "hodnota {0}";
        this["Func_npv_ArgDesc_0"] = "Míra slevy po dobu jednoho období.";
        this["Func_npv_ArgDesc_1"] = "Platba (záporná hodnota) nebo příjem (kladná hodnota).";
        this["Func_npv_Category"] = "Finanční";
        this["Func_npv_CategoryURL"] = "Finanční";
        this["Func_npv_Desc"] = "Vypočítá čistou současnou hodnotu investice pomocí diskontní sazby a řady budoucích plateb (záporné hodnoty) a výnosů (kladná hodnota).";
        this["Func_null_Category"] = "Informace";
        this["Func_null_CategoryURL"] = "Informace";
        this["Func_null_Desc"] = "Vrátí neexistující hodnotu.";
        this["Func_oct2bin_Arg_0"] = "Číslo";
        this["Func_oct2bin_Arg_1"] = "Místa";
        this["Func_oct2bin_ArgDesc_0"] = "Textový výraz vyjadřující osmičkové číslo.";
        this["Func_oct2bin_ArgDesc_1"] = "Počet znaků, které se mají použít při reprezentaci hodnoty. Pokud to není zadáno, použije se minimální počet znaků potřebných k reprezentaci hodnoty. To vám umožní určit úvodní nuly.";
        this["Func_oct2bin_Category"] = "Inženýrství";
        this["Func_oct2bin_CategoryURL"] = "Inženýrství";
        this["Func_oct2bin_Desc"] = "Převede textový výraz představující osmičkové číslo na textový výraz představující stejné číslo v systému binárních čísel.";
        this["Func_oct2dec_Arg_0"] = "Číslo";
        this["Func_oct2dec_ArgDesc_0"] = "Textový výraz vyjadřující osmičkové číslo.";
        this["Func_oct2dec_Category"] = "Inženýrství";
        this["Func_oct2dec_CategoryURL"] = "Inženýrství";
        this["Func_oct2dec_Desc"] = "Vrátí desítkovou hodnotu textové reprezentace čísla v systému osmičkových čísel.";
        this["Func_oct2hex_Arg_0"] = "Číslo";
        this["Func_oct2hex_Arg_1"] = "Místa";
        this["Func_oct2hex_ArgDesc_0"] = "Textový výraz vyjadřující osmičkové číslo.";
        this["Func_oct2hex_ArgDesc_1"] = "Počet znaků, které se mají použít při reprezentaci hodnoty. Pokud to není zadáno, použije se minimální počet znaků potřebných k reprezentaci hodnoty. To vám umožní určit úvodní nuly.";
        this["Func_oct2hex_Category"] = "Inženýrství";
        this["Func_oct2hex_CategoryURL"] = "Inženýrství";
        this["Func_oct2hex_Desc"] = "Převede textový výraz představující osmičkové číslo na textový výraz představující stejné číslo v hexadecimálním číselném systému.";
        this["Func_odd_Arg_0"] = "číslo";
        this["Func_odd_ArgDesc_0"] = "Hodnota zaokrouhlená.";
        this["Func_odd_Category"] = "Matematika";
        this["Func_odd_CategoryURL"] = "Matematika";
        this["Func_odd_Desc"] = "Zaokrouhlí kladné číslo nahoru a záporné číslo dolů na nejbližší liché celé číslo.";
        this["Func_or_Arg_0"] = "logický {0}";
        this["Func_or_ArgDesc_0"] = "Logická hodnota (true nebo false).";
        this["Func_or_Category"] = "Logický";
        this["Func_or_CategoryURL"] = "Logický";
        this["Func_or_Desc"] = "Vrátí true, pokud je jedna nebo více hodnot true; vrátí false, pokud jsou všechny hodnoty false.";
        this["Func_pi_Category"] = "Matematika";
        this["Func_pi_CategoryURL"] = "Matematika";
        this["Func_pi_Desc"] = "Vrátí konstantu pí, což je 3,14159265358979.";
        this["Func_pmt_Arg_0"] = "hodnotit";
        this["Func_pmt_Arg_1"] = "nper";
        this["Func_pmt_Arg_2"] = "pv";
        this["Func_pmt_Arg_3"] = "fv";
        this["Func_pmt_Arg_4"] = "type";
        this["Func_pmt_ArgDesc_0"] = "Úroková sazba úvěru.";
        this["Func_pmt_ArgDesc_1"] = "Celkový počet plateb za půjčku.";
        this["Func_pmt_ArgDesc_2"] = "Současná hodnota nebo celková částka, kterou nyní má řada budoucích plateb; také známý jako hlavní.";
        this["Func_pmt_ArgDesc_3"] = "Budoucí hodnota nebo hotovostní zůstatek, kterého chcete dosáhnout po provedení poslední platby.";
        this["Func_pmt_ArgDesc_4"] = "Číslo nula nebo číslo, které označuje, zda jsou platby splatné na konci období (nula, výchozí hodnota) nebo na začátku (jedna).";
        this["Func_pmt_Category"] = "Finanční";
        this["Func_pmt_CategoryURL"] = "Finanční";
        this["Func_pmt_Desc"] = "Vypočítá splátku za půjčku na základě stálých splátek a konstantní úrokové sazby.";
        this["Func_power_Arg_0"] = "číslo";
        this["Func_power_Arg_1"] = "Napájení";
        this["Func_power_ArgDesc_0"] = "Základní číslo, které se má zvýšit na mocninu.";
        this["Func_power_ArgDesc_1"] = "Exponent, na který je zvýšeno základní číslo.";
        this["Func_power_Category"] = "Matematika";
        this["Func_power_CategoryURL"] = "Matematika";
        this["Func_power_Desc"] = "Vrátí výsledek čísla zvýšeného na mocninu.";
        this["Func_ppmt_Arg_0"] = "hodnotit";
        this["Func_ppmt_Arg_1"] = "za";
        this["Func_ppmt_Arg_2"] = "nper";
        this["Func_ppmt_Arg_3"] = "pv";
        this["Func_ppmt_Arg_4"] = "fv";
        this["Func_ppmt_Arg_5"] = "type";
        this["Func_ppmt_ArgDesc_0"] = "Úroková sazba za období.";
        this["Func_ppmt_ArgDesc_1"] = "Období, které musí být v rozsahu od jedné do nper.";
        this["Func_ppmt_ArgDesc_2"] = "Celkový počet platebních období v anuitě.";
        this["Func_ppmt_ArgDesc_3"] = "Současná hodnota nebo celková částka, kterou nyní má řada budoucích plateb.";
        this["Func_ppmt_ArgDesc_4"] = "Budoucí hodnota nebo hotovostní zůstatek, kterého chcete dosáhnout po provedení poslední platby.";
        this["Func_ppmt_ArgDesc_5"] = "Číslo nula nebo číslo, které označuje, zda jsou platby splatné na konci období (nula, výchozí hodnota) nebo na začátku (jedna).";
        this["Func_ppmt_Category"] = "Finanční";
        this["Func_ppmt_CategoryURL"] = "Finanční";
        this["Func_ppmt_Desc"] = "Vrátí platbu jistiny za dané období u investice na základě pravidelných, stálých plateb a konstantní úrokové sazby.";
        this["Func_product_Arg_0"] = "číslo {0}";
        this["Func_product_ArgDesc_0"] = "Číslo, které se má vynásobit jinými čísly.";
        this["Func_product_Category"] = "Matematika";
        this["Func_product_CategoryURL"] = "Matematika";
        this["Func_product_Desc"] = "Vynásobí všechna čísla uvedená jako argumenty a vrátí produkt.";
        this["Func_pv_Arg_0"] = "hodnotit";
        this["Func_pv_Arg_1"] = "nper";
        this["Func_pv_Arg_2"] = "pmt";
        this["Func_pv_Arg_3"] = "fv";
        this["Func_pv_Arg_4"] = "type";
        this["Func_pv_ArgDesc_0"] = "Úroková sazba za období.";
        this["Func_pv_ArgDesc_1"] = "Celkový počet platebních období v anuitě.";
        this["Func_pv_ArgDesc_2"] = "Platba provedena za každé období, které se během životnosti anuity nemůže změnit.";
        this["Func_pv_ArgDesc_3"] = "Budoucí hodnota nebo hotovostní zůstatek, kterého chcete dosáhnout po provedení poslední platby.";
        this["Func_pv_ArgDesc_4"] = "Číslo nula nebo číslo, které označuje, zda jsou platby splatné na konci období (nula, výchozí hodnota) nebo na začátku (jedna).";
        this["Func_pv_Category"] = "Finanční";
        this["Func_pv_CategoryURL"] = "Finanční";
        this["Func_pv_Desc"] = "Vrátí současnou hodnotu investice.";
        this["Func_quotient_Arg_0"] = "čitatel";
        this["Func_quotient_Arg_1"] = "jmenovatel";
        this["Func_quotient_ArgDesc_0"] = "Dividenda operace rozdělení.";
        this["Func_quotient_ArgDesc_1"] = "Dělitel operace dělení.";
        this["Func_quotient_Category"] = "Matematika";
        this["Func_quotient_CategoryURL"] = "Matematika";
        this["Func_quotient_Desc"] = "Vrátí celočíselnou část dělení. Tím se zahodí zbytek divize.";
        this["Func_radians_Arg_0"] = "Stupně";
        this["Func_radians_ArgDesc_0"] = "Hodnota ve stupních, která bude převedena na radiány.";
        this["Func_radians_Category"] = "Matematika";
        this["Func_radians_CategoryURL"] = "Matematika";
        this["Func_radians_Desc"] = "Převádí stupně na radiány.";
        this["Func_rand_Category"] = "Matematika";
        this["Func_rand_CategoryURL"] = "Matematika";
        this["Func_rand_Desc"] = "Vrátí rovnoměrně rozložené náhodné číslo větší nebo rovné 0 a menší než 1";
        this["Func_randbetween_Arg_0"] = "Dno";
        this["Func_randbetween_Arg_1"] = "Horní";
        this["Func_randbetween_ArgDesc_0"] = "Minimální hodnota, která bude vrácena.";
        this["Func_randbetween_ArgDesc_1"] = "Maximální hodnota, která bude vrácena.";
        this["Func_randbetween_Category"] = "Matematika";
        this["Func_randbetween_CategoryURL"] = "Matematika";
        this["Func_randbetween_Desc"] = "Generuje pseudonáhodné celé číslo mezi dvěma zadanými čísly.";
        this["Func_rate_Arg_0"] = "NPer";
        this["Func_rate_Arg_1"] = "Pmt";
        this["Func_rate_Arg_2"] = "Pv";
        this["Func_rate_Arg_3"] = "F v";
        this["Func_rate_Arg_4"] = "Typ";
        this["Func_rate_Arg_5"] = "Guess";
        this["Func_rate_ArgDesc_0"] = "Celkový počet platebních období v anuitě.";
        this["Func_rate_ArgDesc_1"] = "Platba provedena každé období a nemůže se měnit po dobu životnosti anuity.";
        this["Func_rate_ArgDesc_2"] = "Současná hodnota nebo celková částka, kterou nyní má řada budoucích plateb.";
        this["Func_rate_ArgDesc_3"] = "Budoucí hodnota nebo hotovostní zůstatek, kterého chcete dosáhnout po provedení poslední platby. Pokud je fv vynecháno, předpokládá se, že je 0 (budoucí hodnota půjčky je například 0). Například pokud chcete ušetřit 50 000 $ na zaplacení speciálního projektu za 18 let, bude budoucí hodnotou 50 000 $. Poté byste mohli provést konzervativní odhad úrokové sazby a určit, kolik musíte každý měsíc ušetřit. Pokud je fv vynecháno, musíte uvést argument pmt. Výchozí hodnota pro fv je nula.";
        this["Func_rate_ArgDesc_4"] = "Číslo nula nebo číslo, které označuje, zda jsou platby splatné na konci období (nula, výchozí hodnota) nebo na začátku (jedna).";
        this["Func_rate_ArgDesc_5"] = "Číslo, které uhodnete, se blíží výsledku. Pokud je vynechán, předpokládá se, že je 0,1 (10%).";
        this["Func_rate_Category"] = "Finanční";
        this["Func_rate_CategoryURL"] = "Finanční";
        this["Func_rate_Desc"] = "Vrátí úrokovou sazbu za období anuity.";
        this["Func_replace_Arg_0"] = "Old_text";
        this["Func_replace_Arg_1"] = "Start_num";
        this["Func_replace_Arg_2"] = "Num_chars";
        this["Func_replace_Arg_3"] = "New_text";
        this["Func_replace_ArgDesc_0"] = "Textový výraz, ve kterém se mají nahradit některé znaky.";
        this["Func_replace_ArgDesc_1"] = "Index založený na 1 znaku ve old_textu, který má být nahrazen new_text.";
        this["Func_replace_ArgDesc_2"] = "Počet znaků ve starém textu, který má být nahrazen novým textem.";
        this["Func_replace_ArgDesc_3"] = "Text, který nahradí znaky ve starém textu.";
        this["Func_replace_Category"] = "TextAndData";
        this["Func_replace_CategoryURL"] = "Text_and_Data";
        this["Func_replace_Desc"] = "Nahrazuje část textového výrazu.";
        this["Func_rept_Arg_0"] = "TextValue";
        this["Func_rept_Arg_1"] = "RepeatCount";
        this["Func_rept_ArgDesc_0"] = "Text k opakování.";
        this["Func_rept_ArgDesc_1"] = "Kladný počet opakování textu.";
        this["Func_rept_Category"] = "TextAndData";
        this["Func_rept_CategoryURL"] = "Text_and_Data";
        this["Func_rept_Desc"] = "Opakuje text konkrétní počet opakování.";
        this["Func_right_Arg_0"] = "text";
        this["Func_right_Arg_1"] = "num_chars";
        this["Func_right_ArgDesc_0"] = "Textový výraz obsahující znaky, které se mají extrahovat.";
        this["Func_right_ArgDesc_1"] = "Počet znaků, které se mají extrahovat.";
        this["Func_right_Category"] = "TextAndData";
        this["Func_right_CategoryURL"] = "Text_and_Data";
        this["Func_right_Desc"] = "Vrátí poslední znak nebo znaky v textovém výrazu.";
        this["Func_roman_Arg_0"] = "Číslo";
        this["Func_roman_Arg_1"] = "Formulář";
        this["Func_roman_ArgDesc_0"] = "Číslo, které se má převést na římské číslice.";
        this["Func_roman_ArgDesc_1"] = "Číslo nebo logická hodnota označující, zda použít klasické římské číslice nebo stručnější verzi.\r\n0 = (výchozí) klasický. (499 = \" CDXCIX \")\r\n1 = Stručnější. (499 = \" LDVLIV \")\r\n2 = Stručnější. (499 = \" XDIX \")\r\n3 = Stručnější. (499 = \" VDIV \")\r\n4 = Zjednodušeno. (499 = \" ID \")\r\nTrue = Classic.\r\nFalse = Zjednodušeno.\r\n    ";
        this["Func_roman_Category"] = "Matematika";
        this["Func_roman_CategoryURL"] = "Matematika";
        this["Func_roman_Desc"] = "Převede číslo na římské číslo jako textový výraz.";
        this["Func_round_Arg_0"] = "číslo";
        this["Func_round_Arg_1"] = "num_digits";
        this["Func_round_Arg_2"] = "round_Style";
        this["Func_round_ArgDesc_0"] = "Číslo, které se má zaokrouhlit.";
        this["Func_round_ArgDesc_1"] = "Počet číslic, na které se má zaokrouhlit číslo.";
        this["Func_round_ArgDesc_2"] = "Číslo označující styl zaokrouhlování.\r\n0 - Aritmetické zaokrouhlování (výchozí) - Pokud je poslední významná číslice v zaokrouhlování 5, číslo se zaokrouhlí nahoru.\r\n1 - Zaokrouhlení bankéře - Když je poslední významná číslice 5, použije se předchozí číslice k určení, zda se má zaokrouhlovat nahoru nebo dolů. Pokud je číslice sudá, číslo se zaokrouhlí dolů. Pokud je to liché, pak se číslo zaokrouhlí nahoru.\r\n    ";
        this["Func_round_Category"] = "Matematika";
        this["Func_round_CategoryURL"] = "Matematika";
        this["Func_round_Desc"] = "Zaokrouhlí číslo na zadaný počet číslic.";
        this["Func_rounddown_Arg_0"] = "Číslo";
        this["Func_rounddown_Arg_1"] = "Číslice";
        this["Func_rounddown_ArgDesc_0"] = "Číslo, které má být zaokrouhleno dolů.";
        this["Func_rounddown_ArgDesc_1"] = "Počet desetinných míst zaokrouhlit. Kladná čísla označují místa za desetinnou čárkou, záporná čísla označují místa před desetinnou čárkou.";
        this["Func_rounddown_Category"] = "Matematika";
        this["Func_rounddown_CategoryURL"] = "Matematika";
        this["Func_rounddown_Desc"] = "Zaokrouhlí číslo dolů na zadaný počet číslic.";
        this["Func_roundup_Arg_0"] = "Číslo";
        this["Func_roundup_Arg_1"] = "Číslice";
        this["Func_roundup_ArgDesc_0"] = "Číslo, které má být zaokrouhleno nahoru.";
        this["Func_roundup_ArgDesc_1"] = "Počet desetinných míst zaokrouhlit. Kladná čísla označují místa za desetinnou čárkou, záporná čísla označují místa před desetinnou čárkou.";
        this["Func_roundup_Category"] = "Matematika";
        this["Func_roundup_CategoryURL"] = "Matematika";
        this["Func_roundup_Desc"] = "Zaokrouhlí číslo až na zadaný počet číslic.";
        this["Func_search_Arg_0"] = "search_text";
        this["Func_search_Arg_1"] = "hodnota";
        this["Func_search_Arg_2"] = "start_index";
        this["Func_search_ArgDesc_0"] = "Text, který má být nalezen v hodnotě.";
        this["Func_search_ArgDesc_1"] = "Text, ve kterém lze vyhledat search_text.";
        this["Func_search_ArgDesc_2"] = "Index založený na 1, ve kterém se má zahájit vyhledávání (pokud je vynechán, start_index je 1).";
        this["Func_search_Category"] = "TextAndData";
        this["Func_search_CategoryURL"] = "TextAndData";
        this["Func_search_Desc"] = "Vrátí index založený na 1 jednoho řetězce v jiném, přičemž bude rozlišovat velká a malá písmena.";
        this["Func_searchb_Arg_0"] = "search_text";
        this["Func_searchb_Arg_1"] = "hodnota";
        this["Func_searchb_Arg_2"] = "start_index";
        this["Func_searchb_ArgDesc_0"] = "Text, který má být nalezen v hodnotě.";
        this["Func_searchb_ArgDesc_1"] = "Text, ve kterém lze vyhledat search_text.";
        this["Func_searchb_ArgDesc_2"] = "Index založený na 1, ve kterém se má zahájit vyhledávání (pokud je vynechán, start_index je 1).";
        this["Func_searchb_Category"] = "TextAndData";
        this["Func_searchb_CategoryURL"] = "TextAndData";
        this["Func_searchb_Desc"] = "Vrátí index založený na 1 jednoho řetězce v jiném, přičemž bude rozlišovat velká a malá písmena.";
        this["Func_second_Arg_0"] = "Time_value";
        this["Func_second_ArgDesc_0"] = "Časová hodnota, od které se má získat druhá.";
        this["Func_second_Category"] = "Datum a čas";
        this["Func_second_CategoryURL"] = "Date_and_Time";
        this["Func_second_Desc"] = "Vrátí sekundu časové hodnoty.";
        this["Func_seriessum_Arg_0"] = "InputValue";
        this["Func_seriessum_Arg_1"] = "InitialPower";
        this["Func_seriessum_Arg_2"] = "Krok";
        this["Func_seriessum_Arg_3"] = "Koeficienty";
        this["Func_seriessum_ArgDesc_0"] = "Vstupní hodnota výkonové řady.";
        this["Func_seriessum_ArgDesc_1"] = "Počáteční výkon, na který bude InputValue zvýšen.";
        this["Func_seriessum_ArgDesc_2"] = "Krok, který se použije ke zvýšení výkonu pro každý výraz v sérii.";
        this["Func_seriessum_ArgDesc_3"] = "Sada koeficientů, kterými se vynásobí každá po sobě jdoucí síla InputValue.";
        this["Func_seriessum_Category"] = "Matematika";
        this["Func_seriessum_CategoryURL"] = "Matematika";
        this["Func_seriessum_Desc"] = "Vrátí součet výkonové řady.";
        this["Func_sign_Arg_0"] = "Číslo";
        this["Func_sign_ArgDesc_0"] = "Číslo, jehož znak bude vrácen.";
        this["Func_sign_Category"] = "Matematika";
        this["Func_sign_CategoryURL"] = "Matematika";
        this["Func_sign_Desc"] = "Vrátí znaménko čísla (-1, 0 nebo 1).";
        this["Func_sin_Arg_0"] = "číslo";
        this["Func_sin_ArgDesc_0"] = "Úhel v radiánech, pro který dostaneme sinus.";
        this["Func_sin_Category"] = "Matematika";
        this["Func_sin_CategoryURL"] = "Matematika";
        this["Func_sin_Desc"] = "Vrátí sinus zadaného úhlu.";
        this["Func_sinh_Arg_0"] = "číslo";
        this["Func_sinh_ArgDesc_0"] = "Skutečné číslo, které získá hyperbolický sinus.";
        this["Func_sinh_Category"] = "Matematika";
        this["Func_sinh_CategoryURL"] = "Matematika";
        this["Func_sinh_Desc"] = "Vrátí hyperbolický sinus čísla.";
        this["Func_sln_Arg_0"] = "náklady";
        this["Func_sln_Arg_1"] = "zachránit";
        this["Func_sln_Arg_2"] = "život";
        this["Func_sln_ArgDesc_0"] = "Počáteční cena aktiva.";
        this["Func_sln_ArgDesc_1"] = "Hodnota na konci odpisu.";
        this["Func_sln_ArgDesc_2"] = "Počet období, během nichž se aktivum odepisuje.";
        this["Func_sln_Category"] = "Finanční";
        this["Func_sln_CategoryURL"] = "Finanční";
        this["Func_sln_Desc"] = "Vrátí lineární odpisy aktiva pro jedno období.";
        this["Func_sqrt_Arg_0"] = "číslo";
        this["Func_sqrt_ArgDesc_0"] = "Číslo, pro které se má druhá odmocnina.";
        this["Func_sqrt_Category"] = "Matematika";
        this["Func_sqrt_CategoryURL"] = "Matematika";
        this["Func_sqrt_Desc"] = "Vrátí druhou odmocninu čísla.";
        this["Func_sqrtpi_Arg_0"] = "Číslo";
        this["Func_sqrtpi_ArgDesc_0"] = "Číslo, které se má vynásobit pi.";
        this["Func_sqrtpi_Category"] = "Matematika";
        this["Func_sqrtpi_CategoryURL"] = "Matematika";
        this["Func_sqrtpi_Desc"] = "Vynásobí zadané číslo pí a vrátí druhou odmocninu výsledku.";
        this["Func_stdev_Arg_0"] = "číslo {0}";
        this["Func_stdev_ArgDesc_0"] = "Počet nebo rozsah čísel určujících vzorek populace.";
        this["Func_stdev_Category"] = "Statistický";
        this["Func_stdev_CategoryURL"] = "Statistický";
        this["Func_stdev_Desc"] = "Vrátí standardní odchylku vzorku populace.";
        this["Func_subtotal_Arg_0"] = "FunctionNum";
        this["Func_subtotal_Arg_1"] = "Ref{0}";
        this["Func_subtotal_ArgDesc_0"] = "Číslo představující funkci, která se má vypočítat. Přidejte 100 k hodnotě, abyste ignorovali skryté hodnoty.\r\n1 (nebo 101) - PRŮMĚR\r\n2 (nebo 102) - POČET\r\n4 (nebo 104) - MAX\r\n5 (nebo 105) - MIN\r\n6 (nebo 106) - PRODUKT\r\n7 (nebo 107) - STDEV\r\n9 (nebo 109) - SUM\r\n10 (nebo 110) - VAR\r\n    ";
        this["Func_subtotal_ArgDesc_1"] = "Jeden nebo více odkazů, pro které lze najít mezisoučet.";
        this["Func_subtotal_Category"] = "Matematika";
        this["Func_subtotal_CategoryURL"] = "Matematika";
        this["Func_subtotal_Desc"] = "Vypočítá mezisoučet v jednom z více odkazů.";
        this["Func_sum_Arg_0"] = "číslo {0}";
        this["Func_sum_ArgDesc_0"] = "Číslo, které se má přidat k ostatním číslům.";
        this["Func_sum_Category"] = "Matematika";
        this["Func_sum_CategoryURL"] = "Matematika";
        this["Func_sum_Desc"] = "Sečte všechna čísla uvedená jako argumenty a vrátí součet.";
        this["Func_syd_Arg_0"] = "náklady";
        this["Func_syd_Arg_1"] = "zachránit";
        this["Func_syd_Arg_2"] = "život";
        this["Func_syd_Arg_3"] = "za";
        this["Func_syd_ArgDesc_0"] = "Počáteční cena aktiva.";
        this["Func_syd_ArgDesc_1"] = "Hodnota na konci odpisu.";
        this["Func_syd_ArgDesc_2"] = "Počet období, během nichž se aktivum odepisuje.";
        this["Func_syd_ArgDesc_3"] = "Období, které musí používat stejné jednotky jako život.";
        this["Func_syd_Category"] = "Finanční";
        this["Func_syd_CategoryURL"] = "Finanční";
        this["Func_syd_Desc"] = "Vrátí roční odpisy aktiva za zadané období.";
        this["Func_tan_Arg_0"] = "číslo";
        this["Func_tan_ArgDesc_0"] = "Úhel v radiánech, pro který dostaneme tečnu.";
        this["Func_tan_Category"] = "Matematika";
        this["Func_tan_CategoryURL"] = "Matematika";
        this["Func_tan_Desc"] = "Vrátí tangens zadaného úhlu.";
        this["Func_tanh_Arg_0"] = "číslo";
        this["Func_tanh_ArgDesc_0"] = "Úhel v radiánech, pro který se získá hyperbolická tečna.";
        this["Func_tanh_Category"] = "Matematika";
        this["Func_tanh_CategoryURL"] = "Matematika";
        this["Func_tanh_Desc"] = "Vrátí hyperbolický tangens zadaného úhlu.";
        this["Func_text_Arg_0"] = "Hodnota";
        this["Func_text_Arg_1"] = "FormatText";
        this["Func_text_ArgDesc_0"] = "Číselná hodnota, která by měla být naformátována.";
        this["Func_text_ArgDesc_1"] = "Formát čísla, kterým se má formátovat hodnota.";
        this["Func_text_Category"] = "TextAndData";
        this["Func_text_CategoryURL"] = "Text_and_Data";
        this["Func_text_Desc"] = "Převede hodnotu na text na základě zadaného formátu.";
        this["Func_time_Arg_0"] = "hodina";
        this["Func_time_Arg_1"] = "minuta";
        this["Func_time_Arg_2"] = "druhý";
        this["Func_time_ArgDesc_0"] = "Číslo představující hodinu času.";
        this["Func_time_ArgDesc_1"] = "Číslo představující minutu času.";
        this["Func_time_ArgDesc_2"] = "Číslo představující sekundu času.";
        this["Func_time_Category"] = "Datum a čas";
        this["Func_time_CategoryURL"] = "Date_and_Time";
        this["Func_time_Desc"] = "Vrátí číslo, které představuje konkrétní časovou hodnotu.";
        this["Func_timevalue_Arg_0"] = "time_text";
        this["Func_timevalue_ArgDesc_0"] = "Textový výraz představující čas.";
        this["Func_timevalue_Category"] = "Datum a čas";
        this["Func_timevalue_CategoryURL"] = "Date_and_Time";
        this["Func_timevalue_Desc"] = "Převede textový výraz představující čas na jeho ekvivalentní časovou hodnotu.";
        this["Func_today_Category"] = "Datum a čas";
        this["Func_today_CategoryURL"] = "Date_and_Time";
        this["Func_today_Desc"] = "Vrátí aktuální datum.";
        this["Func_trim_Arg_0"] = "text";
        this["Func_trim_ArgDesc_0"] = "Text, ze kterého mají být odstraněny mezery navíc.";
        this["Func_trim_Category"] = "TextAndData";
        this["Func_trim_CategoryURL"] = "Text_and_Data";
        this["Func_trim_Desc"] = "Odebere z textu všechny mezery s výjimkou mezer mezi slovy.";
        this["Func_true_Category"] = "Logický";
        this["Func_true_CategoryURL"] = "Logický";
        this["Func_true_Desc"] = "Vrátí logickou hodnotu true.";
        this["Func_trunc_Arg_0"] = "číslo";
        this["Func_trunc_Arg_1"] = "num_digits";
        this["Func_trunc_ArgDesc_0"] = "Číslo, které se má zkrátit.";
        this["Func_trunc_ArgDesc_1"] = "Číslo určující přesnost zkrácení. Výchozí hodnota je nula.";
        this["Func_trunc_Category"] = "Matematika";
        this["Func_trunc_CategoryURL"] = "Matematika";
        this["Func_trunc_Desc"] = "Zkrátí číslo na celé číslo odstraněním zlomkové části čísla.";
        this["Func_type_Arg_0"] = "hodnota";
        this["Func_type_ArgDesc_0"] = "Hodnota, která má získat typ.";
        this["Func_type_Category"] = "Informace";
        this["Func_type_CategoryURL"] = "Informace";
        this["Func_type_Desc"] = "Vrátí číslo představující typ hodnoty: number = 1; text = 2; logická hodnota (true nebo false) = 4; chybová hodnota = 16; pole = 64.";
        this["Func_upper_Arg_0"] = "text";
        this["Func_upper_ArgDesc_0"] = "Text, který se má převést na velká písmena.";
        this["Func_upper_Category"] = "TextAndData";
        this["Func_upper_CategoryURL"] = "Text_and_Data";
        this["Func_upper_Desc"] = "Převede všechna malá písmena v textovém výrazu na velká.";
        this["Func_value_Arg_0"] = "text";
        this["Func_value_ArgDesc_0"] = "Textový výraz, který se má převést.";
        this["Func_value_Category"] = "TextAndData";
        this["Func_value_CategoryURL"] = "Text_and_Data";
        this["Func_value_Desc"] = "Převede textový výraz, který představuje číslo na číslo.";
        this["Func_var_Arg_0"] = "číslo {0}";
        this["Func_var_ArgDesc_0"] = "Počet nebo rozsah čísel určujících vzorek populace.";
        this["Func_var_Category"] = "Statistický";
        this["Func_var_CategoryURL"] = "Statistický";
        this["Func_var_Desc"] = "Vrátí rozptyl vzorku populace.";
        this["Func_weekday_Arg_0"] = "datum";
        this["Func_weekday_Arg_1"] = "ReturnType";
        this["Func_weekday_ArgDesc_0"] = "Datum, kdy se má zjistit číslo dne v týdnu.";
        this["Func_weekday_ArgDesc_1"] = "Určuje, které schéma číslování se použije pro dny v týdnu.\r\n1 (výchozí) = neděle (1) až sobota (7)\r\n2 = pondělí (1) až neděle (7)\r\n3 = pondělí (0) až neděle (6)\r\n    ";
        this["Func_weekday_Category"] = "Datum a čas";
        this["Func_weekday_CategoryURL"] = "Datum a čas";
        this["Func_weekday_Desc"] = "Vrátí číslo představující den v týdnu zadaného data.";
        this["Func_weeknum_Arg_0"] = "datum";
        this["Func_weeknum_Arg_1"] = "návratový typ";
        this["Func_weeknum_ArgDesc_0"] = "Datum, kdy se má najít číslo týdne.";
        this["Func_weeknum_ArgDesc_1"] = "Určuje, který den začíná v týdnu.\r\n1 (výchozí) = neděle je první den v týdnu.\r\n2 = Pondělí je první den v týdnu.\r\n    ";
        this["Func_weeknum_Category"] = "Datum a čas";
        this["Func_weeknum_CategoryURL"] = "Datum a čas";
        this["Func_weeknum_Desc"] = "Vrátí číslo týdne, do kterého spadá zadané datum.";
        this["Func_workday_Arg_0"] = "datum začátku";
        this["Func_workday_Arg_1"] = "dnů";
        this["Func_workday_Arg_2"] = "dovolená";
        this["Func_workday_ArgDesc_0"] = "Datum, od kterého se má začít.";
        this["Func_workday_ArgDesc_1"] = "Počet pracovních dnů, které se mají kompenzovat od data zahájení.";
        this["Func_workday_ArgDesc_2"] = "Rozsah jedné nebo více referencí obsahujících data, která mají být považována za dny pracovního klidu.";
        this["Func_workday_Category"] = "Datum a čas";
        this["Func_workday_CategoryURL"] = "Datum a čas";
        this["Func_workday_Desc"] = "Vrátí pracovní den zadaný počet dní od zadaného data, s výjimkou zadaných svátků.";
        this["Func_year_Arg_0"] = "Date_value";
        this["Func_year_ArgDesc_0"] = "Hodnota data, od které se má získat rok.";
        this["Func_year_Category"] = "Datum a čas";
        this["Func_year_CategoryURL"] = "Date_and_Time";
        this["Func_year_Desc"] = "Vrátí rok hodnoty data.";
        this["Func_yearfrac_Arg_0"] = "StartDate";
        this["Func_yearfrac_Arg_1"] = "EndDate";
        this["Func_yearfrac_Arg_2"] = "Základ";
        this["Func_yearfrac_ArgDesc_0"] = "Počáteční datum je počáteční datum v rozsahu.";
        this["Func_yearfrac_ArgDesc_1"] = "Datum ukončení je datum ukončení v rozsahu.";
        this["Func_yearfrac_ArgDesc_2"] = "\r\n      Základ určuje základ pro počet dní, který se má použít.\r\n0 (výchozí = USA (NASD) 30/360\r\n1 = Skutečné / skutečné\r\n2 = Skutečná / 360\r\n3 = Skutečná / 365\r\n4 = evropská 30/360\r\n    ";
        this["Func_yearfrac_Category"] = "Datum a čas";
        this["Func_yearfrac_CategoryURL"] = "Datum a čas";
        this["Func_yearfrac_Desc"] = "Vrátí zlomek představující část roku určenou mezi zadaným datem zahájení a datem ukončení.";
        this["GenerateTableColumnName"] = "Sloupec";
        this["GenerateTableName"] = "Stůl";
        this["LD_Chart_AxisDisplayUnits"] = "Hundreds:Hundreds, Thousands:Thousands, TenThousands:x 10000, HundredThousands:x 100000, Millions:Millions, TenMillions:x 10000000, HundredMillions:x 100000000, ThousandMillions:Billions, MillionMillions:Trillions";
        this["LD_Fallback_ChartEx_Line1"] = "Tento graf není ve vaší verzi aplikace Excel k dispozici.";
        this["LD_Fallback_ChartEx_Line2"] = "Úpravy tohoto tvaru nebo uložení tohoto sešitu do jiného formátu souboru trvale rozbije graf.";
        this["LE_AllMustHavGuidsIfAnyHasThem"] = "Nelze nastavit GenerateGuidsForGroups na hodnotu false, pokud některá existující skupina má Guid.";
        this["LE_ArgumentException_AnchorCellFromOtherWorksheet"] = "Zadaná buňka neexistuje na stejném listu jako tvar.";
        this["LE_ArgumentException_ArrayFormulaMustHaveSingleRegion"] = "Vzorec pole lze použít pouze na jednu oblast buňky.";
        this["LE_ArgumentException_ArrayTooSmall"] = "Pole není dostatečně velké, aby do něj zkopírovalo všechny hodnoty.";
        this["LE_ArgumentException_CannotAddStandardTableStyle"] = "Standardní styl tabulky nelze přidat do CustomTableStyleCollection.";
        this["LE_ArgumentException_CannotApplyDVRuleToTotalCell"] = "Jedna nebo více buněk v zadané referenci jsou celkovými buňkami v tabulce a nelze na ně použít pravidlo ověření dat.";
        this["LE_ArgumentException_CannotCreateEmptyColorInfo"] = "Prázdnou barvu nelze použít k vytvoření instance WorkbookColorInfo.";
        this["LE_ArgumentException_CellMustBeOnSameWorksheetAsReferencesCollection"] = "Buňka musí být ze stejného listu jako kolekce referencí.";
        this["LE_ArgumentException_CellShiftedOffWorksheet"] = "Buňka byla odstraněna nebo přesunuta z listu a již nepředstavuje pozici listu.";
        this["LE_ArgumentException_CellsInTableFromOtherWorksheet"] = "Zadaná oblast není ze stejného listu jako datová tabulka.";
        this["LE_ArgumentException_CellValueStringLength"] = "Řetězcové hodnoty přiřazené buňce nesmí mít délku větší než {0}.";
        this["LE_ArgumentException_ColumnFormulaAlreadyAppliedToCell"] = "Vzorec je již na buňku aplikován. Naklonujte jej a použijte jej jako vzorec sloupce.";
        this["LE_ArgumentException_ColumnFromDifferentWorksheet"] = "Sloupec nepatří do stejného listu jako tato kolekce.";
        this["LE_ArgumentException_ColumnInputCellFromOtherWorksheet"] = "Zadaná vstupní buňka sloupce neexistuje na stejném listu jako datová tabulka.";
        this["LE_ArgumentException_ColumnNotInTable"] = "Sloupec je z jiné tabulky.";
        this["LE_ArgumentException_ColumnRemovedFromWorksheet"] = "Sloupec byl z listu odebrán.";
        this["LE_ArgumentException_ColumnsToRepeatAtLeftOutsideRange"] = "Rozsah je mimo rozsah dostupných sloupců v listu.";
        this["LE_ArgumentException_CommentTooLong"] = "Délka komentáře musí být menší než 255 znaků.";
        this["LE_ArgumentException_CustomViewNameAlreadyExists"] = "Vlastní zobrazení s názvem \"{0}\" již existuje.";
        this["LE_ArgumentException_DefaultTableStyleNotInWorkbook"] = "Zadaný styl tabulky není v kolekcích CustomTableStyles nebo StandardTableStyles.";
        this["LE_ArgumentException_DisplayTextTooLong"] = "Text hypertextového odkazu musí mít méně než 256 znaků.";
        this["LE_ArgumentException_DuplicateDisplayValue"] = "Zadaná zobrazená hodnota je již v kolekci.";
        this["LE_ArgumentException_DuplicateFixedDateGroup"] = "Zadaná FixedDateGroup je již v kolekci.";
        this["LE_ArgumentException_DuplicateTableStyle"] = "Zadaný styl je již v CustomTableStyleCollection.";
        this["LE_ArgumentException_DuplicateTableStyleName_Existing"] = "Zadaný název, který odpovídá názvu jiného stylu v kolekci.";
        this["LE_ArgumentException_DuplicateTableStyleName_New"] = "Zadaný styl má název, který odpovídá jinému stylu v kolekci.";
        this["LE_ArgumentException_DuplicateWorksheetProtectedRangeTitle"] = "Rozsah s názvem '{0}' již existuje.";
        this["LE_ArgumentException_DV_ArrayFormulaCannotBeUsed"] = "ArrayFormula nelze použít jako {0}.";
        this["LE_ArgumentException_DV_CellFromOtherWorksheet"] = "Buňka nepatří do stejného listu jako kolekce pravidel ověřování dat.";
        this["LE_ArgumentException_DV_ConstraintFormulaMustBeNumberOrReference"] = "{0} musí být nastaveno na číslo, číselný výraz nebo odkaz na jednu buňku.";
        this["LE_ArgumentException_DV_FormulaCannotBeNull"] = "{0} nelze nastavit na hodnotu null, když je pravidlo pro ověření dat aplikováno na list.";
        this["LE_ArgumentException_DV_FormulaCannotFindNamedReference"] = "{0} obsahuje pojmenovaný odkaz, který v sešitu neexistuje.";
        this["LE_ArgumentException_DV_FormulaCannotFindWorksheetReference"] = "{0} obsahuje odkaz na listu, který v sešitu neexistuje.";
        this["LE_ArgumentException_DV_FormulaCannotReferenceOtherWorkbook"] = "{0} nesmí obsahovat odkaz na externí sešit.";
        this["LE_ArgumentException_DV_FormulaInvalidForWorkbookFormat"] = "{0} odkazuje na buňky, které nejsou platné ve formátu sešitu {1}.";
        this["LE_ArgumentException_DV_InvalidAddress"] = "Zadaná adresa není platná adresa buňky nebo oblasti.";
        this["LE_ArgumentException_DV_InvalidExcelDate"] = "Zadané datum nelze v aplikaci Excel zobrazit.";
        this["LE_ArgumentException_DV_InvalidFormula"] = "V pravidle pro ověření dat je použit neplatný vzorec.";
        this["LE_ArgumentException_DV_InvalidMessageLength"] = "{0} nesmí mít více než {1} znaků.";
        this["LE_ArgumentException_DV_ListFormulaCannotHaveEmptyString"] = "Řetězcová konstanta ve ValuesFormula nemůže být prázdný řetězec.";
        this["LE_ArgumentException_DV_ListFormulaMustBeStringOrReference"] = "ValuesFormula musí být nastavena na řetězcovou konstantu nebo odkaz na jednu buňku nebo oblast ve stejném sešitu.";
        this["LE_ArgumentException_DV_ListFormulaReferenceMustBeOneDimensional"] = "ValuesFormula obsahuje odkaz na region, který má více řádků a sloupců. Oblast musí obsahovat jeden řádek nebo jeden sloupec.";
        this["LE_ArgumentException_DV_LowerGreaterThanUpperContraint"] = "Hodnota dolního omezení musí být menší nebo rovna hornímu omezení.";
        this["LE_ArgumentException_DV_MustHaveOneAcceptedValue"] = "Jako přijatelnou hodnotu je třeba zadat alespoň jednu hodnotu.";
        this["LE_ArgumentException_DV_ReferencesAlreadyContainDVs"] = "Zadané odkazy již obsahují jedno nebo více pravidel ověření dat.";
        this["LE_ArgumentException_DV_ReferencesFromOtherWorksheet"] = "Kolekce odkazů nepatří do stejného listu jako kolekce pravidel pro ověřování dat.";
        this["LE_ArgumentException_DV_RegionFromOtherWorksheet"] = "Oblast nepatří do stejného listu jako kolekce pravidel pro ověřování dat.";
        this["LE_ArgumentException_DV_RuleAppliedOnOtherWorksheet"] = "Pravidlo pro ověření dat je již použito na jiný list.";
        this["LE_ArgumentException_DV_UpperLessThanLowerContraint"] = "Hodnota horního omezení musí být větší nebo rovna spodnímu omezení.";
        this["LE_ArgumentException_EditRangeAlreadyOwned"] = "Rozsah je již v listu AllowedEditRanges.";
        this["LE_ArgumentException_EditRangeHasRangeFromOtherWorksheet"] = "Rozsah úprav má rozsah z jiného listu než AllowedEditRanges.";
        this["LE_ArgumentException_EmptyCustomList"] = "V seznamu musí být alespoň jeden řetězec.";
        this["LE_ArgumentException_EndIndexLessThanZero"] = "Konec rozsahu musí být větší nebo roven nule.";
        this["LE_ArgumentException_FileDoesntContainsWorkbookStream"] = "Zadaný datový proud nebo soubor neobsahuje platný sešit.";
        this["LE_ArgumentException_FormulaReferencesInvalidCells"] = "Zadaný vzorec odkazuje na buňky, které nejsou podporovány v aktuálním formátu souboru sešitu.";
        this["LE_ArgumentException_HashSetFull"] = "V sadě hash je příliš mnoho položek.";
        this["LE_ArgumentException_HyperlinkAlreadyOwned"] = "Hypertextový odkaz již patří do kolekce hypertextových odkazů.";
        this["LE_ArgumentException_HyperlinkSourceFromOtherWorksheet"] = "Hypertextový odkaz má zdrojovou buňku nebo oblast z jiného listu.";
        this["LE_ArgumentException_HyperlinkTargetFromOtherWorkbook"] = "Cíl pochází z jiného sešitu než vlastník hypertextového odkazu.";
        this["LE_ArgumentException_InfiniteColumnWidth"] = "Šířka sloupce nesmí být nekonečno.";
        this["LE_ArgumentException_Interval"] = "Parametr intervalu by měl být jednou z hodnot ve výčtu DateInterval";
        this["LE_ArgumentException_IntervalStr"] = "Parametr intervalu nelze převést na jednu z hodnot ve výčtu DateInterval";
        this["LE_ArgumentException_InvalidCellAddress"] = "Zadaná adresa není platná adresa buňky.";
        this["LE_ArgumentException_InvalidCommentPositioningMode"] = "Na tvar komentáře lze použít pouze DontMoveOrSizeWithCells a MoveAndSizeWithCells ShapePositioningModes.";
        this["LE_ArgumentException_InvalidCustomFilterOperandNumber"] = "Hodnota nesmí být nekonečno nebo NaN.";
        this["LE_ArgumentException_InvalidCustomFilterOperator"] = "Pokud porovnávací hodnota není řetězec, operátor porovnání nemůže být BeginsWith, DoesNotBeginWith, Contains, DoesNotContain, EndsWith nebo DoesNotEndWith.";
        this["LE_ArgumentException_InvalidDatePeriodFilterValue"] = "Hodnota není v rozsahu. U typu filtru Měsíc musí být 1-12. U typu filtru Čtvrtletí to musí být 1-4.";
        this["LE_ArgumentException_InvalidDpi"] = "Zadaná hodnota Dpi je neplatná.";
        this["LE_ArgumentException_InvalidExcelDate"] = "Hodnotu nelze v aplikaci Excel vyjádřit jako datum.";
        this["LE_ArgumentException_InvalidFileFormat"] = "Neplatný nebo nerozpoznaný formát souboru.";
        this["LE_ArgumentException_InvalidFormula"] = "Zadaný vzorec byl neplatný.";
        this["LE_ArgumentException_InvalidGradientStopColor"] = "Automatické a systémové barvy nelze použít při zastavení přechodu.";
        this["LE_ArgumentException_InvalidNamedReferenceName"] = "Název není platný pojmenovaný referenční název.";
        this["LE_ArgumentException_InvalidPaletteColor_EmptyOrSystem"] = "Na paletu nelze přidat prázdné nebo systémové barvy.";
        this["LE_ArgumentException_InvalidPaletteColor_NonOpaque"] = "Na paletu lze přidat pouze neprůhledné barvy.";
        this["LE_ArgumentException_InvalidReferencesString"] = "Hodnota odkazů není správně naformátována.";
        this["LE_ArgumentException_InvalidRegionAddress"] = "Zadaná adresa není platná adresa regionu.";
        this["LE_ArgumentException_InvalidRowOrColumnRange"] = "Neplatný rozsah řádků nebo sloupců.";
        this["LE_ArgumentException_InvalidSeriesValues"] = "Neplatné hodnoty řady. Musí existovat alespoň jedna hodnota a každá hodnota musí být buď řetězec, nebo objekt, který lze převést na dvojitou hodnotu.";
        this["LE_ArgumentException_InvalidTarget"] = "Cíl hypertextového odkazu musí být řetězec, WorksheetCell, WorksheetRegion nebo NamedReference.";
        this["LE_ArgumentException_InvalidTopOrBottomFilterValue"] = "Hodnota musí být mezi 1 a 500.";
        this["LE_ArgumentException_InvalidWorksheetName"] = "Název listu nesmí obsahovat žádné z následujících znaků: : \\ /? * []";
        this["LE_ArgumentException_InvalidWorksheetNameStartingQuote"] = "Název listu nemůže začínat ani končit jedinou citací.";
        this["LE_ArgumentException_LessThanTwoGradientStops"] = "Musí být zadány alespoň dvě zastávky s přechodem.";
        this["LE_ArgumentException_NamedReferenceNameTooLong"] = "Název pojmenovaného odkazu nesmí být delší než 255 znaků.";
        this["LE_ArgumentException_NaNDefaultColumnWidth"] = "NaN nelze použít jako výchozí šířku sloupce.";
        this["LE_ArgumentException_NewRegionOverlapsFilterArea"] = "Oerace se pokouší změnit filtrovaný rozsah v listu a nelze ji dokončit. K dokončení této operace je třeba odstranit automatické filtry v listu.";
        this["LE_ArgumentException_NewTableRegionCannotMoveHeaders"] = "Nová oblast tabulky nemůže přesunout záhlaví do nového řádku.";
        this["LE_ArgumentException_NewTableRegionFromWrongWorksheet"] = "Zadaná oblast není ze stejného listu jako tabulka.";
        this["LE_ArgumentException_NewTableRegionMustHaveDataRows"] = "Nová oblast tabulky musí obsahovat alespoň jeden datový řádek.";
        this["LE_ArgumentException_NewTableRegionOverlapOld"] = "Nová oblast tabulky se musí překrývat s oblastí předchozí tabulky.";
        this["LE_ArgumentException_NewTableRegionOverlapsBlockingValue"] = "Velikost tabulky nelze změnit na zadanou oblast, protože obsahuje vzorec pole více buněk nebo tabulku dat.";
        this["LE_ArgumentException_NewTableRegionOverlapsMergedRegion"] = "Velikost tabulky nelze změnit na zadanou oblast, protože obsahuje sloučenou buňku.";
        this["LE_ArgumentException_NewTableRegionOverlapsOtherTable"] = "Velikost tabulky nelze změnit na zadanou oblast, protože obsahuje jinou tabulku.";
        this["LE_ArgumentException_NoRegionsInArray"] = "Zadané pole nemá žádné oblasti.";
        this["LE_ArgumentException_NotEnum"] = "Typ '{0}' není výčet";
        this["LE_ArgumentException_NotSupportedCodePage"] = "Nepodporovaná kódová stránka";
        this["LE_ArgumentException_NPer"] = "nPer nemohl být 0";
        this["LE_ArgumentException_NPerFunction"] = "Chybná kombinace parametrů pro funkci NPer";
        this["LE_ArgumentException_PA_PrintAreasCannotOverlap"] = "Zadaná oblast tisku se překrývá s jednou z existujících oblastí tisku.";
        this["LE_ArgumentException_ParentStyleFromOtherWorkbook"] = "Zadaný styl není ze stejného sešitu jako formát buňky.";
        this["LE_ArgumentException_PB_CantInsertBreakAtIndex"] = "Tato kolekce nepodporuje vkládání položek do indexu.";
        this["LE_ArgumentException_PB_CantSetBreakAtIndex"] = "Tato kolekce nepodporuje nastavení položek v indexu.";
        this["LE_ArgumentException_PB_MustBeWithinPrintArea"] = "Konec stránky musí být v oblasti tisku.";
        this["LE_ArgumentException_PB_PageBreakCantBeA1Cell"] = "Nelze vložit konec stránky v levé horní části listu.";
        this["LE_ArgumentException_PB_PageBreakCantBeBeforeLeftColumn"] = "Nelze vložit konec stránky v levé části listu.";
        this["LE_ArgumentException_PB_PageBreakCantBeBeforeTopRow"] = "Nelze vložit konec stránky v horní části listu.";
        this["LE_ArgumentException_PB_PageBreaksCannotAddExistingInstance"] = "Zadaná instance již v kolekci existuje.";
        this["LE_ArgumentException_PB_PageBreaksCannotOverlap"] = "Konec stránky se nemůže překrývat s jinými konci stránky v listu.";
        this["LE_ArgumentException_PB_PrintAreaMustBeInPrintAreas"] = "Konec stránky je v oblasti tisku, která není v kolekci PrintAreas.";
        this["LE_ArgumentException_PB_PrintAreaMustBeOnSameWorksheet"] = "Konce stránky jsou v oblasti tisku, která není na stejném listu jako kolekce konců stránek.";
        this["LE_ArgumentException_Pmt"] = "Pmt nemohla být 0";
        this["LE_ArgumentException_PrintAreaShiftedOffWorksheet"] = "Konec stránky je v oblasti tisku, která byla přesunuta z listu a již nepředstavuje platný rozsah buněk.";
        this["LE_ArgumentException_RangeFromOtherWorksheetThanProtectedRange"] = "Zadaný rozsah pochází z jiného listu než rozsah úprav.";
        this["LE_ArgumentException_RegionMustBeOnSameWorksheet"] = "Oblast musí být ze stejného listu.";
        this["LE_ArgumentException_RegionMustBeOnSameWorksheetAsReferencesCollection"] = "Oblast musí být ze stejného listu jako kolekce referencí.";
        this["LE_ArgumentException_RegionsFromMixedWorksheets"] = "Všechny oblasti uvedené v poli musí být ze stejného listu.";
        this["LE_ArgumentException_RegionShiftedOffWorksheet"] = "Oblast byla přesunuta z listu a již nepředstavuje platný rozsah buněk.";
        this["LE_ArgumentException_RegionsShiftedOffWorksheet"] = "Jedna nebo více specifikovaných oblastí byla přesunuta z listu a již nepředstavují platný rozsah buněk.";
        this["LE_ArgumentException_RowFromDifferentWorksheet"] = "Řádek nepatří do stejného listu jako tato kolekce.";
        this["LE_ArgumentException_RowInputCellFromOtherWorksheet"] = "Zadaná vstupní buňka řádku neexistuje na stejném listu jako datová tabulka.";
        this["LE_ArgumentException_RowRemovedFromWorksheet"] = "Řádek byl z listu odebrán.";
        this["LE_ArgumentException_SelectedWorksheetFromOtherWorkbook"] = "List nepatří do sešitu spojeného s těmito možnostmi okna.";
        this["LE_ArgumentException_ShapeCannotBeAdded"] = "Zadaný tvar nelze přidat do kolekce obrazců.";
        this["LE_ArgumentException_SourceFromOtherWorksheetThanHyperlink"] = "Zadaná zdrojová buňka nebo oblast pochází z jiného listu než hypertextový odkaz.";
        this["LE_ArgumentException_StartIndexLessThanZero"] = "Začátek rozsahu musí být větší nebo roven nule.";
        this["LE_ArgumentException_StyleNameAlreadyExists"] = "Styl se jménem \"{0}\" již v sešitu existuje.";
        this["LE_ArgumentException_StyleNameTooLong"] = "Název stylu nesmí mít více než 255 znaků.";
        this["LE_ArgumentException_TableColumnRemovedFromTable"] = "Sloupec tabulky byl z tabulky odstraněn.";
        this["LE_ArgumentException_TableStyleFromOtherWorkbook"] = "Zadaný WorksheetTableStyle nepatří do stejného sešitu jako tabulka.";
        this["LE_ArgumentException_TargetTooLong"] = "Cílová adresa hypertextového odkazu musí mít méně než 256 znaků.";
        this["LE_ArgumentException_TextLengthGreaterThanMax"] = "Délka textu ve tvaru nebo komentáři nesmí být větší než {0}.";
        this["LE_ArgumentException_ToolTipTooLong"] = "Tip nástroje pro hypertextový odkaz musí mít méně než 256 znaků.";
        this["LE_ArgumentException_TopLeftWindowBounds"] = "Levý a horní okraj okna musí být mezi -32768 a 32767.";
        this["LE_ArgumentException_WeekdayFirst"] = "Parametr WeekdayFirst by měl být mezi FirstDayOfWeek.System a FirstDayOfWeek.Saturday";
        this["LE_ArgumentException_WidthHeightWindowBounds"] = "Šířka a výška ohraničení okna musí být mezi 0 a 65535.";
        this["LE_ArgumentException_WorksheetNameAlreadyExists"] = "List s názvem \"{0}\" již v sešitu existuje.";
        this["LE_ArgumentException_WorksheetNameTooLong"] = "Název listu musí mít délku od 1 do 31 znaků.";
        this["LE_ArgumentException_WorksheetProtectedRangeTitleTooLong"] = "Název rozsahu úprav nesmí být delší než 255 znaků.";
        this["LE_ArgumentException_WorksheetScopeFromOtherWorkbook"] = "List nepatří do stejného sešitu jako tato kolekce.";
        this["LE_ArgumentNullException_AnchorCell"] = "Buňka nemůže mít hodnotu null, pokud tvar existuje v listu nebo skupině.";
        this["LE_ArgumentNullException_CustomViewName"] = "Název vlastního zobrazení nesmí být prázdný nebo prázdný.";
        this["LE_ArgumentNullException_Encoder"] = "Kodér obrázků nemůže mít hodnotu null.";
        this["LE_ArgumentNullException_FindNamedReference"] = "Název, který má být nalezen, nesmí být prázdný nebo prázdný.";
        this["LE_ArgumentNullException_FormulaCantBeNull"] = "Vzorec pro pojmenovaný odkaz nesmí být null nebo prázdný.";
        this["LE_ArgumentNullException_HiddenColumn"] = "Null sloupec nelze přidat do kolekce.";
        this["LE_ArgumentNullException_HiddenRow"] = "Do kolekce nelze přidat nulový řádek.";
        this["LE_ArgumentNullException_Image"] = "Obrázek nemůže mít hodnotu null.";
        this["LE_ArgumentNullException_NamedReferenceNameCantBeNull"] = "Název pojmenovaného odkazu nesmí být null nebo prázdný.";
        this["LE_ArgumentNullException_SaveStream"] = "Sešit nelze uložit do nulového proudu.";
        this["LE_ArgumentNullException_SelectedWorksheet"] = "V sešitu musí být platný vybraný list.";
        this["LE_ArgumentNullException_Shape"] = "Do kolekce nelze přidat nulový tvar.";
        this["LE_ArgumentNullException_SourceFont"] = "Zdrojové písmo nemůže mít hodnotu null.";
        this["LE_ArgumentNullException_SourceFormatting"] = "Zdrojové formátování nemůže mít hodnotu null.";
        this["LE_ArgumentNullException_StyleName"] = "Název stylu nesmí být prázdný nebo prázdný.";
        this["LE_ArgumentNullException_UnformattedString"] = "Neformátovaný řetězec nemůže mít hodnotu null.";
        this["LE_ArgumentNullException_Workbook"] = "Sešit nemůže mít hodnotu null.";
        this["LE_ArgumentNullException_WorkbookRequiredToResolveThemeColor"] = "Aby bylo možné vyřešit tematickou barvu, je třeba zadat sešit.";
        this["LE_ArgumentNullException_WorksheetName"] = "Název listu nesmí být prázdný nebo prázdný.";
        this["LE_ArgumentNullException_WorksheetProtectedRangeTitleCantBeNull"] = "Název rozsahu úprav nesmí být prázdný nebo prázdný.";
        this["LE_ArgumentNullException_WorksheetScope"] = "Rozsah listu nemůže mít hodnotu null.";
        this["LE_ArgumentOutOfRange_RelativeColumnIndex"] = "Relativní index sloupce je mimo zadanou oblast.";
        this["LE_ArgumentOutOfRange_RelativeRowIndex"] = "Relativní index řádku je mimo zadanou oblast.";
        this["LE_ArgumentOutOfRangeException_AnchorPosition"] = "Jedno z procent v uvedeném umístění je menší než 0.";
        this["LE_ArgumentOutOfRangeException_BadInsertIndex"] = "Zadaný index musí být větší nebo roven nule a menší nebo roven počtu existujících odstavců.";
        this["LE_ArgumentOutOfRangeException_BadRemoveAtIndex"] = "Index musí být větší než nula a menší než počet odstavců ve formátovaném řetězci.";
        this["LE_ArgumentOutOfRangeException_CollectionIndex"] = "Index byl mimo rozsah. Musí být nezáporné a menší než velikost kolekce.";
        this["LE_ArgumentOutOfRangeException_ColumnWidth"] = "Šířka sloupce musí být mezi 0 a 65535.";
        this["LE_ArgumentOutOfRangeException_DefaultColumnWidth"] = "Výchozí šířka sloupce musí být mezi 0 a 65535.";
        this["LE_ArgumentOutOfRangeException_DefaultFontHeight"] = "Výchozí výška písma musí být mezi 20 a 8180.";
        this["LE_ArgumentOutOfRangeException_DefaultRowHeight"] = "Výchozí výška řádku musí být mezi -1 a 8192.";
        this["LE_ArgumentOutOfRangeException_DuplicateItemSorted"] = "U zadané položky již byla použita podmínka řazení.";
        this["LE_ArgumentOutOfRangeException_FirstVisibleTabIndex"] = "První viditelný index záložky musí být větší nebo roven nule.";
        this["LE_ArgumentOutOfRangeException_FontHeight"] = "Výška písma musí být mezi 20 a 8180.";
        this["LE_ArgumentOutOfRangeException_GroupAddedToSelf"] = "Skupinu nelze přidat do vlastní sbírky tvarů.";
        this["LE_ArgumentOutOfRangeException_Indent"] = "Úroveň odsazení musí být mezi 0 a 250.";
        this["LE_ArgumentOutOfRangeException_IndexNegative"] = "Index musí být nezáporný.";
        this["LE_ArgumentOutOfRangeException_InvalidCollectionIndex"] = "Zadaný index není v kolekci platný.";
        this["LE_ArgumentOutOfRangeException_InvalidColorInfoTint"] = "Hodnota odstínu musí být mezi -1,0 a 1,0.";
        this["LE_ArgumentOutOfRangeException_InvalidColumnCount"] = "{0} není platný počet sloupců v aktuálním formátu. Hodnota musí být mezi {1} a {2}.";
        this["LE_ArgumentOutOfRangeException_InvalidColumnIndex"] = "{0} není platný index sloupce v aktuálním formátu. Hodnota musí být mezi {1} a {2}.";
        this["LE_ArgumentOutOfRangeException_InvalidGradientStopOffset"] = "Posun zastavení přechodu musí být mezi 0,0 a 1,0.";
        this["LE_ArgumentOutOfRangeException_InvalidRelativeRectangleValueForGradient"] = "Hodnoty pro vnitřní obdélník obdélníkového přechodu musí být mezi 0,0 a 1,0.";
        this["LE_ArgumentOutOfRangeException_InvalidRemoveAtIndex_SortConditions"] = "Index, při kterém se má odebrat podmínka řazení, je mimo rozsah.";
        this["LE_ArgumentOutOfRangeException_InvalidRowCount"] = "{0} není platný počet řádků v aktuálním formátu. Hodnota musí být mezi {1} a {2}.";
        this["LE_ArgumentOutOfRangeException_InvalidRowIndex"] = "{0} není platný index řádků v aktuálním formátu. Hodnota musí být mezi {1} a {2}.";
        this["LE_ArgumentOutOfRangeException_InvalidTableStyleAreaStripeExtent"] = "Hodnota {0} musí být mezi 1 a 9 včetně.";
        this["LE_ArgumentOutOfRangeException_LeftPaneWidth"] = "Zadaná šířka panelu je mimo platný rozsah {0} a {1}.";
        this["LE_ArgumentOutOfRangeException_LengthMustBePositive"] = "Délka musí být větší nebo rovna jedné.";
        this["LE_ArgumentOutOfRangeException_MagnificationLevel"] = "Úrovně zvětšení zobrazení musí být mezi 10 a 400.";
        this["LE_ArgumentOutOfRangeException_Margins"] = "Okraje musí být mezi 0 a 100.";
        this["LE_ArgumentOutOfRangeException_MaxPagesHorizontally"] = "Maximální počet stránek vodorovně musí být mezi 0 a 32767.";
        this["LE_ArgumentOutOfRangeException_MaxPagesVertically"] = "Maximální počet stránek ve svislém směru musí být mezi 0 a 32767.";
        this["LE_ArgumentOutOfRangeException_MaxRecursionIterations"] = "Maximální iterace rekurze musí být mezi 1 a 32767.";
        this["LE_ArgumentOutOfRangeException_MaxSortConditions"] = "V kolekci nemůže být více než {0} podmínek řazení.";
        this["LE_ArgumentOutOfRangeException_NegativeStartIndex"] = "Počáteční index nemůže být záporný.";
        this["LE_ArgumentOutOfRangeException_NumberOfCopies"] = "Počet kopií musí být mezi 1 a 65535.";
        this["LE_ArgumentOutOfRangeException_Per"] = "na hodnotu by mělo být mezi 0 a nPer + 1";
        this["LE_ArgumentOutOfRangeException_Rate"] = "Míra by měla být větší než -1";
        this["LE_ArgumentOutOfRangeException_Resolution"] = "Rozlišení musí být mezi 0 a 65535.";
        this["LE_ArgumentOutOfRangeException_RowHeight"] = "Výška řádku musí být mezi 0 a 8192.";
        this["LE_ArgumentOutOfRangeException_ScalingFactor"] = "Faktor měřítka musí být mezi 10 a 400.";
        this["LE_ArgumentOutOfRangeException_StartPageNumber"] = "Počáteční číslo stránky musí být mezi -32765 a 32767.";
        this["LE_ArgumentOutOfRangeException_TabBarWidth"] = "Šířka pruhu karet musí být mezi 0 a 1000.";
        this["LE_ArgumentOutOfRangeException_TopPaneHeight"] = "Zadaná výška panelu je mimo platný rozsah {0} a {1}.";
        this["LE_AutoColorNotAllowed"] = "Barva nemůže být \"Auto\".";
        this["LE_Axis_MajorMinorUnit"] = "Hodnota parametru majorUnit musí být větší než hodnota parametru minorUnit.";
        this["LE_Axis_NoCrossAxis"] = "Pokud je vlastnost CrossAxis nastavena na jeden objekt Axis, musí být nastavena na všechny z nich. Pokud má váš graf pouze dvě osy, lze osu křížení určit automaticky, ale pouze v případě, že vlastnost CrossAxis zůstane nenastavená na všech objektech Axis.";
        this["LE_Biff8SerializerNotLoaded"] = "Formát '{0}' vyžaduje serializátor, který se nenačte, v JavaScriptu je tento obsažen v souboru infragistics.excel_serialization_biff8.js";
        this["LE_CategoryAxisBinning_BinWidthAndNumberOfBins"] = "Parametry 'binWidth' a 'numberOfBins' se vzájemně vylučují. Oba mohou být nespecifikovány, ale pokud je zadán jeden, druhý nesmí být.";
        this["LE_ChartGradientFill_EmptyStops"] = "Musí obsahovat alespoň jednu zarážku přechodu.";
        this["LE_ChartObject_DifferentChart"] = "Přiřazená instance objektu je přidružena k jinému grafu a nelze ji přiřadit k této instanci.";
        this["LE_ColumnsToRepeatAtLeftAreOutsideAvailableRange"] = "Možnosti tisku mají sloupce, které se opakují vlevo, které jsou mimo rozsah dostupných sloupců v novém formátu.";
        this["LE_ComboChartGroupCollection_DoesNotExist"] = "Zadaná ComboChartGroup v této kolekci neexistuje.";
        this["LE_FillPercentInvalid"] = "Hodnota {0} není platná hodnota pro vlastnost {1}.";
        this["LE_FormatLimitError_Indent"] = "Odsazení přesahuje maximální hodnotu {0} poskytovanou aktuálním formátem.";
        this["LE_FormatLimitError_MacroWorkbook"] = "Sešit má kód VBA a nelze jej uložit jako sešit s povolenými makry.";
        this["LE_FormatLimitError_MaxColumnIndex"] = "Index sloupce {0} je větší než maximum {1} podporované zadaným formátem.";
        this["LE_FormatLimitError_MaxRowIndex"] = "Index řádků {0} překračuje maximum {1} podporované tímto formátem.";
        this["LE_FormulaParseException_ArrayContainsConstants"] = "Pole může obsahovat pouze konstantní výrazy.";
        this["LE_FormulaParseException_ArrayHasEmptyFirstRow"] = "Konstantní pole ve vzorci nemá v prvním řádku žádné položky.";
        this["LE_FormulaParseException_ArrayHasMisalignedRows"] = "Konstantní pole ve vzorci má nesprávně zarovnané řádky. Každý řádek v poli musí mít stejný počet sloupců.";
        this["LE_FormulaParseException_CellReferenceAfterWorkbookName"] = "Za odkazem na externí sešit musí následovat pojmenovaný odkaz, nikoli odkaz na buňku.";
        this["LE_FormulaParseException_ExtraExpressions"] = "Vzorec má po jeho skončení další výrazy.";
        this["LE_FormulaParseException_FunctionMissingClosingParen"] = "Funkce ve vzorci nemá žádnou uzavírací závorku.";
        this["LE_FormulaParseException_FunctionNestingTooDeep"] = "Funkce ve vzorci je vnořena příliš hluboko do ostatních funkcí.";
        this["LE_FormulaParseException_IncorrectNumberOfArguments"] = "Funkci ve vzorci nebyl dán správný počet argumentů.";
        this["LE_FormulaParseException_InvalidArguments"] = "Operátor nebo funkce ve vzorci obsahuje neplatné argumenty.";
        this["LE_FormulaParseException_InvalidConditionalFormatFormula"] = "Vzorec podmíněného formátu nemůže používat operátory odkazů, jako jsou odbory nebo průniky, konstanty pole nebo odkazy na strukturovanou tabulku.";
        this["LE_FormulaParseException_InvalidErrorValue"] = "Zadaný typ chyby není platný. Musí to být jedna z následujících hodnot: \"#NULL!\", \"#DIV/0!\", \"#VALUE!\", \"#REF!\", \"#NAME?\", \"#NUM!\" Nebo \"#N/A\";.";
        this["LE_FormulaParseException_InvalidFileNameInBrackets"] = "Název souboru v hranatých závorkách byl neplatný.";
        this["LE_FormulaParseException_InvalidStructuredTableReference"] = "Odkaz na strukturovanou tabulku je nesprávný.";
        this["LE_FormulaParseException_InvalidWorkbookName"] = "Odkaz na sešit v uvozovkách není platný název souboru sešitu.";
        this["LE_FormulaParseException_InvalidWorksheetName"] = "Název listu je neplatný.";
        this["LE_FormulaParseException_MacroFunctionNotAllowed"] = "Funkce '{0}' jsou platné pouze v pojmenovaném odkazu.";
        this["LE_FormulaParseException_Message_PortionWithError"] = "Část s chybou: {0}";
        this["LE_FormulaParseException_MissingArgumentAfterBinary"] = "Binárnímu operátoru ve vzorci chybí operand za ním.";
        this["LE_FormulaParseException_MissingArgumentAfterParen"] = "Za otevřenou závorkou není žádný výraz.";
        this["LE_FormulaParseException_MissingArgumentAfterUnary"] = "Za unárním operátorem ve vzorci nebyl následován platný výraz.";
        this["LE_FormulaParseException_MissingArgumentBeforeBinary"] = "Binárnímu operátoru ve vzorci chybí před ním operand.";
        this["LE_FormulaParseException_NamedReferenceRefsNeedSheetName"] = "Všechny odkazy na buňky v pojmenovaném referenčním vzorci musí identifikovat list.";
        this["LE_FormulaParseException_NoElementAfterArraySerapator"] = "Za oddělovačem prvků ve vzorci není žádný prvek pole.";
        this["LE_FormulaParseException_NoEqualsSign"] = "Vzorec musí začínat znaménkem rovnosti.";
        this["LE_FormulaParseException_NoExclamationAfterWorkbookName"] = "Za odkazem na sešit musí následovat vykřičník.";
        this["LE_FormulaParseException_NoExclamationAfterWorksheetName"] = "Za odkazem na list musí následovat vykřičník.";
        this["LE_FormulaParseException_NoExpressions"] = "Vzorec nemá žádné platné výrazy za znaménkem rovná se.";
        this["LE_FormulaParseException_NoFileNameAfterBracket"] = "Po otevřené hranaté závorce se očekával platný název souboru.";
        this["LE_FormulaParseException_NoValidTermAfterWorkbookName"] = "Za odkazem na externí sešit musí následovat pojmenovaný odkaz.";
        this["LE_FormulaParseException_NoValidTermAfterWorksheetName"] = "Za odkazem na list musí následovat buňka nebo pojmenovaný odkaz.";
        this["LE_FormulaParseException_NoWorksheetAfterWorkbookName"] = "Za názvem souboru sešitu v hranatých závorkách musí následovat název listu.";
        this["LE_FormulaParseException_StringConstantLengthTooLong"] = "Zadaný vzorec nesmí obsahovat řetězec delší než {0} znaků.";
        this["LE_FormulaParseException_TooLong"] = "Maximální délka vzorce nemůže pro zadaný formát sešitu překročit {0}.";
        this["LE_FormulaParseException_UnknownFunction"] = "Funkce ve vzorci nemá platný název funkce.";
        this["LE_FormulaParseException_UnmatchedOpenBracket"] = "Konstantní pole ve vzorci nemá koncovou závorku.";
        this["LE_FormulaParseException_UnmatchedOpenParen"] = "Otevřená závorka ve vzorci nemá odpovídající uzavírací závorku.";
        this["LE_FormulaParseException_UnmatchedOpenSquareBracket"] = "Za názvem souboru sešitu se očekávala závěrečná hranatá závorka.";
        this["LE_FormulaParseException_WorkbookNameMissingEndQuote"] = "Odkaz na sešit nemá žádnou koncovou nabídku.";
        this["LE_FormulaParseException_WorksheetRangeMissingEndingName"] = "Rozsah listu neurčuje druhý název listu.";
        this["LE_GradientStop_InvalidPosition"] = "Musíte zadat číslo mezi 0 a 1.";
        this["LE_IconSetInvalid"] = "IconSetNoIcon' není platné nastavení pro vlastnost IconSet.";
        this["LE_IndexOutOfRangeException_ArrayBounds"] = "Index je mimo hranice pole.";
        this["LE_InvalidEnumArgumentException_DefaultPatternCannotBeUsed"] = "Výchozí FillPatternStyle nelze použít k vytvoření CellFillPattern.";
        this["LE_InvalidLineWeight"] = "LineWeight nesmí být menší než 0 nebo větší než 1584.";
        this["LE_InvalidOperationException_AnchorCommentBeforeApplyingToCell"] = "Komentář musí mít jak sadu TopLeftCornerCell, tak BottomRightCornerCell, nebo musí mít obě hodnotu null, než se použije na buňku.";
        this["LE_InvalidOperationException_AnchorShapeBeforeAddingToCollection"] = "Před přidáním do listu nebo skupiny musí mít obrazec nastaven TopLeftCornerCell i BottomRightCornerCell.";
        this["LE_InvalidOperationException_ArrayFormulaAlreadyApplied"] = "Vzorec pole je již aplikován na rozsah buněk. Nejprve vymažte existující rozsah buněk.";
        this["LE_InvalidOperationException_ArrayFormulaAppliedInTable"] = "Pole vzorce nelze použít na oblast, kde je tabulka.";
        this["LE_InvalidOperationException_ArrayFormulaInMergedCell"] = "Vzorce polí nejsou ve sloučených buňkách platné.";
        this["LE_InvalidOperationException_BottomRightAnchorFromOtherWorksheet"] = "Přidáním tvaru do této kolekce jej umístíte na jiný list než jeho BottomRightCornerCell.";
        this["LE_InvalidOperationException_BuiltInStyleNameCannotBeChanged"] = "Název vestavěného stylu nelze změnit.";
        this["LE_InvalidOperationException_CannotAddColorsToPaletteDirectly"] = "Na WorkbookColorPalette nelze přidat barvy. Pomocí indexeru nastavte barvu na určitý index.";
        this["LE_InvalidOperationException_CannotAddParagraphDirectly"] = "Odstavce nelze přidat přímo.";
        this["LE_InvalidOperationException_CannotAddTableDirectly"] = "Instance WorksheetTable nelze přímo vložit do kolekce. Použijte metodu Add.";
        this["LE_InvalidOperationException_CannotAddTableToRemovedWorksheet"] = "Tabulky nelze přidat do listu, který byl odebrán z jeho vlastního sešitu.";
        this["LE_InvalidOperationException_CannotApplyFilterWhileHeaderRowIsHidden"] = "Filtr nelze použít, když je skrytý řádek záhlaví tabulky.";
        this["LE_InvalidOperationException_CannotApplyFilterWhileUIIsHidden"] = "Filtr nelze použít, když je uživatelské rozhraní filtru skryté.";
        this["LE_InvalidOperationException_CannotInsertTableRow_LossOfData"] = "{0} nelze vložit, protože by to posunulo data ze spodní části listu.";
        this["LE_InvalidOperationException_CannotInsertTableRow_LossOfObject"] = "{0} nelze vložit, protože by posunulo tvar nebo komentář ze spodní části listu.";
        this["LE_InvalidOperationException_CannotInsertTableRow_SplitBlockingValue"] = "{0} nelze vložit, protože by posunul buňky ve vzorci pole nebo v datové tabulce.";
        this["LE_InvalidOperationException_CannotInsertTableRow_SplitMergedRegion"] = "Nelze vložit znak {0}, protože by posunul buňky ve sloučené oblasti.";
        this["LE_InvalidOperationException_CannotInsertTableRow_SplitTable"] = "{0} nelze vložit, protože by posunul buňky v jiné tabulce.";
        this["LE_InvalidOperationException_CannotInsertTableRow_TableOnBottomOfWorksheet"] = "{0} nelze vložit, protože tabulka je ve spodní části listu.";
        this["LE_InvalidOperationException_CannotModifyKeysCollection"] = "Kolekci klíčů nelze upravit.";
        this["LE_InvalidOperationException_CannotModifyStandardTableStyle"] = "Standardní styly tabulek nelze upravit.";
        this["LE_InvalidOperationException_CannotModifyValuesCollection"] = "Kolekci hodnot nelze upravit.";
        this["LE_InvalidOperationException_CannotMoveDisconnectedWorksheet"] = "List nelze přesunout, protože nepatří do sešitu.";
        this["LE_InvalidOperationException_CannotRemoveColorsToPaletteDirectly"] = "Barvy nelze z WorkbookColorPalette odebrat. K vymazání všech vlastních barev použijte metodu Reset.";
        this["LE_InvalidOperationException_CannotRemoveNormalStyle"] = "Normální styl nelze odstranit.";
        this["LE_InvalidOperationException_CannotSetParentStyleOnStyle"] = "Styl nelze nastavit na formát, který patří jinému stylu.";
        this["LE_InvalidOperationException_CannotShift_LossOfData"] = "Nelze přesunout data z listu.";
        this["LE_InvalidOperationException_CannotShift_LossOfObject"] = "Nelze přesunout objekty z listu.";
        this["LE_InvalidOperationException_CannotShift_SplitBlockingValue"] = "Nelze posunout vzorec pole nebo tabulku dat.";
        this["LE_InvalidOperationException_CannotShift_SplitMergedRegion"] = "Nelze posunout ve sloučené oblasti.";
        this["LE_InvalidOperationException_CannotShift_SplitTable"] = "Nelze posunout v tabulce.";
        this["LE_InvalidOperationException_CantAddChartInChart"] = "Graf nelze přidat do kolekce Tvary jiného grafu.";
        this["LE_InvalidOperationException_CantAddCustomView"] = "Vlastní zobrazení nelze přidat přímo do kolekce.";
        this["LE_InvalidOperationException_CantAddDataTable"] = "Datové tabulky nelze přidat přímo.";
        this["LE_InvalidOperationException_CantAddMergedRegion"] = "Sloučené oblasti buněk nelze přidat přímo.";
        this["LE_InvalidOperationException_CantAddNamedReference"] = "Pojmenované odkazy nelze přidat přímo.";
        this["LE_InvalidOperationException_CantAddWorksheet"] = "Pracovní listy nelze přidat přímo do této sbírky.";
        this["LE_InvalidOperationException_CantApplyRemovedCustomView"] = "Vlastní zobrazení nelze použít, pokud bylo odebráno ze sbírky vlastního zobrazení sešitu.";
        this["LE_InvalidOperationException_CantChangeArrayFormula"] = "Buňky maticového vzorce nelze změnit.";
        this["LE_InvalidOperationException_CantChangeDataTable"] = "Vnitřní buňky datové tabulky nelze změnit.";
        this["LE_InvalidOperationException_CantModifyCollection"] = "Kolekci nelze upravit.";
        this["LE_InvalidOperationException_CantOverlapArrayFormula"] = "Sloučená oblast buněk nemůže překrývat oblast vzorce pole.";
        this["LE_InvalidOperationException_CantOverlapDataTableInterior"] = "Sloučená oblast buněk nemůže překrývat buňky v datové tabulce, pokud přesahuje mimo horní řádek nebo sloupec nejvíce vlevo těchto buněk.";
        this["LE_InvalidOperationException_CantSaveEditRangeWithoutRange"] = "AllowedEditRanges pracovních listů musí mít alespoň jeden rozsah.";
        this["LE_InvalidOperationException_CantSaveWithNoVisibleWorksheets"] = "Musí být viditelný alespoň jeden list v sešitu.";
        this["LE_InvalidOperationException_CantSaveWithNoWorksheets"] = "Sešit bez pracovních listů nelze uložit";
        this["LE_InvalidOperationException_CantSetCircularityErrorDirectly"] = "Chybovou hodnotu kruhovitosti nelze použít přímo na buňky.";
        this["LE_InvalidOperationException_CantSetDataTableDirectly"] = "Datové tabulky nelze nastavit jako hodnotu v buňce.";
        this["LE_InvalidOperationException_CantSetFormulaDirectly"] = "Vzorce nelze nastavit na buňku přímo, místo toho použijte metodu ApplyFormula nebo některou z metod ApplyTo instance vzorce.";
        this["LE_InvalidOperationException_CellsInTableMinSize"] = "Oblast buněk v datové tabulce musí mít alespoň dvě buňky v každé dimenzi.";
        this["LE_InvalidOperationException_ChartNotSupported"] = "V tomto formátu nejsou podporovány úpravy WorksheetChart.";
        this["LE_InvalidOperationException_ClearUnknownShapeData"] = "Všechna data pro tento tvar nejsou známa, místo toho odeberte tvar z jeho kolekce.";
        this["LE_InvalidOperationException_CollectionLongerThanMaxValue"] = "Kolekce obsahuje více položek, než umožňuje zadaná maximální hodnota.";
        this["LE_InvalidOperationException_CollectionModifiedWhileEnumerating"] = "Během výčtu byla kolekce upravena.";
        this["LE_InvalidOperationException_CurrentTableRowAddressNeedsOriginCell"] = "Chcete-li analyzovat odkaz na strukturovanou tabulku pomocí aktuálního řádku, je třeba zadat buňku počátku.";
        this["LE_InvalidOperationException_CustomViewNoVisibleWorksheets"] = "Musí být viditelný alespoň jeden list ve vlastním zobrazení s názvem \"0}\".";
        this["LE_InvalidOperationException_DataTableAppliedInTable"] = "Tabulka dat nemůže být v oblasti, kde je tabulka k dispozici.";
        this["LE_InvalidOperationException_DataTableFormulaCannotBeApplied"] = "Vzorec tabulky dat nelze použít přímo na buňky.";
        this["LE_InvalidOperationException_DataTableInMergedCell"] = "Vnitřní buňky datové tabulky nemohou být součástí sloučené oblasti buněk.";
        this["LE_InvalidOperationException_DataTableRemoved"] = "Po odebrání tabulky dat z listu nelze nastavit vstupní buňky řádků a sloupců.";
        this["LE_InvalidOperationException_DeprecatedFillColorSetWithGradientFill"] = "Když je v buňce nastaven přechod, nelze nastavit barvu výplně.";
        this["LE_InvalidOperationException_EncryptedWorkbooksNotSupported"] = "Načítaný sešit je šifrovaný. Šifrované sešity nejsou podporovány.";
        this["LE_InvalidOperationException_ExtensionDoesntMatchCurrentFormat"] = "Název souboru, do kterého se má soubor uložit, má příponu, která neodpovídá aktuálnímu formátu sešitu.";
        this["LE_InvalidOperationException_FixedValuesFilterMustAcceptAValue"] = "Nelze mít FixedValuesFilter, který neumožňuje žádné hodnoty.";
        this["LE_InvalidOperationException_FormattedStringAlreadyOwned"] = "Naformátovaný řetězec je již hodnotou jiné buňky nebo komentáře. Nejprve jej naklonujte a aplikujte klon na novou buňku nebo tvar.";
        this["LE_InvalidOperationException_FormattedStringNotOwned"] = "K vlastnostem písma nelze přistupovat, pokud není formátovaný řetězec nebo text použit na buňku nebo tvar.";
        this["LE_InvalidOperationException_FormattedTextAlreadyOwned"] = "Naformátovaný řetězec je již hodnotou jiného tvaru. Nejprve jej naklonujte a aplikujte klon na novou buňku nebo tvar.";
        this["LE_InvalidOperationException_FormulaAlreadyOwned"] = "Vzorec je již aplikován na jinou buňku.";
        this["LE_InvalidOperationException_FormulaReferencesInvalidCells"] = "Vzorec odkazuje na buňky, které nejsou podporovány v aktuálním formátu souboru sešitu.";
        this["LE_InvalidOperationException_GetBoundsBeforeAnchorsSet"] = "Tvar nemá hranice před nastavením kotevních buněk.";
        this["LE_InvalidOperationException_HiddenWorksheetCannotBeSelected"] = "Skrytý list nelze vybrat.";
        this["LE_InvalidOperationException_HyperlinkSealed"] = "Hypertextový odkaz nelze upravit.";
        this["LE_InvalidOperationException_ImageDisposed"] = "Obrázek WorksheetImage byl vyřazen nebo je neplatný.";
        this["LE_InvalidOperationException_InputCellsBothNull"] = "Buňky vstupu sloupce a buňky vstupu řádku nemohou mít hodnotu null.";
        this["LE_InvalidOperationException_InputCellsInTable"] = "Vstupní buňky nemohou být uvnitř buněk datové tabulky.";
        this["LE_InvalidOperationException_InputCellsSame"] = "Buňky pro zadávání sloupců a pro zadávání řádků nemohou být stejné buňky.";
        this["LE_InvalidOperationException_InvalidCharacterRange"] = "Rozsah znaků pokrytých písmem již ve formátovaném řetězci neexistuje.";
        this["LE_InvalidOperationException_InvalidFormatOptionsInWholeTableArea"] = "Zadaná hodnota formátu FormatOptions je v oblasti tabulky WholeTable neplatná.";
        this["LE_InvalidOperationException_InvalidFormatString"] = "Zadaný formátovací řetězec je neplatný.";
        this["LE_InvalidOperationException_InvalidFormatString_GetTextCall"] = "Řetězec formátu buňky je neplatný. Chcete-li být upozorněni na to, když je nastaven FormatString, nastavte Workbook.ValidateFormatStrings na True.";
        this["LE_InvalidOperationException_InvalidForWorkbookFormat"] = "Vzorec není platný pro zadaný formát.";
        this["LE_InvalidOperationException_InvalidHeaderCellColumnAreaFormatProperty"] = "Hodnoty horního ohraničení nelze nastavit ve formátu oblasti sloupce tabulky HeaderCell.";
        this["LE_InvalidOperationException_InvalidHeaderRowAreaFormatProperty"] = "Hodnoty horního ohraničení nelze nastavit ve formátu oblasti tabulky HeaderRow.";
        this["LE_InvalidOperationException_InvalidTableStyleAreaFontProperty"] = "Hodnotu písma {0} nelze nastavit v oblastech stylů tabulky.";
        this["LE_InvalidOperationException_InvalidTableStyleAreaFormatOptions"] = "Zadaná hodnota formátu FormatOptions je v oblastech stylu tabulky neplatná.";
        this["LE_InvalidOperationException_InvalidTableStyleAreaFormatProperty"] = "Hodnotu formátu {0} nelze nastavit v oblastech stylu tabulky.";
        this["LE_InvalidOperationException_InvalidTotalsCellColumnAreaFormatProperty"] = "Hodnoty dolního ohraničení nelze nastavit ve formátu oblasti sloupců tabulky TotalCell.";
        this["LE_InvalidOperationException_InvalidTotalsRowAreaFormatProperty"] = "Hodnoty dolního ohraničení nelze nastavit ve formátu oblasti tabulky TotalsRow.";
        this["LE_InvalidOperationException_InvalidWholeTableAreaFormatProperty"] = "Ve formátu oblasti tabulky WholeTable lze nastavit pouze hodnoty okraje okraje.";
        this["LE_InvalidOperationException_LastColumnBeforeFirst"] = "Poslední sloupec v oblasti by měl být větší nebo roven prvnímu sloupci.";
        this["LE_InvalidOperationException_LastRowBeforeFirst"] = "Poslední řádek v oblasti by měl být větší než první řádek.";
        this["LE_InvalidOperationException_MaxCellFormats"] = "Maximální počet odlišných formátů buněk v souboru aplikace Excel je: {0}";
        this["LE_InvalidOperationException_MaxColors"] = "Maximální počet barev v sešitu aplikace Excel je: {0}";
        this["LE_InvalidOperationException_MaxColumns"] = "Maximální počet sloupců v listu aplikace Excel s aktuálním formátem je: {0}";
        this["LE_InvalidOperationException_MaxFonts"] = "Počet písem v sešitu nesmí překročit {0}.";
        this["LE_InvalidOperationException_MaxFormattedStrings"] = "Počet jedinečných řetězců v sešitu nesmí překročit {0}.";
        this["LE_InvalidOperationException_MaxRows"] = "Maximální počet řádků v listu aplikace Excel s aktuálním formátem je: {0}";
        this["LE_InvalidOperationException_MergedCellCrossesDataTableLeftColumn"] = "Sloupec buněk nejvíce vlevo určený pro datovou tabulku obsahuje sloučenou oblast buněk, která sahá mimo oblast těchto buněk.";
        this["LE_InvalidOperationException_MergedCellCrossesDataTableTopLeftCell"] = "Buňka vlevo nahoře buněk určených pro datovou tabulku je součástí sloučené buňky, která sahá mimo oblast těchto buněk.";
        this["LE_InvalidOperationException_MergedCellCrossesDataTableTopRow"] = "Horní řádek buněk určených pro datovou tabulku obsahuje sloučenou oblast buněk, která sahá mimo oblast těchto buněk.";
        this["LE_InvalidOperationException_MergedCellsAppliedInTable"] = "Buňky v tabulce nelze sloučit.";
        this["LE_InvalidOperationException_NamedReferenceNameAlreadyExists"] = "Název \"{0}\" používá tabulka nebo pojmenovaný odkaz v sešitu se stejným rozsahem.";
        this["LE_InvalidOperationException_NoRegionHasBeenSpecified"] = "Nebyla zadána žádná oblast.";
        this["LE_InvalidOperationException_NoWorksheetContextToSetShapeBounds"] = "Toto přetížení Add nelze volat, když kolekce obrazců není přidružena k listu. Zavolejte přetížení Add, která přebírá instanci pracovního listu.";
        this["LE_InvalidOperationException_OverlappingTable"] = "V zadané oblasti je další tabulka.";
        this["LE_InvalidOperationException_ReadOnlyFont"] = "Objekt písma je jen pro čtení a nelze jej změnit.";
        this["LE_InvalidOperationException_ReadOnlyFormat"] = "Objekt formátu je jen pro čtení a nelze jej změnit.";
        this["LE_InvalidOperationException_RelativeR1C1AddressNeedsOriginCell"] = "Chcete-li analyzovat relativní adresu R1C1, je třeba zadat počáteční buňku.";
        this["LE_InvalidOperationException_ResizedTableMustBeOnWorksheet"] = "Chcete-li změnit velikost, musí být tabulka na listu.";
        this["LE_InvalidOperationException_ResolvedFormatCannotBeModified"] = "Vyřešený formát buňky je jen pro čtení a nelze jej změnit.";
        this["LE_InvalidOperationException_ShapeCantChangeOrientation"] = "Tento tvar nelze otočit ani převrátit.";
        this["LE_InvalidOperationException_ShapeFillSolidIsImmutable"] = "ShapeFillSolid je neměnný. Místo toho vytvořte nový ShapeFillSolid.";
        this["LE_InvalidOperationException_ShapeInAnotherCollection"] = "Tvar již existuje v jiném listu nebo skupině tvarů.";
        this["LE_InvalidOperationException_ShapeOutlineSolidIsImmutable"] = "ShapeOutlineSolid je neměnný. Místo toho vytvořte nový ShapeOutlineSolid.";
        this["LE_InvalidOperationException_ShowFilterUIWhileHeaderRowHidden"] = "Uživatelské rozhraní filtru nelze zobrazit, když je řádek záhlaví skrytý.";
        this["LE_InvalidOperationException_SystemColorsAccessedFromWrongThread"] = "Nelze získat přístup k SystemColors z vlákna na pozadí.";
        this["LE_InvalidOperationException_TableReferenceMustBeUsedFromInsideTable"] = "Vzorec má odkaz na strukturovanou tabulku, který lze použít pouze zevnitř tabulky.";
        this["LE_InvalidOperationException_TableReferenceToMissingTable"] = "Vzorec obsahuje odkaz na tabulku, která neexistuje.";
        this["LE_InvalidOperationException_TableReferenceToMissingTableColumn"] = "Vzorec obsahuje odkaz na sloupec tabulky, který neexistuje.";
        this["LE_InvalidOperationException_TopLeftAnchorFromOtherWorksheet"] = "Přidáním obrazce do této kolekce jej umístíte na jiný list, než je jeho TopLeftCornerCell.";
        this["LE_InvalidOperationException_TotalsRowCannotBeShownInLastRow"] = "Řádek součty nelze zobrazit, když tabulka zabírá poslední řádek v listu.";
        this["LE_InvalidOperationException_UnknownBIFFFormat"] = "Soubor sešitu byl v neznámém formátu BIFF.";
        this["LE_InvalidOperationException_UnsupportedBIFFFormat"] = "Soubor sešitu byl uložen ve formátu {0}, což je formát, který není podporován.";
        this["LE_InvalidOperationException_WorkbookDataViolatesFormatLimits"] = "Sešit obsahuje data, která by překročila limity stanovené zadaným formátem.";
        this["LE_InvalidRegion"] = "Neplatná adresa regionu.";
        this["LE_InvalidValueType"] = "{0}' není platná hodnota pro vlastnost ValueType.";
        this["LE_LocationNotSingleRowOrColumn"] = "Odkaz na umístění není platný, protože buňky nejsou všechny ve stejném sloupci nebo řádku. Vyberte buňky, které jsou všechny v jednom sloupci nebo řádku.";
        this["LE_LocationOrDataAreaInvalid"] = "Odkaz na umístění nebo rozsah dat není platný.";
        this["LE_LocationWorksheetMismatch"] = "Umístění musí být z tohoto listu.";
        this["LE_NotSingleTargetFormula"] = "Může podporovat pouze jednotlivé cílové vzorce.";
        this["LE_NotSupportedException_CellType"] = "{0} není podporovaný typ hodnoty buňky.";
        this["LE_NotSupportedException_NoPackageFactory"] = "packageFactory nemůže mít hodnotu null. Při načítání z formátu sešitu Excel2007 a používání sestavy Infragistics2.Documents.Excel musíte poskytnout IPackageFactory ke zpracování balení dat. Pokud používáte DotNet Framework 3.0 nebo vyšší, použijte místo toho sestavu Infragistics3.Documents.Excel a obal bude zpracován třídou WindowsBase.";
        this["LE_OpenPackagingNonConformanceException_ContainsDublinCoreRefinements"] = "IPackagePart je vztah základních vlastností a obsahuje vylepšení prvků Dublin Core kromě \"dcterms: created\" a \"dcterms: modified\".";
        this["LE_OpenPackagingNonConformanceException_ContainsXmlLanguageAttribute"] = "IPackagePart je vztah základních vlastností a obsahuje prvky, které obsahují atribut 'xml: lang'.";
        this["LE_OpenPackagingNonConformanceException_CorePropertiesRelationshipAlreadyProcessed"] = "IPackagePart je vztah základních vlastností, ale jeden již byl pro přidružený IPackage zpracován.";
        this["LE_OpenPackagingNonConformanceException_DuplicatePartName"] = "IPackagePart se stejným názvem již do tohoto IPackage patří. IPackage nemůže obsahovat části se stejnými názvy. Všimněte si, že kontrola duplicitních hodnot nerozlišuje velká a malá písmena.";
        this["LE_OpenPackagingNonConformanceException_UsesMarkupCompatibilityNamespace"] = "IPackagePart je vztah základních vlastností a používá jmenný prostor kompatibility značek.";
        this["LE_OpenPackagingNonConformanceException_XmlContainsDocumentTypeDefinition"] = "IPackagePart obsahoval deklaraci DTD (definice typu dokumentu). Pravidla úmluvy o otevřeném balení zakazují použití obsahu XML s deklaracemi DTD.";
        this["LE_OpenPackagingNonConformanceException_XsiTypeAttributeInvalid"] = "IPackagePart je vztah základních vlastností a obsahuje prvky, které obsahují atribut 'xsi: type', nebo obsahuje prvky, které jsou vyžadovány a neobsahují atribut 'xsi: type'.";
        this["LE_OpenXmlSerializerNotLoaded"] = "Formát '{0}' vyžaduje serializátor, který se nenačte, v JavaScriptu je tento obsažen v souboru infragistics.excel_serialization_openxml.js";
        this["LE_PercentageValueOutOfRange"] = "Procentní hodnota {0} musí být mezi 0 a 100.";
        this["LE_PercentileValueOutOfRange"] = "Hodnota percentilu {0} musí být mezi 0 a 100.";
        this["LE_PercentRangeInvalid"] = "Hodnota {0} musí být menší než hodnota {1}.";
        this["LE_RowsToRepeatAtTopAreOutsideAvailableRange"] = "Možnosti tisku mají nahoře opakující se řádky, které jsou mimo rozsah dostupných řádků v novém formátu.";
        this["LE_Serialization_NoPrimaryCategoryAxis"] = "Typ grafu '{0}' vyžaduje primární osu kategorie. Přidejte osu primární kategorie do AxisCollection grafu.";
        this["LE_Serialization_NoPrimaryValueAxis"] = "Typ grafu '{0}' vyžaduje primární hodnotovou osu. Přidejte osu primární hodnoty do AxisCollection grafu.";
        this["LE_Series_ChartType_ChartEx"] = "{0}' je neplatný pro řadu ChartType v grafu '{1}'.";
        this["LE_Series_ChartType_InvalidForComboChart"] = "Typ grafu '{0}' není platný pro použití v kombinovaném grafu.";
        this["LE_Series_ChartType_NonCombo"] = "Typ grafu pro tuto řadu je určen typem nadřazeného grafu ('{0}') a nelze jej nastavit. Místo toho nastavte vlastnost ChartType nadřazeného grafu na '{1}'.";
        this["LE_Series_Explosion_OutOfRange"] = "Vlastnost Explosion podporuje hodnoty v rozsahu od 0 do 400 včetně.";
        this["LE_Series_InvalidAxisGroup"] = "Vlastnost AxisGroup nemůže být nastavena na '{0}', protože na stejné ose existuje řada typu '{1}', která nemůže sdílet stejnou osu jako řada typu '{2}'.";
        this["LE_Series_InvalidSeriesTypeForComboChart"] = "V kombinovaném grafu nelze použít řadu typu '{0}'.";
        this["LE_Series_NoPrimaryAxis"] = "Na primární ose musí být vynesena alespoň jedna řada. U alespoň jedné řady změňte vlastnost AxisGroup na \"Primární\".";
        this["LE_Series_OwningSeries_NotClusteredColumn"] = "Vlastnost OwningSeries lze nastavit pouze na seskupenou řadu sloupců v Pareto grafu.";
        this["LE_Series_OwningSeries_NotParetoLine"] = "Vlastnost OwningSeries lze nastavit pouze pro řadu čar v Pareto grafu.";
        this["LE_Series_OwningSeries_Same"] = "The OwningSeries se nemůže sám odkazovat.";
        this["LE_Series_SeriesType_ChartEx"] = "Hodnota SeriesType '{0}' je pro graf '{1}' neplatná.";
        this["LE_Series_SeriesType_NonCombo"] = "Vlastnost Type je použitelná pouze pro kombinované grafy a nelze ji nastavit pro graf typu '{0}'.";
        this["LE_SetValue_Formula"] = "Typ hodnoty '{0}' je platný pouze pro vzorce. Místo toho použijte metodu SetFormula.";
        this["LE_SetValue_NonNumeric"] = "Parametr hodnoty nelze použít pro typ hodnoty '{0}'. Použijte přetížení, které trvá pouze typ hodnoty.";
        this["LE_SetValue_Numeric"] = "U typu hodnoty '{0}' musí být zadán parametr hodnoty. Použijte přetížení, které přebírá hodnotu i typ hodnoty.";
        this["LE_WorksheetChart_ChartType_ChartEx_CannotTransition"] = "Vlastnost ChartType nelze změnit z '{0}' na '{1}'.";
        this["LE_WorksheetChart_ChartType_ComboChart_From"] = "Vlastnost ChartType kombinovaného grafu nelze změnit na '{0}'.";
        this["LE_WorksheetChart_ChartType_ComboChart_To"] = "Graf typu '{0}' nelze změnit na \"Kombinovaný\". Nový kombinovaný graf lze vytvořit pomocí metody AddChart, ale změna existujícího grafu na kombinovaný graf není podporována.";
        this["LE_WorksheetChart_ComboChart_NotEnoughSeries"] = "Kombinovaný graf vyžaduje alespoň 2 řady. Přidejte další položky do SeriesCollection grafu.";
        this["LE_WorksheetChart_MissingRequiredAxis_StockCharts"] = "Graf '{0}' vyžaduje osu primární kategorie, osu primární hodnoty, osu sekundární kategorie a osu sekundární hodnoty.";
        this["LE_WorksheetChart_NotEnoughSeries"] = "Tabulka '{0}' vyžaduje minimálně sérii {1}. Chcete-li použít tento typ grafu, musíte do SeriesCollection přidat další položky.";
        this["LE_WorksheetChart_Save_Series"] = "Tabulka '{0}' musí obsahovat alespoň jednu řadu. Před pokusem o uložení sešitu přidejte do grafu další řady.";
        this["LE_WorksheetChart_Save_Series_Pareto"] = "Tabulka \"Pareto\" musí obsahovat jednu řadu \"ColumnClustered\" a jednu řadu \"Pareto\". Před pokusem o uložení sešitu přidejte do grafu příslušnou řadu.";
        this["LE_WorksheetChart_SetComboChartSourceData_InvalidChartTypes"] = "Jeden nebo více ze zadaných typů grafů není pro použití v kombinovaném grafu platné: {0}";
        this["LE_WorksheetChart_SetComboChartSourceData_NotAComboChart"] = "SetComboChartSourceData nelze volat, protože aktuální typ grafu je '{0}'. Změňte typ ChartType na Combo.";
        this["LE_WorksheetChart_SetComboChartSourceData_SeriesChartTypesNotSupported"] = "Parametr seriesChartTypes musí mít pro graf '{0}' hodnotu null.";
        this["LE_WorksheetChart_SetSourceData_NotEnoughSeries"] = "Kombinované grafy vyžadují minimálně 2 řady. Změňte parametr 'dataRange' na rozsah, jehož výsledkem budou alespoň 2 řady.";
        this["LE_WorksheetChart_SetSourceData_TooManyAxes"] = "Uvedená kombinace typů grafů vyžaduje více než maximální povolený počet os.";
        this["LE_WorksheetChart_StockChartNotSupported"] = "Úpravy typu grafu '{0}' nejsou aktuálně podporovány.";
        this["LE_WorksheetChart_UnknownChartNotSupported"] = "Tento graf byl načten z existujícího listu, ale jeho ChartType nelze určit. Úpravy neznámých typů grafů nejsou aktuálně podporovány.";
        this["LER_ArgumentOutOfRangeException_OutlineLevel"] = "Úroveň osnovy musí být mezi 0 a 7.";
        this["LER_Exception_KeyNotFound"] = "Klíč nebyl nalezen.";
        this["LER_Exception_MergedRegionsOverlap"] = "Sloučené oblasti buněk se nemohou překrývat.";
        this["TableHeaderRowDescription"] = "řádek záhlaví";
        this["TableInsertRowDescription"] = "vložte řádek";
        this["TableTotalsRowDescription"] = "řádek součty";
        this["Value_UCErrorCode_Div"] = "#DIV/0!";
        this["Value_UCErrorCode_Fail"] = "#FAIL";
        this["Value_UCErrorCode_NA"] = "#N/A";
        this["Value_UCErrorCode_Name"] = "#NAME?";
        this["Value_UCErrorCode_Null"] = "#NULL!";
        this["Value_UCErrorCode_Num"] = "#NUM!";
        this["Value_UCErrorCode_Ok"] = "#OK";
        this["Value_UCErrorCode_Reference"] = "#REF!";
        this["Value_UCErrorCode_Unknown"] = "#N/A";
        this["Value_UCErrorCode_Value"] = "#VALUE!";
        this["WorkbookColorInfo_Automatic_Description"] = "Automatický";
        this["WorkbookColorInfo_Description"] = "ColorInfo: {0}";
        this["WorkbookColorInfo_WithTint_Description"] = "ColorInfo: {0}, Tint: {1}";
        this["WorksheetShapeSerialization_GroupName"] = "Skupina";
        this["WorksheetShapeSerialization_ImageName"] = "obraz";
        this["WorksheetShapeSerialization_ShapeName"] = "Tvar";
    }
}
