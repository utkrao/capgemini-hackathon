/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, Number_$type, fromEnum, markType } from "igniteui-react-core";
import { CondFmtWrapper } from "./CondFmtWrapper";
import { Dictionary$2 } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
/**
 * @hidden
 */
export let WorksheetCFInfo = /*@__PURE__*/ (() => {
    class WorksheetCFInfo extends Base {
        constructor(a) {
            super();
            this.e = null;
            this.g = null;
            this.b = null;
            this.d = null;
            this.a = null;
            this.d = a;
            this.e = new Dictionary$2(Number_$type, CondFmtWrapper.$, 0);
            this.g = new List$1(CondFmtWrapper.$, 0);
        }
        h(a) {
            let b = null;
            if (a.d == 0) {
                this.g.add(a);
            }
            else if (((() => { let c = this.e.tryGetValue(a.d, b); b = c.p1; return c.ret; })())) {
                let c = a.h ? "CONDFMT12" : "CONDFMT";
            }
            else {
                this.e.addItem(a.d, a);
            }
            this.b = a;
        }
        c(a) {
            let b = null;
            if (((() => { let c = this.e.tryGetValue(a, b); b = c.p1; return c.ret; })())) {
                return b;
            }
            else {
            }
            return null;
        }
        f() {
            let a = new List$1(CondFmtWrapper.$, 2, this.e.count);
            if (this.g != null) {
                for (let b of fromEnum(this.g)) {
                    a.add(b);
                }
            }
            for (let c of fromEnum(this.e.values)) {
                a.add(c);
            }
            return a;
        }
    }
    WorksheetCFInfo.$t = /*@__PURE__*/ markType(WorksheetCFInfo, 'WorksheetCFInfo');
    return WorksheetCFInfo;
})();
