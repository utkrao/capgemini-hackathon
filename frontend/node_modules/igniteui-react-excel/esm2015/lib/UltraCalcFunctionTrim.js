/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { StringBuilder } from "igniteui-react-core";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionTrim = /*@__PURE__*/ (() => {
    class UltraCalcFunctionTrim extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = a.pop();
            if (c.isError) {
                return new ExcelCalcValue(c.toErrorValue());
            }
            let d = c.toString().trim();
            let e = new StringBuilder(1, d.length);
            let f = false;
            for (let g = 0; g < d.length; g++) {
                let h = d.charAt(g);
                let i = /\s/i.test(h);
                if (!f || !i) {
                    e.h(h);
                }
                f = i;
            }
            return new ExcelCalcValue(e.toString());
        }
        get_name() {
            return "trim";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 1;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 1;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
        doesParameterAllowIntermediateResultArray(a, b) {
            return true;
        }
    }
    UltraCalcFunctionTrim.$t = /*@__PURE__*/ markType(UltraCalcFunctionTrim, 'UltraCalcFunctionTrim', BuiltInFunctionBase.$);
    return UltraCalcFunctionTrim;
})();
