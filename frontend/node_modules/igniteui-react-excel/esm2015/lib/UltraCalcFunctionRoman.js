/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { typeCast, Boolean_$type, markType } from "igniteui-react-core";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { UltraCalcFunctionRoman_RomanNumeral } from "./UltraCalcFunctionRoman_RomanNumeral";
/**
 * @hidden
 */
export let UltraCalcFunctionRoman = /*@__PURE__*/ (() => {
    class UltraCalcFunctionRoman extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c;
            let d;
            if (b == 2) {
                d = a.pop();
                if (d.isError) {
                    return new ExcelCalcValue(d.toErrorValue());
                }
                let e = d._getResolvedValue();
                if (typeCast(Boolean_$type, e) !== null) {
                    c = e ? 0 : 4;
                }
                else {
                    c = d._toInt();
                }
            }
            else {
                c = 0;
            }
            d = a.pop();
            if (d.isError) {
                return new ExcelCalcValue(d.toErrorValue());
            }
            let f = d._toInt();
            if (f < 0 || f > 3999) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(1));
            }
            let g = new UltraCalcFunctionRoman_RomanNumeral(f);
            return new ExcelCalcValue(g.p(c));
        }
        get_name() {
            return "roman";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 1;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 2;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
        doesParameterAllowIntermediateResultArray(a, b) {
            return true;
        }
    }
    UltraCalcFunctionRoman.$t = /*@__PURE__*/ markType(UltraCalcFunctionRoman, 'UltraCalcFunctionRoman', BuiltInFunctionBase.$);
    return UltraCalcFunctionRoman;
})();
