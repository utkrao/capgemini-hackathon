/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
import { UltraCalcFunctionXBase2Dec } from "./UltraCalcFunctionXBase2Dec";
import { UltraCalcFunctionDec2XBase } from "./UltraCalcFunctionDec2XBase";
import { stringFormat } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionXBase2XBase = /*@__PURE__*/ (() => {
    class UltraCalcFunctionXBase2XBase extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = 0;
            if (b == 2) {
                let d = a.pop()._toInt321();
                if (d <= 0) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(4));
                }
                else {
                    c = d;
                }
            }
            let e = a.pop();
            if (e.isError) {
                return new ExcelCalcValue(e.toErrorValue());
            }
            let f = e.toString();
            if (f.length > this._am) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            let g;
            let h = ((() => { let i = UltraCalcFunctionXBase2Dec._al(a._w, f, this._al, this._aq, this._ap, g); g = i.p5; return i.ret; })());
            if (null != g) {
                return new ExcelCalcValue(g);
            }
            if (h < this._ao || this._an < h) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            let i = UltraCalcFunctionDec2XBase._at(h, this._ak, this._ao, this._an);
            if (c > 0) {
                if (i.length < 10 && i.length > c) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(4));
                }
            }
            else {
                c = 1;
            }
            while (i.length < c) {
                i = stringFormat("{0}{1}", "0", i);
            }
            return new ExcelCalcValue(i);
        }
        get_minArgs() {
            return 1;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 2;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
    }
    UltraCalcFunctionXBase2XBase.$t = /*@__PURE__*/ markType(UltraCalcFunctionXBase2XBase, 'UltraCalcFunctionXBase2XBase', BuiltInFunctionBase.$);
    return UltraCalcFunctionXBase2XBase;
})();
