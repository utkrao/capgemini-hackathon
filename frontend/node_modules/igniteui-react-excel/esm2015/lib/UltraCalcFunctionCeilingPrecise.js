/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { MathUtilities } from "./MathUtilities";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionCeilingPrecise = /*@__PURE__*/ (() => {
    class UltraCalcFunctionCeilingPrecise extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = null;
            if (b == 2) {
                c = a.pop();
            }
            let d = a.pop();
            if (d.isError) {
                return new ExcelCalcValue(d.toErrorValue());
            }
            if (c != null && c.isError) {
                return new ExcelCalcValue(c.toErrorValue());
            }
            let e = d._toDouble3();
            let f = c == null ? 1 : c._toDouble3();
            if (f < 0) {
                f *= -1;
            }
            if (e == 0 || f == 0) {
                return new ExcelCalcValue(0);
            }
            let g = MathUtilities.i(Math.ceil(e / f) * f);
            return new ExcelCalcValue(g);
        }
        get_name() {
            return "ceiling.precise";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 1;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 2;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
    }
    UltraCalcFunctionCeilingPrecise.$t = /*@__PURE__*/ markType(UltraCalcFunctionCeilingPrecise, 'UltraCalcFunctionCeilingPrecise', BuiltInFunctionBase.$);
    return UltraCalcFunctionCeilingPrecise;
})();
