/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { markEnum } from "igniteui-react-core";
/**
 * Represents the various operators which can be used when validating the cell value against a constraint.
 * @see [[OneConstraintDataValidationRule]]
 * @see [[OneConstraintDataValidationRule.setConstraint]]
 * @see [[OneConstraintDataValidationRule.setConstraint]]
 * @see [[OneConstraintDataValidationRule.getConstraintFormula]]
 * @see [[OneConstraintDataValidationRule.getConstraintFormula]]
 * @see [[OneConstraintDataValidationRule.setConstraintFormula]]
 * @see [[OneConstraintDataValidationRule.setConstraintFormula]]
 * @see [[ValueConstraintDataValidationRule.validationCriteria]]
 */
export var OneConstraintDataValidationOperator = /*@__PURE__*/ (function (OneConstraintDataValidationOperator) {
    /**
     * Only allows the cell value if it or its text length, depending on the validation criteria, is equal to the
     * constraint applied to the validation rule.
     */
    OneConstraintDataValidationOperator[OneConstraintDataValidationOperator["EqualTo"] = 2] = "EqualTo";
    /**
     * Only allows the cell value if it or its text length, depending on the validation criteria, is not equal to the
     * constraint applied to the validation rule.
     */
    OneConstraintDataValidationOperator[OneConstraintDataValidationOperator["NotEqualTo"] = 3] = "NotEqualTo";
    /**
     * Only allows the cell value if it or its text length, depending on the validation criteria, is greater than the
     * constraint applied to the validation rule.
     */
    OneConstraintDataValidationOperator[OneConstraintDataValidationOperator["GreaterThan"] = 4] = "GreaterThan";
    /**
     * Only allows the cell value if it or its text length, depending on the validation criteria, is greater than or equal to the
     * constraint applied to the validation rule.
     */
    OneConstraintDataValidationOperator[OneConstraintDataValidationOperator["GreaterThanOrEqualTo"] = 6] = "GreaterThanOrEqualTo";
    /**
     * Only allows the cell value if it or its text length, depending on the validation criteria, is less than the
     * constraint applied to the validation rule.
     */
    OneConstraintDataValidationOperator[OneConstraintDataValidationOperator["LessThan"] = 5] = "LessThan";
    /**
     * Only allows the cell value if it or its text length, depending on the validation criteria, is less than or equal to the
     * constraint applied to the validation rule.
     */
    OneConstraintDataValidationOperator[OneConstraintDataValidationOperator["LessThanOrEqualTo"] = 7] = "LessThanOrEqualTo";
    return OneConstraintDataValidationOperator;
})({});
/**
 * @hidden
 */
export let OneConstraintDataValidationOperator_$type = /*@__PURE__*/ markEnum('OneConstraintDataValidationOperator', 'EqualTo,2|NotEqualTo,3|GreaterThan,4|GreaterThanOrEqualTo,6|LessThan,5|LessThanOrEqualTo,7');
