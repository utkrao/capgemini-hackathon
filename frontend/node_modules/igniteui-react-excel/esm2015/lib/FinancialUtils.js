/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
import { ExcelUtils } from "./ExcelUtils";
import { ArgumentOutOfRangeException } from "igniteui-react-core";
import { ArgumentException } from "igniteui-react-core";
/**
 * @hidden
 */
export let FinancialUtils = /*@__PURE__*/ (() => {
    class FinancialUtils extends Base {
        static iPmt(a, b, c, d, e, f) {
            let g = f != 0 ? 2 : 1;
            if ((b <= 0) || (b >= (c + 1))) {
                throw new ArgumentOutOfRangeException(2, "per", ExcelUtils.ef("LE_ArgumentOutOfRangeException_Per"));
            }
            if ((f != 0) && (b == 1)) {
                return 0;
            }
            let h = FinancialUtils.d(a, c, d, e, f);
            if (f != 0) {
                d += h;
            }
            return FinancialUtils.a(a, b - g, h, d, 0) * a;
        }
        static pPmt(a, b, c, d, e, f) {
            if ((b <= 0) || (b >= (c + 1))) {
                throw new ArgumentException(2, ExcelUtils.ef("LE_ArgumentException_Per"), "per");
            }
            let g = FinancialUtils.d(a, c, d, e, f);
            let h = FinancialUtils.iPmt(a, b, c, d, e, f);
            return g - h;
        }
        static nPer(a, b, c, d, e) {
            let f;
            if (a <= -1) {
                throw new ArgumentOutOfRangeException(2, "rate", ExcelUtils.ef("LE_ArgumentOutOfRangeException_Rate"));
            }
            if (a == 0) {
                if (b == 0) {
                    throw new ArgumentException(2, ExcelUtils.ef("LE_ArgumentException_Pmt"), "pmt");
                }
                return -(c + d) / b;
            }
            if (e != 0) {
                f = (b * (1 + a)) / a;
            }
            else {
                f = b / a;
            }
            let g = -d + f;
            let h = c + f;
            if ((g < 0) && (h < 0)) {
                g = -1 * g;
                h = -1 * h;
            }
            else if ((g <= 0) || (h <= 0)) {
                throw new ArgumentException(1, ExcelUtils.ef("LE_ArgumentException_NPerFunction"));
            }
            let i = a + 1;
            return (Math.log(g) - Math.log(h)) / Math.log(i);
        }
        static d(a, b, c, d, e) {
            let f;
            if (b == 0) {
                throw new ArgumentException(2, ExcelUtils.ef("LE_ArgumentException_NPer"), "nPer");
            }
            if (a == 0) {
                return (-d - c) / b;
            }
            if (e != 0) {
                f = 1 + a;
            }
            else {
                f = 1;
            }
            let g = a + 1;
            let h = Math.pow(g, b);
            return ((-d - (c * h)) / (f * (h - 1))) * a;
        }
        static a(a, b, c, d, e) {
            let f;
            if (a == 0) {
                return -d - (c * b);
            }
            if (e != 0) {
                f = 1 + a;
            }
            else {
                f = 1;
            }
            let g = 1 + a;
            let h = Math.pow(g, b);
            return (-d * h) - (((c / a) * f) * (h - 1));
        }
    }
    FinancialUtils.$t = /*@__PURE__*/ markType(FinancialUtils, 'FinancialUtils');
    return FinancialUtils;
})();
