/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
/**
 * Exposes properties related to the <i>BoxAndWhisker</i> chart type.
 * <p class="body">
 * This class is immutable.
 * </p>
 * @see [[Series.boxAndWhiskerSettings]]
 */
export let BoxAndWhiskerSettings = /*@__PURE__*/ (() => {
    class BoxAndWhiskerSettings extends Base {
        constructor(showInnerPoints, showOutlierPoints, showMeanMarkers, showMeanLine, quartileCalculation) {
            super();
            this._showInnerPoints = false;
            this._showOutlierPoints = false;
            this._showMeanMarkers = false;
            this._showMeanLine = false;
            this._quartileCalculation = 0;
            showInnerPoints = (showInnerPoints !== void 0 ? showInnerPoints : false);
            showOutlierPoints = (showOutlierPoints !== void 0 ? showOutlierPoints : true);
            showMeanMarkers = (showMeanMarkers !== void 0 ? showMeanMarkers : true);
            showMeanLine = (showMeanLine !== void 0 ? showMeanLine : false);
            quartileCalculation = (quartileCalculation !== void 0 ? quartileCalculation : 1);
            this.showInnerPoints = showInnerPoints;
            this.showOutlierPoints = showOutlierPoints;
            this.showMeanMarkers = showMeanMarkers;
            this.showMeanLine = showMeanLine;
            this.quartileCalculation = quartileCalculation;
        }
        /**
         * Determines whether inner points appear on a box and whisker chart.
         * <p class="body">
         * Inner points appear between the lower whisker line and the upper whisker line.
         * </p>
         * @see [[showOutlierPoints]]
         */
        get showInnerPoints() {
            return this._showInnerPoints;
        }
        set showInnerPoints(a) {
            this._showInnerPoints = a;
        }
        /**
         * Determines whether outlier points appear on a box and whisker chart.
         * <p class="body">
         * Outlier points appear either below the lower whisker line or above the upper whisker line.
         * </p>
         * @see [[showInnerPoints]]
         */
        get showOutlierPoints() {
            return this._showOutlierPoints;
        }
        set showOutlierPoints(a) {
            this._showOutlierPoints = a;
        }
        /**
         * Determines whether mean markers appear on a box and whisker chart.
         * @see [[showMeanLine]]
         */
        get showMeanMarkers() {
            return this._showMeanMarkers;
        }
        set showMeanMarkers(a) {
            this._showMeanMarkers = a;
        }
        /**
         * Determines whether a mean line appears on a box and whisker chart.
         * <p class="body">
         * Mean lines connect the means of the boxes.
         * </p>
         * @see [[showMeanMarkers]]
         */
        get showMeanLine() {
            return this._showMeanLine;
        }
        set showMeanLine(a) {
            this._showMeanLine = a;
        }
        /**
         * Determines the method for median calculation.
         */
        get quartileCalculation() {
            return this._quartileCalculation;
        }
        set quartileCalculation(a) {
            this._quartileCalculation = a;
        }
    }
    BoxAndWhiskerSettings.$t = /*@__PURE__*/ markType(BoxAndWhiskerSettings, 'BoxAndWhiskerSettings');
    /**
     * @hidden
     */
    BoxAndWhiskerSettings._c = false;
    /**
     * @hidden
     */
    BoxAndWhiskerSettings._f = true;
    /**
     * @hidden
     */
    BoxAndWhiskerSettings._e = true;
    /**
     * @hidden
     */
    BoxAndWhiskerSettings._d = false;
    /**
     * @hidden
     */
    BoxAndWhiskerSettings._a = 0;
    return BoxAndWhiskerSettings;
})();
