/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
import { IComparer$1_$type } from "igniteui-react-core";
import { ConditionSortContext } from "./ConditionSortContext";
import { ConditionBase } from "./ConditionBase";
import { List$1 } from "igniteui-react-core";
/**
 * @hidden
 */
export let ConditionSortContextComparer = /*@__PURE__*/ (() => {
    class ConditionSortContextComparer extends Base {
        compare(a, b) {
            if (a == null || b == null) {
                return 0;
            }
            return Base.compareSimple(a.b, b.b);
        }
        static _a(a) {
            let b = new List$1(ConditionBase.$, 2, a.count);
            for (let c = 0; c < a.count; c++) {
                b.add(a.item(c).a);
            }
            return b;
        }
    }
    ConditionSortContextComparer.$t = /*@__PURE__*/ markType(ConditionSortContextComparer, 'ConditionSortContextComparer', Base.$, [/*@__PURE__*/ IComparer$1_$type.specialize(ConditionSortContext.$)]);
    return ConditionSortContextComparer;
})();
