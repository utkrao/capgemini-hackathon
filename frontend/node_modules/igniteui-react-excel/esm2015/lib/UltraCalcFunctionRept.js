/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { StringBuilder } from "igniteui-react-core";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
import { stringIsNullOrEmpty, stringEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionRept = /*@__PURE__*/ (() => {
    class UltraCalcFunctionRept extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = a.pop();
            let d = a.pop();
            if (d.isError) {
                return new ExcelCalcValue(d.toErrorValue());
            }
            if (c.isError) {
                return new ExcelCalcValue(c.toErrorValue());
            }
            let e = c._toInt321();
            if (e < 0) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(1));
            }
            let f = d.toString();
            if (e == 0 || stringIsNullOrEmpty(f)) {
                return new ExcelCalcValue(stringEmpty());
            }
            let g = f.length * e;
            if (32767 < g) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(1));
            }
            let h = new StringBuilder(1, g);
            for (let i = 0; i < e; i++) {
                h.l(f);
            }
            return new ExcelCalcValue(h.toString());
        }
        get_name() {
            return "rept";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 2;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 2;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
        doesParameterAllowIntermediateResultArray(a, b) {
            return true;
        }
    }
    UltraCalcFunctionRept.$t = /*@__PURE__*/ markType(UltraCalcFunctionRept, 'UltraCalcFunctionRept', BuiltInFunctionBase.$);
    return UltraCalcFunctionRept;
})();
