/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, callStaticConstructors, markType } from "igniteui-react-core";
import { NotImplementedException } from "igniteui-react-core";
import { unicode_hack } from "igniteui-react-core";
/**
 * @hidden
 */
export let CharUnicodeInfo = /*@__PURE__*/ (() => {
    class CharUnicodeInfo extends Base {
        static staticInit() {
            let a = "\\p{Lo}";
            CharUnicodeInfo.k = unicode_hack(a);
        }
        static g(a) {
            throw new NotImplementedException(0);
        }
        static h(a, b) {
            return CharUnicodeInfo.g(a.charAt(b));
        }
        static i(a) {
            throw new NotImplementedException(0);
        }
        static j(a, b) {
            return CharUnicodeInfo.i(a.charAt(b));
        }
        static c(a) {
            throw new NotImplementedException(0);
        }
        static d(a, b) {
            return CharUnicodeInfo.c(a.charAt(b));
        }
        static e(a) {
            if (CharUnicodeInfo.a("Lu", a)) {
                return 0;
            }
            if (CharUnicodeInfo.a("Ll", a)) {
                return 1;
            }
            if (CharUnicodeInfo.a("Lt", a)) {
                return 2;
            }
            if (CharUnicodeInfo.a("Lm", a)) {
                return 3;
            }
            if (CharUnicodeInfo.a("Lo", a)) {
                return 4;
            }
            if (CharUnicodeInfo.a("Mn", a)) {
                return 5;
            }
            if (CharUnicodeInfo.a("Mc", a)) {
                return 6;
            }
            if (CharUnicodeInfo.a("Me", a)) {
                return 7;
            }
            if (CharUnicodeInfo.a("Nd", a)) {
                return 8;
            }
            if (CharUnicodeInfo.a("Nl", a)) {
                return 9;
            }
            if (CharUnicodeInfo.a("No", a)) {
                return 10;
            }
            if (CharUnicodeInfo.a("Zs", a)) {
                return 11;
            }
            if (CharUnicodeInfo.a("Zl", a)) {
                return 12;
            }
            if (CharUnicodeInfo.a("Zp", a)) {
                return 13;
            }
            if (CharUnicodeInfo.a("Cc", a)) {
                return 14;
            }
            if (CharUnicodeInfo.a("Cf", a)) {
                return 15;
            }
            if (CharUnicodeInfo.a("Cs", a)) {
                return 16;
            }
            if (CharUnicodeInfo.a("Co", a)) {
                return 17;
            }
            if (CharUnicodeInfo.a("Pc", a)) {
                return 18;
            }
            if (CharUnicodeInfo.a("Pd", a)) {
                return 19;
            }
            if (CharUnicodeInfo.a("Ps", a)) {
                return 20;
            }
            if (CharUnicodeInfo.a("Pe", a)) {
                return 21;
            }
            if (CharUnicodeInfo.a("Pi", a)) {
                return 22;
            }
            if (CharUnicodeInfo.a("Pf", a)) {
                return 23;
            }
            if (CharUnicodeInfo.a("Po", a)) {
                return 24;
            }
            if (CharUnicodeInfo.a("Sm", a)) {
                return 25;
            }
            if (CharUnicodeInfo.a("Sc", a)) {
                return 26;
            }
            if (CharUnicodeInfo.a("So", a)) {
                return 28;
            }
            if (CharUnicodeInfo.a("Sk", a)) {
                return 27;
            }
            return 29;
        }
        static a(a, b) {
            let c = "\\p{" + a + "}";
            return (unicode_hack(c).test(b));
        }
        static f(a, b) {
            return CharUnicodeInfo.e(a.charAt(b));
        }
        static b(a) {
            return (CharUnicodeInfo.k.test(a));
        }
    }
    CharUnicodeInfo.$t = /*@__PURE__*/ markType(CharUnicodeInfo, 'CharUnicodeInfo');
    CharUnicodeInfo.k = null;
    return CharUnicodeInfo;
})();
(function (v) { callStaticConstructors(); })(true);
