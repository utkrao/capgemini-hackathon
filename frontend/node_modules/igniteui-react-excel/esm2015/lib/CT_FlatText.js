/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, toNullable, Number_$type, fromEnum, markType, getInstanceType } from "igniteui-react-core";
import { CultureInfo } from "igniteui-react-core";
import { parseInt64_1 } from "igniteui-react-core";
/**
 * @hidden
 */
export let CT_FlatText = /*@__PURE__*/ (() => {
    class CT_FlatText extends Base {
        constructor() {
            super();
            this.c = toNullable(Number_$type, null);
        }
        get b() {
            return this.c;
        }
        set b(a) {
            this.c = a;
        }
        static e(a, b) {
            b = toNullable(Number_$type, null);
            for (let c of fromEnum(a.ab.u)) {
                switch (c.a.e(a.d)) {
                    case "z":
                        b = toNullable(Number_$type, parseInt64_1(c.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
            ;
            return {
                p1: b
            };
        }
        static f(a, b, c = toNullable(Number_$type, null)) {
            a.ad.p(b, "a");
            let d = null;
            let e = null;
            if (c.hasValue) {
                e = "z";
                d = c.value.toString();
                a.ad.h(e, d);
            }
            ;
        }
        toString() {
            let a = getInstanceType(this);
            return a != null ? a.typeName : super.toString();
        }
    }
    CT_FlatText.$t = /*@__PURE__*/ markType(CT_FlatText, 'CT_FlatText');
    return CT_FlatText;
})();
