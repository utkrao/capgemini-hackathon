/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, toNullable, Boolean_$type, fromEnum, typeCast, markType, getInstanceType } from "igniteui-react-core";
import { ISupportSetProperty_$type } from "./ISupportSetProperty";
import { CT_GraphicFrameNonVisual } from "./CT_GraphicFrameNonVisual";
import { CT_Transform2D } from "./CT_Transform2D";
import { CT_GraphicalObject } from "./CT_GraphicalObject";
import { ST_OnOff } from "./ST_OnOff";
/**
 * @hidden
 */
export let CT_GraphicFrame = /*@__PURE__*/ (() => {
    class CT_GraphicFrame extends Base {
        constructor() {
            super();
            this.b = null;
            this.f = null;
            this.d = null;
            this.k = null;
            this.i = toNullable(Boolean_$type, null);
        }
        get a() {
            return this.b;
        }
        set a(a) {
            this.b = a;
        }
        get e() {
            return this.f;
        }
        set e(a) {
            this.f = a;
        }
        get c() {
            return this.d;
        }
        set c(a) {
            this.d = a;
        }
        get j() {
            return this.k;
        }
        set j(a) {
            this.k = a;
        }
        get h() {
            return this.i;
        }
        set h(a) {
            this.i = a;
        }
        static m(a, b, c) {
            b = null;
            c = toNullable(Boolean_$type, null);
            for (let d of fromEnum(a.ab.u)) {
                switch (d.a.e(a.d)) {
                    case "macro":
                        b = d.d;
                        break;
                    case "fPublished":
                        c = toNullable(Boolean_$type, ST_OnOff.e(d.d));
                        break;
                    default: break;
                }
            }
            ;
            return {
                p1: b,
                p2: c
            };
        }
        static n(a, b, c = toNullable(Boolean_$type, null), d = null) {
            a.ad.p(b, "cd");
            let e = null;
            let f = null;
            if (c.hasValue) {
                f = "fPublished";
                e = ST_OnOff.g(c.value);
                a.ad.h(f, e);
            }
            if (d != null) {
                f = "macro";
                e = d;
                a.ad.h(f, e);
            }
            ;
        }
        setProperty(a, b) {
            switch (a) {
                case 1103:
                    this.a = typeCast(CT_GraphicFrameNonVisual.$, b);
                    break;
                case 1892:
                    this.e = typeCast(CT_Transform2D.$, b);
                    break;
                case 727:
                    this.c = typeCast(CT_GraphicalObject.$, b);
                    break;
                default: break;
            }
        }
        toString() {
            let a = getInstanceType(this);
            return a != null ? a.typeName : super.toString();
        }
    }
    CT_GraphicFrame.$t = /*@__PURE__*/ markType(CT_GraphicFrame, 'CT_GraphicFrame', Base.$, [ISupportSetProperty_$type]);
    return CT_GraphicFrame;
})();
