/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, typeCast, markType } from "igniteui-react-core";
import { ISupportSetProperty_$type } from "./ISupportSetProperty";
import { CT_TextParagraphProperties } from "./CT_TextParagraphProperties";
/**
 * @hidden
 */
export let CT_TextListStyle = /*@__PURE__*/ (() => {
    class CT_TextListStyle extends Base {
        constructor() {
            super(...arguments);
            this.a = null;
            this.b = null;
            this.c = null;
            this.d = null;
            this.e = null;
            this.f = null;
            this.g = null;
            this.h = null;
            this.i = null;
            this.j = null;
            this.k = null;
        }
        setProperty(a, b) {
            switch (a) {
                case 454:
                    this.a = typeCast(CT_TextParagraphProperties.$, b);
                    break;
                case 945:
                    this.b = typeCast(CT_TextParagraphProperties.$, b);
                    break;
                case 946:
                    this.c = typeCast(CT_TextParagraphProperties.$, b);
                    break;
                case 947:
                    this.d = typeCast(CT_TextParagraphProperties.$, b);
                    break;
                case 948:
                    this.e = typeCast(CT_TextParagraphProperties.$, b);
                    break;
                case 949:
                    this.f = typeCast(CT_TextParagraphProperties.$, b);
                    break;
                case 950:
                    this.g = typeCast(CT_TextParagraphProperties.$, b);
                    break;
                case 951:
                    this.h = typeCast(CT_TextParagraphProperties.$, b);
                    break;
                case 952:
                    this.i = typeCast(CT_TextParagraphProperties.$, b);
                    break;
                case 953:
                    this.j = typeCast(CT_TextParagraphProperties.$, b);
                    break;
                case 601:
                    this.k = b;
                    break;
            }
        }
    }
    CT_TextListStyle.$t = /*@__PURE__*/ markType(CT_TextListStyle, 'CT_TextListStyle', Base.$, [ISupportSetProperty_$type]);
    return CT_TextListStyle;
})();
