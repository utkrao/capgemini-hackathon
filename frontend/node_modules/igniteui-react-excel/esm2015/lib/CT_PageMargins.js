/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, fromEnum, markType, getInstanceType } from "igniteui-react-core";
import { CultureInfo } from "igniteui-react-core";
import { parseNumber } from "igniteui-react-core";
/**
 * @hidden
 */
export let CT_PageMargins = /*@__PURE__*/ (() => {
    class CT_PageMargins extends Base {
        constructor() {
            super(...arguments);
            this.h = 0;
            this.j = 0;
            this.l = 0;
            this.b = 0;
            this.f = 0;
            this.d = 0;
        }
        get g() {
            return this.h;
        }
        set g(a) {
            this.h = a;
        }
        get i() {
            return this.j;
        }
        set i(a) {
            this.j = a;
        }
        get k() {
            return this.l;
        }
        set k(a) {
            this.l = a;
        }
        get a() {
            return this.b;
        }
        set a(a) {
            this.b = a;
        }
        get e() {
            return this.f;
        }
        set e(a) {
            this.f = a;
        }
        get c() {
            return this.d;
        }
        set c(a) {
            this.d = a;
        }
        static n(a, b, c, d, e, f, g) {
            b = 0;
            c = 0;
            d = 0;
            e = 0;
            f = 0;
            g = 0;
            for (let h of fromEnum(a.ab.u)) {
                switch (h.a.e(a.d)) {
                    case "l":
                        b = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    case "r":
                        c = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    case "t":
                        d = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    case "b":
                        e = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    case "header":
                        f = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    case "footer":
                        g = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    default: break;
                }
            }
            ;
            return {
                p1: b,
                p2: c,
                p3: d,
                p4: e,
                p5: f,
                p6: g
            };
        }
        static o(a, b, c, d, e, f, g, h) {
            a.ad.p(b, "cx");
            let i = null;
            let j = null;
            j = "b";
            i = c.toString();
            a.ad.h(j, i);
            j = "footer";
            i = d.toString();
            a.ad.h(j, i);
            j = "header";
            i = e.toString();
            a.ad.h(j, i);
            j = "l";
            i = f.toString();
            a.ad.h(j, i);
            j = "r";
            i = g.toString();
            a.ad.h(j, i);
            j = "t";
            i = h.toString();
            a.ad.h(j, i);
            ;
        }
        toString() {
            let a = getInstanceType(this);
            return a != null ? a.typeName : super.toString();
        }
    }
    CT_PageMargins.$t = /*@__PURE__*/ markType(CT_PageMargins, 'CT_PageMargins');
    return CT_PageMargins;
})();
