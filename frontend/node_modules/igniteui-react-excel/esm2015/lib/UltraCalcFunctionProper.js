/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { markType } from "igniteui-react-core";
import { StringBuilder } from "igniteui-react-core";
import { StringUtilities } from "./StringUtilities";
import { isLetter } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionProper = /*@__PURE__*/ (() => {
    class UltraCalcFunctionProper extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = a.pop();
            if (c.isError) {
                return new ExcelCalcValue(c.toErrorValue());
            }
            let d;
            if (c.isNull) {
                d = null;
            }
            else {
                let e = c.toString();
                let f = new StringBuilder(0);
                let g = false;
                let h = a._w;
                for (let i = 0; i < e.length; i++) {
                    let j = e.charAt(i);
                    if (isLetter(j)) {
                        if (g) {
                            f.h(StringUtilities.b(j, h));
                        }
                        else {
                            g = true;
                            f.h(StringUtilities.c(j, h));
                        }
                    }
                    else {
                        g = false;
                        f.h(j);
                    }
                }
                d = f.toString();
            }
            return new ExcelCalcValue(d);
        }
        get_name() {
            return "proper";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 1;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 1;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
    }
    UltraCalcFunctionProper.$t = /*@__PURE__*/ markType(UltraCalcFunctionProper, 'UltraCalcFunctionProper', BuiltInFunctionBase.$);
    return UltraCalcFunctionProper;
})();
