/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { InvalidOperationException } from "igniteui-react-core";
import { DocCoreUtils } from "./DocCoreUtils";
import { markType } from "igniteui-react-core";
/**
 * Represents an error that occurs when no password is used to open an encrypted document.
 */
export let DocumentEncryptedException = /*@__PURE__*/ (() => {
    class DocumentEncryptedException extends InvalidOperationException {
        constructor(..._rest) {
            let a;
            if (arguments.length === 0) {
                a = 0;
            }
            else if (arguments.length === 1) {
                a = 1;
            }
            else if (arguments.length === 2) {
                a = 2;
            }
            switch (a) {
                case 0:
                    {
                        super(1, DocCoreUtils.aa("LE_DocumentEncryptedException_DefaultMessage"));
                    }
                    break;
                case 1:
                    {
                        let message = _rest[0];
                        super(1, message);
                    }
                    break;
                case 2:
                    {
                        let message = _rest[0];
                        let innerException = _rest[1];
                        super(2, message, innerException);
                    }
                    break;
                default: throw new Error('Invalid arguments');
            }
        }
    }
    DocumentEncryptedException.$t = /*@__PURE__*/ markType(DocumentEncryptedException, 'DocumentEncryptedException', InvalidOperationException.$);
    return DocumentEncryptedException;
})();
