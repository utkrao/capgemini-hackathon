/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionGcd = /*@__PURE__*/ (() => {
    class UltraCalcFunctionGcd extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = this._getArguments(a, b, true);
            let d = c[0]._toInt();
            if (d < 0) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            let e;
            if (c.length == 1) {
                return new ExcelCalcValue(d);
            }
            for (let f = 1; f < c.length; f++) {
                let g = c[f];
                if (g.isError) {
                    return new ExcelCalcValue(g.toErrorValue());
                }
                e = g._toInt();
                if (e < 0) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(4));
                }
                d = UltraCalcFunctionGcd._ak(d, e);
            }
            return new ExcelCalcValue(d);
        }
        canParameterBeEnumerable(a) {
            return true;
        }
        get_name() {
            return "gcd";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 1;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 0x7FFFFFFF;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
        static _ak(a, b) {
            if (b == 0) {
                return a;
            }
            return UltraCalcFunctionGcd._ak(b, a % b);
        }
        doesParameterAllowIntermediateResultArray(a, b) {
            return (b == false);
        }
    }
    UltraCalcFunctionGcd.$t = /*@__PURE__*/ markType(UltraCalcFunctionGcd, 'UltraCalcFunctionGcd', BuiltInFunctionBase.$);
    return UltraCalcFunctionGcd;
})();
