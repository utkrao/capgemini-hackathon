/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
import { round10N } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionDB = /*@__PURE__*/ (() => {
    class UltraCalcFunctionDB extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = 12;
            if (b > 4) {
                c = a.pop()._toInt321();
            }
            let d = a.pop()._toInt321();
            if (d <= 0) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            let e;
            if (!((() => { let f = a.pop()._toDouble1(e); e = f.p0; return f.ret; })()) || e <= 0) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            let f, g;
            if (!((() => { let h = a.pop()._toDouble1(f); f = h.p0; return h.ret; })()) || !((() => { let h = a.pop()._toDouble1(g); g = h.p0; return h.ret; })())) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            let h = round10N(1 - Math.pow(f / g, 1 / e), 3);
            if (d > e + 1) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            if ((d == e + 1) && c == 12) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            let i = 0;
            let j = 0;
            let k = g;
            for (let l = 1; l <= d; l++) {
                if (l == 1) {
                    i = k * h * (c / 12);
                }
                else if ((l == (e + 1)) && c < 12) {
                    i = (k * h * (12 - c)) / 12;
                }
                else {
                    i = k * h;
                }
                j += i;
                k -= i;
            }
            return new ExcelCalcValue(i);
        }
        get_name() {
            return "db";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 4;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 5;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
    }
    UltraCalcFunctionDB.$t = /*@__PURE__*/ markType(UltraCalcFunctionDB, 'UltraCalcFunctionDB', BuiltInFunctionBase.$);
    return UltraCalcFunctionDB;
})();
