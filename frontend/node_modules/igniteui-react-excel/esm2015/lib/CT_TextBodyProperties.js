/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { CT_TextBodyPropertiesBase } from "./CT_TextBodyPropertiesBase";
import { toNullable, Boolean_$type, Number_$type, typeCast, markType } from "igniteui-react-core";
import { ST_TextAnchoringType_$type } from "./ST_TextAnchoringType";
import { ST_Coordinate32 } from "./ST_Coordinate32";
import { ST_TextHorzOverflowType_$type } from "./ST_TextHorzOverflowType";
import { ST_TextVertOverflowType_$type } from "./ST_TextVertOverflowType";
import { ST_TextWrappingType_$type } from "./ST_TextWrappingType";
import { ST_TextVerticalType_$type } from "./ST_TextVerticalType";
/**
 * @hidden
 */
export let CT_TextBodyProperties = /*@__PURE__*/ (() => {
    class CT_TextBodyProperties extends CT_TextBodyPropertiesBase {
        constructor() {
            super(...arguments);
            this.d = toNullable(ST_TextAnchoringType_$type, null);
            this.e = toNullable(Boolean_$type, null);
            this.f = toNullable(ST_Coordinate32.$, null);
            this.g = toNullable(Boolean_$type, null);
            this.h = toNullable(Boolean_$type, null);
            this.i = toNullable(Boolean_$type, null);
            this.j = toNullable(ST_Coordinate32.$, null);
            this.k = toNullable(Number_$type, null);
            this.l = toNullable(Boolean_$type, null);
            this.m = toNullable(ST_Coordinate32.$, null);
            this.n = toNullable(Number_$type, null);
            this.o = toNullable(Number_$type, null);
            this.p = toNullable(ST_TextHorzOverflowType_$type, null);
            this.c = false;
            this.q = toNullable(ST_TextVertOverflowType_$type, null);
            this.r = toNullable(ST_TextWrappingType_$type, null);
            this.s = toNullable(ST_Coordinate32.$, null);
            this.t = toNullable(ST_TextVerticalType_$type, null);
        }
        static b(a) {
            let b = null;
            if (a != null) {
                b = typeCast(CT_TextBodyProperties.$, a);
                if (b == null) {
                    b = new CT_TextBodyProperties();
                    b.a = a.a;
                }
            }
            return b || new CT_TextBodyProperties();
        }
    }
    CT_TextBodyProperties.$t = /*@__PURE__*/ markType(CT_TextBodyProperties, 'CT_TextBodyProperties', CT_TextBodyPropertiesBase.$);
    return CT_TextBodyProperties;
})();
