/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, typeCast, toNullable, Boolean_$type, Number_$type, markType } from "igniteui-react-core";
import { ST_UnsignedIntHex } from "./ST_UnsignedIntHex";
import { WorkbookColorInfo } from "./WorkbookColorInfo";
import { Color } from "igniteui-react-core";
import { WorkbookThemeColorType_$type } from "./WorkbookThemeColorType";
import { ExcelUtils } from "./ExcelUtils";
import { nullableEquals, unwrapNullable, nullableNotEquals, nullableLessThan } from "igniteui-react-core";
import { intSToU, u32BitwiseAnd } from "igniteui-react-core";
/**
 * @hidden
 */
export let ColorInfo = /*@__PURE__*/ (() => {
    class ColorInfo extends Base {
        constructor() {
            super(...arguments);
            this.i = toNullable(Boolean_$type, null);
            this.j = toNullable(Number_$type, null);
            this.k = toNullable(ST_UnsignedIntHex.$, null);
            this.l = toNullable(Number_$type, null);
            this.g = 0;
            this.d = null;
        }
        equals(a) {
            if (Base.referenceEquals(this, a)) {
                return true;
            }
            let b = typeCast(ColorInfo.$, a);
            return b != null && nullableEquals(this.i, b.i) && nullableEquals(this.j, b.j) && Base.equalsStatic(this.k, unwrapNullable(b.k)) && nullableEquals(this.l, b.l) && this.g == b.g;
        }
        getHashCode() {
            return Base.getHashCodeStatic(this.i) ^ Base.getHashCodeStatic(this.j) ^ Base.getHashCodeStatic(this.k) ^ Base.getHashCodeStatic(this.l) ^ (this.g);
        }
        get f() {
            return this.equals(ColorInfo.b);
        }
        static a(a, b, c) {
            let d = new ColorInfo();
            if (WorkbookColorInfo.l_op_Inequality(b, null)) {
                if (b.isAutomatic) {
                    d.i = toNullable(Boolean_$type, true);
                }
                if (b._color$i.hasValue) {
                    let e = b._color$i.value;
                    if (ExcelUtils.al(e)) {
                        d.j = toNullable(Number_$type, intSToU(a._b._palette$i._m(b, c)));
                    }
                    else {
                        d.k = toNullable(ST_UnsignedIntHex.$, ST_UnsignedIntHex.b(intSToU(ExcelUtils.cx(e))));
                    }
                }
                if (b._themeColorType$i.hasValue) {
                    d.l = toNullable(Number_$type, b._themeColorType$i.value);
                }
                if (b._tint$i.hasValue) {
                    d.g = b._tint$i.value;
                }
            }
            return d;
        }
        c(a) {
            if (this.f) {
                return null;
            }
            if (nullableEquals(this.i, true)) {
                return WorkbookColorInfo.automatic;
            }
            let b = toNullable(Number_$type, null);
            if (this.g != 0) {
                b = toNullable(Number_$type, this.g);
            }
            if (a == null) {
                return WorkbookColorInfo.automatic;
            }
            if (nullableNotEquals(this.l, null) && nullableLessThan(this.l, a._b._h.length)) {
                return new WorkbookColorInfo(toNullable(Color.$, null), toNullable(WorkbookThemeColorType_$type, this.l.value), b, true, false);
            }
            if (nullableNotEquals(this.j, null)) {
                return new WorkbookColorInfo(toNullable(Color.$, a._b._palette$i._af(this.j.value)), toNullable(WorkbookThemeColorType_$type, null), b, true, false);
            }
            if (nullableNotEquals(this.k, null)) {
                if ((u32BitwiseAnd(ST_UnsignedIntHex.h(this.k.value), 4278190080)) == 4278190080) {
                    return new WorkbookColorInfo(toNullable(Color.$, ExcelUtils.gz(ST_UnsignedIntHex.h(this.k.value))), toNullable(WorkbookThemeColorType_$type, null), b, true, true);
                }
                return null;
            }
            return null;
        }
        m(a, b) {
            this.i = a.i;
            if (a.d != null) {
                this.d = a.d._aj(b);
            }
            this.j = a.j;
            this.k = a.k;
            this.l = ST_UnsignedIntHex.f(a.k);
            this.g = a.g;
        }
    }
    ColorInfo.$t = /*@__PURE__*/ markType(ColorInfo, 'ColorInfo');
    ColorInfo.b = /*@__PURE__*/ new ColorInfo();
    return ColorInfo;
})();
