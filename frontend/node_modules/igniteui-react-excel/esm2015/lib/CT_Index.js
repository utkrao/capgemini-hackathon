/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, fromEnum, markType, getInstanceType } from "igniteui-react-core";
import { CultureInfo } from "igniteui-react-core";
import { parseUInt32_1 } from "igniteui-react-core";
/**
 * @hidden
 */
export let CT_Index = /*@__PURE__*/ (() => {
    class CT_Index extends Base {
        constructor() {
            super(...arguments);
            this.b = 0;
        }
        static c(a, b) {
            b = 0;
            for (let c of fromEnum(a.ab.u)) {
                switch (c.a.e(a.d)) {
                    case "v":
                        b = parseUInt32_1(c.d, CultureInfo.invariantCulture);
                        break;
                    default: break;
                }
            }
            return {
                p1: b
            };
        }
        static d(a, b, c) {
            a.ad.p(b, null);
            let d = null;
            let e = null;
            e = "v";
            d = c.toString();
            a.ad.h(e, d);
        }
        toString() {
            let a = getInstanceType(this);
            return a != null ? a.typeName : super.toString();
        }
    }
    CT_Index.$t = /*@__PURE__*/ markType(CT_Index, 'CT_Index');
    return CT_Index;
})();
