/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionDDB = /*@__PURE__*/ (() => {
    class UltraCalcFunctionDDB extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = b > 4 ? a.pop() : new ExcelCalcValue(2);
            let d = a.pop();
            let e = a.pop();
            let f = a.pop();
            let g = a.pop();
            if (c.isNull || d.isNull || e.isNull || f.isNull || g.isNull) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            let h, i, j, k, l;
            if (!((() => { let m = c._toDouble1(h); h = m.p0; return m.ret; })()) || !((() => { let m = d._toDouble1(i); i = m.p0; return m.ret; })()) || !((() => { let m = e._toDouble1(j); j = m.p0; return m.ret; })()) || !((() => { let m = f._toDouble1(k); k = m.p0; return m.ret; })()) || !((() => { let m = g._toDouble1(l); l = m.p0; return m.ret; })())) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(1));
            }
            let m = l * Math.pow(1 - h / j, i - 1);
            let n = m - (m * (1 - h / j));
            if (k > m - n) {
                if (m - k > 0) {
                    n = m - k;
                }
                else {
                    n = 0;
                }
            }
            return new ExcelCalcValue(n);
        }
        get_name() {
            return "ddb";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 4;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 5;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
    }
    UltraCalcFunctionDDB.$t = /*@__PURE__*/ markType(UltraCalcFunctionDDB, 'UltraCalcFunctionDDB', BuiltInFunctionBase.$);
    return UltraCalcFunctionDDB;
})();
