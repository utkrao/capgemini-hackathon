/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { UltraCalcFunctionDays360 } from "./UltraCalcFunctionDays360";
import { markType } from "igniteui-react-core";
import { timeSpanDays } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionIntRate = /*@__PURE__*/ (() => {
    class UltraCalcFunctionIntRate extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = 0;
            if (b > 4 && !((() => { let d = a.pop()._toDouble1(c); c = d.p0; return d.ret; })())) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            if (c < 0 || c > 4) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            let d, e;
            if (!((() => { let f = a.pop()._toDouble1(d); d = f.p0; return f.ret; })()) || !((() => { let f = a.pop()._toDouble1(e); e = f.p0; return f.ret; })())) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            if (e <= 0 || d <= 0) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            let f = a.pop();
            let g = f._toDateTime1();
            let h = a.pop();
            let i = h._toDateTime1();
            if (i >= g) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            let j;
            let k;
            if (c == 0 || c == 4) {
                let l = UltraCalcFunctionDays360._ak(i, g, c != 4 ? false : true);
                if (((() => { let m = l._toDouble1(k); k = m.p0; return m.ret; })()) == false) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(4));
                }
                j = 360;
            }
            else {
                if (c == 1) {
                    j = 365.2422;
                }
                else if (c == 2) {
                    j = 360;
                }
                else {
                    j = 365;
                }
                k = timeSpanDays((+g - +i));
            }
            return new ExcelCalcValue(((d - e) / e) * (j / k));
        }
        get_name() {
            return "intrate";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 4;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 5;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
    }
    UltraCalcFunctionIntRate.$t = /*@__PURE__*/ markType(UltraCalcFunctionIntRate, 'UltraCalcFunctionIntRate', BuiltInFunctionBase.$);
    return UltraCalcFunctionIntRate;
})();
