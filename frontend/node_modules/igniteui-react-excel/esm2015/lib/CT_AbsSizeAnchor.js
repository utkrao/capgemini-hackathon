/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType, getInstanceType } from "igniteui-react-core";
import { EG_ObjectChoices } from "./EG_ObjectChoices";
/**
 * @hidden
 */
export let CT_AbsSizeAnchor = /*@__PURE__*/ (() => {
    class CT_AbsSizeAnchor extends Base {
        constructor() {
            super();
            this.r = null;
            this.c = null;
            this.o = null;
            this.k = null;
            this.m = null;
            this.g = null;
            this.a = null;
            this.e = null;
            this.i = null;
        }
        get item() {
            return this.r;
        }
        set item(a) {
            this.r = a;
        }
        get d() {
            if (this.c == null) {
                this.c = new EG_ObjectChoices();
            }
            return this.c;
        }
        get p() {
            return this.o;
        }
        set p(a) {
            this.o = a;
        }
        get l() {
            return this.k;
        }
        set l(a) {
            this.k = a;
        }
        get n() {
            return this.m;
        }
        set n(a) {
            this.m = a;
        }
        get h() {
            return this.g;
        }
        set h(a) {
            this.g = a;
        }
        get b() {
            return this.a;
        }
        set b(a) {
            this.a = a;
        }
        get f() {
            return this.e;
        }
        set f(a) {
            this.e = a;
        }
        get j() {
            return this.i;
        }
        set j(a) {
            this.i = a;
        }
        toString() {
            let a = getInstanceType(this);
            return a != null ? a.typeName : super.toString();
        }
    }
    CT_AbsSizeAnchor.$t = /*@__PURE__*/ markType(CT_AbsSizeAnchor, 'CT_AbsSizeAnchor');
    return CT_AbsSizeAnchor;
})();
