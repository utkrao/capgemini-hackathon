/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, Number_$type, toNullable, fromEnum, typeGetValue, markType, getInstanceType } from "igniteui-react-core";
import { ISupportSetProperty_$type } from "./ISupportSetProperty";
import { List$1 } from "igniteui-react-core";
import { CultureInfo } from "igniteui-react-core";
import { parseUInt32_1 } from "igniteui-react-core";
/**
 * @hidden
 */
export let CT_Subtotals = /*@__PURE__*/ (() => {
    class CT_Subtotals extends Base {
        constructor() {
            super();
            this.a = null;
            this.a = new List$1(Number_$type, 0);
        }
        static b(a) {
            let b = toNullable(Number_$type, null);
            for (let c of fromEnum(a.ab.u)) {
                switch (c.a.e(a.d)) {
                    case "val":
                        b = toNullable(Number_$type, parseUInt32_1(c.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
            return b;
        }
        setProperty(a, b) {
            switch (a) {
                case 817:
                    this.a.add(typeGetValue(b));
                    break;
                default: break;
            }
        }
        toString() {
            let a = getInstanceType(this);
            return a != null ? a.typeName : super.toString();
        }
    }
    CT_Subtotals.$t = /*@__PURE__*/ markType(CT_Subtotals, 'CT_Subtotals', Base.$, [ISupportSetProperty_$type]);
    return CT_Subtotals;
})();
