/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
import { intDivide } from "igniteui-react-core";
import { dateGetDate, dateFromValues, dateAddDays } from "igniteui-react-core";
import { timeSpanDays } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionWeekNum = /*@__PURE__*/ (() => {
    class UltraCalcFunctionWeekNum extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = (b == 2) ? a.pop()._toInt321() : 1;
            let d;
            switch (c) {
                case 1:
                    d = 0;
                    break;
                case 2:
                    d = 1;
                    break;
                default: return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            let e = dateGetDate(a.pop()._toDateTime1());
            let f = dateFromValues(e.getFullYear(), 1, 1, 0, 0, 0, 0);
            let g = f;
            while (g.getDay() != d) {
                g = dateAddDays(g, 1);
            }
            let h = (intDivide((timeSpanDays((+e - +g))), 7)) + 1;
            if (+f != +g && e >= g) {
                h += 1;
            }
            return new ExcelCalcValue(h);
        }
        get_name() {
            return "weeknum";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 1;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 2;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
        doesParameterAllowIntermediateResultArray(a, b) {
            return (b == false);
        }
    }
    UltraCalcFunctionWeekNum.$t = /*@__PURE__*/ markType(UltraCalcFunctionWeekNum, 'UltraCalcFunctionWeekNum', BuiltInFunctionBase.$);
    return UltraCalcFunctionWeekNum;
})();
