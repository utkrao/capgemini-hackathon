/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { UltraCalcFunctionLookupBase } from "./UltraCalcFunctionLookupBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
import { truncate } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionHLookup = /*@__PURE__*/ (() => {
    class UltraCalcFunctionHLookup extends UltraCalcFunctionLookupBase {
        evaluate(a, b) {
            let c = null;
            if (b == 4) {
                c = a.pop();
            }
            let d = a.pop();
            let e = a.pop();
            let f = a.pop();
            if (f.isError) {
                return f;
            }
            if (e.isError) {
                return e;
            }
            if (d.isError) {
                return d;
            }
            if (c != null && c.isError) {
                return c;
            }
            if (f.isArray || f.isArrayGroup) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(3));
            }
            if (f.isNull) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(3));
            }
            let g = e._d(false);
            let h;
            if (((() => { let i = d._toDouble1(h); h = i.p0; return i.ret; })()) == false || h < 1) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(1));
            }
            let i = truncate(Math.floor(h)) - 1;
            let j;
            if (((() => { let k = UltraCalcFunctionLookupBase._ak(c, j); j = k.p1; return k.ret; })()) == false) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(1));
            }
            let k = g.getLength(0);
            let l = UltraCalcFunctionLookupBase._al(g._j(1, 0), f, j ? 1 : 0);
            if (l < 0 || k <= l) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(3));
            }
            let m = g.getLength(1);
            if (m <= i) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(0));
            }
            let n = g.item(l, i);
            n._y = true;
            return new ExcelCalcValue(n._getResolvedValue());
        }
        get_name() {
            return "hlookup";
        }
        get name() {
            return this.get_name();
        }
    }
    UltraCalcFunctionHLookup.$t = /*@__PURE__*/ markType(UltraCalcFunctionHLookup, 'UltraCalcFunctionHLookup', UltraCalcFunctionLookupBase.$);
    return UltraCalcFunctionHLookup;
})();
