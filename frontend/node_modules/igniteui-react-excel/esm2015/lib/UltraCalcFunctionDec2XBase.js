/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
import { intDivide } from "igniteui-react-core";
import { stringFormat } from "igniteui-react-core";
import { stringEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionDec2XBase = /*@__PURE__*/ (() => {
    class UltraCalcFunctionDec2XBase extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = 0;
            if (b == 2) {
                let d = a.pop()._toInt321();
                if (d <= 0) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(4));
                }
                else {
                    c = d;
                }
            }
            let e = a.pop();
            if (e.isError) {
                return new ExcelCalcValue(e.toErrorValue());
            }
            let f = e._toInt641();
            if (f < this._ap || f > this._al) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            let g = UltraCalcFunctionDec2XBase._at(f, this._ak, this._ap, this._al);
            if (c > 0) {
                if (g.length < 10 && g.length > c) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(4));
                }
            }
            else {
                c = 1;
            }
            while (g.length < c) {
                g = stringFormat("{0}{1}", "0", g);
            }
            return new ExcelCalcValue(g);
        }
        get_minArgs() {
            return 1;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 2;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
        static _at(a, b, c, d) {
            let e = false;
            if (a < 0) {
                a -= c;
                e = true;
            }
            a &= d;
            if (e) {
                a |= (-c);
            }
            let f = stringEmpty();
            if (a == 0) {
                f = "0";
            }
            while (a > 0) {
                let g = a % b;
                let h;
                if (g < 10) {
                    h = g.toString();
                }
                else {
                    g = g - 10;
                    h = String.fromCharCode((g + 65)).toString();
                }
                f = stringFormat("{0}{1}", h, f);
                a = intDivide(a, b);
            }
            return f;
        }
    }
    UltraCalcFunctionDec2XBase.$t = /*@__PURE__*/ markType(UltraCalcFunctionDec2XBase, 'UltraCalcFunctionDec2XBase', BuiltInFunctionBase.$);
    return UltraCalcFunctionDec2XBase;
})();
