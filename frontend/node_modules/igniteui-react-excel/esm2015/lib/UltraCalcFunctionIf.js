/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionIf = /*@__PURE__*/ (() => {
    class UltraCalcFunctionIf extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = null;
            if (b == 3) {
                c = a.pop();
            }
            let d = a.pop();
            let e = a.pop();
            if (e.isError) {
                return new ExcelCalcValue(e.toErrorValue());
            }
            if (e._toBoolean1() == true) {
                return d;
            }
            else {
                if (c == null) {
                    return new ExcelCalcValue(false);
                }
                return c;
            }
        }
        get_name() {
            return "if";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 2;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 3;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
        doesParameterAllowIntermediateResultArray(a, b) {
            return (b == false);
        }
        get__s() {
            return true;
        }
        _v(a) {
            if (a == 1 || a == 2) {
                return false;
            }
            return true;
        }
    }
    UltraCalcFunctionIf.$t = /*@__PURE__*/ markType(UltraCalcFunctionIf, 'UltraCalcFunctionIf', BuiltInFunctionBase.$);
    return UltraCalcFunctionIf;
})();
