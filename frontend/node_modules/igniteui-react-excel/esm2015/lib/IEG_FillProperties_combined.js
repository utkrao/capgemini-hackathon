/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Type, Base, markType } from "igniteui-react-core";
import { CT_BlipFillPropertiesBase } from "./CT_BlipFillPropertiesBase";
import { ISaveToXLSX_$type } from "./ISaveToXLSX";
import { DrawingMLMain } from "./DrawingMLMain";
/**
 * @hidden
 */
export let IEG_FillProperties_$type = /*@__PURE__*/ new Type(null, 'IEG_FillProperties');
/**
 * @hidden
 */
export let CT_BlipFillProperties = /*@__PURE__*/ (() => {
    class CT_BlipFillProperties extends CT_BlipFillPropertiesBase {
        constructor() {
            super(...arguments);
            this.d = null;
            this.e = null;
        }
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitCT_BlipFillProperties$i(this, b);
        }
    }
    CT_BlipFillProperties.$t = /*@__PURE__*/ markType(CT_BlipFillProperties, 'CT_BlipFillProperties', CT_BlipFillPropertiesBase.$, [IEG_FillProperties_$type]);
    return CT_BlipFillProperties;
})();
/**
 * @hidden
 */
export let CT_GroupFillProperties = /*@__PURE__*/ (() => {
    class CT_GroupFillProperties extends Base {
        constructor() {
            super(...arguments);
            this.a = null;
        }
        get elementName() {
            return DrawingMLMain.et;
        }
        saveX(a, b, c, d) {
            b.p(c, null);
            b.k();
        }
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitCT_GroupFillProperties$i(this, b);
        }
    }
    CT_GroupFillProperties.$t = /*@__PURE__*/ markType(CT_GroupFillProperties, 'CT_GroupFillProperties', Base.$, [IEG_FillProperties_$type, ISaveToXLSX_$type]);
    return CT_GroupFillProperties;
})();
/**
 * @hidden
 */
export let IEG_LineFillProperties_$type = /*@__PURE__*/ new Type(null, 'IEG_LineFillProperties');
/**
 * @hidden
 */
export let CT_NoFillProperties = /*@__PURE__*/ (() => {
    class CT_NoFillProperties extends Base {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitCT_NoFillProperties$i(this, b);
        }
        _accept$21$i($tArg, $tResult, a, b) {
            return a._visitCT_NoFillProperties$i(this, b);
        }
        get elementName() {
            return DrawingMLMain.gz;
        }
        saveX(a, b, c, d) {
            b.p(c, null);
            b.k();
        }
    }
    CT_NoFillProperties.$t = /*@__PURE__*/ markType(CT_NoFillProperties, 'CT_NoFillProperties', Base.$, [IEG_FillProperties_$type, IEG_LineFillProperties_$type, ISaveToXLSX_$type]);
    return CT_NoFillProperties;
})();
/**
 * @hidden
 */
export let CT_SolidFillProperties = /*@__PURE__*/ (() => {
    class CT_SolidFillProperties extends Base {
        constructor() {
            super(...arguments);
            this.a = null;
        }
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitCT_SolidFillProperties$i(this, b);
        }
        _accept$21$i($tArg, $tResult, a, b) {
            return a._visitCT_SolidFillProperties$i(this, b);
        }
    }
    CT_SolidFillProperties.$t = /*@__PURE__*/ markType(CT_SolidFillProperties, 'CT_SolidFillProperties', Base.$, [IEG_FillProperties_$type, IEG_LineFillProperties_$type]);
    return CT_SolidFillProperties;
})();
/**
 * @hidden
 */
export let IEG_FillPropertiesVisitor$2_$type = /*@__PURE__*/ new Type(null, 'IEG_FillPropertiesVisitor$2');
/**
 * @hidden
 */
export let IEG_LineFillPropertiesVisitor$2_$type = /*@__PURE__*/ new Type(null, 'IEG_LineFillPropertiesVisitor$2');
