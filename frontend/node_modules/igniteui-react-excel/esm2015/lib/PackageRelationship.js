/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
import { IPackageRelationship_$type } from "./IPackageRelationship";
import { Uri } from "igniteui-react-core";
/**
 * @hidden
 */
export let PackageRelationship = /*@__PURE__*/ (() => {
    class PackageRelationship extends Base {
        constructor(a, ..._rest) {
            super();
            this._sourceUri = null;
            this._targetUri = null;
            this._id = null;
            this._relationshipType = null;
            this._targetMode = 0;
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0:
                    {
                        let c = _rest[0];
                        let d = _rest[1];
                        let e = _rest[2];
                        let f = _rest[3];
                        let g = [new Uri(1, "/", 2), c, d, e, f];
                        {
                            let i = g[0];
                            let j = g[1];
                            let k = g[2];
                            let l = g[3];
                            let m = g[4];
                            this.sourceUri = i;
                            this.targetMode = k;
                            this.targetUri = j;
                            this.id = m;
                            this.relationshipType = l;
                        }
                    }
                    break;
                case 1:
                    {
                        let c = _rest[0];
                        let d = _rest[1];
                        let e = _rest[2];
                        let f = _rest[3];
                        let g = _rest[4];
                        this.sourceUri = c;
                        this.targetMode = e;
                        this.targetUri = d;
                        this.id = g;
                        this.relationshipType = f;
                    }
                    break;
            }
        }
        get sourceUri() {
            return this._sourceUri;
        }
        set sourceUri(a) {
            this._sourceUri = a;
        }
        get_targetUri() {
            return this._targetUri;
        }
        set_targetUri(a) {
            this._targetUri = a;
        }
        get targetUri() {
            return this.get_targetUri();
        }
        set targetUri(a) {
            this.set_targetUri(a);
        }
        get id() {
            return this._id;
        }
        set id(a) {
            this._id = a;
        }
        get relationshipType() {
            return this._relationshipType;
        }
        set relationshipType(a) {
            this._relationshipType = a;
        }
        get targetMode() {
            return this._targetMode;
        }
        set targetMode(a) {
            this._targetMode = a;
        }
    }
    PackageRelationship.$t = /*@__PURE__*/ markType(PackageRelationship, 'PackageRelationship', Base.$, [IPackageRelationship_$type]);
    return PackageRelationship;
})();
