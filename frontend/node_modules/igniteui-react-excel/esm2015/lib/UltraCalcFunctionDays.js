/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { markType } from "igniteui-react-core";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { nullableIsNull } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionDays = /*@__PURE__*/ (() => {
    class UltraCalcFunctionDays extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = a.pop();
            let d = a.pop();
            let e, f;
            if (d.isString) {
                let g;
                if (((() => { let h = d._aj(d._a0, g); g = h.p1; return h.ret; })()) == false) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(1));
                }
                e = (((h) => !nullableIsNull(h) ? h.value : -1)(ExcelCalcValue._dateTimeToExcelDate(d._o, g)));
            }
            else {
                e = d._toDouble3();
            }
            if (c.isString) {
                let h;
                if (((() => { let i = c._aj(c._a0, h); h = i.p1; return i.ret; })()) == false) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(1));
                }
                f = (((i) => !nullableIsNull(i) ? i.value : -1)(ExcelCalcValue._dateTimeToExcelDate(c._o, h)));
            }
            else {
                f = c._toDouble3();
            }
            let i = 2958466;
            if (f < 0 || f >= i || e < 0 || e >= i) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            let j = Math.floor(e) - Math.floor(f);
            return new ExcelCalcValue(j);
        }
        get_maxArgs() {
            return 2;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
        get_minArgs() {
            return 2;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_name() {
            return "days";
        }
        get name() {
            return this.get_name();
        }
    }
    UltraCalcFunctionDays.$t = /*@__PURE__*/ markType(UltraCalcFunctionDays, 'UltraCalcFunctionDays', BuiltInFunctionBase.$);
    return UltraCalcFunctionDays;
})();
