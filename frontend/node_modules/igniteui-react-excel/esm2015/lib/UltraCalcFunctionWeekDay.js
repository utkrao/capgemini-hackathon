/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
import { dateGetDate, dateFromValues, dateAddDays } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionWeekDay = /*@__PURE__*/ (() => {
    class UltraCalcFunctionWeekDay extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = (b == 2) ? a.pop()._toInt321() : 1;
            let d = dateGetDate(a.pop()._toDateTime1());
            if (true) {
                if (d <= dateFromValues(1900, 3, 1, 0, 0, 0, 0)) {
                    d = dateAddDays(d, -1);
                }
            }
            let e = d.getDay();
            let f = e;
            switch (c) {
                case 1:
                    f++;
                    break;
                case 2:
                    if (e == 0) {
                        f += 7;
                    }
                    break;
                case 3:
                    f += (e != 0) ? -1 : 6;
                    break;
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                    f = (f + 7 - (c - 10)) % 7 + 1;
                    break;
                default: return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            return new ExcelCalcValue(f);
        }
        get_name() {
            return "weekday";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 1;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 2;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
        doesParameterAllowIntermediateResultArray(a, b) {
            return true;
        }
    }
    UltraCalcFunctionWeekDay.$t = /*@__PURE__*/ markType(UltraCalcFunctionWeekDay, 'UltraCalcFunctionWeekDay', BuiltInFunctionBase.$);
    return UltraCalcFunctionWeekDay;
})();
