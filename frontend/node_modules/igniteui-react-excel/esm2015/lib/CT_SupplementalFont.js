/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, fromEnum, markType, getInstanceType } from "igniteui-react-core";
/**
 * @hidden
 */
export let CT_SupplementalFont = /*@__PURE__*/ (() => {
    class CT_SupplementalFont extends Base {
        constructor() {
            super(...arguments);
            this.b = null;
            this.e = null;
        }
        get a() {
            return this.b;
        }
        set a(a) {
            this.b = a;
        }
        get d() {
            return this.e;
        }
        set d(a) {
            this.e = a;
        }
        static f(a, b, c) {
            b = null;
            c = null;
            for (let d of fromEnum(a.ab.u)) {
                switch (d.a.e(a.d)) {
                    case "script":
                        b = d.d;
                        break;
                    case "typeface":
                        c = d.d;
                        break;
                    default: break;
                }
            }
            ;
            return {
                p1: b,
                p2: c
            };
        }
        static g(a, b, c, d) {
            a.ad.p(b, "a");
            let e = null;
            let f = null;
            if (c != null) {
                f = "script";
                e = c;
                a.ad.h(f, e);
            }
            if (d != null) {
                f = "typeface";
                e = d;
                a.ad.h(f, e);
            }
            ;
        }
        toString() {
            let a = getInstanceType(this);
            return a != null ? a.typeName : super.toString();
        }
    }
    CT_SupplementalFont.$t = /*@__PURE__*/ markType(CT_SupplementalFont, 'CT_SupplementalFont');
    return CT_SupplementalFont;
})();
