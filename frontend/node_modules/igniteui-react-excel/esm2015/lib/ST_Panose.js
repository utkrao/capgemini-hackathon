/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, Number_$type, markType } from "igniteui-react-core";
import { CultureInfo } from "igniteui-react-core";
import { Enumerable } from "igniteui-react-core";
import { DocCoreUtils } from "./DocCoreUtils";
import { intDivide } from "igniteui-react-core";
import { stringConcat } from "igniteui-react-core";
import { intToString1 } from "igniteui-react-core";
/**
 * @hidden
 */
export let ST_Panose = /*@__PURE__*/ (() => {
    class ST_Panose extends Base {
        constructor(a) {
            super();
            this.a = null;
            this.a = a;
        }
        toString() {
            return stringConcat(...Enumerable.a(String_$type, Enumerable.o(Number_$type, String_$type, this.a, (a) => intToString1(a, "X2", CultureInfo.invariantCulture))));
        }
        static b(a) {
            let b = new Array(intDivide(a.length, 2));
            for (let c = 0; c < b.length; c++) {
                let d = a.charAt(c * 2);
                let e = a.charAt(c * 2 + 1);
                b[c] = (DocCoreUtils.s(d) << 4 | DocCoreUtils.s(e));
            }
            return new ST_Panose(b);
        }
    }
    ST_Panose.$t = /*@__PURE__*/ markType(ST_Panose, 'ST_Panose');
    return ST_Panose;
})();
