/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, Type, markType, String_$type } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { Tuple$2 } from "igniteui-react-core";
import { MarkupCompatibility2006 } from "./MarkupCompatibility2006";
import { ICT_ShapePropertiesOwner_$type } from "./ICT_ShapePropertiesOwner";
import { ICT_ShapeStyleOwner_$type } from "./ICT_ShapeStyleOwner";
import { Tuple } from "igniteui-react-core";
/**
 * @hidden
 */
export let CT_GraphicalObject = /*@__PURE__*/ (() => {
    class CT_GraphicalObject extends Base {
        constructor() {
            super(...arguments);
            this.a = null;
        }
    }
    CT_GraphicalObject.$t = /*@__PURE__*/ markType(CT_GraphicalObject, 'CT_GraphicalObject');
    return CT_GraphicalObject;
})();
/**
 * @hidden
 */
export let IGraphicalObjectContent_$type = /*@__PURE__*/ new Type(null, 'IGraphicalObjectContent');
/**
 * @hidden
 */
export let AlternateGraphicalObjectContent = /*@__PURE__*/ (() => {
    class AlternateGraphicalObjectContent extends Base {
        constructor() {
            super(...arguments);
            this.b = null;
            this.a = null;
        }
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitAlternateGraphicalObjectContent$i(this, b);
        }
        getStrictElementName(a) {
            return MarkupCompatibility2006.aq;
        }
    }
    AlternateGraphicalObjectContent.$t = /*@__PURE__*/ markType(AlternateGraphicalObjectContent, 'AlternateGraphicalObjectContent', Base.$, [IGraphicalObjectContent_$type]);
    return AlternateGraphicalObjectContent;
})();
/**
 * @hidden
 */
export let CT_Connector = /*@__PURE__*/ (() => {
    class CT_Connector extends Base {
        constructor() {
            super(...arguments);
            this.b = false;
            this.c = null;
            this.a = null;
            this._spPr = null;
            this._style = null;
        }
        get spPr() {
            return this._spPr;
        }
        set spPr(a) {
            this._spPr = a;
        }
        get style() {
            return this._style;
        }
        set style(a) {
            this._style = a;
        }
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitCT_Connector$i(this, b);
        }
        getStrictElementName(a) {
            return a._t.aw;
        }
    }
    CT_Connector.$t = /*@__PURE__*/ markType(CT_Connector, 'CT_Connector', Base.$, [IGraphicalObjectContent_$type, ICT_ShapePropertiesOwner_$type, ICT_ShapeStyleOwner_$type]);
    return CT_Connector;
})();
/**
 * @hidden
 */
export let IShapesOwner_$type = /*@__PURE__*/ new Type(null, 'IShapesOwner');
/**
 * @hidden
 */
export let CT_GraphicalObjectData = /*@__PURE__*/ (() => {
    class CT_GraphicalObjectData extends Base {
        constructor() {
            super(...arguments);
            this.a = null;
            this.c = null;
        }
        get b() {
            if (this.a == null) {
                this.a = new List$1(Tuple$2.$.specialize(String_$type, Base.$), 0);
            }
            return this.a;
        }
        set b(a) {
            this.a = a;
        }
        addShape(a, b) {
            this.b.add(Tuple.a(String_$type, Base.$, b.getStrictElementName(a), b));
        }
    }
    CT_GraphicalObjectData.$t = /*@__PURE__*/ markType(CT_GraphicalObjectData, 'CT_GraphicalObjectData', Base.$, [IShapesOwner_$type]);
    return CT_GraphicalObjectData;
})();
/**
 * @hidden
 */
export let CT_GraphicalObjectFrame = /*@__PURE__*/ (() => {
    class CT_GraphicalObjectFrame extends Base {
        constructor() {
            super(...arguments);
            this.d = false;
            this.a = null;
            this.e = null;
            this.b = null;
            this.c = null;
        }
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitCT_GraphicalObjectFrame$i(this, b);
        }
        getStrictElementName(a) {
            return a._t.a4;
        }
    }
    CT_GraphicalObjectFrame.$t = /*@__PURE__*/ markType(CT_GraphicalObjectFrame, 'CT_GraphicalObjectFrame', Base.$, [IGraphicalObjectContent_$type]);
    return CT_GraphicalObjectFrame;
})();
/**
 * @hidden
 */
export let CT_GroupShape = /*@__PURE__*/ (() => {
    class CT_GroupShape extends Base {
        constructor() {
            super(...arguments);
            this.b = null;
            this.a = null;
            this.c = new List$1(IGraphicalObjectContent_$type, 0);
        }
        get d() {
            return this.c;
        }
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitCT_GroupShape$i(this, b);
        }
        getStrictElementName(a) {
            return a._t.a5;
        }
        addShape(a, b) {
            this.d.add(b);
        }
    }
    CT_GroupShape.$t = /*@__PURE__*/ markType(CT_GroupShape, 'CT_GroupShape', Base.$, [IGraphicalObjectContent_$type, IShapesOwner_$type]);
    return CT_GroupShape;
})();
/**
 * @hidden
 */
export let CT_Picture = /*@__PURE__*/ (() => {
    class CT_Picture extends Base {
        constructor() {
            super(...arguments);
            this.a = null;
            this.c = false;
            this.d = null;
            this.b = null;
            this._spPr = null;
        }
        get spPr() {
            return this._spPr;
        }
        set spPr(a) {
            this._spPr = a;
        }
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitCT_Picture$i(this, b);
        }
        getStrictElementName(a) {
            return a._t.bt;
        }
    }
    CT_Picture.$t = /*@__PURE__*/ markType(CT_Picture, 'CT_Picture', Base.$, [IGraphicalObjectContent_$type, ICT_ShapePropertiesOwner_$type]);
    return CT_Picture;
})();
/**
 * @hidden
 */
export let CT_Shape = /*@__PURE__*/ (() => {
    class CT_Shape extends Base {
        constructor() {
            super(...arguments);
            this.c = false;
            this.d = false;
            this.e = null;
            this.f = null;
            this.a = null;
            this._spPr = null;
            this._style = null;
            this.b = null;
        }
        get spPr() {
            return this._spPr;
        }
        set spPr(a) {
            this._spPr = a;
        }
        get style() {
            return this._style;
        }
        set style(a) {
            this._style = a;
        }
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitCT_Shape$i(this, b);
        }
        getStrictElementName(a) {
            return a._t.bx;
        }
    }
    CT_Shape.$t = /*@__PURE__*/ markType(CT_Shape, 'CT_Shape', Base.$, [IGraphicalObjectContent_$type, ICT_ShapePropertiesOwner_$type, ICT_ShapeStyleOwner_$type]);
    return CT_Shape;
})();
/**
 * @hidden
 */
export let IGraphicalObjectContentVisitor$2_$type = /*@__PURE__*/ new Type(null, 'IGraphicalObjectContentVisitor$2');
