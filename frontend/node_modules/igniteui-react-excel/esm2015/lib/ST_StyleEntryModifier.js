/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, toNullable, EnumUtil, markType } from "igniteui-react-core";
import { ST_StyleEntryModifierEnum_$type } from "./ST_StyleEntryModifierEnum";
/**
 * @hidden
 */
export let ST_StyleEntryModifier = /*@__PURE__*/ (() => {
    class ST_StyleEntryModifier extends Base {
        constructor() {
            super(...arguments);
            this.c = toNullable(ST_StyleEntryModifierEnum_$type, null);
            this.e = null;
        }
        get d() {
            return this.c;
        }
        set d(a) {
            this.c = a;
        }
        get h() {
            return this.e;
        }
        set h(a) {
            this.e = a;
        }
        static a(a) {
            return ST_StyleEntryModifier.b(a);
        }
        f() {
            return this.g();
        }
        static b(a) {
            let b = new ST_StyleEntryModifier();
            let c;
            if (((() => { let d = EnumUtil.tryParse$1(ST_StyleEntryModifierEnum_$type, a, true, c); c = d.p2; return d.ret; })())) {
                b.d = toNullable(ST_StyleEntryModifierEnum_$type, c);
            }
            else {
                b.h = a;
            }
            return b;
        }
        g() {
            if (this.d.hasValue) {
                return EnumUtil.getName(ST_StyleEntryModifierEnum_$type, this.d.value);
            }
            else {
                return this.h;
            }
        }
    }
    ST_StyleEntryModifier.$t = /*@__PURE__*/ markType(ST_StyleEntryModifier, 'ST_StyleEntryModifier');
    return ST_StyleEntryModifier;
})();
