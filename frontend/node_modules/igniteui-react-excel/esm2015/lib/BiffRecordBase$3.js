/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
/**
 * @hidden
 */
export let BiffRecordBase$3 = /*@__PURE__*/ (() => {
    class BiffRecordBase$3 extends Base {
        constructor($recordTypeEnum, $loadContextType, $saveContextType) {
            super();
            this.$recordTypeEnum = null;
            this.$loadContextType = null;
            this.$saveContextType = null;
            this.$recordTypeEnum = $recordTypeEnum;
            this.$loadContextType = $loadContextType;
            this.$saveContextType = $saveContextType;
            this.$type = this.$type.specialize(this.$recordTypeEnum, this.$loadContextType, this.$saveContextType);
        }
        get_e() {
            return false;
        }
        get e() {
            return this.get_e();
        }
        a(a) {
            return null;
        }
        b(a) {
            return null;
        }
        static g($recordTypeEnum, $loadContextType, $saveContextType) {
            if (BiffRecordBase$3.$t.specialize($recordTypeEnum, $loadContextType, $saveContextType).getStaticFields().f == null) {
                BiffRecordBase$3.$t.specialize($recordTypeEnum, $loadContextType, $saveContextType).getStaticFields().f = new Dictionary$2($recordTypeEnum, BiffRecordBase$3.$.specialize($recordTypeEnum, $loadContextType, $saveContextType), 0);
            }
            return BiffRecordBase$3.$t.specialize($recordTypeEnum, $loadContextType, $saveContextType).getStaticFields().f;
        }
        static c($recordTypeEnum, $loadContextType, $saveContextType, a, b) {
            let c;
            if (((() => { let d = BiffRecordBase$3.g($recordTypeEnum, $loadContextType, $saveContextType).tryGetValue(a, c); c = d.p1; return d.ret; })())) {
                return c;
            }
            c = b(a);
            BiffRecordBase$3.g($recordTypeEnum, $loadContextType, $saveContextType).addItem(a, c);
            return c;
        }
    }
    BiffRecordBase$3.$t = /*@__PURE__*/ markType(BiffRecordBase$3, 'BiffRecordBase$3', Base.$, null, function () {
        this.f = null;
    });
    return BiffRecordBase$3;
})();
