/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { WorksheetCell } from "./WorksheetCell";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionSheet = /*@__PURE__*/ (() => {
    class UltraCalcFunctionSheet extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = null;
            if (b == 1) {
                c = a.pop();
            }
            let d = null;
            if (b == 0) {
                if (WorksheetCell.l_op_Inequality(a.owningCell, null)) {
                    d = a.owningCell.worksheet;
                }
            }
            else if (c.isReference) {
                let e = c.toReference();
                d = e._u;
                if (d == null) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(7));
                }
            }
            else if (c.isString) {
                let f = c.toString();
                if (!a._r._worksheets$i.exists(f)) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(3));
                }
                d = c._o._worksheets$i._item1(f);
            }
            else if (c.isError) {
                return new ExcelCalcValue(c.toErrorValue());
            }
            else {
                return new ExcelCalcValue(new ExcelCalcErrorValue(3));
            }
            if (d == null) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(0));
            }
            return new ExcelCalcValue(d.sheetIndex + 1);
        }
        get_maxArgs() {
            return 1;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
        get_minArgs() {
            return 0;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_name() {
            return "sheet";
        }
        get name() {
            return this.get_name();
        }
    }
    UltraCalcFunctionSheet.$t = /*@__PURE__*/ markType(UltraCalcFunctionSheet, 'UltraCalcFunctionSheet', BuiltInFunctionBase.$);
    return UltraCalcFunctionSheet;
})();
