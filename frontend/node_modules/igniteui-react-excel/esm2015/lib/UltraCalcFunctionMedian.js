/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { List$1 } from "igniteui-react-core";
import { ExcelCalcFunction } from "./ExcelCalcFunction";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { Number_$type, markType } from "igniteui-react-core";
import { intDivide } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionMedian = /*@__PURE__*/ (() => {
    class UltraCalcFunctionMedian extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = new List$1(Number_$type, 0);
            if (!ExcelCalcFunction._t(a, b, c, true, true)) {
                return a.pop();
            }
            c.y();
            if (c.count == 0) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            let d;
            let e = intDivide(c.count, 2);
            if (c.count % 2 == 1) {
                d = c._inner[e];
            }
            else {
                let f = (c._inner[e - 1] + c._inner[e]) / 2;
                d = f;
            }
            return new ExcelCalcValue(d);
        }
        canParameterBeEnumerable(a) {
            return true;
        }
        get_name() {
            return "median";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 1;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 0x7FFFFFFF;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
        doesParameterAllowIntermediateResultArray(a, b) {
            return (b == false);
        }
    }
    UltraCalcFunctionMedian.$t = /*@__PURE__*/ markType(UltraCalcFunctionMedian, 'UltraCalcFunctionMedian', BuiltInFunctionBase.$);
    return UltraCalcFunctionMedian;
})();
