/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { List$1 } from "igniteui-react-core";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
import { truncate } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionChoose = /*@__PURE__*/ (() => {
    class UltraCalcFunctionChoose extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = new List$1(ExcelCalcValue.$, 0);
            for (let d = 0; d < b - 1; d++) {
                c.insert(0, a.pop());
            }
            let e = a.pop();
            if (e.isError) {
                return new ExcelCalcValue(e.toErrorValue());
            }
            let f;
            if (((() => { let g = e._toDouble1(f); f = g.p0; return g.ret; })()) == false) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(1));
            }
            let g = truncate(Math.floor(f));
            if (g < 1 || c.count < g) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(1));
            }
            return c._inner[g - 1];
        }
        get_name() {
            return "choose";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 2;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 0x7FFFFFFF;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
        doesParameterAllowIntermediateResultArray(a, b) {
            return (b == false);
        }
        get__s() {
            return true;
        }
        _v(a) {
            if (a == 0) {
                return true;
            }
            return false;
        }
    }
    UltraCalcFunctionChoose.$t = /*@__PURE__*/ markType(UltraCalcFunctionChoose, 'UltraCalcFunctionChoose', BuiltInFunctionBase.$);
    return UltraCalcFunctionChoose;
})();
