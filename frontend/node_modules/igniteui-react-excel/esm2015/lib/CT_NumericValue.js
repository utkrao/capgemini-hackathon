/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, fromEnum, markType } from "igniteui-react-core";
import { CultureInfo } from "igniteui-react-core";
import { ChartExElements } from "./ChartExElements";
import { numberToString, parseUInt32_1 } from "igniteui-react-core";
/**
 * @hidden
 */
export let CT_NumericValue = /*@__PURE__*/ (() => {
    class CT_NumericValue extends Base {
        constructor() {
            super(...arguments);
            this.d = 0;
            this.b = 0;
        }
        toString() {
            return numberToString(this.b, CultureInfo.invariantCulture);
        }
        static a(a) {
            let b;
            let c = CT_NumericValue.e(a, b);
            b = c.p1;
            return ((() => {
                let $ret = new CT_NumericValue();
                $ret.d = b;
                return $ret;
            })());
        }
        static e(a, b) {
            b = 0;
            for (let c of fromEnum(a.ab.u)) {
                switch (c.a.e(a.d)) {
                    case "type":
                        b = parseUInt32_1(c.d);
                        break;
                    default: break;
                }
            }
            return {
                p1: b
            };
        }
        static f(a, b, c) {
            a.ad.p(c, "cx");
            a.ad.h(ChartExElements.a7, b.toString());
        }
    }
    CT_NumericValue.$t = /*@__PURE__*/ markType(CT_NumericValue, 'CT_NumericValue');
    return CT_NumericValue;
})();
