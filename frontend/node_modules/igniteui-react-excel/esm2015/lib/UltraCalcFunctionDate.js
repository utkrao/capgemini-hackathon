/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { ExcelCalcFunction } from "./ExcelCalcFunction";
import { markType } from "igniteui-react-core";
import { truncate, intDivide } from "igniteui-react-core";
import { daysInMonth, dateFromValues } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionDate = /*@__PURE__*/ (() => {
    class UltraCalcFunctionDate extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = a.pop();
            let d = a.pop();
            let e = a.pop();
            if (e.isError) {
                return e;
            }
            let f;
            if (((() => { let g = e._toDouble1(f); f = g.p0; return g.ret; })()) == false) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(1));
            }
            if (d.isError) {
                return d;
            }
            let g;
            if (((() => { let h = d._toDouble1(g); g = h.p0; return h.ret; })()) == false) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(1));
            }
            if (c.isError) {
                return c;
            }
            let h;
            if (((() => { let i = c._toDouble1(h); h = i.p0; return i.ret; })()) == false) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(1));
            }
            let i = truncate(Math.floor(f));
            let j = truncate(Math.floor(g));
            let k = truncate(Math.floor(h));
            if (true) {
                let l = 1900;
                if (i < l) {
                    i += l;
                }
            }
            while (true) {
                let m = (j - 1);
                let n = intDivide(m, 12);
                if (n > 0) {
                    i += n;
                    j = (m % 12) + 1;
                }
                if (10000 <= i) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(4));
                }
                let o = daysInMonth(i, j);
                if (k <= o) {
                    break;
                }
                k -= o;
                j++;
            }
            if (true) {
                if (i < 1900) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(4));
                }
                let p = ExcelCalcFunction._l(a);
                if (p != null && p.dateSystem == 1 && i < 1904) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(4));
                }
                if (10000 <= i) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(4));
                }
            }
            else {
                if (i < 0) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(4));
                }
            }
            let q = dateFromValues(i, j, k, 0, 0, 0, 0);
            return new ExcelCalcValue(q);
        }
        get_name() {
            return "date";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 3;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 3;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
        doesParameterAllowIntermediateResultArray(a, b) {
            return true;
        }
    }
    UltraCalcFunctionDate.$t = /*@__PURE__*/ markType(UltraCalcFunctionDate, 'UltraCalcFunctionDate', BuiltInFunctionBase.$);
    return UltraCalcFunctionDate;
})();
