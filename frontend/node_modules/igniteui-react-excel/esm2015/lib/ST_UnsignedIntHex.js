/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { ValueType, toNullable, Number_$type, markStruct } from "igniteui-react-core";
import { CultureInfo } from "igniteui-react-core";
import { parseUInt32_2, intToString1 } from "igniteui-react-core";
/**
 * @hidden
 */
export let ST_UnsignedIntHex = /*@__PURE__*/ (() => {
    class ST_UnsignedIntHex extends ValueType {
        constructor(a, ..._rest) {
            super();
            this.g = 0;
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0: break;
                case 1:
                    {
                        let c = _rest[0];
                        this.g = c;
                    }
                    break;
            }
        }
        static d(a) {
            return ST_UnsignedIntHex.b(parseUInt32_2(a, 515, CultureInfo.invariantCulture));
        }
        toString() {
            return intToString1(this.g, "X8", CultureInfo.invariantCulture);
        }
        static b(a) {
            return new ST_UnsignedIntHex(1, a);
        }
        static e(a) {
            if (!a.hasValue) {
                return toNullable(ST_UnsignedIntHex.$, null);
            }
            return toNullable(ST_UnsignedIntHex.$, ST_UnsignedIntHex.b(a.value));
        }
        static h(a) {
            return a.g;
        }
        static f(a) {
            if (!a.hasValue) {
                return toNullable(Number_$type, null);
            }
            return toNullable(Number_$type, ST_UnsignedIntHex.h(a.value));
        }
    }
    ST_UnsignedIntHex.$t = /*@__PURE__*/ markStruct(ST_UnsignedIntHex, 'ST_UnsignedIntHex');
    ST_UnsignedIntHex.a = /*@__PURE__*/ new ST_UnsignedIntHex(0);
    return ST_UnsignedIntHex;
})();
