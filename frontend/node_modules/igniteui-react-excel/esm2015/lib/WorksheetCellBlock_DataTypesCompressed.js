/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { ValueType, markStruct } from "igniteui-react-core";
/**
 * @hidden
 */
export let WorksheetCellBlock_DataTypesCompressed = /*@__PURE__*/ (() => {
    class WorksheetCellBlock_DataTypesCompressed extends ValueType {
        constructor() {
            super();
            this.b = 0;
            this.c = 0;
            this.d = 0;
        }
        a(a) {
            switch (a) {
                case 0: return ((this.b & 224) >> 5);
                case 1: return ((this.b & 28) >> 2);
                case 2: return (((this.b & 3) << 1) | ((this.c & 128) >> 7));
                case 3: return ((this.c & 112) >> 4);
                case 4: return ((this.c & 14) >> 1);
                case 5: return (((this.c & 1) << 2) | ((this.d & 192) >> 6));
                case 6: return ((this.d & 56) >> 3);
                case 7: return (this.d & 7);
                default: return 0;
            }
        }
        e(a, b) {
            let c = b;
            switch (a) {
                case 0:
                    this.b = ((c << 5) | (this.b & 31));
                    break;
                case 1:
                    this.b = ((c << 2) | (this.b & 227));
                    break;
                case 2:
                    this.b = ((c >>> 1) | (this.b & 252));
                    this.c = (((c << 7) & 128) | (this.c & 127));
                    break;
                case 3:
                    this.c = ((c << 4) | (this.c & 143));
                    break;
                case 4:
                    this.c = ((c << 1) | (this.c & 241));
                    break;
                case 5:
                    this.c = ((c >>> 2) | (this.c & 254));
                    this.d = (((c << 6) & 192) | (this.d & 63));
                    break;
                case 6:
                    this.d = ((c << 3) | (this.d & 199));
                    break;
                case 7:
                    this.d = (c | (this.d & 248));
                    break;
                default: break;
            }
        }
    }
    WorksheetCellBlock_DataTypesCompressed.$t = /*@__PURE__*/ markStruct(WorksheetCellBlock_DataTypesCompressed, 'WorksheetCellBlock_DataTypesCompressed');
    return WorksheetCellBlock_DataTypesCompressed;
})();
