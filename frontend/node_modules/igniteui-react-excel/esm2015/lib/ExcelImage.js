/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, toNullable, markType } from "igniteui-react-core";
import { Guid } from "igniteui-react-core";
import { DocCoreUtils } from "./DocCoreUtils";
/**
 * @hidden
 */
export let ExcelImage = /*@__PURE__*/ (() => {
    class ExcelImage extends Base {
        constructor(a, ..._rest) {
            super();
            this.a = null;
            this.c = null;
            this.g = 0;
            this.f = 0;
            this.e = false;
            this.h = toNullable(Guid.$, null);
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0:
                    {
                        let c = _rest[0];
                        let d = _rest[1];
                        let e = _rest[2];
                        let f = _rest[3];
                        let g = _rest[4];
                        let h = _rest[5];
                        let i = [c, d];
                        {
                            let k = i[0];
                            let l = i[1];
                            this.c = k;
                            this.a = DocCoreUtils.c(l);
                        }
                        this.g = e;
                        this.f = f;
                        this.e = g;
                        this.h = toNullable(Guid.$, h);
                    }
                    break;
                case 1:
                    {
                        let c = _rest[0];
                        let d = _rest[1];
                        this.c = c;
                        this.a = DocCoreUtils.c(d);
                    }
                    break;
            }
        }
        get b() {
            return this.a;
        }
        get d() {
            return this.c;
        }
        i(a, b) {
            a.write(this.a, 0, this.a.length);
        }
    }
    ExcelImage.$t = /*@__PURE__*/ markType(ExcelImage, 'ExcelImage');
    return ExcelImage;
})();
