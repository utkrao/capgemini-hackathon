/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Type, Base, markType, toNullable } from "igniteui-react-core";
import { ST_RectAlignment_$type } from "./ST_RectAlignment";
import { ST_TileFlipMode_$type } from "./ST_TileFlipMode";
import { ST_Percentage } from "./ST_Percentage";
import { ST_Coordinate } from "./ST_Coordinate";
/**
 * @hidden
 */
export let IEG_FillModeProperties_$type = /*@__PURE__*/ new Type(null, 'IEG_FillModeProperties');
/**
 * @hidden
 */
export let CT_StretchInfoProperties = /*@__PURE__*/ (() => {
    class CT_StretchInfoProperties extends Base {
        constructor() {
            super(...arguments);
            this.a = null;
        }
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitCT_StretchInfoProperties$i(this, b);
        }
    }
    CT_StretchInfoProperties.$t = /*@__PURE__*/ markType(CT_StretchInfoProperties, 'CT_StretchInfoProperties', Base.$, [IEG_FillModeProperties_$type]);
    return CT_StretchInfoProperties;
})();
/**
 * @hidden
 */
export let CT_TileInfoProperties = /*@__PURE__*/ (() => {
    class CT_TileInfoProperties extends Base {
        constructor() {
            super(...arguments);
            this.a = toNullable(ST_RectAlignment_$type, null);
            this.b = toNullable(ST_TileFlipMode_$type, null);
            this.c = toNullable(ST_Percentage.$, null);
            this.d = toNullable(ST_Percentage.$, null);
            this.e = toNullable(ST_Coordinate.$, null);
            this.f = toNullable(ST_Coordinate.$, null);
        }
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitCT_TileInfoProperties$i(this, b);
        }
    }
    CT_TileInfoProperties.$t = /*@__PURE__*/ markType(CT_TileInfoProperties, 'CT_TileInfoProperties', Base.$, [IEG_FillModeProperties_$type]);
    return CT_TileInfoProperties;
})();
/**
 * @hidden
 */
export let IEG_FillModePropertiesVisitor$2_$type = /*@__PURE__*/ new Type(null, 'IEG_FillModePropertiesVisitor$2');
