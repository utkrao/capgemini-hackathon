/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, Number_$type, markType } from "igniteui-react-core";
import { ComboChartGroup } from "./ComboChartGroup";
import { List$1 } from "igniteui-react-core";
import { Series } from "./Series";
import { Dictionary$2 } from "igniteui-react-core";
import { intSToU } from "igniteui-react-core";
import { stringFormat } from "igniteui-react-core";
/**
 * @hidden
 */
export let SeriesGroup = /*@__PURE__*/ (() => {
    class SeriesGroup extends Base {
        constructor(a, b) {
            super();
            this.c = null;
            this.d = null;
            this.b = 0;
            this.a = 0;
            this.b = a;
            this.a = b;
            this.d = new List$1(Series.$, 0);
            this.c = new Dictionary$2(Series.$, Number_$type, 0);
        }
        get e() {
            return ComboChartGroup._at(this.b, this.a);
        }
        toString() {
            return stringFormat("{0}; {1} series", this.e, this.d.count);
        }
        h(a, b, c) {
            this.d.add(a);
            this.c.addItem(a, b);
        }
        g(a) {
            let b = 0;
            if (((() => { let c = this.c.tryGetValue(a, b); b = c.p1; return c.ret; })())) {
                return intSToU(b);
            }
            else {
            }
            return 0;
        }
    }
    SeriesGroup.$t = /*@__PURE__*/ markType(SeriesGroup, 'SeriesGroup');
    return SeriesGroup;
})();
