/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { List$1 } from "igniteui-react-core";
import { Number_$type, markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionAveDev = /*@__PURE__*/ (() => {
    class UltraCalcFunctionAveDev extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = 0;
            let d = this._getArguments(a, b, true);
            let e = new List$1(Number_$type, 2, d.length);
            for (let g = 0; g < d.length; g++) {
                let f = d[g];
                if (f == null) {
                    continue;
                }
                if (f.isError) {
                    return new ExcelCalcValue(f.toErrorValue());
                }
                let h;
                if (((() => { let i = f._toDouble1(h); h = i.p0; return i.ret; })())) {
                    c += h;
                    e.add(h);
                }
            }
            let i = c / e.count;
            let j = 0;
            for (let k = 0; k < e.count; k++) {
                j += Math.abs(e._inner[k] - i);
            }
            let l = j / e.count;
            return new ExcelCalcValue(l);
        }
        get_name() {
            return "avedev";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 1;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 0x7FFFFFFF;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
        doesParameterAllowIntermediateResultArray(a, b) {
            return (b == false);
        }
    }
    UltraCalcFunctionAveDev.$t = /*@__PURE__*/ markType(UltraCalcFunctionAveDev, 'UltraCalcFunctionAveDev', BuiltInFunctionBase.$);
    return UltraCalcFunctionAveDev;
})();
