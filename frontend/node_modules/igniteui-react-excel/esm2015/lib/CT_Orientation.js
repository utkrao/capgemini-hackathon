/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, fromEnum, markType, getInstanceType } from "igniteui-react-core";
import { ST_Orientation_$type } from "./ST_Orientation";
import { XmlNamespaceDefinitionBase } from "./XmlNamespaceDefinitionBase";
/**
 * @hidden
 */
export let CT_Orientation = /*@__PURE__*/ (() => {
    class CT_Orientation extends Base {
        constructor() {
            super();
            this.b = 0;
        }
        get a() {
            return this.b;
        }
        set a(a) {
            this.b = a;
        }
        static d(a, b) {
            b = 0;
            for (let c of fromEnum(a.ab.u)) {
                switch (c.a.e(a.d)) {
                    case "val":
                        b = XmlNamespaceDefinitionBase.b(ST_Orientation_$type, c.d);
                        break;
                    default: break;
                }
            }
            ;
            return {
                p1: b
            };
        }
        static e(a, b, c) {
            a.ad.p(b, "c");
            let d = null;
            let e = null;
            e = "val";
            d = XmlNamespaceDefinitionBase.p(ST_Orientation_$type, c);
            a.ad.h(e, d);
            ;
        }
        toString() {
            let a = getInstanceType(this);
            return a != null ? a.typeName : super.toString();
        }
    }
    CT_Orientation.$t = /*@__PURE__*/ markType(CT_Orientation, 'CT_Orientation');
    return CT_Orientation;
})();
