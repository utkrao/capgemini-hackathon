/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Type, markType } from "igniteui-react-core";
import { CT_PositiveFixedPercentage } from "./CT_PositiveFixedPercentage";
import { CT_FixedPercentage } from "./CT_FixedPercentage";
import { CT_PositivePercentage } from "./CT_PositivePercentage";
import { CT_Percentage } from "./CT_Percentage";
import { CT_ComplementTransform } from "./CT_ComplementTransform";
import { CT_GrayscaleTransform } from "./CT_GrayscaleTransform";
import { CT_PositiveFixedAngle } from "./CT_PositiveFixedAngle";
import { CT_Angle } from "./CT_Angle";
import { CT_InverseTransform } from "./CT_InverseTransform";
/**
 * @hidden
 */
export let IEG_ColorTransform_$type = /*@__PURE__*/ new Type(null, 'IEG_ColorTransform');
/**
 * @hidden
 */
export let IEG_ColorTransformVisitor$2_$type = /*@__PURE__*/ new Type(null, 'IEG_ColorTransformVisitor$2');
/**
 * @hidden
 */
export let ColorTransform_Alpha = /*@__PURE__*/ (() => {
    class ColorTransform_Alpha extends CT_PositiveFixedPercentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_Alpha$i(this, b);
        }
    }
    ColorTransform_Alpha.$t = /*@__PURE__*/ markType(ColorTransform_Alpha, 'ColorTransform_Alpha', CT_PositiveFixedPercentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_Alpha;
})();
/**
 * @hidden
 */
export let ColorTransform_AlphaOff = /*@__PURE__*/ (() => {
    class ColorTransform_AlphaOff extends CT_FixedPercentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_AlphaOff$i(this, b);
        }
    }
    ColorTransform_AlphaOff.$t = /*@__PURE__*/ markType(ColorTransform_AlphaOff, 'ColorTransform_AlphaOff', CT_FixedPercentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_AlphaOff;
})();
/**
 * @hidden
 */
export let ColorTransform_AlphaMod = /*@__PURE__*/ (() => {
    class ColorTransform_AlphaMod extends CT_PositivePercentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_AlphaMod$i(this, b);
        }
    }
    ColorTransform_AlphaMod.$t = /*@__PURE__*/ markType(ColorTransform_AlphaMod, 'ColorTransform_AlphaMod', CT_PositivePercentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_AlphaMod;
})();
/**
 * @hidden
 */
export let ColorTransform_Blue = /*@__PURE__*/ (() => {
    class ColorTransform_Blue extends CT_Percentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_Blue$i(this, b);
        }
    }
    ColorTransform_Blue.$t = /*@__PURE__*/ markType(ColorTransform_Blue, 'ColorTransform_Blue', CT_Percentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_Blue;
})();
/**
 * @hidden
 */
export let ColorTransform_BlueOff = /*@__PURE__*/ (() => {
    class ColorTransform_BlueOff extends CT_Percentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_BlueOff$i(this, b);
        }
    }
    ColorTransform_BlueOff.$t = /*@__PURE__*/ markType(ColorTransform_BlueOff, 'ColorTransform_BlueOff', CT_Percentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_BlueOff;
})();
/**
 * @hidden
 */
export let ColorTransform_BlueMod = /*@__PURE__*/ (() => {
    class ColorTransform_BlueMod extends CT_Percentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_BlueMod$i(this, b);
        }
    }
    ColorTransform_BlueMod.$t = /*@__PURE__*/ markType(ColorTransform_BlueMod, 'ColorTransform_BlueMod', CT_Percentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_BlueMod;
})();
/**
 * @hidden
 */
export let ColorTransform_Comp = /*@__PURE__*/ (() => {
    class ColorTransform_Comp extends CT_ComplementTransform {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_Comp$i(this, b);
        }
    }
    ColorTransform_Comp.$t = /*@__PURE__*/ markType(ColorTransform_Comp, 'ColorTransform_Comp', CT_ComplementTransform.$, [IEG_ColorTransform_$type]);
    return ColorTransform_Comp;
})();
/**
 * @hidden
 */
export let ColorTransform_Gray = /*@__PURE__*/ (() => {
    class ColorTransform_Gray extends CT_GrayscaleTransform {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_Gray$i(this, b);
        }
    }
    ColorTransform_Gray.$t = /*@__PURE__*/ markType(ColorTransform_Gray, 'ColorTransform_Gray', CT_GrayscaleTransform.$, [IEG_ColorTransform_$type]);
    return ColorTransform_Gray;
})();
/**
 * @hidden
 */
export let ColorTransform_Green = /*@__PURE__*/ (() => {
    class ColorTransform_Green extends CT_Percentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_Green$i(this, b);
        }
    }
    ColorTransform_Green.$t = /*@__PURE__*/ markType(ColorTransform_Green, 'ColorTransform_Green', CT_Percentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_Green;
})();
/**
 * @hidden
 */
export let ColorTransform_GreenOff = /*@__PURE__*/ (() => {
    class ColorTransform_GreenOff extends CT_Percentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_GreenOff$i(this, b);
        }
    }
    ColorTransform_GreenOff.$t = /*@__PURE__*/ markType(ColorTransform_GreenOff, 'ColorTransform_GreenOff', CT_Percentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_GreenOff;
})();
/**
 * @hidden
 */
export let ColorTransform_GreenMod = /*@__PURE__*/ (() => {
    class ColorTransform_GreenMod extends CT_Percentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_GreenMod$i(this, b);
        }
    }
    ColorTransform_GreenMod.$t = /*@__PURE__*/ markType(ColorTransform_GreenMod, 'ColorTransform_GreenMod', CT_Percentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_GreenMod;
})();
/**
 * @hidden
 */
export let ColorTransform_Hue = /*@__PURE__*/ (() => {
    class ColorTransform_Hue extends CT_PositiveFixedAngle {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_Hue$i(this, b);
        }
    }
    ColorTransform_Hue.$t = /*@__PURE__*/ markType(ColorTransform_Hue, 'ColorTransform_Hue', CT_PositiveFixedAngle.$, [IEG_ColorTransform_$type]);
    return ColorTransform_Hue;
})();
/**
 * @hidden
 */
export let ColorTransform_HueOff = /*@__PURE__*/ (() => {
    class ColorTransform_HueOff extends CT_Angle {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_HueOff$i(this, b);
        }
    }
    ColorTransform_HueOff.$t = /*@__PURE__*/ markType(ColorTransform_HueOff, 'ColorTransform_HueOff', CT_Angle.$, [IEG_ColorTransform_$type]);
    return ColorTransform_HueOff;
})();
/**
 * @hidden
 */
export let ColorTransform_HueMod = /*@__PURE__*/ (() => {
    class ColorTransform_HueMod extends CT_PositivePercentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_HueMod$i(this, b);
        }
    }
    ColorTransform_HueMod.$t = /*@__PURE__*/ markType(ColorTransform_HueMod, 'ColorTransform_HueMod', CT_PositivePercentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_HueMod;
})();
/**
 * @hidden
 */
export let ColorTransform_Inv = /*@__PURE__*/ (() => {
    class ColorTransform_Inv extends CT_InverseTransform {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_Inv$i(this, b);
        }
    }
    ColorTransform_Inv.$t = /*@__PURE__*/ markType(ColorTransform_Inv, 'ColorTransform_Inv', CT_InverseTransform.$, [IEG_ColorTransform_$type]);
    return ColorTransform_Inv;
})();
/**
 * @hidden
 */
export let ColorTransform_Lum = /*@__PURE__*/ (() => {
    class ColorTransform_Lum extends CT_Percentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_Lum$i(this, b);
        }
    }
    ColorTransform_Lum.$t = /*@__PURE__*/ markType(ColorTransform_Lum, 'ColorTransform_Lum', CT_Percentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_Lum;
})();
/**
 * @hidden
 */
export let ColorTransform_LumOff = /*@__PURE__*/ (() => {
    class ColorTransform_LumOff extends CT_Percentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_LumOff$i(this, b);
        }
    }
    ColorTransform_LumOff.$t = /*@__PURE__*/ markType(ColorTransform_LumOff, 'ColorTransform_LumOff', CT_Percentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_LumOff;
})();
/**
 * @hidden
 */
export let ColorTransform_LumMod = /*@__PURE__*/ (() => {
    class ColorTransform_LumMod extends CT_Percentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_LumMod$i(this, b);
        }
    }
    ColorTransform_LumMod.$t = /*@__PURE__*/ markType(ColorTransform_LumMod, 'ColorTransform_LumMod', CT_Percentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_LumMod;
})();
/**
 * @hidden
 */
export let ColorTransform_Red = /*@__PURE__*/ (() => {
    class ColorTransform_Red extends CT_Percentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_Red$i(this, b);
        }
    }
    ColorTransform_Red.$t = /*@__PURE__*/ markType(ColorTransform_Red, 'ColorTransform_Red', CT_Percentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_Red;
})();
/**
 * @hidden
 */
export let ColorTransform_RedOff = /*@__PURE__*/ (() => {
    class ColorTransform_RedOff extends CT_Percentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_RedOff$i(this, b);
        }
    }
    ColorTransform_RedOff.$t = /*@__PURE__*/ markType(ColorTransform_RedOff, 'ColorTransform_RedOff', CT_Percentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_RedOff;
})();
/**
 * @hidden
 */
export let ColorTransform_RedMod = /*@__PURE__*/ (() => {
    class ColorTransform_RedMod extends CT_Percentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_RedMod$i(this, b);
        }
    }
    ColorTransform_RedMod.$t = /*@__PURE__*/ markType(ColorTransform_RedMod, 'ColorTransform_RedMod', CT_Percentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_RedMod;
})();
/**
 * @hidden
 */
export let ColorTransform_Sat = /*@__PURE__*/ (() => {
    class ColorTransform_Sat extends CT_Percentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_Sat$i(this, b);
        }
    }
    ColorTransform_Sat.$t = /*@__PURE__*/ markType(ColorTransform_Sat, 'ColorTransform_Sat', CT_Percentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_Sat;
})();
/**
 * @hidden
 */
export let ColorTransform_SatOff = /*@__PURE__*/ (() => {
    class ColorTransform_SatOff extends CT_Percentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_SatOff$i(this, b);
        }
    }
    ColorTransform_SatOff.$t = /*@__PURE__*/ markType(ColorTransform_SatOff, 'ColorTransform_SatOff', CT_Percentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_SatOff;
})();
/**
 * @hidden
 */
export let ColorTransform_SatMod = /*@__PURE__*/ (() => {
    class ColorTransform_SatMod extends CT_Percentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_SatMod$i(this, b);
        }
    }
    ColorTransform_SatMod.$t = /*@__PURE__*/ markType(ColorTransform_SatMod, 'ColorTransform_SatMod', CT_Percentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_SatMod;
})();
/**
 * @hidden
 */
export let ColorTransform_Shade = /*@__PURE__*/ (() => {
    class ColorTransform_Shade extends CT_PositiveFixedPercentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_Shade$i(this, b);
        }
    }
    ColorTransform_Shade.$t = /*@__PURE__*/ markType(ColorTransform_Shade, 'ColorTransform_Shade', CT_PositiveFixedPercentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_Shade;
})();
/**
 * @hidden
 */
export let ColorTransform_Tint = /*@__PURE__*/ (() => {
    class ColorTransform_Tint extends CT_PositiveFixedPercentage {
        _accept$2$i($tArg, $tResult, a, b) {
            return a._visitColorTransform_Tint$i(this, b);
        }
    }
    ColorTransform_Tint.$t = /*@__PURE__*/ markType(ColorTransform_Tint, 'ColorTransform_Tint', CT_PositiveFixedPercentage.$, [IEG_ColorTransform_$type]);
    return ColorTransform_Tint;
})();
