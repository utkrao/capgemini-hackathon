/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { MathUtilities } from "./MathUtilities";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let UltraCalcFunctionCeiling = /*@__PURE__*/ (() => {
    class UltraCalcFunctionCeiling extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = 1;
            if (b > 1) {
                let d = a.pop();
                if (d.isError) {
                    return new ExcelCalcValue(d.toErrorValue());
                }
                if (!((() => { let e = d._toDouble1(c); c = e.p0; return e.ret; })())) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(4));
                }
            }
            let e = a.pop();
            if (e.isError) {
                return new ExcelCalcValue(e.toErrorValue());
            }
            let f;
            if (!((() => { let g = e._toDouble1(f); f = g.p0; return g.ret; })())) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            if (c == 0) {
                return new ExcelCalcValue(0);
            }
            let g = f < 0 ? -1 : 1;
            let h = c < 0 ? -1 : 1;
            if (true) {
                if (f != 0 && c != 0 && 0 < g && h < 0) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(4));
                }
            }
            let i = Math.ceil(MathUtilities.i(f / c)) * c;
            return new ExcelCalcValue(i);
        }
        get_name() {
            return "ceiling";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 1;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 2;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
        doesParameterAllowIntermediateResultArray(a, b) {
            return true;
        }
    }
    UltraCalcFunctionCeiling.$t = /*@__PURE__*/ markType(UltraCalcFunctionCeiling, 'UltraCalcFunctionCeiling', BuiltInFunctionBase.$);
    return UltraCalcFunctionCeiling;
})();
