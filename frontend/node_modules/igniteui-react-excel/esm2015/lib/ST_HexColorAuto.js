/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { ValueType, toNullable, typeCast, markStruct } from "igniteui-react-core";
import { DocCoreUtils } from "./DocCoreUtils";
/**
 * @hidden
 */
export let ST_HexColorAuto = /*@__PURE__*/ (() => {
    class ST_HexColorAuto extends ValueType {
        constructor() {
            super();
        }
        equals(a) {
            let b = toNullable(ST_HexColorAuto.$, typeCast(ST_HexColorAuto.$, a));
            if (ST_HexColorAuto.f(b, toNullable(ST_HexColorAuto.$, null))) {
                return false;
            }
            return ST_HexColorAuto.c(this, b.getValueOrDefault());
        }
        getHashCode() {
            return 0;
        }
        static b(a) {
            let b = ST_HexColorAuto.i(a);
            if (ST_HexColorAuto.f(b, toNullable(ST_HexColorAuto.$, null))) {
                return b.getValueOrDefault();
            }
            throw DocCoreUtils.n(ST_HexColorAuto.$, a);
        }
        static i(a) {
            if (a == "auto") {
                return toNullable(ST_HexColorAuto.$, ST_HexColorAuto.a);
            }
            return toNullable(ST_HexColorAuto.$, null);
        }
        toString() {
            return "auto";
        }
        static c(a, b) {
            return true;
        }
        static d(a, b) {
            if (!a.hasValue) {
                return !b.hasValue;
            }
            else if (!b.hasValue) {
                return false;
            }
            return ST_HexColorAuto.c(a.value, b.value);
        }
        static e(a, b) {
            return false;
        }
        static f(a, b) {
            if (!a.hasValue) {
                return b.hasValue;
            }
            else if (!b.hasValue) {
                return true;
            }
            return ST_HexColorAuto.e(a.value, b.value);
        }
    }
    ST_HexColorAuto.$t = /*@__PURE__*/ markStruct(ST_HexColorAuto, 'ST_HexColorAuto');
    ST_HexColorAuto.a = /*@__PURE__*/ new ST_HexColorAuto();
    return ST_HexColorAuto;
})();
