/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { FormulaTokenEvaluator$1 } from "./FormulaTokenEvaluator$1";
import { FormulaToken } from "./FormulaToken";
import { NameToken } from "./NameToken";
import { Function } from "./Function";
import { typeCast, markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let AddInFunctionResolver = /*@__PURE__*/ (() => {
    class AddInFunctionResolver extends FormulaTokenEvaluator$1 {
        constructor() {
            super(FormulaToken.$);
        }
        a5(a, b, c) {
            return a;
        }
        a6(a, b, c) {
            if (a.$function == Function._q) {
                let d = typeCast(NameToken.$, b);
                if (d != null && d.w != null) {
                    a.$function = Function._g0(d.w);
                    let e = d.u;
                    if (e._g == 0) {
                        d.u = this.c.f._a9.c(e.name, e.scope, true);
                    }
                }
            }
            return a.formulaToken;
        }
        a7(a) {
            return a;
        }
        a8(a, b) {
            return a;
        }
        a9(a, b) {
            return a;
        }
        static bi(a) {
            if (AddInFunctionResolver.bh == null) {
                AddInFunctionResolver.bh = new AddInFunctionResolver();
            }
            AddInFunctionResolver.bh.c = a;
            return AddInFunctionResolver.bh;
        }
    }
    AddInFunctionResolver.$t = /*@__PURE__*/ markType(AddInFunctionResolver, 'AddInFunctionResolver', /*@__PURE__*/ FormulaTokenEvaluator$1.$.specialize(FormulaToken.$));
    AddInFunctionResolver.bh = null;
    return AddInFunctionResolver;
})();
