/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, IComparable$1_$type, markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let PropertyTableBase_PropertyValue = /*@__PURE__*/ (() => {
    class PropertyTableBase_PropertyValue extends Base {
        constructor(a, ..._rest) {
            super();
            this._a = 0;
            this._e = false;
            this._c = false;
            this._h = null;
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0:
                    {
                        let c = _rest[0];
                        let d = _rest[1];
                        let e = [c, d, false, false];
                        {
                            let g = e[0];
                            let h = e[1];
                            let i = e[2];
                            let j = e[3];
                            this._a = g;
                            this._h = h;
                            this._e = i;
                            this._c = j;
                        }
                    }
                    break;
                case 1:
                    {
                        let c = _rest[0];
                        let d = _rest[1];
                        let e = _rest[2];
                        let f = _rest[3];
                        this._a = c;
                        this._h = d;
                        this._e = e;
                        this._c = f;
                    }
                    break;
            }
        }
        get _d() {
            return this._c;
        }
        get _f() {
            return this._e;
        }
        get _g() {
            if (this._e == false) {
                return false;
            }
            switch (this._a) {
                case 1728:
                case 1729:
                case 1284:
                case 407:
                case 341:
                case 337:
                case 338:
                case 345:
                case 342:
                case 343:
                case 326:
                case 325:
                case 899:
                case 1551:
                case 1615:
                case 1349:
                case 1487:
                case 1423:
                case 463: return true;
            }
            return false;
        }
        get _b() {
            return this._a;
        }
        get _i() {
            return this._h;
        }
        set _i(a) {
            this._h = a;
        }
        compareTo(a) {
            return this._a - a._a;
        }
    }
    PropertyTableBase_PropertyValue.$t = /*@__PURE__*/ /*@__PURE__*/ markType(PropertyTableBase_PropertyValue, 'PropertyTableBase_PropertyValue', Base.$, [/*@__PURE__*/ IComparable$1_$type.specialize(-1)]).initSelfReferences();
    return PropertyTableBase_PropertyValue;
})();
