/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { markType } from "igniteui-react-core";
import { CalcFunctionUtilities } from "./CalcFunctionUtilities";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
/**
 * @hidden
 */
export let UltraCalcFunctionSkew = /*@__PURE__*/ (() => {
    class UltraCalcFunctionSkew extends BuiltInFunctionBase {
        evaluate(a, b) {
            return UltraCalcFunctionSkew._ak(a, b, true);
        }
        static _ak(a, b, c) {
            return CalcFunctionUtilities.d(a, b, 1229, (d) => {
                if (d.count < 3) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(2));
                }
                let e = CalcFunctionUtilities.z(d);
                let f = CalcFunctionUtilities.t(d.count, e);
                let g = CalcFunctionUtilities.s(d, f);
                let h = CalcFunctionUtilities.y(g, d.count, c);
                if (h == 0) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(2));
                }
                let i = 0;
                for (let j = 0; j < d.count; j++) {
                    let k = (d._inner[j] - f) / h;
                    i += (k * k * k);
                }
                let l = c ? d.count / ((d.count - 1) * (d.count - 2)) : (1 / d.count);
                return new ExcelCalcValue(l * i);
            });
        }
        get_name() {
            return "skew";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 1;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 0x7FFFFFFF;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
    }
    UltraCalcFunctionSkew.$t = /*@__PURE__*/ markType(UltraCalcFunctionSkew, 'UltraCalcFunctionSkew', BuiltInFunctionBase.$);
    return UltraCalcFunctionSkew;
})();
