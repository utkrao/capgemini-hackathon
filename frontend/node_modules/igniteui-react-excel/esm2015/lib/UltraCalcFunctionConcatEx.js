/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { List$1 } from "igniteui-react-core";
import { StringBuilder } from "igniteui-react-core";
import { markType } from "igniteui-react-core";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
/**
 * @hidden
 */
export let UltraCalcFunctionConcatEx = /*@__PURE__*/ (() => {
    class UltraCalcFunctionConcatEx extends BuiltInFunctionBase {
        evaluate(a, b) {
            let c = new List$1(ExcelCalcValue.$, 0);
            this._ad(c, a, b, true);
            let d = new StringBuilder(0);
            for (let e = 0; e < c.count; e++) {
                let f = c._inner[e];
                if (f.isError) {
                    return new ExcelCalcValue(f.toErrorValue());
                }
                d.l(f.toString());
            }
            if (d.c > 32767) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(1));
            }
            return new ExcelCalcValue(d.toString());
        }
        get_name() {
            return "concat";
        }
        get name() {
            return this.get_name();
        }
        get_minArgs() {
            return 1;
        }
        get minArgs() {
            return this.get_minArgs();
        }
        get_maxArgs() {
            return 0x7FFFFFFF;
        }
        get maxArgs() {
            return this.get_maxArgs();
        }
    }
    UltraCalcFunctionConcatEx.$t = /*@__PURE__*/ markType(UltraCalcFunctionConcatEx, 'UltraCalcFunctionConcatEx', BuiltInFunctionBase.$);
    return UltraCalcFunctionConcatEx;
})();
