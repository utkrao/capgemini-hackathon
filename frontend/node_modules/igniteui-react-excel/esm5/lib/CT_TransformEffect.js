/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { Base, toNullable, Number_$type, fromEnum, markType, getInstanceType } from "igniteui-react-core";
import { CultureInfo } from "igniteui-react-core";
import { parseInt32_1, parseInt64_1 } from "igniteui-react-core";
/**
 * @hidden
 */
var CT_TransformEffect = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CT_TransformEffect, _super);
    function CT_TransformEffect() {
        var _this = _super.call(this) || this;
        _this.m = toNullable(Number_$type, null);
        _this.o = toNullable(Number_$type, null);
        _this.i = toNullable(Number_$type, null);
        _this.k = toNullable(Number_$type, null);
        _this.q = toNullable(Number_$type, null);
        _this.s = toNullable(Number_$type, null);
        return _this;
    }
    Object.defineProperty(CT_TransformEffect.prototype, "l", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_TransformEffect.prototype, "n", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_TransformEffect.prototype, "h", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_TransformEffect.prototype, "j", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_TransformEffect.prototype, "p", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_TransformEffect.prototype, "r", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
        },
        enumerable: false,
        configurable: true
    });
    CT_TransformEffect.a = function (a) {
        var b = toNullable(Number_$type, null);
        var c = toNullable(Number_$type, null);
        var d = toNullable(Number_$type, null);
        var e = toNullable(Number_$type, null);
        var f = toNullable(Number_$type, null);
        var g = toNullable(Number_$type, null);
        var h = CT_TransformEffect.u(a, b, c, d, e, f, g);
        b = h.p1;
        c = h.p2;
        d = h.p3;
        e = h.p4;
        f = h.p5;
        g = h.p6;
        return ((function () {
            var $ret = new CT_TransformEffect();
            $ret.h = d;
            $ret.j = e;
            $ret.l = b;
            $ret.n = c;
            $ret.p = f;
            $ret.r = g;
            return $ret;
        })());
    };
    CT_TransformEffect.u = function (a, b, c, d, e, f, g) {
        var e_1, _a;
        b = toNullable(Number_$type, null);
        c = toNullable(Number_$type, null);
        d = toNullable(Number_$type, null);
        e = toNullable(Number_$type, null);
        f = toNullable(Number_$type, null);
        g = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var h = _c.value;
                switch (h.a.e(a.d)) {
                    case "sx":
                        b = toNullable(Number_$type, parseInt32_1(h.d, CultureInfo.invariantCulture));
                        break;
                    case "sy":
                        c = toNullable(Number_$type, parseInt32_1(h.d, CultureInfo.invariantCulture));
                        break;
                    case "kx":
                        d = toNullable(Number_$type, parseInt32_1(h.d, CultureInfo.invariantCulture));
                        break;
                    case "ky":
                        e = toNullable(Number_$type, parseInt32_1(h.d, CultureInfo.invariantCulture));
                        break;
                    case "tx":
                        f = toNullable(Number_$type, parseInt64_1(h.d, CultureInfo.invariantCulture));
                        break;
                    case "ty":
                        g = toNullable(Number_$type, parseInt64_1(h.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        ;
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g
        };
    };
    CT_TransformEffect.v = function (a, b, c, d, e, f, g, h) {
        if (c === void 0) {
            c = toNullable(Number_$type, null);
        }
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        if (e === void 0) {
            e = toNullable(Number_$type, null);
        }
        if (f === void 0) {
            f = toNullable(Number_$type, null);
        }
        if (g === void 0) {
            g = toNullable(Number_$type, null);
        }
        if (h === void 0) {
            h = toNullable(Number_$type, null);
        }
        a.ad.p(b, "a");
        var i = null;
        var j = null;
        if (c.hasValue) {
            j = "kx";
            i = c.value.toString();
            a.ad.h(j, i);
        }
        if (d.hasValue) {
            j = "ky";
            i = d.value.toString();
            a.ad.h(j, i);
        }
        if (e.hasValue) {
            j = "sx";
            i = e.value.toString();
            a.ad.h(j, i);
        }
        if (f.hasValue) {
            j = "sy";
            i = f.value.toString();
            a.ad.h(j, i);
        }
        if (g.hasValue) {
            j = "tx";
            i = g.value.toString();
            a.ad.h(j, i);
        }
        if (h.hasValue) {
            j = "ty";
            i = h.value.toString();
            a.ad.h(j, i);
        }
        ;
    };
    CT_TransformEffect.prototype.toString = function () {
        var a = getInstanceType(this);
        return a != null ? a.typeName : _super.prototype.toString.call(this);
    };
    CT_TransformEffect.$t = markType(CT_TransformEffect, 'CT_TransformEffect');
    return CT_TransformEffect;
}(Base));
export { CT_TransformEffect };
