/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { markEnum } from "igniteui-react-core";
/**
 * Constants which determine the criteria for a format <see cref="ConditionBase">condition</see>.
 */
export var FormatConditionType = /*@__PURE__*/ (function (FormatConditionType) {
    /**
     * The format is based on the cell's value, which is evaluated against
     * one or more conditions to determine whether the value meets a particular
     * criteria.
     */
    FormatConditionType[FormatConditionType["CellValue"] = 0] = "CellValue";
    /**
     * The format is determined by evaluating a formula.
     */
    FormatConditionType[FormatConditionType["Expression"] = 1] = "Expression";
    /**
     * Represents a conditional formatting rule which applies gradations to
     * cell colors to indicate relative differences in the values of cells
     * which belong to the associated range.
     */
    FormatConditionType[FormatConditionType["ColorScale"] = 2] = "ColorScale";
    /**
     * Represents a conditional formatting rule which renders a color bar
     * inside the cell to indicate relative differences in the values of cells
     * which belong to the associated range.
     */
    FormatConditionType[FormatConditionType["DataBar"] = 3] = "DataBar";
    /**
     * Cells with the top/bottom <i>n</i> values are formatted, where <i>n</i>
     * represents a numeric, percentage, or percentile ranking. For example,
     * this type can be used to to enable a 'top ten' condition.
     */
    FormatConditionType[FormatConditionType["Rank"] = 4] = "Rank";
    /**
     * Represents a conditional formatting rule which displays an icon
     * inside the cell which indicates the cell's value as relative to
     * the highest and lowest value in the associated range.
     */
    FormatConditionType[FormatConditionType["IconSets"] = 5] = "IconSets";
    /**
     * Cells with values which are unique across the associated range are formatted.
     */
    FormatConditionType[FormatConditionType["UniqueValues"] = 6] = "UniqueValues";
    /**
     * Cells with values which are duplicated (non-unique) across the associated range are formatted.
     */
    FormatConditionType[FormatConditionType["DuplicateValues"] = 7] = "DuplicateValues";
    /**
     * The format is determined by whether the cell's value matches a literal string value.
     */
    FormatConditionType[FormatConditionType["TextString"] = 8] = "TextString";
    /**
     * Cells with no value are formatted. Note that foreground-related
     * properties such as font colors are not applicable.
     */
    FormatConditionType[FormatConditionType["Blanks"] = 9] = "Blanks";
    /**
     * The format is determined by whether a cell's date value falls within
     * a given period of time.
     */
    FormatConditionType[FormatConditionType["TimePeriod"] = 10] = "TimePeriod";
    /**
     * Cells with values which are greater than or less than the average value
     * for the associated region are formatted.
     */
    FormatConditionType[FormatConditionType["Average"] = 11] = "Average";
    /**
     * Cells with a non-empty value are formatted.
     */
    FormatConditionType[FormatConditionType["NoBlanks"] = 12] = "NoBlanks";
    /**
     * The format is applied to cells which contain an error.
     */
    FormatConditionType[FormatConditionType["Errors"] = 13] = "Errors";
    /**
     * The format is applied to cells which do not contain an error.
     */
    FormatConditionType[FormatConditionType["NoErrors"] = 14] = "NoErrors";
    return FormatConditionType;
})({});
/**
 * @hidden
 */
export var FormatConditionType_$type = /*@__PURE__*/ markEnum('FormatConditionType', 'CellValue,0|Expression,1|ColorScale,2|DataBar,3|Rank,4|IconSets,5|UniqueValues,6|DuplicateValues,7|TextString,8|Blanks,9|TimePeriod,10|Average,11|NoBlanks,12|Errors,13|NoErrors,14');
