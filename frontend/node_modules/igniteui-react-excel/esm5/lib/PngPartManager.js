/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ImagePartManagerBase } from "./ImagePartManagerBase";
import { ImageFormat } from "./ImageFormat";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
var PngPartManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PngPartManager, _super);
    function PngPartManager() {
        return _super.call(this) || this;
    }
    PngPartManager.prototype.get_s = function () {
        return "/xl/media/image.png";
    };
    Object.defineProperty(PngPartManager.prototype, "s", {
        get: function () {
            return this.get_s();
        },
        enumerable: false,
        configurable: true
    });
    PngPartManager.prototype.get_t = function () {
        return "/ppt/media/image.png";
    };
    Object.defineProperty(PngPartManager.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    PngPartManager.prototype.get_u = function () {
        return "/word/media/image.png";
    };
    Object.defineProperty(PngPartManager.prototype, "u", {
        get: function () {
            return this.get_u();
        },
        enumerable: false,
        configurable: true
    });
    PngPartManager.prototype.get_m = function () {
        return "image/png";
    };
    Object.defineProperty(PngPartManager.prototype, "m", {
        get: function () {
            return this.get_m();
        },
        enumerable: false,
        configurable: true
    });
    PngPartManager.prototype.r = function (a) {
        return ImageFormat.g;
    };
    PngPartManager.$t = markType(PngPartManager, 'PngPartManager', ImagePartManagerBase.$);
    PngPartManager.y = new PngPartManager();
    return PngPartManager;
}(ImagePartManagerBase));
export { PngPartManager };
