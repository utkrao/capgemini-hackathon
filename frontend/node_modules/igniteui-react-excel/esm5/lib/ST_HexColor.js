/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ValueType, toNullable, typeCast, markStruct } from "igniteui-react-core";
import { ST_HexColorAuto } from "./ST_HexColorAuto";
import { ST_HexColorRGB } from "./ST_HexColorRGB";
import { DocCoreUtils } from "./DocCoreUtils";
import { stringEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
var ST_HexColor = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ST_HexColor, _super);
    function ST_HexColor(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this.p = toNullable(ST_HexColorRGB.$, null);
        _this.q = toNullable(ST_HexColorAuto.$, null);
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0: break;
            case 1:
                {
                    var c = _rest[0];
                    _this.p = toNullable(ST_HexColorRGB.$, c);
                    _this.q = toNullable(ST_HexColorAuto.$, null);
                }
                break;
            case 2:
                {
                    var c = _rest[0];
                    _this.p = toNullable(ST_HexColorRGB.$, null);
                    _this.q = toNullable(ST_HexColorAuto.$, c);
                }
                break;
        }
        return _this;
    }
    ST_HexColor.prototype.equals = function (a) {
        var b = toNullable(ST_HexColor.$, typeCast(ST_HexColor.$, a));
        if (ST_HexColor.m(b, toNullable(ST_HexColor.$, null))) {
            return false;
        }
        return ST_HexColor.j(this, b.getValueOrDefault());
    };
    ST_HexColor.prototype.getHashCode = function () {
        if (ST_HexColorRGB.h(this.p, toNullable(ST_HexColorRGB.$, null))) {
            return this.p.value.getHashCode();
        }
        if (ST_HexColorAuto.f(this.q, toNullable(ST_HexColorAuto.$, null))) {
            return this.q.value.getHashCode();
        }
        return 0;
    };
    ST_HexColor.e = function (a) {
        var b = ST_HexColor.u(a);
        if (ST_HexColor.m(b, toNullable(ST_HexColor.$, null))) {
            return b.getValueOrDefault();
        }
        throw DocCoreUtils.n(ST_HexColor.$, a);
    };
    ST_HexColor.u = function (a) {
        var b = ST_HexColorAuto.i(a);
        if (ST_HexColorAuto.f(b, toNullable(ST_HexColorAuto.$, null))) {
            return toNullable(ST_HexColor.$, ST_HexColor.a(b.getValueOrDefault()));
        }
        var c = ST_HexColorRGB.p(a);
        if (ST_HexColorRGB.h(c, toNullable(ST_HexColorRGB.$, null))) {
            return toNullable(ST_HexColor.$, ST_HexColor.b(c.getValueOrDefault()));
        }
        return toNullable(ST_HexColor.$, null);
    };
    ST_HexColor.prototype.toString = function () {
        if (ST_HexColorRGB.h(this.p, toNullable(ST_HexColorRGB.$, null))) {
            return this.p.getValueOrDefault().toString();
        }
        if (ST_HexColorAuto.f(this.q, toNullable(ST_HexColorAuto.$, null))) {
            return this.q.getValueOrDefault().toString();
        }
        return stringEmpty();
    };
    Object.defineProperty(ST_HexColor.prototype, "h", {
        get: function () {
            return ST_HexColorAuto.f(this.q, toNullable(ST_HexColorAuto.$, null));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ST_HexColor.prototype, "i", {
        get: function () {
            return ST_HexColorRGB.h(this.p, toNullable(ST_HexColorRGB.$, null));
        },
        enumerable: false,
        configurable: true
    });
    ST_HexColor.j = function (a, b) {
        return ST_HexColorRGB.f(a.p, b.p) && ST_HexColorAuto.d(a.q, b.q);
    };
    ST_HexColor.k = function (a, b) {
        if (!a.hasValue) {
            return !b.hasValue;
        }
        else if (!b.hasValue) {
            return false;
        }
        return ST_HexColor.j(a.value, b.value);
    };
    ST_HexColor.l = function (a, b) {
        return !(ST_HexColor.j(a, b));
    };
    ST_HexColor.m = function (a, b) {
        if (!a.hasValue) {
            return b.hasValue;
        }
        else if (!b.hasValue) {
            return true;
        }
        return ST_HexColor.l(a.value, b.value);
    };
    ST_HexColor.b = function (a) {
        return new ST_HexColor(1, a);
    };
    ST_HexColor.t = function (a) {
        if (!a.hasValue) {
            return toNullable(ST_HexColor.$, null);
        }
        return toNullable(ST_HexColor.$, ST_HexColor.b(a.value));
    };
    ST_HexColor.f = function (a) {
        return a.p.value;
    };
    ST_HexColor.r = function (a) {
        if (!a.hasValue) {
            return toNullable(ST_HexColorRGB.$, null);
        }
        return toNullable(ST_HexColorRGB.$, ST_HexColor.f(a.value));
    };
    ST_HexColor.a = function (a) {
        return new ST_HexColor(2, a);
    };
    ST_HexColor.s = function (a) {
        if (!a.hasValue) {
            return toNullable(ST_HexColor.$, null);
        }
        return toNullable(ST_HexColor.$, ST_HexColor.a(a.value));
    };
    ST_HexColor.$t = markStruct(ST_HexColor, 'ST_HexColor');
    return ST_HexColor;
}(ValueType));
export { ST_HexColor };
