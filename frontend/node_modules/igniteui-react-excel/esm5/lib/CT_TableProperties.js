/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { Base, toNullable, Boolean_$type, fromEnum, markType, getInstanceType } from "igniteui-react-core";
import { ISupportSetProperty_$type } from "./ISupportSetProperty";
import { EG_FillProperties } from "./EG_FillProperties";
import { EG_EffectProperties } from "./EG_EffectProperties";
import { ST_OnOff } from "./ST_OnOff";
import { NotImplementedException } from "igniteui-react-core";
/**
 * @hidden
 */
var CT_TableProperties = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CT_TableProperties, _super);
    function CT_TableProperties() {
        var _this = _super.call(this) || this;
        _this.ac = null;
        _this.b = null;
        _this.aa = toNullable(Boolean_$type, null);
        _this.u = toNullable(Boolean_$type, null);
        _this.s = toNullable(Boolean_$type, null);
        _this.y = toNullable(Boolean_$type, null);
        _this.w = toNullable(Boolean_$type, null);
        _this.q = toNullable(Boolean_$type, null);
        _this.o = toNullable(Boolean_$type, null);
        _this.e = null;
        _this.c = null;
        return _this;
    }
    Object.defineProperty(CT_TableProperties.prototype, "item", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_TableProperties.prototype, "a", {
        get: function () {
            return this.b;
        },
        set: function (a) {
            this.b = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_TableProperties.prototype, "z", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_TableProperties.prototype, "t", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_TableProperties.prototype, "r", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_TableProperties.prototype, "x", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_TableProperties.prototype, "v", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_TableProperties.prototype, "p", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_TableProperties.prototype, "n", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_TableProperties.prototype, "f", {
        get: function () {
            if (this.e == null) {
                this.e = new EG_FillProperties();
            }
            return this.e;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_TableProperties.prototype, "d", {
        get: function () {
            if (this.c == null) {
                this.c = new EG_EffectProperties();
            }
            return this.c;
        },
        enumerable: false,
        configurable: true
    });
    CT_TableProperties.ae = function (a, b, c, d, e, f, g, h) {
        var e_1, _a;
        b = toNullable(Boolean_$type, null);
        c = toNullable(Boolean_$type, null);
        d = toNullable(Boolean_$type, null);
        e = toNullable(Boolean_$type, null);
        f = toNullable(Boolean_$type, null);
        g = toNullable(Boolean_$type, null);
        h = toNullable(Boolean_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var i = _c.value;
                switch (i.a.e(a.d)) {
                    case "rtl":
                        b = toNullable(Boolean_$type, ST_OnOff.e(i.d));
                        break;
                    case "firstRow":
                        c = toNullable(Boolean_$type, ST_OnOff.e(i.d));
                        break;
                    case "firstCol":
                        d = toNullable(Boolean_$type, ST_OnOff.e(i.d));
                        break;
                    case "lastRow":
                        e = toNullable(Boolean_$type, ST_OnOff.e(i.d));
                        break;
                    case "lastCol":
                        f = toNullable(Boolean_$type, ST_OnOff.e(i.d));
                        break;
                    case "bandRow":
                        g = toNullable(Boolean_$type, ST_OnOff.e(i.d));
                        break;
                    case "bandCol":
                        h = toNullable(Boolean_$type, ST_OnOff.e(i.d));
                        break;
                    default: break;
                }
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        ;
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h
        };
    };
    CT_TableProperties.af = function (a, b, c, d, e, f, g, h, i) {
        if (c === void 0) {
            c = toNullable(Boolean_$type, null);
        }
        if (d === void 0) {
            d = toNullable(Boolean_$type, null);
        }
        if (e === void 0) {
            e = toNullable(Boolean_$type, null);
        }
        if (f === void 0) {
            f = toNullable(Boolean_$type, null);
        }
        if (g === void 0) {
            g = toNullable(Boolean_$type, null);
        }
        if (h === void 0) {
            h = toNullable(Boolean_$type, null);
        }
        if (i === void 0) {
            i = toNullable(Boolean_$type, null);
        }
        a.ad.p(b, "a");
        var j = null;
        var k = null;
        if (c.hasValue) {
            k = "bandCol";
            j = ST_OnOff.g(c.value);
            a.ad.h(k, j);
        }
        if (d.hasValue) {
            k = "bandRow";
            j = ST_OnOff.g(d.value);
            a.ad.h(k, j);
        }
        if (e.hasValue) {
            k = "firstCol";
            j = ST_OnOff.g(e.value);
            a.ad.h(k, j);
        }
        if (f.hasValue) {
            k = "firstRow";
            j = ST_OnOff.g(f.value);
            a.ad.h(k, j);
        }
        if (g.hasValue) {
            k = "lastCol";
            j = ST_OnOff.g(g.value);
            a.ad.h(k, j);
        }
        if (h.hasValue) {
            k = "lastRow";
            j = ST_OnOff.g(h.value);
            a.ad.h(k, j);
        }
        if (i.hasValue) {
            k = "rtl";
            j = ST_OnOff.g(i.value);
            a.ad.h(k, j);
        }
        ;
    };
    CT_TableProperties.prototype.toString = function () {
        var a = getInstanceType(this);
        return a != null ? a.typeName : _super.prototype.toString.call(this);
    };
    CT_TableProperties.prototype.setProperty = function (a, b) {
        throw new NotImplementedException(0);
    };
    CT_TableProperties.$t = markType(CT_TableProperties, 'CT_TableProperties', Base.$, [ISupportSetProperty_$type]);
    return CT_TableProperties;
}(Base));
export { CT_TableProperties };
