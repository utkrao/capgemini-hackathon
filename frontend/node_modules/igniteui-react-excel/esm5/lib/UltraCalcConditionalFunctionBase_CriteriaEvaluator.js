/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, typeCast, String_$type, markType } from "igniteui-react-core";
import { MathUtilities } from "./MathUtilities";
import { ExcelUtils } from "./ExcelUtils";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { CalculationContext } from "./CalculationContext";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { stringIsNullOrEmpty, stringContains } from "igniteui-react-core";
/**
 * @hidden
 */
var UltraCalcConditionalFunctionBase_CriteriaEvaluator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcConditionalFunctionBase_CriteriaEvaluator, _super);
    function UltraCalcConditionalFunctionBase_CriteriaEvaluator(a, b) {
        var _this = _super.call(this) || this;
        _this.b = null;
        _this.f = null;
        _this.e = null;
        _this.c = 0;
        _this.g = null;
        _this.a = null;
        var c = a._w;
        _this.f = b != null ? b.toString() : null;
        var d;
        var e = typeCast(String_$type, b);
        if (stringIsNullOrEmpty(e) == false) {
            var f = true;
            var g_1 = null;
            switch (e.charAt(0)) {
                case '=':
                    _this.c = 0;
                    g_1 = e.substr(1);
                    break;
                case '<':
                    f = false;
                    if (e.length > 1) {
                        switch (e.charAt(1)) {
                            case '>':
                                _this.c = 1;
                                g_1 = e.substr(2);
                                break;
                            case '=':
                                _this.c = 5;
                                g_1 = e.substr(2);
                                break;
                        }
                    }
                    if (g_1 == null) {
                        _this.c = 4;
                        g_1 = e.substr(1);
                    }
                    break;
                case '>':
                    f = false;
                    if (e.length > 1 && e.charAt(1) == '=') {
                        _this.c = 3;
                        g_1 = e.substr(2);
                    }
                    else {
                        _this.c = 2;
                        g_1 = e.substr(1);
                    }
                    break;
                default:
                    g_1 = e;
                    break;
            }
            _this.f = g_1;
            var h_1;
            if (((function () { var i = MathUtilities.c(g_1.trim(), c, h_1); h_1 = i.p2; return i.ret; })())) {
                d = h_1;
                if (f == false) {
                    _this.f = null;
                }
            }
            else {
                if (stringContains(g_1, "*") || stringContains(g_1, "?")) {
                    var i_1;
                    _this.g = ((function () { var j = ExcelUtils.ep(g_1, i_1); i_1 = j.p1; return j.ret; })());
                }
                d = g_1;
            }
        }
        else {
            d = b;
        }
        _this.b = new ExcelCalcValue(d);
        _this.b._n = new CalculationContext(1, a, 64);
        _this.e = _this.b._getResolvedValue3(false);
        _this.a = typeCast(ExcelCalcErrorValue.$, d);
        return _this;
    }
    UltraCalcConditionalFunctionBase_CriteriaEvaluator.prototype.d = function (a) {
        var b = a._getResolvedValue3(false);
        if (ExcelCalcValue._aa(b)) {
            return this.a != null && this.a.code == b.code;
        }
        if (ExcelCalcValue._ac(b) != ExcelCalcValue._ac(this.e)) {
            return false;
        }
        var c = false;
        if (ExcelCalcValue._ag(b)) {
            if (this.f == null) {
                return false;
            }
            c = true;
        }
        if (ExcelCalcValue._u(b) != ExcelCalcValue._u(this.e)) {
            return false;
        }
        if (this.g != null) {
            return this.g.i(a._bp(b, a._a0)).i;
        }
        var d = ExcelCalcValue._a4(a, b, this.b, c ? this.f : this.e);
        switch (this.c) {
            case 0: return d == 0;
            case 1: return d != 0;
            case 2: return d > 0;
            case 3: return d >= 0;
            case 4: return d < 0;
            case 5: return d <= 0;
            default: return false;
        }
    };
    UltraCalcConditionalFunctionBase_CriteriaEvaluator.$t = markType(UltraCalcConditionalFunctionBase_CriteriaEvaluator, 'UltraCalcConditionalFunctionBase_CriteriaEvaluator');
    return UltraCalcConditionalFunctionBase_CriteriaEvaluator;
}(Base));
export { UltraCalcConditionalFunctionBase_CriteriaEvaluator };
