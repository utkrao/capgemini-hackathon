/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, typeCast, markType } from "igniteui-react-core";
import { ISupportSetProperty_$type } from "./ISupportSetProperty";
import { CT_TextParagraphProperties } from "./CT_TextParagraphProperties";
/**
 * @hidden
 */
var CT_TextListStyle = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CT_TextListStyle, _super);
    function CT_TextListStyle() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.a = null;
        _this.b = null;
        _this.c = null;
        _this.d = null;
        _this.e = null;
        _this.f = null;
        _this.g = null;
        _this.h = null;
        _this.i = null;
        _this.j = null;
        _this.k = null;
        return _this;
    }
    CT_TextListStyle.prototype.setProperty = function (a, b) {
        switch (a) {
            case 454:
                this.a = typeCast(CT_TextParagraphProperties.$, b);
                break;
            case 945:
                this.b = typeCast(CT_TextParagraphProperties.$, b);
                break;
            case 946:
                this.c = typeCast(CT_TextParagraphProperties.$, b);
                break;
            case 947:
                this.d = typeCast(CT_TextParagraphProperties.$, b);
                break;
            case 948:
                this.e = typeCast(CT_TextParagraphProperties.$, b);
                break;
            case 949:
                this.f = typeCast(CT_TextParagraphProperties.$, b);
                break;
            case 950:
                this.g = typeCast(CT_TextParagraphProperties.$, b);
                break;
            case 951:
                this.h = typeCast(CT_TextParagraphProperties.$, b);
                break;
            case 952:
                this.i = typeCast(CT_TextParagraphProperties.$, b);
                break;
            case 953:
                this.j = typeCast(CT_TextParagraphProperties.$, b);
                break;
            case 601:
                this.k = b;
                break;
        }
    };
    CT_TextListStyle.$t = markType(CT_TextListStyle, 'CT_TextListStyle', Base.$, [ISupportSetProperty_$type]);
    return CT_TextListStyle;
}(Base));
export { CT_TextListStyle };
