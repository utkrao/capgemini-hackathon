/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { markEnum } from "igniteui-react-core";
/**
 * Represents the various operators which can be used when validating the cell value against two constraints.
 * @see [[TwoConstraintDataValidationRule]]
 * @see [[TwoConstraintDataValidationRule.setLowerConstraint]]
 * @see [[TwoConstraintDataValidationRule.setLowerConstraint]]
 * @see [[TwoConstraintDataValidationRule.setUpperConstraint]]
 * @see [[TwoConstraintDataValidationRule.setUpperConstraint]]
 * @see [[TwoConstraintDataValidationRule.getLowerConstraintFormula]]
 * @see [[TwoConstraintDataValidationRule.getLowerConstraintFormula]]
 * @see [[TwoConstraintDataValidationRule.setLowerConstraintFormula]]
 * @see [[TwoConstraintDataValidationRule.setLowerConstraintFormula]]
 * @see [[TwoConstraintDataValidationRule.getUpperConstraintFormula]]
 * @see [[TwoConstraintDataValidationRule.getUpperConstraintFormula]]
 * @see [[TwoConstraintDataValidationRule.setUpperConstraintFormula]]
 * @see [[TwoConstraintDataValidationRule.setUpperConstraintFormula]]
 * @see [[ValueConstraintDataValidationRule.validationCriteria]]
 */
export var TwoConstraintDataValidationOperator = /*@__PURE__*/ (function (TwoConstraintDataValidationOperator) {
    /**
     * Only allows the cell value if it or its text length, depending on the validation criteria, is between the
     * constraints applied to the validation rule. The constraints are inclusive.
     */
    TwoConstraintDataValidationOperator[TwoConstraintDataValidationOperator["Between"] = 0] = "Between";
    /**
     * Only allows the cell value if it or its text length, depending on the validation criteria, is not between the
     * constraints applied to the validation rule. The constraints are exclusive.
     */
    TwoConstraintDataValidationOperator[TwoConstraintDataValidationOperator["NotBetween"] = 1] = "NotBetween";
    return TwoConstraintDataValidationOperator;
})({});
/**
 * @hidden
 */
export var TwoConstraintDataValidationOperator_$type = /*@__PURE__*/ markEnum('TwoConstraintDataValidationOperator', 'Between,0|NotBetween,1');
