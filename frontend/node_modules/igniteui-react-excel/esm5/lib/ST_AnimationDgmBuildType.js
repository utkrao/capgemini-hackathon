/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, toNullable, markType, EnumUtil } from "igniteui-react-core";
import { ST_AnimationBuildType_$type } from "./ST_AnimationBuildType";
import { ST_AnimationDgmOnlyBuildType_$type } from "./ST_AnimationDgmOnlyBuildType";
/**
 * @hidden
 */
var ST_AnimationDgmBuildType = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ST_AnimationDgmBuildType, _super);
    function ST_AnimationDgmBuildType() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.c = toNullable(ST_AnimationBuildType_$type, null);
        _this.d = toNullable(ST_AnimationDgmOnlyBuildType_$type, null);
        return _this;
    }
    Object.defineProperty(ST_AnimationDgmBuildType.prototype, "e", {
        get: function () {
            return this.c;
        },
        set: function (a) {
            this.c = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ST_AnimationDgmBuildType.prototype, "f", {
        get: function () {
            return this.d;
        },
        set: function (a) {
            this.d = a;
        },
        enumerable: false,
        configurable: true
    });
    ST_AnimationDgmBuildType.a = function (a) {
        return ST_AnimationDgmBuildType.b(a);
    };
    ST_AnimationDgmBuildType.prototype.g = function () {
        return this.h();
    };
    ST_AnimationDgmBuildType.b = function (a) {
        var b = new ST_AnimationDgmBuildType();
        var c;
        var d;
        if (((function () { var e = EnumUtil.tryParse$1(ST_AnimationBuildType_$type, a, true, d); d = e.p2; return e.ret; })())) {
            b.e = toNullable(ST_AnimationBuildType_$type, d);
        }
        else if (((function () { var e = EnumUtil.tryParse$1(ST_AnimationDgmOnlyBuildType_$type, a, true, c); c = e.p2; return e.ret; })())) {
            b.f = toNullable(ST_AnimationDgmOnlyBuildType_$type, c);
        }
        return b;
    };
    ST_AnimationDgmBuildType.prototype.h = function () {
        return this.e.hasValue ? this.e.toString() : this.f.hasValue ? this.f.toString() : null;
    };
    ST_AnimationDgmBuildType.$t = markType(ST_AnimationDgmBuildType, 'ST_AnimationDgmBuildType');
    return ST_AnimationDgmBuildType;
}(Base));
export { ST_AnimationDgmBuildType };
