/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __generator, __read, __spreadArray, __values } from "tslib";
import { Base, Type, markType, ValueType, markStruct, IDisposable_$type, Stream, toNullable, String_$type, fromEnum, typeCast, typeCastObjTo$t, Boolean_$type, Number_$type, toEnum, getBoxIfEnum, enumGetBox, EnumUtil, typeGetValue } from "igniteui-react-core";
import { IPackagePart_$type } from "./IPackagePart";
import { ST_ConformanceClass_$type } from "./ST_ConformanceClass";
import { Stack$1 } from "igniteui-react-core";
import { IPackage_$type } from "./IPackage";
import { WorkItem } from "./WorkItem";
import { HashSet$1 } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { OfficeDocumentManager_PartRelationshipCounter } from "./OfficeDocumentManager_PartRelationshipCounter";
import { InvalidPackage } from "./InvalidPackage";
import { WorkItemExtensions } from "./WorkItemExtensions";
import { Uri } from "igniteui-react-core";
import { UriUtilities } from "./UriUtilities";
import { Tuple$2 } from "igniteui-react-core";
import { Async } from "./Async";
import { DocCoreUtils } from "./DocCoreUtils";
import { IPackageRelationship_$type } from "./IPackageRelationship";
import { PackageUtilities } from "./PackageUtilities";
import { IInvalidPackageRelationshipTarget_$type } from "./IInvalidPackageRelationshipTarget";
import { Tuple } from "igniteui-react-core";
import { IPackagePartEx_$type } from "./IPackagePartEx";
import { StringUtilities } from "./StringUtilities";
import { IOPath } from "igniteui-react-core";
import { OverrideContentTypePart } from "./OverrideContentTypePart";
import { List$1 } from "igniteui-react-core";
import { RoundTripControlData } from "./RoundTripControlData";
import { nullableEquals, nullableNotEquals } from "igniteui-react-core";
import { stringEmpty, stringIsNullOrEmpty, stringJoin1, stringToString$1, stringIsNullOrWhiteSpace } from "igniteui-react-core";
import { CultureInfo } from "igniteui-react-core";
import { Enumerable } from "igniteui-react-core";
import { XmlReadManager_AlternateContentChoiceContext } from "./XmlReadManager_AlternateContentChoiceContext";
import { XmlReader } from "igniteui-react-core";
import { ContextStack } from "./ContextStack";
import { arrayCopy2 } from "igniteui-react-core";
import { stringSplit, trimStart, trimEnd } from "igniteui-react-core";
import { XmlWriter } from "igniteui-react-core";
import { StringBuilder } from "igniteui-react-core";
import { ImageData } from "./ImageData";
import { ImageFormat } from "./ImageFormat";
import { XmlTextReader } from "igniteui-react-core";
import { Encoding } from "igniteui-react-core";
import { XmlTextWriter } from "igniteui-react-core";
import { NotImplementedException } from "igniteui-react-core";
import { BinaryData } from "./BinaryData";
import { RoundTripPartData } from "./RoundTripPartData";
import { EqualityComparer$1 } from "igniteui-react-core";
import { ST_FillMethod_$type } from "./ST_FillMethod";
import { ST_OnOff } from "./ST_OnOff";
import { tryParseBool } from "igniteui-react-core";
import { parseInt8_1, parseNumber, numberToString, parseInt32_1, tryParseInt32_2, parseInt64_1, parseInt16_1, parseUInt8_1, parseUInt32_1, parseUInt64_1, parseUInt16_1, intSToU } from "igniteui-react-core";
import { ST_Angle } from "./ST_Angle";
import { ST_FixedPercentage } from "./ST_FixedPercentage";
import { ST_LineEndType_$type } from "./ST_LineEndType";
import { ST_LineEndWidth_$type } from "./ST_LineEndWidth";
import { ST_LineEndLength_$type } from "./ST_LineEndLength";
import { ST_DrawingElementId } from "./ST_DrawingElementId";
import { ST_Percentage } from "./ST_Percentage";
import { ST_Coordinate } from "./ST_Coordinate";
import { ST_PositiveFixedAngle } from "./ST_PositiveFixedAngle";
import { ST_PositiveFixedPercentage } from "./ST_PositiveFixedPercentage";
import { ST_PositivePercentage } from "./ST_PositivePercentage";
import { ST_PositiveCoordinate } from "./ST_PositiveCoordinate";
import { ST_Panose } from "./ST_Panose";
import { ST_BlipCompression_$type } from "./ST_BlipCompression";
import { ST_TextVertOverflowType_$type } from "./ST_TextVertOverflowType";
import { ST_TextHorzOverflowType_$type } from "./ST_TextHorzOverflowType";
import { ST_TextVerticalType_$type } from "./ST_TextVerticalType";
import { ST_TextWrappingType_$type } from "./ST_TextWrappingType";
import { ST_Coordinate32 } from "./ST_Coordinate32";
import { ST_TextAnchoringType_$type } from "./ST_TextAnchoringType";
import { ST_FontCollectionIndex_$type } from "./ST_FontCollectionIndex";
import { ST_LineWidth } from "./ST_LineWidth";
import { ST_LineCap_$type } from "./ST_LineCap";
import { ST_CompoundLine_$type } from "./ST_CompoundLine";
import { ST_PenAlignment_$type } from "./ST_PenAlignment";
import { ST_TextMargin } from "./ST_TextMargin";
import { ST_TextIndentLevelType } from "./ST_TextIndentLevelType";
import { ST_TextIndent } from "./ST_TextIndent";
import { ST_TextAlignType_$type } from "./ST_TextAlignType";
import { ST_TextFontAlignType_$type } from "./ST_TextFontAlignType";
import { ST_PresetColorVal_$type } from "./ST_PresetColorVal";
import { ST_ShapeType_$type } from "./ST_ShapeType";
import { ST_TextFontSize } from "./ST_TextFontSize";
import { ST_TextUnderlineType_$type } from "./ST_TextUnderlineType";
import { ST_TextStrikeType_$type } from "./ST_TextStrikeType";
import { ST_TextCapsType_$type } from "./ST_TextCapsType";
import { ST_TextPoint } from "./ST_TextPoint";
import { ST_SchemeColorVal_$type } from "./ST_SchemeColorVal";
import { ST_HexColorRGB } from "./ST_HexColorRGB";
import { ST_SystemColorVal_$type } from "./ST_SystemColorVal";
import { ST_BlackWhiteMode_$type } from "./ST_BlackWhiteMode";
import { ST_VectorBaseType_$type } from "./ST_VectorBaseType";
import { IVariantValueContainer_$type } from "./IVariantValueContainer";
import { OfficeDocumentDocPropsVTypes_VariantPlaceholder } from "./OfficeDocumentDocPropsVTypes_VariantPlaceholder";
import { CT_Vector } from "./CT_Vector";
import { ST_Ext_$type } from "./ST_Ext";
import { ST_TrueFalse } from "./ST_TrueFalse";
import { ST_FillType_$type } from "./ST_FillType";
import { ST_ImageAspect_$type } from "./ST_ImageAspect";
import { ST_ConnectType_$type } from "./ST_ConnectType";
import { ST_ShadowType_$type } from "./ST_ShadowType";
import { ST_HrAlign_$type } from "./ST_HrAlign";
import { ST_InsetMode_$type } from "./ST_InsetMode";
import { ST_ConnectorType_$type } from "./ST_ConnectorType";
import { ST_BWMode_$type } from "./ST_BWMode";
import { ST_TrueFalseBlank } from "./ST_TrueFalseBlank";
import { ST_StrokeLineStyle_$type } from "./ST_StrokeLineStyle";
import { ST_StrokeJoinStyle_$type } from "./ST_StrokeJoinStyle";
import { ST_StrokeEndCap_$type } from "./ST_StrokeEndCap";
import { ST_StrokeArrowType_$type } from "./ST_StrokeArrowType";
import { ST_StrokeArrowWidth_$type } from "./ST_StrokeArrowWidth";
import { ST_StrokeArrowLength_$type } from "./ST_StrokeArrowLength";
/**
 * @hidden
 */
var AlternateContentChoice = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AlternateContentChoice, _super);
    function AlternateContentChoice(a) {
        var _rest = [];
        for (var _0 = 1; _0 < arguments.length; _0++) {
            _rest[_0 - 1] = arguments[_0];
        }
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.b = null;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = [[c], d];
                    {
                        var g = e[0];
                        var h = e[1];
                        _this.a = h;
                        _this.b = g;
                    }
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    _this.a = d;
                    _this.b = c;
                }
                break;
        }
        return _this;
    }
    AlternateContentChoice.$t = markType(AlternateContentChoice, 'AlternateContentChoice');
    return AlternateContentChoice;
}(Base));
export { AlternateContentChoice };
/**
 * @hidden
 */
var AttributeValue = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AttributeValue, _super);
    function AttributeValue(a) {
        var _rest = [];
        for (var _0 = 1; _0 < arguments.length; _0++) {
            _rest[_0 - 1] = arguments[_0];
        }
        var _this = _super.call(this) || this;
        _this.a = new QualifiedNameInfo();
        _this.d = null;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0: break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    var f = _rest[3];
                    _this.a = new QualifiedNameInfo(1, c, d, e);
                    _this.d = f;
                }
                break;
            case 2:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    _this.a = c;
                    _this.d = d;
                }
                break;
        }
        return _this;
    }
    AttributeValue.prototype.toString = function () {
        return this.a.toString() + "=\"" + this.d + "\"";
    };
    AttributeValue.prototype.e = function (a, b, c, d) {
        this.a.i(a, b, c);
        this.d = d;
    };
    Object.defineProperty(AttributeValue.prototype, "b", {
        get: function () {
            return this.a.c;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AttributeValue.prototype, "c", {
        get: function () {
            if (this.a.g == "http://www.w3.org/2000/xmlns/") {
                if (this.a.f == "xmlns" || this.a.h == "xmlns") {
                    return true;
                }
            }
            return false;
        },
        enumerable: false,
        configurable: true
    });
    AttributeValue.$t = markStruct(AttributeValue, 'AttributeValue');
    return AttributeValue;
}(ValueType));
export { AttributeValue };
/**
 * @hidden
 */
var ElementLoadCallbacks = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ElementLoadCallbacks, _super);
    function ElementLoadCallbacks(a) {
        var _rest = [];
        for (var _0 = 1; _0 < arguments.length; _0++) {
            _rest[_0 - 1] = arguments[_0];
        }
        var _this = _super.call(this) || this;
        _this.b = null;
        _this.a = null;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0: break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    _this.b = c;
                    _this.a = d;
                }
                break;
        }
        return _this;
    }
    Object.defineProperty(ElementLoadCallbacks.prototype, "c", {
        get: function () {
            return this.b == null && this.a == null;
        },
        enumerable: false,
        configurable: true
    });
    ElementLoadCallbacks.$t = markStruct(ElementLoadCallbacks, 'ElementLoadCallbacks');
    return ElementLoadCallbacks;
}(ValueType));
export { ElementLoadCallbacks };
/**
 * @hidden
 */
var OfficeDocumentManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(OfficeDocumentManager, _super);
    function OfficeDocumentManager(a, b, c, d) {
        var _this = _super.call(this) || this;
        _this._c = null;
        _this._ap = toNullable(ST_ConformanceClass_$type, null);
        _this._ab = false;
        _this._aj = null;
        _this._al = null;
        _this._ag = null;
        _this._am = null;
        _this._aq = null;
        _this._ah = null;
        _this._ai = null;
        _this._y = null;
        _this._a = null;
        _this._ao = null;
        _this._h = null;
        _this._i = null;
        _this._m = null;
        _this._ax = null;
        _this._av = null;
        _this._aw = null;
        _this._af = false;
        _this._aj = new HashSet$1(String_$type, 0);
        _this._al = new Stack$1(IPackagePart_$type);
        _this._ag = new Dictionary$2(String_$type, Base.$, 0);
        _this._am = new Stack$1(OfficeDocumentManager_PartRelationshipCounter.$);
        _this._am.h(new OfficeDocumentManager_PartRelationshipCounter());
        _this._aq = {};
        _this._ah = new Dictionary$2(String_$type, PartManagerBase.$, 0);
        _this._ai = new Dictionary$2(String_$type, PartManagerBase.$, 0);
        _this._ap = d;
        _this._ab = c;
        _this._ao = b;
        if (a != null && _this._ao != null) {
            _this._a = new InvalidPackage();
            var e = WorkItemExtensions.f(IPackage_$type, a._open$i(_this._ao, _this._ab ? 3 : 2), function (f) {
                _this._a = WorkItemExtensions.m(IPackage_$type, f);
                return null;
            });
            _this._m = e;
        }
        else {
            _this._m = WorkItem.g(Base.$, null);
        }
        return _this;
    }
    OfficeDocumentManager.prototype.dispose = function () {
        this.disposeCore(true);
    };
    OfficeDocumentManager.prototype._a0 = function (a, b) {
        return this._a1(a, b.o(this._z));
    };
    OfficeDocumentManager.prototype._a1 = function (a, b) {
        return this._a2(a, b, 0);
    };
    OfficeDocumentManager.prototype._az = function (a, b) {
        return this._a2(a, b, 1);
    };
    OfficeDocumentManager.prototype._ay = function (a, b) {
        var c;
        if (((function () { var d = UriUtilities.a(a, c); c = d.p1; return d.ret; })())) {
            return this._az(c, b);
        }
        return this._a2(null, b, 1, a);
    };
    OfficeDocumentManager.prototype._j = function (a, b, c) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = null;
        }
        var d = a.n(this._v);
        if (a.g) {
            d = this._a6(d, a.h == false);
        }
        return this._k(a, d, b, c);
    };
    OfficeDocumentManager.prototype._k = function (a, b, c, d) {
        var _this = this;
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = null;
        }
        var e = UriUtilities.b(b);
        var f;
        if (d != null && this._ae(d)) {
            f = d;
            this._be(e, a.o(this._z), 0, f, null);
        }
        else {
            f = this._a2(e, a.o(this._z), 0);
        }
        var g = this._c;
        return WorkItemExtensions.g(Tuple$2.$.specialize(Uri.$, String_$type), Async.h(function () {
            if (g != null) {
                _this._al.h(g);
            }
            var h = _this._a.createPart(e, a.m);
            _this._c = h;
            _this._am.h(new OfficeDocumentManager_PartRelationshipCounter());
            return WorkItemExtensions.a(Async.o(Stream.$, h.getStream(2, 2), function (i) {
                var j = a.e(_this, i);
                return j.b(c);
            }), function () {
                _this._am.e();
                _this._ag.addItem(b, c);
            });
        }, function () {
            if (g != null) {
                _this._al.e();
            }
            _this._c = g;
        }), function () { return Tuple.a(Uri.$, String_$type, e, f); });
    };
    OfficeDocumentManager.prototype._l = function (a, b, c, d) {
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = null;
        }
        if (b == null) {
            return null;
        }
        var e = this._w(a);
        if (e == null) {
            return null;
        }
        return this._k(e, b, c, d);
    };
    OfficeDocumentManager.prototype._a5 = function () {
        if (this._ao == null) {
            return null;
        }
        return DocCoreUtils.z(this._ao);
    };
    OfficeDocumentManager.prototype._u = function (a) {
        return (this._aq[a] || null);
    };
    OfficeDocumentManager.prototype._e = function (a) {
        return this._b.getPart(a);
    };
    OfficeDocumentManager.prototype._ar = function (a) {
        return this._at(a.uri.toString());
    };
    OfficeDocumentManager.prototype._as = function (a) {
        var b = PackageUtilities.ak(a).originalString;
        return this._at(b);
    };
    OfficeDocumentManager.prototype._bd = function (a) {
        var e_1, _0;
        try {
            for (var _1 = __values(fromEnum(this._ag)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var b = _2.value;
                if (Base.equalsStatic(b.value, a)) {
                    return UriUtilities.b(b.key);
                }
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        return null;
    };
    OfficeDocumentManager.prototype._au = function (a) {
        var b = this._g(a);
        if (b == null) {
            return null;
        }
        if (b.targetMode == 1) {
            if (typeCast(IInvalidPackageRelationshipTarget_$type, b) !== null) {
                return b.targetString;
            }
            return b.targetUri;
        }
        return this._as(b);
    };
    OfficeDocumentManager.prototype._bc = function ($tData, a) {
        var e_2, _0;
        var b = a.o(this._z);
        try {
            for (var _1 = __values(fromEnum(this._ak())), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var c = _2.value;
                if (c.relationshipType == b) {
                    var d = this._au(c.id);
                    if (d != null) {
                        return Tuple.a(String_$type, $tData, c.id, typeCastObjTo$t($tData, d));
                    }
                    break;
                }
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
        return null;
    };
    OfficeDocumentManager.prototype._g = function (a) {
        return this._c != null ? this._c.getRelationship(a) : this._a.getRelationship(a);
    };
    OfficeDocumentManager.prototype._f = function (a) {
        var e_3, _0;
        try {
            for (var _1 = __values(fromEnum(this._ak())), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var b = _2.value;
                if (this._as(b) == a) {
                    return b;
                }
            }
        }
        catch (e_3_1) {
            e_3 = { error: e_3_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_3)
                    throw e_3.error;
            }
        }
        return null;
    };
    OfficeDocumentManager.prototype._a7 = function (a, b) {
        var e_4, _0;
        var c = a;
        var d = c == 0 ? 1 : 0;
        try {
            for (var _1 = __values(fromEnum(this._ai)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var e = _2.value;
                var f = e.value.o(d);
                var g = e.value.o(c);
                if (f == b || b == g) {
                    return g;
                }
            }
        }
        catch (e_4_1) {
            e_4 = { error: e_4_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_4)
                    throw e_4.error;
            }
        }
        return null;
    };
    OfficeDocumentManager.prototype._bh = function () {
        this._bk(XmlNamespace.ao);
        this._bk(VmlNamespace.ao);
        this._bk(CoreProperties.ao);
        this._bk(DcDcmiType.ao);
        this._bk(DcElements.ao);
        this._bk(DcTerms.ao);
        this._bk(Drawing2010Main.ao);
        this._bk(Drawing2010Slicer.ao);
        this._bk(DrawingMLChart.ao);
        this._bk(DrawingMLChart2014.ao);
        this._bk(DrawingMLChartEx2015_9_8.ao);
        this._bk(DrawingMLChartEx2015_10_21.ao);
        this._bk(DrawingMLChartEx2016_5_10.ao);
        this._bk(DrawingMLMain.ao);
        this._bk(EmptyNamespace.ao);
        this._bk(MarkupCompatibility2006.ao);
        this._bk(OfficeDocumentDocPropsVTypes.ao);
        this._bk(OfficeDocumentExtendedProperties.ao);
        this._bk(OfficeDocumentRelationships.ao);
        this._bk(OfficeNamespace.ao);
        this._bk(XmlSchemaInstance.ao);
        this._bk(IGOfficeExtensions.ao);
        var a = this._t;
        if (a != null) {
            this._bk(a);
        }
        if (nullableEquals(this._ap, null)) {
            this._ap = toNullable(ST_ConformanceClass_$type, this._aa());
        }
    };
    OfficeDocumentManager.prototype._ad = function (a) {
        return (this._aq[a] != null);
    };
    OfficeDocumentManager.prototype._n = function () {
        var _this = this;
        return WorkItemExtensions.c(this._m, function () {
            _this._bh();
            return _this._o();
        });
    };
    OfficeDocumentManager.prototype._bj = function () {
    };
    OfficeDocumentManager.prototype._bb = function (a) {
        if (a == null || a.length == 0) {
            if (this._aw != null) {
                return this._aw;
            }
        }
        else if (Base.equalsStatic(a, this._ax)) {
            return this._av;
        }
        else {
            this._ax = a;
        }
        var b = this._u(a);
        if (b != null) {
            a = b.s(1);
        }
        if (a == null || a.length == 0) {
            this._aw = a;
        }
        else {
            this._av = a;
        }
        return a;
    };
    OfficeDocumentManager.prototype._r = function () {
        var _this = this;
        this._bh();
        return WorkItemExtensions.c(WorkItemExtensions.c(WorkItemExtensions.c(this._m, function () { return _this._s(); }), function () { return Async.g(_this._h != null, function () { return _this._j(Office2007ExtensibilityPartManager.a5); }); }), function () { return Async.g(_this._i != null, function () { return _this._j(Office2010ExtensibilityPartManager.a5); }); });
    };
    OfficeDocumentManager.prototype._bn = function (a) {
        this._ap = toNullable(ST_ConformanceClass_$type, a);
    };
    OfficeDocumentManager.prototype.disposeCore = function (a) {
        if (this._a != null) {
            this._a.dispose();
            this._a = null;
        }
    };
    OfficeDocumentManager.prototype._o = function () {
        var _this = this;
        return WorkItemExtensions.f(Boolean_$type, this._q(null, null, this._a.getRelationships(), false), function (a) {
            var b = WorkItemExtensions.m(Boolean_$type, a);
            return Async.g((_this._y != null && _this._af == false), function () {
                var c = _this._a6(_this._y.n(_this._v), void 0, true);
                var d = null;
                return Async.g((_this._aj.contains(c) == false && ((function () { var e = Uri.tryCreate(c, 2, d); d = e.p2; return e.ret; })()) && _this._a.partExists(d)), function () { return _this._p(_this._a.getPart(d)); });
            });
        });
    };
    OfficeDocumentManager.prototype._bi = function (a) {
        this._bj();
    };
    OfficeDocumentManager.prototype._bk = function (a) {
        this._aq[a.s(1)] = a;
        this._aq[a.s(0)] = a;
    };
    OfficeDocumentManager.prototype._bl = function (a, b) {
        if (b === void 0) {
            b = true;
        }
        if (b) {
            this._ah.item(a.m, a);
        }
        this._ai.item(a.o(this._z), a);
        if (a.m == "image/jpeg") {
            this._ah.item("image/jpg", a);
        }
        var c = typeCast(ThemePartManager.$, a);
        if (c != null) {
            this._y = c;
        }
    };
    OfficeDocumentManager.prototype._a2 = function (a, b, c, d) {
        if (d === void 0) {
            d = null;
        }
        var e;
        var f = this._am.d();
        e = OfficeDocumentManager._a3(f.b);
        this._be(a, b, c, e, d);
        return e;
    };
    OfficeDocumentManager.prototype._be = function (a, b, c, d, e) {
        this._am.d().c();
        var f;
        if (c == 0) {
            if (this._c == null) {
                var g = new Uri(1, "/".toString(), 0);
                f = PackageUtilities.ai(g, a);
            }
            else {
                f = PackageUtilities.ai(this._c.uri, a);
            }
        }
        else {
            if (a == null && e != null) {
                var h = typeCast(IPackagePartEx_$type, this._c);
                if (h != null) {
                    h.createExternalRelationship(e, b, d);
                    return;
                }
            }
            f = a;
        }
        if (this._c == null) {
            this._a.createRelationship(f, c, b, d);
        }
        else {
            this._c.createRelationship(f, c, b, d);
        }
    };
    OfficeDocumentManager._a3 = function (a) {
        return "rId" + (a + 1).toString();
    };
    OfficeDocumentManager.prototype._ak = function () {
        if (this._c != null) {
            return this._c.getRelationships();
        }
        return this._a.getRelationships();
    };
    OfficeDocumentManager.prototype._a4 = function () {
        switch (this._z) {
            case 0: return OfficeDocumentManager._a9;
            case 1: return OfficeDocumentManager._a8;
            default: return OfficeDocumentManager._a9;
        }
    };
    OfficeDocumentManager.prototype._a6 = function (a, b, c) {
        var e_5, _0;
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = false;
        }
        var d = new HashSet$1(String_$type, 2, StringUtilities.f);
        if (c == false && b) {
            try {
                for (var _1 = __values(fromEnum(this._a.getParts())), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                    var e = _2.value;
                    var f = e.uri.toString();
                    var g = IOPath.getExtension(f);
                    var h = f.substr(0, f.length - g.length);
                    d.add_1(h);
                }
            }
            catch (e_5_1) {
                e_5 = { error: e_5_1 };
            }
            finally {
                try {
                    if (_2 && !_2.done && (_0 = _1.return))
                        _0.call(_1);
                }
                finally {
                    if (e_5)
                        throw e_5.error;
                }
            }
        }
        var i = IOPath.getExtension(a);
        var j = a.substr(0, a.length - i.length);
        var k = 1;
        while (true) {
            if (b) {
                var l = j + k;
                if (c || d.contains(l) == false) {
                    l += i;
                    return l;
                }
            }
            else {
                var m = j + k + i;
                if (c || this._a.partExists(UriUtilities.b(m)) == false) {
                    return m;
                }
            }
            k++;
        }
    };
    OfficeDocumentManager.prototype._at = function (a) {
        var b;
        var c = this._ag.tryGetValue(a, b);
        b = c.p1;
        return b;
    };
    OfficeDocumentManager.prototype._w = function (a) {
        var b;
        var c = this._ah.tryGetValue(a, b);
        b = c.p1;
        return b;
    };
    OfficeDocumentManager.prototype._x = function (a) {
        var _this = this;
        var b;
        if (((function () { var c = _this._ai.tryGetValue(a, b); b = c.p1; return c.ret; })()) == false) {
            var c = "http://purl.oclc.org/ooxml/officeDocument/relationships/worksheet";
            var d = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet";
            var e = "http://purl.oclc.org/ooxml/officeDocument/relationships/drawing";
            var f = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing";
            switch (a) {
                case c:
                    var g = this._ai.tryGetValue(d, b);
                    b = g.p1;
                    break;
                case e:
                    var h = this._ai.tryGetValue(f, b);
                    b = h.p1;
                    break;
            }
        }
        return b;
    };
    OfficeDocumentManager.prototype._ae = function (a) {
        var e_6, _0;
        try {
            for (var _1 = __values(fromEnum(this._ak())), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var b = _2.value;
                if (b.id == a) {
                    return false;
                }
            }
        }
        catch (e_6_1) {
            e_6 = { error: e_6_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_6)
                    throw e_6.error;
            }
        }
        return true;
    };
    OfficeDocumentManager.prototype._p = function (a, b) {
        var _this = this;
        if (b === void 0) {
            b = null;
        }
        if (b == null) {
            b = this._w(a.contentType);
        }
        var c = a.getRelationships();
        var d = a.uri.toString();
        if (this._aj.add_1(d) == false) {
            return null;
        }
        var e = null;
        var f = null;
        return WorkItemExtensions.f(Boolean_$type, this._q(a, b, c, false), function (g) {
            var h = WorkItemExtensions.m(Boolean_$type, g);
            return WorkItemExtensions.a(WorkItemExtensions.c(Async.g((b != null), function () {
                var i = _this._c;
                return Async.h(function () {
                    _this._c = a;
                    return Async.o(Stream.$, a.getStream(3, 1), function (j) {
                        f = b.e(_this, j);
                        return WorkItemExtensions.e(Base.$, f.a(), function (k) { return e = WorkItemExtensions.m(Base.$, k); });
                    });
                }, function () { return _this._c = i; });
            }, function () {
                _this._bi(a);
                return null;
            }), function () {
                if (e != null) {
                    _this._ag.item(d, e);
                }
                return Async.g(h, function () { return _this._q(a, b, c, true); });
            }), function () {
                if (f != null) {
                    f.q();
                }
            });
        });
    };
    OfficeDocumentManager.prototype._q = function (a, b, c, d) {
        var _this = this;
        var e = false;
        return WorkItemExtensions.g(Boolean_$type, Async.h(function () {
            if (a != null) {
                _this._al.h(a);
            }
            var f = _this._bm(b, c);
            c = f.p1;
            return Async.d(IPackageRelationship_$type, c, function (g) {
                if (g.relationshipType == _this._a4()) {
                    return null;
                }
                switch (g.targetMode) {
                    case 0:
                        {
                            if (b != null) {
                                var h = _this._x(g.relationshipType);
                                var i = h != null && b.i(h);
                                if (d != i) {
                                    e = true;
                                    return null;
                                }
                            }
                            if (g.targetUri != null && g.targetUri.originalString == "NULL") {
                                return null;
                            }
                            var j = PackageUtilities.ak(g);
                            var k = _this._a.getPart(j);
                            var l = null;
                            if (b != null) {
                                l = b.f(k, g);
                            }
                            if (l == null && k != null && k.contentType == "application/xml") {
                                var m = _this._x(g.relationshipType);
                                if (m != null && m.m != k.contentType) {
                                    k = new OverrideContentTypePart(k, m.m);
                                }
                                l = m;
                            }
                            return _this._p(k, l);
                        }
                    case 1: break;
                    default: break;
                }
                return null;
            });
        }, function () {
            if (a != null) {
                _this._al.e();
            }
        }), function () { return e; });
    };
    OfficeDocumentManager.prototype._bm = function (a, b) {
        var e_7, _0;
        if (a == null) {
            return {
                p1: b
            };
        }
        var c = a.j();
        if (c == null) {
            return {
                p1: b
            };
        }
        var d = new Dictionary$2(String_$type, Number_$type, 0);
        try {
            for (var _1 = __values(fromEnum(c)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var e = _2.value;
                d.addItem(e.key.o(this._z), e.value);
            }
        }
        catch (e_7_1) {
            e_7 = { error: e_7_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_7)
                    throw e_7.error;
            }
        }
        var f = new List$1(IPackageRelationship_$type, 1, b);
        f.aa(function (g, h) {
            var i;
            var j = ((function () { var k = d.tryGetValue(g.relationshipType, i); i = k.p1; return k.ret; })());
            var k;
            var l = ((function () { var m = d.tryGetValue(h.relationshipType, k); k = m.p1; return m.ret; })());
            if (j == false && l == false) {
                return 0;
            }
            else if (j && l == false) {
                return -1;
            }
            else if (j == false && l) {
                return 1;
            }
            return Base.compareSimple(i, k);
        });
        b = f;
        return {
            p1: b
        };
    };
    Object.defineProperty(OfficeDocumentManager.prototype, "_d", {
        get: function () {
            return this._c;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(OfficeDocumentManager.prototype, "_z", {
        get: function () {
            return this._ap.getValueOrDefault1(0);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(OfficeDocumentManager.prototype, "_ac", {
        get: function () {
            return this._ab;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(OfficeDocumentManager.prototype, "_an", {
        get: function () {
            return this._al;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(OfficeDocumentManager.prototype, "_b", {
        get: function () {
            return this._a;
        },
        enumerable: false,
        configurable: true
    });
    OfficeDocumentManager.$t = markType(OfficeDocumentManager, 'OfficeDocumentManager', Base.$, [IDisposable_$type]);
    OfficeDocumentManager._a9 = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink";
    OfficeDocumentManager._a8 = "http://purl.oclc.org/ooxml/officeDocument/relationships/hyperlink";
    return OfficeDocumentManager;
}(Base));
export { OfficeDocumentManager };
/**
 * @hidden
 */
var QualifiedNameInfo = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(QualifiedNameInfo, _super);
    function QualifiedNameInfo(a) {
        var _rest = [];
        for (var _0 = 1; _0 < arguments.length; _0++) {
            _rest[_0 - 1] = arguments[_0];
        }
        var _this = _super.call(this) || this;
        _this.h = null;
        _this.g = null;
        _this.f = null;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0: break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    if (c == stringEmpty()) {
                        c = null;
                    }
                    _this.h = c;
                    _this.g = d;
                    _this.f = e;
                }
                break;
        }
        return _this;
    }
    QualifiedNameInfo.prototype.toString = function () {
        if (this.h != null) {
            return this.h + ":" + this.f;
        }
        return this.f;
    };
    QualifiedNameInfo.d = function (a, b) {
        if (stringIsNullOrEmpty(a)) {
            return b;
        }
        var c;
        if (a.charAt(a.length - 1) != "/") {
            a += "/";
        }
        c = a + b;
        return c;
    };
    QualifiedNameInfo.prototype.e = function (a) {
        if (this.g == null) {
            return this.f;
        }
        if (a == null) {
            return QualifiedNameInfo.d(this.g, this.f);
        }
        return QualifiedNameInfo.d(a._bb(this.g), this.f);
    };
    QualifiedNameInfo.prototype.i = function (a, b, c) {
        if (a == stringEmpty()) {
            a = null;
        }
        this.h = a;
        this.g = b;
        this.f = c;
    };
    QualifiedNameInfo.prototype.b = function (a) {
        if (this.g == null) {
            return this;
        }
        if (a == null) {
            return this;
        }
        return new QualifiedNameInfo(1, this.h, a._bb(this.g), this.f);
    };
    Object.defineProperty(QualifiedNameInfo.prototype, "c", {
        get: function () {
            return this.f == null;
        },
        enumerable: false,
        configurable: true
    });
    QualifiedNameInfo.$t = markStruct(QualifiedNameInfo, 'QualifiedNameInfo');
    QualifiedNameInfo.a = new QualifiedNameInfo(0);
    return QualifiedNameInfo;
}(ValueType));
export { QualifiedNameInfo };
/**
 * @hidden
 */
var UnknownElementCache = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UnknownElementCache, _super);
    function UnknownElementCache(a, b) {
        var _this = _super.call(this) || this;
        _this.h = null;
        _this.i = null;
        _this.a = new QualifiedNameInfo();
        _this.m = null;
        _this.o = null;
        _this.a = a;
        _this.o = b;
        return _this;
    }
    UnknownElementCache.prototype.l = function (a, b) {
        var e_8, _0;
        try {
            for (var _1 = __values(fromEnum(this.j)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var c = _2.value;
                if (c.a.e(b) == a) {
                    return toNullable(AttributeValue.$, c);
                }
            }
        }
        catch (e_8_1) {
            e_8 = { error: e_8_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_8)
                    throw e_8.error;
            }
        }
        return toNullable(AttributeValue.$, null);
    };
    UnknownElementCache.prototype.c = function (a, b) {
        return Enumerable.ag(UnknownElementCache.$, this.k, function (c) { return c.b.e(b) == a; });
    };
    UnknownElementCache.prototype.f = function (a, b) {
        return Enumerable.u(UnknownElementCache.$, this.k, function (c) { return c.b.e(b) == a; });
    };
    UnknownElementCache.prototype._g = function (a, b) {
        var _0, _1, c, _2, _3, d, e_9_1, e_10_1;
        var e_10, _4, e_9, _5;
        return __generator(this, function (_6) {
            switch (_6.label) {
                case 0:
                    _6.trys.push([0, 12, 13, 14]);
                    _0 = __values(fromEnum(this.k)), _1 = _0.next();
                    _6.label = 1;
                case 1:
                    if (!!_1.done)
                        return [3 /*break*/, 11];
                    c = _1.value;
                    if (!(c.b.e(b) == a))
                        return [3 /*break*/, 3];
                    return [4 /*yield*/, c];
                case 2:
                    _6.sent();
                    _6.label = 3;
                case 3:
                    _6.trys.push([3, 8, 9, 10]);
                    _2 = (e_9 = void 0, __values(fromEnum(c.g(a, b)))), _3 = _2.next();
                    _6.label = 4;
                case 4:
                    if (!!_3.done)
                        return [3 /*break*/, 7];
                    d = _3.value;
                    return [4 /*yield*/, d];
                case 5:
                    _6.sent();
                    _6.label = 6;
                case 6:
                    _3 = _2.next();
                    return [3 /*break*/, 4];
                case 7: return [3 /*break*/, 10];
                case 8:
                    e_9_1 = _6.sent();
                    e_9 = { error: e_9_1 };
                    return [3 /*break*/, 10];
                case 9:
                    try {
                        if (_3 && !_3.done && (_5 = _2.return))
                            _5.call(_2);
                    }
                    finally {
                        if (e_9)
                            throw e_9.error;
                    }
                    return [7 /*endfinally*/];
                case 10:
                    _1 = _0.next();
                    return [3 /*break*/, 1];
                case 11: return [3 /*break*/, 14];
                case 12:
                    e_10_1 = _6.sent();
                    e_10 = { error: e_10_1 };
                    return [3 /*break*/, 14];
                case 13:
                    try {
                        if (_1 && !_1.done && (_4 = _0.return))
                            _4.call(_0);
                    }
                    finally {
                        if (e_10)
                            throw e_10.error;
                    }
                    return [7 /*endfinally*/];
                case 14: return [2 /*return*/];
            }
        });
    };
    UnknownElementCache.prototype.g = function (a, b) {
        var _this = this;
        return toEnum(function () { return _this._g(a, b); });
    };
    Object.defineProperty(UnknownElementCache.prototype, "j", {
        get: function () {
            if (this.h == null) {
                this.h = new List$1(AttributeValue.$, 0);
            }
            return this.h;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(UnknownElementCache.prototype, "d", {
        get: function () {
            return this.h != null && this.h.count != 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(UnknownElementCache.prototype, "k", {
        get: function () {
            if (this.i == null) {
                this.i = new List$1(UnknownElementCache.$, 0);
            }
            return this.i;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(UnknownElementCache.prototype, "e", {
        get: function () {
            return this.i != null && this.i.count != 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(UnknownElementCache.prototype, "b", {
        get: function () {
            return this.a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(UnknownElementCache.prototype, "n", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(UnknownElementCache.prototype, "p", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
        },
        enumerable: false,
        configurable: true
    });
    UnknownElementCache.$t = markType(UnknownElementCache, 'UnknownElementCache');
    return UnknownElementCache;
}(Base));
export { UnknownElementCache };
/**
 * @hidden
 */
var UnknownStructure = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UnknownStructure, _super);
    function UnknownStructure(a) {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.a = a;
        return _this;
    }
    Object.defineProperty(UnknownStructure.prototype, "b", {
        get: function () {
            return this.a;
        },
        enumerable: false,
        configurable: true
    });
    UnknownStructure.$t = markType(UnknownStructure, 'UnknownStructure');
    return UnknownStructure;
}(Base));
export { UnknownStructure };
/**
 * @hidden
 */
var XmlReadManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(XmlReadManager, _super);
    function XmlReadManager(a, b) {
        var _this = _super.call(this) || this;
        _this.u = null;
        _this.ab = 0;
        _this.k = new QualifiedNameInfo();
        _this.ad = null;
        _this.v = null;
        _this.z = 0;
        _this.m = null;
        _this.b = null;
        _this.i = null;
        _this.j = null;
        _this.ao = null;
        _this.aa = 0;
        _this.w = new Stack$1(XmlReadManager_LoadChildContext.$);
        _this.x = new Stack$1(XmlReadManager_LoadFastContext.$);
        _this.a = ([]);
        _this.y = 0;
        _this.v = new Stack$1(XmlReadManager_AlternateContentChoiceContext.$);
        _this.u = new List$1(AttributeValue.$, 0);
        _this.z = -1;
        _this.b = new Array(16);
        _this.i = a.d;
        _this.j = a;
        _this.ao = b;
        return _this;
    }
    XmlReadManager.prototype.q = function (a) {
        for (var b = 0; b <= this.z; b++) {
            if (this.b[b].a(a)) {
                return true;
            }
        }
        return false;
    };
    XmlReadManager.prototype.r = function (a) {
        if (this.w.f > 0) {
            var b = this.w.d();
            if (a == b.b.e(this.i)) {
                return true;
            }
        }
        return false;
    };
    XmlReadManager.prototype.d = function () {
        this.aa = 0;
        return this.f(this.w.f);
    };
    XmlReadManager.prototype.f = function (a, b, c, d, e) {
        var _this = this;
        if (b === void 0) {
            b = 0;
        }
        if (c === void 0) {
            c = 0;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = false;
        }
        var f = new XmlReadManager_LoadChildContext();
        if (d) {
            f = this.w.e();
        }
        else {
            f = new XmlReadManager_LoadChildContext();
            f.h = b;
            f.c = c;
        }
        var g = null;
        while (true) {
            if (e == true) {
                e = false;
            }
            else {
                if (this.ao.a7 == 15) {
                    if (this.w.f == a) {
                        break;
                    }
                    f = this.w.e();
                    e = true;
                    continue;
                }
                f.b = this.l();
                if (f.b.c) {
                    if (this.w.f == a) {
                        break;
                    }
                    f = this.w.e();
                    e = true;
                    continue;
                }
                this.al();
                f.f = true;
                f.g = true;
                f.e = false;
                g = f.b.e(this.i);
                var h = null;
                switch (g) {
                    case MarkupCompatibility2006.aq: return WorkItemExtensions.c(this.c(f.b, f.h), function () {
                        if (f.g && _this.ao.t() == false) {
                            if (_this.w.f == a) {
                                return null;
                            }
                            f = _this.w.e();
                            e = true;
                        }
                        else {
                            if (f.f) {
                                f.h++;
                            }
                            _this.ak();
                        }
                        _this.w.h(f);
                        return WorkItem.d(function () { return _this.f(a, f.h, f.c, true, e); }, 2);
                    });
                    case MarkupCompatibility2006.ar:
                        h = this.g(f.b, f.h, f.c);
                        break;
                    case MarkupCompatibility2006.as:
                        h = this.h(f.b, f.h, f.c);
                        break;
                    default:
                        f.e = true;
                        break;
                }
                if (h != null) {
                    return WorkItemExtensions.f(Boolean_$type, h, function (i) {
                        if (WorkItemExtensions.m(Boolean_$type, i) == false) {
                            f.f = false;
                            f.g = false;
                        }
                        else {
                            f.c = 2;
                        }
                        if (f.g && _this.ao.t() == false) {
                            if (_this.w.f == a) {
                                return null;
                            }
                            f = _this.w.e();
                            e = true;
                        }
                        else {
                            if (f.f) {
                                f.h++;
                            }
                            _this.ak();
                        }
                        _this.w.h(f);
                        return WorkItem.d(function () { return _this.f(a, f.h, f.c, true, e); }, 2);
                    });
                }
                if (f.e) {
                    var i = false;
                    f.a = this.j.x(g);
                    if (f.a.c) {
                        if (this.t(f.b, f.h)) {
                            f.g = false;
                            i = true;
                        }
                    }
                    if (!i) {
                        var j = this.ao.i;
                        this.am(f.b, false);
                        f.d = j;
                        if (f.a.b != null) {
                            this.k = f.b;
                            this.ab = f.h;
                            f.a.b(this.j);
                        }
                        if (f.d == false) {
                            if (this.j.ai(f.b.e(this.i))) {
                                if (this.b[this.z].b) {
                                    return WorkItemExtensions.c(WorkItemExtensions.a(this.e(this.x.f), function () {
                                    }), function () {
                                        _this.w.h(f);
                                        return WorkItem.d(function () { return _this.f(a, f.h, f.c, true, true); }, 2);
                                    });
                                }
                                else {
                                    this.w.h(f);
                                    f = new XmlReadManager_LoadChildContext();
                                    f.h = 0;
                                    f.c = 0;
                                    continue;
                                }
                            }
                            else {
                                while (this.ao.a7 != 15) {
                                    this.ao.a2();
                                }
                            }
                        }
                    }
                }
            }
            if (f.e) {
                if (f.a.a != null) {
                    this.k = f.b;
                    this.ab = f.h;
                    f.a.a(this.j);
                }
            }
            if (f.g && this.ao.t() == false) {
                if (this.w.f == a) {
                    break;
                }
                f = this.w.e();
                e = true;
                continue;
            }
            if (f.f) {
                f.h++;
            }
            this.ak();
            this.aa++;
            if (1000 < this.aa) {
                this.aa = 0;
                this.w.h(f);
                return WorkItem.d(function () { return _this.f(a, f.h, f.c, true, e); }, 2);
            }
        }
        return null;
    };
    XmlReadManager.prototype.e = function (a, b, c) {
        var _this = this;
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = false;
        }
        var d = b ? this.x.e() : new XmlReadManager_LoadFastContext();
        var e = null;
        while (true) {
            if (c == false) {
                if (this.ao.a7 == 15) {
                    if (this.x.f == a) {
                        break;
                    }
                    d = this.x.e();
                    c = true;
                    continue;
                }
                d.b = this.l();
                if (d.b.c) {
                    if (this.x.f == a) {
                        break;
                    }
                    d = this.x.e();
                    c = true;
                    continue;
                }
                this.al();
                e = d.b.e(this.i);
            }
            if (c == false && e == MarkupCompatibility2006.aq) {
                return WorkItemExtensions.c(this.c(d.b, 0), function () {
                    if (_this.ao.t() == false) {
                        if (_this.x.f == a) {
                            return null;
                        }
                        d = _this.x.e();
                        c = true;
                    }
                    else {
                        d.c++;
                        _this.ak();
                    }
                    _this.x.h(d);
                    return WorkItem.d(function () { return _this.e(a, true, c); }, 2);
                });
            }
            else {
                if (c) {
                    c = false;
                }
                else {
                    d.a = this.j.x(e);
                    var f = this.ao.i;
                    this.am(d.b, false);
                    if (d.a.b != null) {
                        this.k = d.b;
                        this.ab = d.c;
                        d.a.b(this.j);
                    }
                    if (f == false) {
                        this.x.h(d);
                        d = new XmlReadManager_LoadFastContext();
                        continue;
                    }
                }
                if (d.a.a != null) {
                    this.k = d.b;
                    this.ab = d.c;
                    d.a.a(this.j);
                }
            }
            if (this.ao.t() == false) {
                if (this.x.f == a) {
                    break;
                }
                d = this.x.e();
                c = true;
                continue;
            }
            d.c++;
            this.ak();
            if (1000 < ++this.aa) {
                this.aa = 0;
                this.x.h(d);
                return WorkItem.d(function () { return _this.e(a, true, c); }, 2);
            }
        }
        return null;
    };
    XmlReadManager.prototype.ae = function (a) {
        return this.ao.ah(a);
    };
    XmlReadManager.prototype.aj = function () {
        if (this.v.f == 0) {
            return;
        }
        this.v.d().a = true;
    };
    XmlReadManager.prototype.an = function () {
        this.b[this.z].b = true;
    };
    XmlReadManager.prototype.ah = function (a) {
        var b = [];
        for (var _0 = 1; _0 < arguments.length; _0++) {
            b[_0 - 1] = arguments[_0];
        }
        for (var c = 0; c < b.length; c++) {
            var d = this.ae(b[c]);
            if (d != null) {
                a.add_1(d);
            }
        }
    };
    XmlReadManager.prototype.c = function (a, b) {
        var c = this.ao.i;
        this.am(a, false);
        this.k = a;
        this.ab = b;
        if (c == false) {
            return this.f(this.w.f, b, 1);
        }
        return null;
    };
    XmlReadManager.prototype.o = function (a, b) {
        b = this.ao.i;
        this.am(a, true, true);
        var c = new UnknownElementCache(a, this.ad);
        if (this.u.count != 0) {
            c.j.o(this.u);
        }
        return {
            ret: c,
            p1: b
        };
    };
    XmlReadManager.prototype.p = function (a, b) {
        var _this = this;
        this.al();
        var c;
        var d = ((function () { var e = _this.o(a, c); c = e.p1; return e.ret; })());
        var e = this.j.w(a);
        if (e.b != null) {
            this.k = a;
            this.ab = b;
            this.m = d;
            e.b(this.j);
            this.m = null;
        }
        if (c == false) {
            if (this.j.ai(a.e(this.i))) {
                this.ai(d);
            }
            else {
                while (this.ao.a7 != 15) {
                    this.ao.a2();
                }
            }
        }
        if (e.a != null) {
            this.k = a;
            this.ab = b;
            this.m = d;
            e.a(this.j);
            this.m = null;
        }
        this.j.av(d);
        this.ak();
        return d;
    };
    XmlReadManager.prototype.ai = function (a) {
        var b = 0;
        while (this.ao.a7 != 15) {
            var c = this.l();
            if (c.c) {
                break;
            }
            a.k.add(this.p(c, b));
            if (this.ao.t() == false) {
                break;
            }
            b++;
        }
    };
    XmlReadManager.prototype.t = function (a, b) {
        var c = a.e(this.i);
        var d = this.j.z(c);
        var t1 = d;
        L0: while (true) {
            switch (t1) {
                case 0:
                    this.ao.a2();
                    return true;
                case 1:
                    {
                        var e = this.ao.ap();
                        this.j.ax(c, e);
                        return true;
                    }
                case 2:
                    {
                        var f = this.p(a, b);
                        var g = new UnknownStructure(f);
                        this.j.aw(g);
                        this.ao.t();
                        return true;
                    }
                case 3: return false;
                default:
                    t1 = 0;
                    continue L0;
            }
            break;
        }
    };
    XmlReadManager.prototype.l = function () {
        switch (this.ao.a7) {
            case 1: return new QualifiedNameInfo(1, this.ao.ak, this.ao.aj, this.ao.ag);
            case 2: break;
            case 15:
            case 14:
            case 3:
            case 0: break;
            case 17:
            case 13:
            case 8:
                {
                    do {
                        this.ao.t();
                    } while (this.ao.a7 == 13 || this.ao.a7 == 17 || this.ao.a7 == 8);
                    return this.l();
                }
            default: break;
        }
        return QualifiedNameInfo.a;
    };
    XmlReadManager.prototype.ak = function () {
        this.j.s.j(this.b[this.z].e, this.b[this.z].f);
        this.b[this.z] = (null);
        this.z--;
    };
    XmlReadManager.prototype.al = function () {
        this.z++;
        while (this.b.length <= this.z) {
            var a = new Array(this.b.length * 2);
            arrayCopy2(this.b, a, this.b.length);
            this.b = a;
        }
        this.b[this.z] = new XmlReadManager_ElementContext(1, this);
    };
    XmlReadManager.prototype.am = function (a, b, c) {
        if (c === void 0) {
            c = false;
        }
        this.y = 0;
        this.u.clear();
        this.ad = null;
        var d = this.ao.i;
        if (this.ao.r()) {
            do {
                var e = this.ao.aj;
                if (b == false && e == "http://www.w3.org/2000/xmlns/") {
                    if (this.ao.ag == "xmlns" || this.ao.ak == "xmlns") {
                        continue;
                    }
                }
                var f = new AttributeValue();
                if (c) {
                    f = new AttributeValue(1, this.ao.ak, e, this.ao.ag, this.ao.ar);
                }
                else if (this.y < this.a.length) {
                    f = (this.a[this.y++]);
                    f.e(this.ao.ak, e, this.ao.ag, this.ao.ar);
                }
                else {
                    f = new AttributeValue(1, this.ao.ak, e, this.ao.ag, this.ao.ar);
                    this.a.push(f);
                    this.y++;
                }
                if (f.a.f == "Ignorable" && f.a.e(this.i) == MarkupCompatibility2006.at) {
                    this.ah.apply(this, __spreadArray([this.b[this.z].d], __read(stringSplit(f.d, [' '], 1)), false));
                    continue;
                }
                this.u.add(f);
            } while (this.ao.s());
            this.ao.q();
        }
        if (d == false && this.ao.t()) {
            if (this.ao.a7 == 13 && a.f == "t" && a.e(this.i) == DrawingMLMain.jb) {
                this.ad = this.ao.ar;
            }
            else {
                while (this.ao.a7 == 13) {
                    this.ao.t();
                }
                if (this.ao.a7 == 14 || this.ao.a7 == 3) {
                    this.ad = this.ao.ar;
                    this.ao.t();
                }
            }
        }
    };
    XmlReadManager.prototype.ag = function (a) {
        var b = a.indexOf(':');
        if (b < 0) {
            return a;
        }
        var c = a.substr(0, b);
        var d = a.substr(b + 1);
        var e = this.ae(c);
        var f = new QualifiedNameInfo(1, c, e, d);
        return f.e(this.i);
    };
    XmlReadManager.prototype.g = function (a, b, c) {
        var _this = this;
        if (c != 1) {
            this.ao.a2();
            return WorkItem.g(Boolean_$type, false);
        }
        var d = this.ao.i;
        this.am(a, false);
        this.k = a;
        this.ab = b;
        var e;
        var f = MarkupCompatibility2006.ax(this.j, e);
        e = f.p1;
        if (this.j.ah(e) == false) {
            while (this.ao.a7 == 1) {
                this.ao.a2();
                if (this.ao.a7 == 13) {
                    this.ao.a2();
                }
            }
            if (this.ao.t() == false) {
            }
            return WorkItem.g(Boolean_$type, false);
        }
        var g = true;
        return WorkItemExtensions.g(Boolean_$type, Async.g(d == false, function () {
            _this.v.h(new XmlReadManager_AlternateContentChoiceContext());
            var h = _this.f(_this.w.f);
            var i = _this.v.e();
            if (i.a) {
                if (_this.ao.t() == false) {
                }
                g = false;
            }
            return h;
        }), function () { return g; });
    };
    XmlReadManager.prototype.h = function (a, b, c) {
        var _this = this;
        if (c != 1) {
            this.ao.a2();
            return WorkItem.g(Boolean_$type, false);
        }
        var d = this.ao.i;
        this.am(a, false);
        this.k = a;
        this.ab = b;
        return WorkItemExtensions.g(Boolean_$type, Async.g(d == false, function () { return _this.f(_this.w.f); }), function () { return true; });
    };
    Object.defineProperty(XmlReadManager.prototype, "n", {
        get: function () {
            return this.m;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(XmlReadManager.prototype, "s", {
        get: function () {
            return this.v.f != 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(XmlReadManager.prototype, "af", {
        get: function () {
            return this.ao.aj;
        },
        enumerable: false,
        configurable: true
    });
    XmlReadManager.$t = markType(XmlReadManager, 'XmlReadManager');
    return XmlReadManager;
}(Base));
export { XmlReadManager };
/**
 * @hidden
 */
var XmlReadManager_ElementContext = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(XmlReadManager_ElementContext, _super);
    function XmlReadManager_ElementContext(a) {
        var _rest = [];
        for (var _0 = 1; _0 < arguments.length; _0++) {
            _rest[_0 - 1] = arguments[_0];
        }
        var _this = _super.call(this) || this;
        _this.e = 0;
        _this.f = null;
        _this.c = null;
        _this.b = false;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0: break;
            case 1:
                {
                    var c = _rest[0];
                    _this.e = c.j.s.e;
                    _this.f = c.j.s.f;
                    _this.b = false;
                    _this.c = null;
                }
                break;
        }
        return _this;
    }
    XmlReadManager_ElementContext.prototype.a = function (a) {
        return this.c != null && this.c.contains(a);
    };
    Object.defineProperty(XmlReadManager_ElementContext.prototype, "d", {
        get: function () {
            if (this.c == null) {
                this.c = new HashSet$1(String_$type, 0);
            }
            return this.c;
        },
        enumerable: false,
        configurable: true
    });
    XmlReadManager_ElementContext.$t = markStruct(XmlReadManager_ElementContext, 'XmlReadManager_ElementContext');
    return XmlReadManager_ElementContext;
}(ValueType));
export { XmlReadManager_ElementContext };
/**
 * @hidden
 */
var XmlReadManager_LoadChildContext = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(XmlReadManager_LoadChildContext, _super);
    function XmlReadManager_LoadChildContext() {
        var _this = _super.call(this) || this;
        _this.h = 0;
        _this.c = 0;
        _this.b = new QualifiedNameInfo();
        _this.a = new ElementLoadCallbacks();
        _this.g = false;
        _this.f = false;
        _this.e = false;
        _this.d = false;
        return _this;
    }
    XmlReadManager_LoadChildContext.$t = markStruct(XmlReadManager_LoadChildContext, 'XmlReadManager_LoadChildContext');
    return XmlReadManager_LoadChildContext;
}(ValueType));
export { XmlReadManager_LoadChildContext };
/**
 * @hidden
 */
var XmlReadManager_LoadFastContext = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(XmlReadManager_LoadFastContext, _super);
    function XmlReadManager_LoadFastContext() {
        var _this = _super.call(this) || this;
        _this.c = 0;
        _this.b = new QualifiedNameInfo();
        _this.a = new ElementLoadCallbacks();
        return _this;
    }
    XmlReadManager_LoadFastContext.$t = markStruct(XmlReadManager_LoadFastContext, 'XmlReadManager_LoadFastContext');
    return XmlReadManager_LoadFastContext;
}(ValueType));
export { XmlReadManager_LoadFastContext };
/**
 * @hidden
 */
var XmlWriteManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(XmlWriteManager, _super);
    function XmlWriteManager(a, b) {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.c = null;
        _this.b = null;
        _this.w = null;
        _this.c = new List$1(String_$type, 0);
        _this.a = a.d;
        _this.b = a;
        _this.w = b;
        return _this;
    }
    XmlWriteManager.prototype.d = function (a) {
        return this.w.a(a.s(this.a._z));
    };
    XmlWriteManager.prototype.e = function (a, b, c, d) {
        var e = a.lastIndexOf("/");
        if (e < 0) {
            c = a;
            d = "";
            b = stringEmpty();
            return {
                p1: b,
                p2: c,
                p3: d
            };
        }
        c = a.substr(e + 1);
        d = a.substr(0, e);
        if (this.a._z != 1) {
            var f = this.a._u(d);
            if (f != null) {
                d = f.s(this.a._z);
            }
        }
        b = this.w.a(d);
        if (stringIsNullOrEmpty(b)) {
            var g = d + "/";
            b = this.w.a(g);
            if (stringIsNullOrEmpty(b) == false) {
                d = g;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    XmlWriteManager.prototype.f = function () {
        if (this.c.count == 0) {
            return;
        }
        this.l(MarkupCompatibility2006.ao);
        this.h(MarkupCompatibility2006.at, stringJoin1(String_$type, " ", this.c));
        this.c.clear();
    };
    XmlWriteManager.prototype.g = function (a, b, c) {
        var e_11, _0, e_12, _1, e_13, _2, e_14, _3;
        var _this = this;
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = true;
        }
        if (a != null) {
            var d = new HashSet$1(XmlNamespaceDefinitionBase.$, 0);
            try {
                for (var _4 = __values(fromEnum(a)), _5 = _4.next(); !_5.done; _5 = _4.next()) {
                    var e = _5.value;
                    try {
                        for (var _6 = (e_12 = void 0, __values(fromEnum(Enumerable.u(XmlNamespaceDefinitionBase.$, e.b, function (g) { return _this.d(g) == null; })))), _7 = _6.next(); !_7.done; _7 = _6.next()) {
                            var f = _7.value;
                            d.add_1(f);
                        }
                    }
                    catch (e_12_1) {
                        e_12 = { error: e_12_1 };
                    }
                    finally {
                        try {
                            if (_7 && !_7.done && (_1 = _6.return))
                                _1.call(_6);
                        }
                        finally {
                            if (e_12)
                                throw e_12.error;
                        }
                    }
                }
            }
            catch (e_11_1) {
                e_11 = { error: e_11_1 };
            }
            finally {
                try {
                    if (_5 && !_5.done && (_0 = _4.return))
                        _0.call(_4);
                }
                finally {
                    if (e_11)
                        throw e_11.error;
                }
            }
            MarkupCompatibility2006.az(this.b);
            try {
                for (var _8 = __values(fromEnum(d)), _9 = _8.next(); !_9.done; _9 = _8.next()) {
                    var g = _9.value;
                    this.l(g);
                }
            }
            catch (e_13_1) {
                e_13 = { error: e_13_1 };
            }
            finally {
                try {
                    if (_9 && !_9.done && (_2 = _8.return))
                        _2.call(_8);
                }
                finally {
                    if (e_13)
                        throw e_13.error;
                }
            }
            try {
                for (var _10 = __values(fromEnum(a)), _11 = _10.next(); !_11.done; _11 = _10.next()) {
                    var h = _11.value;
                    MarkupCompatibility2006.a0(this.b, h.b);
                    h.a();
                    this.k();
                }
            }
            catch (e_14_1) {
                e_14 = { error: e_14_1 };
            }
            finally {
                try {
                    if (_11 && !_11.done && (_3 = _10.return))
                        _3.call(_10);
                }
                finally {
                    if (e_14)
                        throw e_14.error;
                }
            }
        }
        if (b != null) {
            MarkupCompatibility2006.a2(this.b);
            b();
            this.k();
        }
        if (c) {
            this.k();
        }
    };
    XmlWriteManager.prototype.h = function (a, b) {
        if (b == null) {
            return;
        }
        var c;
        var d;
        var e;
        var f = this.e(a, c, d, e);
        c = f.p1;
        d = f.p2;
        e = f.p3;
        this.i(c, d, e, b);
    };
    XmlWriteManager.prototype.i = function (a, b, c, d) {
        this.w.j(a, b, c, d);
    };
    XmlWriteManager.prototype.j = function (a, b) {
        this.w.h(a, b);
    };
    XmlWriteManager.prototype.k = function () {
        this.f();
        this.w.v();
    };
    XmlWriteManager.prototype.o = function (a) {
        this.p(a, null);
    };
    XmlWriteManager.prototype.p = function (a, b) {
        var c;
        var d;
        var e;
        var f = this.e(a, c, d, e);
        c = f.p1;
        d = f.p2;
        e = f.p3;
        this.q(c != null ? c : b, d, e);
    };
    XmlWriteManager.prototype.q = function (a, b, c) {
        this.f();
        this.w.ao(a, b, c);
    };
    XmlWriteManager.prototype.r = function (a) {
        this.w.am(a);
    };
    XmlWriteManager.prototype.l = function (a, b) {
        if (b === void 0) {
            b = false;
        }
        this.m(a.t, a.s(this.a._z), b);
    };
    XmlWriteManager.prototype.m = function (a, b, c) {
        if (c === void 0) {
            c = false;
        }
        var d = b;
        if (this.a._z != 1) {
            var e = this.a._u(b);
            if (e != null) {
                d = e.s(this.a._z);
            }
        }
        this.w.j("xmlns", a, "http://www.w3.org/2000/xmlns/", d);
        if (c) {
            this.c.add(a);
        }
    };
    XmlWriteManager.prototype.n = function (a) {
        this.f();
        this.w.ah(a);
    };
    XmlWriteManager.prototype.t = function (a) {
        this.f();
        var b = new Stack$1(UnknownElementCache.$);
        this.s(a.b, b);
    };
    XmlWriteManager.prototype.s = function (a, b) {
        var e_15, _0, e_16, _1;
        var c = this.b.y(a, b);
        var t1 = c;
        L0: while (true) {
            switch (t1) {
                case 0:
                    {
                        var d = a.b.b(this.a);
                        this.q(d.h, d.f, d.g);
                        if (a.d) {
                            try {
                                for (var _2 = (e_15 = void 0, __values(fromEnum(a.j))), _3 = _2.next(); !_3.done; _3 = _2.next()) {
                                    var e = _3.value;
                                    var f = e.a.b(this.a);
                                    this.i(f.h, f.f, f.g, e.d);
                                }
                            }
                            catch (e_15_1) {
                                e_15 = { error: e_15_1 };
                            }
                            finally {
                                try {
                                    if (_3 && !_3.done && (_0 = _2.return))
                                        _0.call(_2);
                                }
                                finally {
                                    if (e_15)
                                        throw e_15.error;
                                }
                            }
                        }
                        if (a.p != null) {
                            this.u(a.p);
                        }
                    }
                    t1 = 1;
                    continue L0;
                case 1:
                    {
                        if (a.e) {
                            b.h(a);
                            try {
                                for (var _4 = (e_16 = void 0, __values(fromEnum(a.k))), _5 = _4.next(); !_5.done; _5 = _4.next()) {
                                    var g = _5.value;
                                    this.s(g, b);
                                }
                            }
                            catch (e_16_1) {
                                e_16 = { error: e_16_1 };
                            }
                            finally {
                                try {
                                    if (_5 && !_5.done && (_1 = _4.return))
                                        _1.call(_4);
                                }
                                finally {
                                    if (e_16)
                                        throw e_16.error;
                                }
                            }
                            b.e();
                        }
                        this.k();
                    }
                    break;
                case 2: break;
                default:
                    t1 = 0;
                    continue L0;
            }
            break;
        }
    };
    XmlWriteManager.prototype.u = function (a) {
        this.f();
        this.w.ap(a);
    };
    XmlWriteManager.prototype.v = function (a, b, c) {
        this.f();
        var d = new StringBuilder(2, "version=\"" + a + "\"");
        if (b.length > 0) {
            d.l(" encoding=\"");
            d.l(b);
            d.l("\"");
        }
        if (c.length > 0) {
            d.l(" standalone=\"");
            d.l(c);
            d.l("\"");
        }
        var e = d.toString();
        this.w.ad("xml", e);
    };
    XmlWriteManager.$t = markType(XmlWriteManager, 'XmlWriteManager');
    return XmlWriteManager;
}(Base));
export { XmlWriteManager };
/**
 * @hidden
 */
var PartManagerBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PartManagerBase, _super);
    function PartManagerBase() {
        var _this = _super.call(this) || this;
        _this.c = null;
        _this.k = null;
        return _this;
    }
    PartManagerBase.prototype.e = function (a, b) {
        var c = this.memberwiseClone();
        c.k = b;
        c.c = a;
        c.p();
        return c;
    };
    PartManagerBase.prototype.j = function () {
        return null;
    };
    PartManagerBase.prototype.f = function (a, b) {
        return null;
    };
    PartManagerBase.prototype.p = function () {
    };
    PartManagerBase.prototype.q = function () {
    };
    PartManagerBase.prototype.i = function (a) {
        return false;
    };
    Object.defineProperty(PartManagerBase.prototype, "d", {
        get: function () {
            return this.c;
        },
        enumerable: false,
        configurable: true
    });
    PartManagerBase.prototype.get_h = function () {
        return true;
    };
    Object.defineProperty(PartManagerBase.prototype, "h", {
        get: function () {
            return this.get_h();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PartManagerBase.prototype, "l", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
        },
        enumerable: false,
        configurable: true
    });
    PartManagerBase.$t = markType(PartManagerBase, 'PartManagerBase');
    return PartManagerBase;
}(Base));
export { PartManagerBase };
/**
 * @hidden
 */
var ImagePartManagerBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ImagePartManagerBase, _super);
    function ImagePartManagerBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ImagePartManagerBase.prototype.n = function (a) {
        switch (a) {
            case 0: return this.s;
            case 1: return this.u;
            case 2: return this.t;
            default: return null;
        }
    };
    ImagePartManagerBase.prototype.o = function (a) {
        return ImagePartManagerBase.v(a);
    };
    ImagePartManagerBase.prototype.get_g = function () {
        return true;
    };
    Object.defineProperty(ImagePartManagerBase.prototype, "g", {
        get: function () {
            return this.get_g();
        },
        enumerable: false,
        configurable: true
    });
    ImagePartManagerBase.prototype.a = function () {
        return WorkItem.g(Base.$, new ImageData(1, this.r(this.d._d.uri.toString()), this.l));
    };
    ImagePartManagerBase.prototype.get_h = function () {
        return false;
    };
    ImagePartManagerBase.prototype.b = function (a) {
        var b = typeCast(ImageData.$, a);
        if (b != null) {
            b.f(this.l);
        }
        return null;
    };
    ImagePartManagerBase.v = function (a) {
        switch (a) {
            case 0: return ImagePartManagerBase.x;
            case 1: return ImagePartManagerBase.w;
            default: return ImagePartManagerBase.x;
        }
    };
    ImagePartManagerBase.$t = markType(ImagePartManagerBase, 'ImagePartManagerBase', PartManagerBase.$);
    ImagePartManagerBase.x = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image";
    ImagePartManagerBase.w = "http://purl.oclc.org/ooxml/officeDocument/relationships/image";
    return ImagePartManagerBase;
}(PartManagerBase));
export { ImagePartManagerBase };
/**
 * @hidden
 */
var XmlPartManagerBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(XmlPartManagerBase, _super);
    function XmlPartManagerBase() {
        var _this = _super.call(this) || this;
        _this.r = null;
        _this.am = null;
        _this.al = 0;
        _this.aa = null;
        _this.ac = null;
        _this.v = new ElementLoadCallbacks(0);
        _this.an = null;
        _this.ae = false;
        _this.am = {};
        return _this;
    }
    XmlPartManagerBase.prototype.p = function () {
        _super.prototype.p.call(this);
        var a = this.am;
        this.am = {};
        for (var p in a) {
            if (a.hasOwnProperty(p)) {
                this.am[p] = a[p];
            }
        }
        ;
    };
    XmlPartManagerBase.prototype.a = function () {
        var _this = this;
        return Async.i(Base.$, function () {
            _this.r = new ContextStack();
            return _this.t();
        }, function () {
            _this.r = null;
            _this.aa = null;
        });
    };
    XmlPartManagerBase.prototype.b = function (a) {
        var _this = this;
        this.r = new ContextStack();
        if (a != null) {
            this.r.k(a);
        }
        return Async.n(XmlWriter.$, this.a2(), function (b) {
            _this.ac = new XmlWriteManager(_this, b);
            if (_this.aj) {
                _this.ac.v("1.0", "UTF-8", "yes");
            }
            return _this.u(a);
        });
    };
    XmlPartManagerBase.prototype.at = function () {
        this.al++;
    };
    XmlPartManagerBase.prototype.au = function () {
        this.al--;
        if (this.al == 0) {
            this.ae = false;
        }
    };
    XmlPartManagerBase.prototype.as = function (a) {
    };
    XmlPartManagerBase.prototype.w = function (a) {
        return this.x(a.e(this.d));
    };
    XmlPartManagerBase.prototype.x = function (a) {
        return (this.am[a] || this.v);
    };
    XmlPartManagerBase.prototype.z = function (a) {
        this.d._bj();
        return 0;
    };
    XmlPartManagerBase.prototype.av = function (a) {
    };
    XmlPartManagerBase.prototype.aw = function (a) {
    };
    XmlPartManagerBase.prototype.ax = function (a, b) {
    };
    XmlPartManagerBase.prototype.ay = function (a, b, c) {
        if (c === void 0) {
            c = true;
        }
        switch (a) {
            case MarkupCompatibility2006.aq:
            case MarkupCompatibility2006.ar:
            case MarkupCompatibility2006.as: return;
        }
        var d = (this.am[a]);
        var e = (d != null);
        var f = e ? new ElementLoadCallbacks(1, d.b, b) : new ElementLoadCallbacks(1, null, b);
        this.am[a] = f;
    };
    XmlPartManagerBase.ag = function (a, b) {
        if (a == null || b == null) {
            return false;
        }
        return a == b;
    };
    XmlPartManagerBase.prototype.ao = function (a) {
        var e_17, _0;
        var b = this.ab.u;
        var c = null;
        try {
            for (var _1 = __values(fromEnum(b)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var d = _2.value;
                if (d.a.e(this.d) == a) {
                    c = d.d;
                }
                else {
                }
            }
        }
        catch (e_17_1) {
            e_17 = { error: e_17_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_17)
                    throw e_17.error;
            }
        }
        return c;
    };
    XmlPartManagerBase.prototype.az = function (a, b, c) {
        if (c === void 0) {
            c = true;
        }
        switch (a) {
            case MarkupCompatibility2006.aq:
            case MarkupCompatibility2006.ar:
            case MarkupCompatibility2006.as: return;
        }
        var d = (this.am[a]);
        var e = (d != null);
        var f = e ? new ElementLoadCallbacks(1, b, d.a) : new ElementLoadCallbacks(1, b, null);
        this.am[a] = f;
    };
    XmlPartManagerBase.prototype.ah = function (a) {
        if (stringIsNullOrEmpty(a)) {
            return true;
        }
        var b = a.split(' ');
        for (var d = 0; d < b.length; d++) {
            var c = b[d];
            var e = this.aa.ae(c);
            if (stringIsNullOrEmpty(e)) {
                continue;
            }
            if (this.d._ad(e) == false) {
                return false;
            }
        }
        return true;
    };
    XmlPartManagerBase.prototype.ai = function (a) {
        return this.s.c == false;
    };
    XmlPartManagerBase.prototype.y = function (a, b) {
        return 0;
    };
    XmlPartManagerBase.prototype.a0 = function (a) {
        var b = this.aa.k.e(this.d);
    };
    XmlPartManagerBase.prototype.a1 = function () {
        return new XmlTextReader(1, this.l);
    };
    XmlPartManagerBase.prototype.a2 = function () {
        return new XmlTextWriter(0, this.l, Encoding.uTF8);
    };
    XmlPartManagerBase.prototype.t = function () {
        var _this = this;
        return WorkItemExtensions.g(Base.$, Async.n(XmlReader.$, this.a1(), function (a) {
            return Async.g(a.t(), function () {
                _this.aa = new XmlReadManager(_this, a);
                return _this.aa.d();
            });
        }), function () { return _this.an; });
    };
    Object.defineProperty(XmlPartManagerBase.prototype, "s", {
        get: function () {
            return this.r;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(XmlPartManagerBase.prototype, "af", {
        get: function () {
            return this.al != 0;
        },
        enumerable: false,
        configurable: true
    });
    XmlPartManagerBase.prototype.get_aj = function () {
        return true;
    };
    Object.defineProperty(XmlPartManagerBase.prototype, "aj", {
        get: function () {
            return this.get_aj();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(XmlPartManagerBase.prototype, "ab", {
        get: function () {
            return this.aa;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(XmlPartManagerBase.prototype, "ad", {
        get: function () {
            return this.ac;
        },
        enumerable: false,
        configurable: true
    });
    XmlPartManagerBase.$t = markType(XmlPartManagerBase, 'XmlPartManagerBase', PartManagerBase.$);
    return XmlPartManagerBase;
}(PartManagerBase));
export { XmlPartManagerBase };
/**
 * @hidden
 */
var OfficeExtensibilityPartManagerBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(OfficeExtensibilityPartManagerBase, _super);
    function OfficeExtensibilityPartManagerBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OfficeExtensibilityPartManagerBase.prototype.get_m = function () {
        return "application/xml";
    };
    Object.defineProperty(OfficeExtensibilityPartManagerBase.prototype, "m", {
        get: function () {
            return this.get_m();
        },
        enumerable: false,
        configurable: true
    });
    OfficeExtensibilityPartManagerBase.prototype.get_g = function () {
        return false;
    };
    Object.defineProperty(OfficeExtensibilityPartManagerBase.prototype, "g", {
        get: function () {
            return this.get_g();
        },
        enumerable: false,
        configurable: true
    });
    OfficeExtensibilityPartManagerBase.prototype.f = function (a, b) {
        var c = PackageUtilities.ak(b);
        return new RoundTripDataPartManager(a.contentType, c.toString(), b.relationshipType, this.d);
    };
    OfficeExtensibilityPartManagerBase.prototype.a = function () {
        var a = RoundTripDataPartManager.r(this.d, this.l, this.m);
        this.a3 = a;
        return WorkItem.g(Base.$, a);
    };
    OfficeExtensibilityPartManagerBase.prototype.b = function (a) {
        var b = this.a3;
        if (b == null) {
            return null;
        }
        return RoundTripDataPartManager.s(b, this.d, this.l, true);
    };
    OfficeExtensibilityPartManagerBase.prototype.u = function (a) {
        throw new NotImplementedException(0);
    };
    OfficeExtensibilityPartManagerBase.$t = markType(OfficeExtensibilityPartManagerBase, 'OfficeExtensibilityPartManagerBase', XmlPartManagerBase.$);
    return OfficeExtensibilityPartManagerBase;
}(XmlPartManagerBase));
export { OfficeExtensibilityPartManagerBase };
/**
 * @hidden
 */
var Office2007ExtensibilityPartManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(Office2007ExtensibilityPartManager, _super);
    function Office2007ExtensibilityPartManager() {
        return _super.call(this) || this;
    }
    Office2007ExtensibilityPartManager.prototype.get_a3 = function () {
        return this.d._h;
    };
    Office2007ExtensibilityPartManager.prototype.set_a3 = function (a) {
        this.d._h = a;
    };
    Object.defineProperty(Office2007ExtensibilityPartManager.prototype, "a3", {
        get: function () {
            return this.get_a3();
        },
        set: function (a) {
            this.set_a3(a);
        },
        enumerable: false,
        configurable: true
    });
    Office2007ExtensibilityPartManager.prototype.n = function (a) {
        return "/customUI/customUI.xml";
    };
    Office2007ExtensibilityPartManager.prototype.o = function (a) {
        switch (a) {
            case 0:
            case 1: return Office2007ExtensibilityPartManager.a7;
            default: return Office2007ExtensibilityPartManager.a7;
        }
    };
    Office2007ExtensibilityPartManager.$t = markType(Office2007ExtensibilityPartManager, 'Office2007ExtensibilityPartManager', OfficeExtensibilityPartManagerBase.$);
    Office2007ExtensibilityPartManager.a7 = "http://schemas.microsoft.com/office/2006/relationships/ui/extensibility";
    Office2007ExtensibilityPartManager.a5 = new Office2007ExtensibilityPartManager();
    return Office2007ExtensibilityPartManager;
}(OfficeExtensibilityPartManagerBase));
export { Office2007ExtensibilityPartManager };
/**
 * @hidden
 */
var Office2010ExtensibilityPartManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(Office2010ExtensibilityPartManager, _super);
    function Office2010ExtensibilityPartManager() {
        return _super.call(this) || this;
    }
    Office2010ExtensibilityPartManager.prototype.get_a3 = function () {
        return this.d._i;
    };
    Office2010ExtensibilityPartManager.prototype.set_a3 = function (a) {
        this.d._i = a;
    };
    Object.defineProperty(Office2010ExtensibilityPartManager.prototype, "a3", {
        get: function () {
            return this.get_a3();
        },
        set: function (a) {
            this.set_a3(a);
        },
        enumerable: false,
        configurable: true
    });
    Office2010ExtensibilityPartManager.prototype.n = function (a) {
        return "/customUI/customUI14.xml";
    };
    Office2010ExtensibilityPartManager.prototype.o = function (a) {
        switch (a) {
            case 0:
            case 1: return Office2010ExtensibilityPartManager.a7;
            default: return Office2010ExtensibilityPartManager.a7;
        }
    };
    Office2010ExtensibilityPartManager.$t = markType(Office2010ExtensibilityPartManager, 'Office2010ExtensibilityPartManager', OfficeExtensibilityPartManagerBase.$);
    Office2010ExtensibilityPartManager.a7 = "http://schemas.microsoft.com/office/2007/relationships/ui/extensibility";
    Office2010ExtensibilityPartManager.a5 = new Office2010ExtensibilityPartManager();
    return Office2010ExtensibilityPartManager;
}(OfficeExtensibilityPartManagerBase));
export { Office2010ExtensibilityPartManager };
/**
 * @hidden
 */
var JpegPartManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(JpegPartManager, _super);
    function JpegPartManager() {
        return _super.call(this) || this;
    }
    JpegPartManager.prototype.get_s = function () {
        return "/xl/media/image.jpeg";
    };
    Object.defineProperty(JpegPartManager.prototype, "s", {
        get: function () {
            return this.get_s();
        },
        enumerable: false,
        configurable: true
    });
    JpegPartManager.prototype.get_t = function () {
        return "/ppt/media/image.jpeg";
    };
    Object.defineProperty(JpegPartManager.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    JpegPartManager.prototype.get_u = function () {
        return "/word/media/image.jpeg";
    };
    Object.defineProperty(JpegPartManager.prototype, "u", {
        get: function () {
            return this.get_u();
        },
        enumerable: false,
        configurable: true
    });
    JpegPartManager.prototype.get_m = function () {
        return "image/jpeg";
    };
    Object.defineProperty(JpegPartManager.prototype, "m", {
        get: function () {
            return this.get_m();
        },
        enumerable: false,
        configurable: true
    });
    JpegPartManager.prototype.r = function (a) {
        return ImageFormat.f;
    };
    JpegPartManager.$t = markType(JpegPartManager, 'JpegPartManager', ImagePartManagerBase.$);
    JpegPartManager.y = new JpegPartManager();
    return JpegPartManager;
}(ImagePartManagerBase));
export { JpegPartManager };
/**
 * @hidden
 */
var RoundTripDataPartManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RoundTripDataPartManager, _super);
    function RoundTripDataPartManager(a, b, c, d) {
        var _this = _super.call(this) || this;
        _this.u = null;
        _this.v = null;
        _this.w = null;
        _this.t = null;
        _this.u = a;
        _this.v = b;
        _this.w = c;
        _this.t = d;
        return _this;
    }
    RoundTripDataPartManager.prototype.a = function () {
        return WorkItem.g(Base.$, new BinaryData(DocCoreUtils.c(this.l)));
    };
    RoundTripDataPartManager.prototype.b = function (a) {
        var b = typeCast(BinaryData.$, a);
        if (b == null) {
            return null;
        }
        this.l.write(b.a, 0, b.a.length);
        return null;
    };
    RoundTripDataPartManager.prototype.n = function (a) {
        return this.v;
    };
    RoundTripDataPartManager.prototype.o = function (a) {
        return this.t._a7(a, this.w);
    };
    RoundTripDataPartManager.prototype.get_m = function () {
        return this.u;
    };
    Object.defineProperty(RoundTripDataPartManager.prototype, "m", {
        get: function () {
            return this.get_m();
        },
        enumerable: false,
        configurable: true
    });
    RoundTripDataPartManager.prototype.get_g = function () {
        return false;
    };
    Object.defineProperty(RoundTripDataPartManager.prototype, "g", {
        get: function () {
            return this.get_g();
        },
        enumerable: false,
        configurable: true
    });
    RoundTripDataPartManager.r = function (a, b, c) {
        var e_18, _0;
        var d = new RoundTripControlData(c, a._d.uri.toString(), DocCoreUtils.c(b));
        var _loop_1 = function (e) {
            if (e.targetMode != 0) {
                return "continue";
            }
            var f = typeCast(BinaryData.$, a._as(e));
            if (f == null) {
                return "continue";
            }
            var g = PackageUtilities.ak(e);
            var h = a._e(g);
            var i = PackageUtilities.ak(e).toString();
            d.c.add(((function () {
                var $ret = new RoundTripPartData();
                $ret.b = h.contentType;
                $ret.d = e.id;
                $ret.a = f;
                $ret.e = e.relationshipType;
                $ret.c = g.toString();
                return $ret;
            })()));
        };
        try {
            for (var _1 = __values(fromEnum(a._d.getRelationships())), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var e = _2.value;
                _loop_1(e);
            }
        }
        catch (e_18_1) {
            e_18 = { error: e_18_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_18)
                    throw e_18.error;
            }
        }
        return d;
    };
    RoundTripDataPartManager.s = function (a, b, c, d) {
        if (d === void 0) {
            d = false;
        }
        return WorkItemExtensions.a(Async.d(RoundTripPartData.$, a.c, function (e) {
            if (d) {
                var f = ((function (g) { return g != null ? g : e.e; })(b._a7(b._z, e.e)));
                var g = new RoundTripDataPartManager(e.b, e.c, f, b);
                return b._j(g, e.a, e.d);
            }
            return WorkItemExtensions.e(Tuple$2.$.specialize(Uri.$, String_$type), b._l(e.b, e.c, e.a, e.d), function (h) {
            });
        }), function () { return c.write(a.a, 0, a.a.length); });
    };
    RoundTripDataPartManager.$t = markType(RoundTripDataPartManager, 'RoundTripDataPartManager', PartManagerBase.$);
    return RoundTripDataPartManager;
}(PartManagerBase));
export { RoundTripDataPartManager };
/**
 * @hidden
 */
var ThemePartManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ThemePartManager, _super);
    function ThemePartManager(a) {
        var _this = _super.call(this) || this;
        _this.a3 = false;
        _this.a3 = a;
        return _this;
    }
    ThemePartManager.prototype.get_m = function () {
        return ThemePartManager.a7;
    };
    Object.defineProperty(ThemePartManager.prototype, "m", {
        get: function () {
            return this.get_m();
        },
        enumerable: false,
        configurable: true
    });
    ThemePartManager.prototype.n = function (a) {
        if (this.a3) {
            switch (a) {
                case 0: return "/theme/theme/theme.xml";
                case 1: return "/theme/theme/theme.xml";
                default: return null;
            }
        }
        else {
            switch (a) {
                case 0: return "/xl/theme/theme.xml";
                case 1: return "/word/theme/theme.xml";
                default: return null;
            }
        }
    };
    ThemePartManager.prototype.o = function (a) {
        switch (a) {
            case 0: return ThemePartManager.a9;
            case 1: return ThemePartManager.a8;
            default: return ThemePartManager.a9;
        }
    };
    ThemePartManager.prototype.get_g = function () {
        return true;
    };
    Object.defineProperty(ThemePartManager.prototype, "g", {
        get: function () {
            return this.get_g();
        },
        enumerable: false,
        configurable: true
    });
    ThemePartManager.prototype.a = function () {
        this.d._af = true;
        return _super.prototype.a.call(this);
    };
    ThemePartManager.$t = markType(ThemePartManager, 'ThemePartManager', XmlPartManagerBase.$);
    ThemePartManager.a7 = "application/vnd.openxmlformats-officedocument.theme+xml";
    ThemePartManager.a9 = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme";
    ThemePartManager.a8 = "http://purl.oclc.org/ooxml/officeDocument/relationships/theme";
    return ThemePartManager;
}(XmlPartManagerBase));
export { ThemePartManager };
/**
 * @hidden
 */
var XmlNamespaceDefinitionBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(XmlNamespaceDefinitionBase, _super);
    function XmlNamespaceDefinitionBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    XmlNamespaceDefinitionBase.z = function (a, b) {
    };
    XmlNamespaceDefinitionBase.y = function (a) {
        var e_19, _0;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var b = _2.value;
                switch (b.a.e(a.d)) {
                    default: break;
                }
            }
        }
        catch (e_19_1) {
            e_19 = { error: e_19_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_19)
                    throw e_19.error;
            }
        }
    };
    XmlNamespaceDefinitionBase.q = function ($t, a, b, c) {
        if (c == false && EqualityComparer$1.defaultEqualityComparerValue($t).equalsC(a, b)) {
            return null;
        }
        return XmlNamespaceDefinitionBase.p($t, a);
    };
    XmlNamespaceDefinitionBase.p = function ($t, value_) {
        var a = $t;
        if (a == ST_FillMethod_$type && Base.equalsStatic(getBoxIfEnum($t, value_), enumGetBox(ST_FillMethod_$type, 4))) {
            return "linear sigma";
        }
        var b = stringToString$1($t, value_);
        if (b.charAt(0) == '_') {
            return b.substr(1);
        }
        return b;
    };
    XmlNamespaceDefinitionBase.r = function (a) {
        var b = a.lastIndexOf('/');
        if (b < 0) {
            return a;
        }
        return a.substr(b + 1);
    };
    XmlNamespaceDefinitionBase.b = function ($t, a, b) {
        if (b === void 0) {
            b = Type.createInstance($t);
        }
        if (stringIsNullOrEmpty(a)) {
            return b;
        }
        var c = false;
        switch (a) {
            case "continue":
            case "decimal":
            case "default":
            case "double":
            case "fixed":
            case "long":
            case "short":
            case "base":
                c = true;
                break;
            case "linear sigma":
                a = EnumUtil.getName(ST_FillMethod_$type, 4);
                break;
            default:
                if ('0'.charCodeAt(0) <= a.charAt(0).charCodeAt(0) && a.charAt(0).charCodeAt(0) <= '9'.charCodeAt(0)) {
                    c = true;
                }
                break;
        }
        var d;
        if (c == false && ((function () { var e = EnumUtil.tryParse$1($t, a, false, d); d = e.p2; return e.ret; })())) {
            return d;
        }
        if (((function () { var e = EnumUtil.tryParse$1($t, "_" + a, false, d); d = e.p2; return e.ret; })())) {
            return d;
        }
        return b;
    };
    XmlNamespaceDefinitionBase.c = function ($t, a, b, c) {
        if (stringIsNullOrEmpty(a.d)) {
            return b;
        }
        return c(a.d);
    };
    XmlNamespaceDefinitionBase.g = function ($t, a, b) {
        var c = new List$1($t, 0);
        var d = -1;
        for (var e = 0; e < a.length; e++) {
            switch (a.charAt(e)) {
                case ' ':
                case '\t':
                case '\r':
                case '\n':
                    if (d != -1) {
                        c.add(b(a.substr(d, e - d)));
                        d = -1;
                    }
                    break;
                default:
                    if (d == -1) {
                        d = e;
                    }
                    break;
            }
        }
        if (d != -1) {
            c.add(b(a.substr(d)));
        }
        return c;
    };
    XmlNamespaceDefinitionBase.e = function (a, b) {
        var c;
        if (((function () { var d = tryParseBool(a.ab.ad, c); c = d.p1; return d.ret; })()) == false) {
            c = ST_OnOff.e(a.ab.ad);
        }
        return c;
    };
    XmlNamespaceDefinitionBase.aa = function (a, b, c, d) {
        a.ad.p(b, c);
        a.ad.u(d.toString().toLowerCase());
    };
    XmlNamespaceDefinitionBase.n = function (a, b) {
        return parseInt8_1(a.ab.ad, CultureInfo.invariantCulture);
    };
    XmlNamespaceDefinitionBase.ab = function (a, b, c, d) {
        a.ad.p(b, c);
        a.ad.u(d.toString());
    };
    XmlNamespaceDefinitionBase.h = function (a, b) {
        var c = a.ao(XmlSchemaInstance.ar);
        var d = c == null ? null : a.ab.ag(c);
        return PackageUtilities.i(a.ab.ad);
    };
    XmlNamespaceDefinitionBase.ac = function (a, b, c, d) {
        a.ad.p(b, c);
        var e = new QualifiedNameInfo(1, DcTerms.ao.t, DcTerms.ao.s(a.d._z), XmlNamespaceDefinitionBase.r("http://purl.org/dc/terms/W3CDTF"));
        a.ad.h(XmlSchemaInstance.ar, e.toString());
        a.ad.u(PackageUtilities.k(d));
    };
    XmlNamespaceDefinitionBase.i = function (a, b) {
        return parseNumber(a.ab.ad, CultureInfo.invariantCulture);
    };
    XmlNamespaceDefinitionBase.ad = function (a, b, c, d) {
        a.ad.p(b, c);
        a.ad.u(numberToString(d, CultureInfo.invariantCulture));
    };
    XmlNamespaceDefinitionBase.j = function (a, b) {
        return parseNumber(a.ab.ad, CultureInfo.invariantCulture);
    };
    XmlNamespaceDefinitionBase.ae = function (a, b, c, d) {
        a.ad.p(b, c);
        a.ad.u(numberToString(d, CultureInfo.invariantCulture));
    };
    XmlNamespaceDefinitionBase.o = function (a, b) {
        return parseNumber(a.ab.ad, CultureInfo.invariantCulture);
    };
    XmlNamespaceDefinitionBase.af = function (a, b, c, d) {
        a.ad.p(b, c);
        a.ad.u(numberToString(d, CultureInfo.invariantCulture));
    };
    XmlNamespaceDefinitionBase.l = function (a, b, c) {
        if (c === void 0) {
            c = true;
        }
        var d = a.ab.ad;
        if (c) {
            return parseInt32_1(d, CultureInfo.invariantCulture);
        }
        var e;
        var f = tryParseInt32_2(d, 7, CultureInfo.invariantCulture, e);
        e = f.p3;
        return e;
    };
    XmlNamespaceDefinitionBase.ag = function (a, b, c, d) {
        a.ad.p(b, c);
        a.ad.u(d.toString());
    };
    XmlNamespaceDefinitionBase.m = function (a, b) {
        return parseInt64_1(a.ab.ad, CultureInfo.invariantCulture);
    };
    XmlNamespaceDefinitionBase.ah = function (a, b, c, d) {
        a.ad.p(b, c);
        a.ad.u(d.toString());
    };
    XmlNamespaceDefinitionBase.k = function (a, b) {
        return parseInt16_1(a.ab.ad, CultureInfo.invariantCulture);
    };
    XmlNamespaceDefinitionBase.ai = function (a, b, c, d) {
        a.ad.p(b, c);
        a.ad.u(d.toString());
    };
    XmlNamespaceDefinitionBase.d = function (a) {
        switch (a) {
            case ' ':
            case '\r':
            case '\n':
            case '\t': return true;
            default: return false;
        }
    };
    XmlNamespaceDefinitionBase.u = function (a, b, c) {
        if (c === void 0) {
            c = 0;
        }
        var d = a.ao(XmlNamespace.as);
        if (d == "preserve") {
            c = 6;
        }
        var e = a.ab.ad;
        if (e != null) {
            if ((c & 2) == 0) {
                e = trimStart.apply(void 0, __spreadArray([e], __read(XmlNamespaceDefinitionBase.a), false));
            }
            if ((c & 4) == 0 && stringIsNullOrWhiteSpace(e) == false) {
                e = trimEnd.apply(void 0, __spreadArray([e], __read(XmlNamespaceDefinitionBase.a), false));
            }
        }
        return e;
    };
    XmlNamespaceDefinitionBase.aj = function (a, b, c, d, e, f) {
        if (e === void 0) {
            e = null;
        }
        if (f === void 0) {
            f = 0;
        }
        a.ad.p(b, c);
        if (f != 6) {
            if (stringIsNullOrEmpty(d) == false) {
                if ((XmlNamespaceDefinitionBase.d(d.charAt(0)) && (f & 2) == 0) || (XmlNamespaceDefinitionBase.d(d.charAt(d.length - 1)) && (f & 4) == 0)) {
                    XmlNamespace.at(a.ad);
                }
            }
        }
        if (e != null) {
            e();
        }
        a.ad.u(d);
    };
    XmlNamespaceDefinitionBase.f = function (a, b) {
        return parseUInt8_1(a.ab.ad, CultureInfo.invariantCulture);
    };
    XmlNamespaceDefinitionBase.ak = function (a, b, c, d) {
        a.ad.p(b, c);
        a.ad.u(d.toString());
    };
    XmlNamespaceDefinitionBase.w = function (a, b) {
        return parseUInt32_1(a.ab.ad, CultureInfo.invariantCulture);
    };
    XmlNamespaceDefinitionBase.al = function (a, b, c, d) {
        a.ad.p(b, c);
        a.ad.u(d.toString());
    };
    XmlNamespaceDefinitionBase.x = function (a, b) {
        return parseUInt64_1(a.ab.ad, CultureInfo.invariantCulture);
    };
    XmlNamespaceDefinitionBase.am = function (a, b, c, d) {
        a.ad.p(b, c);
        a.ad.u(d.toString());
    };
    XmlNamespaceDefinitionBase.v = function (a, b) {
        return parseUInt16_1(a.ab.ad, CultureInfo.invariantCulture);
    };
    XmlNamespaceDefinitionBase.an = function (a, b, c, d) {
        a.ad.p(b, c);
        a.ad.u(d.toString());
    };
    XmlNamespaceDefinitionBase.$t = markType(XmlNamespaceDefinitionBase, 'XmlNamespaceDefinitionBase');
    XmlNamespaceDefinitionBase.a = [' ', '\r', '\n', '\t'];
    return XmlNamespaceDefinitionBase;
}(Base));
export { XmlNamespaceDefinitionBase };
/**
 * @hidden
 */
var CoreProperties = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CoreProperties, _super);
    function CoreProperties() {
        return _super.call(this) || this;
    }
    CoreProperties.prototype.s = function (a) {
        switch (a) {
            case 0:
            case 1: return CoreProperties.av;
            default: return CoreProperties.av;
        }
    };
    CoreProperties.prototype.get_t = function () {
        return "cp";
    };
    Object.defineProperty(CoreProperties.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    CoreProperties.ay = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, CoreProperties.aq, 6);
        return {
            p1: b
        };
    };
    CoreProperties.a5 = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, CoreProperties.aq, "cp", b, void 0, 6);
    };
    CoreProperties.az = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, CoreProperties.ar, 6);
        return {
            p1: b
        };
    };
    CoreProperties.a6 = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, CoreProperties.ar, "cp", b, void 0, 6);
    };
    CoreProperties.a0 = function (a) {
    };
    CoreProperties.a7 = function (a) {
        a.ad.p(CoreProperties.as, "cp");
        var b = a.d._z;
        a.ad.l(CoreProperties.ao);
        a.ad.l(DcElements.ao);
        a.ad.l(DcTerms.ao);
        a.ad.l(DcDcmiType.ao);
        a.ad.l(XmlSchemaInstance.ao);
    };
    CoreProperties.a1 = function (a, b, c) {
        b = a.ao(XmlNamespace.aq);
        c = a.ab.ad;
        return {
            p1: b,
            p2: c
        };
    };
    CoreProperties.a8 = function (a, b, c) {
        a.ad.p(CoreProperties.at, "cp");
        var d;
        d = b;
        a.ad.h(XmlNamespace.aq, d);
        a.ad.u(c);
    };
    CoreProperties.a2 = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, CoreProperties.au);
        return {
            p1: b
        };
    };
    CoreProperties.a9 = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, CoreProperties.au, "cp", b);
    };
    CoreProperties.a3 = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, CoreProperties.aw);
        return {
            p1: b
        };
    };
    CoreProperties.ba = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, CoreProperties.aw, "cp", b);
    };
    CoreProperties.a4 = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, CoreProperties.ax);
        return {
            p1: b
        };
    };
    CoreProperties.bb = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, CoreProperties.ax, "cp", b);
    };
    CoreProperties.$t = markType(CoreProperties, 'CoreProperties', XmlNamespaceDefinitionBase.$);
    CoreProperties.av = "http://schemas.openxmlformats.org/package/2006/metadata/core-properties";
    CoreProperties.aq = CoreProperties.av + "/category";
    CoreProperties.ar = CoreProperties.av + "/contentStatus";
    CoreProperties.as = CoreProperties.av + "/coreProperties";
    CoreProperties.at = CoreProperties.av + "/keywords";
    CoreProperties.au = CoreProperties.av + "/lastModifiedBy";
    CoreProperties.aw = CoreProperties.av + "/revision";
    CoreProperties.ax = CoreProperties.av + "/version";
    CoreProperties.ao = new CoreProperties();
    return CoreProperties;
}(XmlNamespaceDefinitionBase));
export { CoreProperties };
/**
 * @hidden
 */
var DcDcmiType = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DcDcmiType, _super);
    function DcDcmiType() {
        return _super.call(this) || this;
    }
    DcDcmiType.prototype.s = function (a) {
        switch (a) {
            case 0:
            case 1: return "http://purl.org/dc/dcmitype/";
            default: return "http://purl.org/dc/dcmitype/";
        }
    };
    DcDcmiType.prototype.get_t = function () {
        return "dcmitype";
    };
    Object.defineProperty(DcDcmiType.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    DcDcmiType.$t = markType(DcDcmiType, 'DcDcmiType', XmlNamespaceDefinitionBase.$);
    DcDcmiType.ao = new DcDcmiType();
    return DcDcmiType;
}(XmlNamespaceDefinitionBase));
export { DcDcmiType };
/**
 * @hidden
 */
var DcElements = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DcElements, _super);
    function DcElements() {
        return _super.call(this) || this;
    }
    DcElements.prototype.s = function (a) {
        switch (a) {
            case 0:
            case 1: return "http://purl.org/dc/elements/1.1/";
            default: return "http://purl.org/dc/elements/1.1/";
        }
    };
    DcElements.prototype.get_t = function () {
        return "dc";
    };
    Object.defineProperty(DcElements.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    DcElements.av = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, "http://purl.org/dc/elements/1.1/creator");
        return {
            p1: b
        };
    };
    DcElements.az = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, "http://purl.org/dc/elements/1.1/creator", "dc", b);
    };
    DcElements.aw = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, DcElements.ar, 6);
        return {
            p1: b
        };
    };
    DcElements.a0 = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, DcElements.ar, "dc", b, void 0, 6);
    };
    DcElements.ax = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, "http://purl.org/dc/elements/1.1/subject", 6);
        return {
            p1: b
        };
    };
    DcElements.a1 = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, "http://purl.org/dc/elements/1.1/subject", "dc", b, void 0, 6);
    };
    DcElements.ay = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, "http://purl.org/dc/elements/1.1/title", 6);
        return {
            p1: b
        };
    };
    DcElements.a2 = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, "http://purl.org/dc/elements/1.1/title", "dc", b, void 0, 6);
    };
    DcElements.$t = markType(DcElements, 'DcElements', XmlNamespaceDefinitionBase.$);
    DcElements.ar = "http://purl.org/dc/elements/1.1/" + "description";
    DcElements.ao = new DcElements();
    return DcElements;
}(XmlNamespaceDefinitionBase));
export { DcElements };
/**
 * @hidden
 */
var DcTerms = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DcTerms, _super);
    function DcTerms() {
        return _super.call(this) || this;
    }
    DcTerms.prototype.s = function (a) {
        switch (a) {
            case 0:
            case 1: return "http://purl.org/dc/terms/";
            default: return "http://purl.org/dc/terms/";
        }
    };
    DcTerms.prototype.get_t = function () {
        return "dcterms";
    };
    Object.defineProperty(DcTerms.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    DcTerms.au = function (a, b) {
        b = XmlNamespaceDefinitionBase.h(a, "http://purl.org/dc/terms/created");
        return {
            p1: b
        };
    };
    DcTerms.aw = function (a, b) {
        XmlNamespaceDefinitionBase.ac(a, "http://purl.org/dc/terms/created", "dcterms", b);
    };
    DcTerms.av = function (a, b) {
        b = XmlNamespaceDefinitionBase.h(a, "http://purl.org/dc/terms/modified");
        return {
            p1: b
        };
    };
    DcTerms.ax = function (a, b) {
        XmlNamespaceDefinitionBase.ac(a, "http://purl.org/dc/terms/modified", "dcterms", b);
    };
    DcTerms.$t = markType(DcTerms, 'DcTerms', XmlNamespaceDefinitionBase.$);
    DcTerms.ao = new DcTerms();
    return DcTerms;
}(XmlNamespaceDefinitionBase));
export { DcTerms };
/**
 * @hidden
 */
var Drawing2010Main = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(Drawing2010Main, _super);
    function Drawing2010Main() {
        return _super.call(this) || this;
    }
    Drawing2010Main.prototype.s = function (a) {
        switch (a) {
            case 0:
            case 1: return Drawing2010Main.aq;
            default: return Drawing2010Main.aq;
        }
    };
    Drawing2010Main.prototype.get_t = function () {
        return "a14";
    };
    Object.defineProperty(Drawing2010Main.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    Drawing2010Main.$t = markType(Drawing2010Main, 'Drawing2010Main', XmlNamespaceDefinitionBase.$);
    Drawing2010Main.aq = "http://schemas.microsoft.com/office/drawing/2010/main";
    Drawing2010Main.ao = new Drawing2010Main();
    return Drawing2010Main;
}(XmlNamespaceDefinitionBase));
export { Drawing2010Main };
/**
 * @hidden
 */
var Drawing2010Slicer = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(Drawing2010Slicer, _super);
    function Drawing2010Slicer() {
        return _super.call(this) || this;
    }
    Drawing2010Slicer.prototype.s = function (a) {
        switch (a) {
            case 0:
            case 1: return Drawing2010Slicer.as;
            default: return Drawing2010Slicer.as;
        }
    };
    Drawing2010Slicer.prototype.get_t = function () {
        return "sle";
    };
    Object.defineProperty(Drawing2010Slicer.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    Drawing2010Slicer.au = function (a, b) {
        b = a.ao("name");
        return {
            p1: b
        };
    };
    Drawing2010Slicer.av = function (a, b) {
        a.ad.p(Drawing2010Slicer.at, "sle");
        var c;
        c = b;
        a.ad.h("name", c);
    };
    Drawing2010Slicer.$t = markType(Drawing2010Slicer, 'Drawing2010Slicer', XmlNamespaceDefinitionBase.$);
    Drawing2010Slicer.as = "http://schemas.microsoft.com/office/drawing/2010/slicer";
    Drawing2010Slicer.at = Drawing2010Slicer.as + "/slicer";
    Drawing2010Slicer.ao = new Drawing2010Slicer();
    return Drawing2010Slicer;
}(XmlNamespaceDefinitionBase));
export { Drawing2010Slicer };
/**
 * @hidden
 */
var DrawingMLChart = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DrawingMLChart, _super);
    function DrawingMLChart() {
        return _super.call(this) || this;
    }
    DrawingMLChart.prototype.s = function (a) {
        switch (a) {
            case 0: return DrawingMLChart.dy;
            case 1: return DrawingMLChart.dx;
            default: return DrawingMLChart.dy;
        }
    };
    DrawingMLChart.prototype.get_t = function () {
        return "c";
    };
    Object.defineProperty(DrawingMLChart.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    DrawingMLChart.gy = function (a, b) {
        b = a.ao(OfficeDocumentRelationships.as);
        return {
            p1: b
        };
    };
    DrawingMLChart.gz = function (a, b) {
        if (b === void 0) {
            b = null;
        }
        a.ad.p(DrawingMLChart.bf, "c");
        a.ad.l(DrawingMLChart.ao);
        a.ad.l(OfficeDocumentRelationships.ao);
        var c;
        c = b;
        a.ad.h(OfficeDocumentRelationships.as, c);
    };
    DrawingMLChart.$t = markType(DrawingMLChart, 'DrawingMLChart', XmlNamespaceDefinitionBase.$);
    DrawingMLChart.dy = "http://schemas.openxmlformats.org/drawingml/2006/chart";
    DrawingMLChart.dx = "http://purl.oclc.org/ooxml/drawingml/chart";
    DrawingMLChart.aq = DrawingMLChart.dx + "/applyToEnd";
    DrawingMLChart.ar = DrawingMLChart.dx + "/applyToFront";
    DrawingMLChart.as = DrawingMLChart.dx + "/applyToSides";
    DrawingMLChart.at = DrawingMLChart.dx + "/area3DChart";
    DrawingMLChart.au = DrawingMLChart.dx + "/areaChart";
    DrawingMLChart.av = DrawingMLChart.dx + "/auto";
    DrawingMLChart.aw = DrawingMLChart.dx + "/autoTitleDeleted";
    DrawingMLChart.ax = DrawingMLChart.dx + "/autoUpdate";
    DrawingMLChart.ay = DrawingMLChart.dx + "/axId";
    DrawingMLChart.az = DrawingMLChart.dx + "/axPos";
    DrawingMLChart.a0 = DrawingMLChart.dx + "/backWall";
    DrawingMLChart.a1 = DrawingMLChart.dx + "/backward";
    DrawingMLChart.a2 = DrawingMLChart.dx + "/bandFmt";
    DrawingMLChart.a3 = DrawingMLChart.dx + "/bandFmts";
    DrawingMLChart.a4 = DrawingMLChart.dx + "/bar3DChart";
    DrawingMLChart.a5 = DrawingMLChart.dx + "/barChart";
    DrawingMLChart.a6 = DrawingMLChart.dx + "/barDir";
    DrawingMLChart.a7 = DrawingMLChart.dx + "/baseTimeUnit";
    DrawingMLChart.a8 = DrawingMLChart.dx + "/bubble3D";
    DrawingMLChart.a9 = DrawingMLChart.dx + "/bubbleChart";
    DrawingMLChart.ba = DrawingMLChart.dx + "/bubbleScale";
    DrawingMLChart.bb = DrawingMLChart.dx + "/bubbleSize";
    DrawingMLChart.bc = DrawingMLChart.dx + "/builtInUnit";
    DrawingMLChart.bd = DrawingMLChart.dx + "/cat";
    DrawingMLChart.be = DrawingMLChart.dx + "/catAx";
    DrawingMLChart.bf = DrawingMLChart.dx + "/chart";
    DrawingMLChart.bg = DrawingMLChart.dx + "/chartObject";
    DrawingMLChart.bh = DrawingMLChart.dx + "/chartSpace";
    DrawingMLChart.bi = DrawingMLChart.dx + "/clrMapOvr";
    DrawingMLChart.bj = DrawingMLChart.dx + "/crossAx";
    DrawingMLChart.bk = DrawingMLChart.dx + "/crossBetween";
    DrawingMLChart.bl = DrawingMLChart.dx + "/crosses";
    DrawingMLChart.bm = DrawingMLChart.dx + "/crossesAt";
    DrawingMLChart.bn = DrawingMLChart.dx + "/custSplit";
    DrawingMLChart.bo = DrawingMLChart.dx + "/custUnit";
    DrawingMLChart.bp = DrawingMLChart.dx + "/data";
    DrawingMLChart.bq = DrawingMLChart.dx + "/date1904";
    DrawingMLChart.br = DrawingMLChart.dx + "/dateAx";
    DrawingMLChart.bs = DrawingMLChart.dx + "/delete";
    DrawingMLChart.bt = DrawingMLChart.dx + "/depthPercent";
    DrawingMLChart.bu = DrawingMLChart.dx + "/dispBlanksAs";
    DrawingMLChart.bv = DrawingMLChart.dx + "/dispEq";
    DrawingMLChart.bw = DrawingMLChart.dx + "/dispRSqr";
    DrawingMLChart.bx = DrawingMLChart.dx + "/dispUnits";
    DrawingMLChart.by = DrawingMLChart.dx + "/dispUnitsLbl";
    DrawingMLChart.bz = DrawingMLChart.dx + "/dLbl";
    DrawingMLChart.b0 = DrawingMLChart.dx + "/dLblPos";
    DrawingMLChart.b1 = DrawingMLChart.dx + "/dLbls";
    DrawingMLChart.b2 = DrawingMLChart.dx + "/doughnutChart";
    DrawingMLChart.b3 = DrawingMLChart.dx + "/downBars";
    DrawingMLChart.b4 = DrawingMLChart.dx + "/dPt";
    DrawingMLChart.b5 = DrawingMLChart.dx + "/dropLines";
    DrawingMLChart.b6 = DrawingMLChart.dx + "/dTable";
    DrawingMLChart.b7 = DrawingMLChart.dx + "/errBars";
    DrawingMLChart.b8 = DrawingMLChart.dx + "/errBarType";
    DrawingMLChart.b9 = DrawingMLChart.dx + "/errDir";
    DrawingMLChart.ca = DrawingMLChart.dx + "/errValType";
    DrawingMLChart.cb = DrawingMLChart.dx + "/evenFooter";
    DrawingMLChart.cc = DrawingMLChart.dx + "/evenHeader";
    DrawingMLChart.cd = DrawingMLChart.dx + "/explosion";
    DrawingMLChart.ce = DrawingMLChart.dx + "/ext";
    DrawingMLChart.cf = DrawingMLChart.dx + "/externalData";
    DrawingMLChart.cg = DrawingMLChart.dx + "/extLst";
    DrawingMLChart.ch = DrawingMLChart.dx + "/f";
    DrawingMLChart.ci = DrawingMLChart.dx + "/firstFooter";
    DrawingMLChart.cj = DrawingMLChart.dx + "/firstHeader";
    DrawingMLChart.ck = DrawingMLChart.dx + "/firstSliceAng";
    DrawingMLChart.cl = DrawingMLChart.dx + "/floor";
    DrawingMLChart.cm = DrawingMLChart.dx + "/fmtId";
    DrawingMLChart.cn = DrawingMLChart.dx + "/formatCode";
    DrawingMLChart.co = DrawingMLChart.dx + "/formatting";
    DrawingMLChart.cp = DrawingMLChart.dx + "/forward";
    DrawingMLChart.cq = DrawingMLChart.dx + "/gapDepth";
    DrawingMLChart.cr = DrawingMLChart.dx + "/gapWidth";
    DrawingMLChart.cs = DrawingMLChart.dx + "/grouping";
    DrawingMLChart.ct = DrawingMLChart.dx + "/h";
    DrawingMLChart.cu = DrawingMLChart.dx + "/headerFooter";
    DrawingMLChart.cv = DrawingMLChart.dx + "/hiLowLines";
    DrawingMLChart.cw = DrawingMLChart.dx + "/hMode";
    DrawingMLChart.cx = DrawingMLChart.dx + "/holeSize";
    DrawingMLChart.cy = DrawingMLChart.dx + "/hPercent";
    DrawingMLChart.cz = DrawingMLChart.dx + "/idx";
    DrawingMLChart.c0 = DrawingMLChart.dx + "/intercept";
    DrawingMLChart.c1 = DrawingMLChart.dx + "/invertIfNegative";
    DrawingMLChart.c2 = DrawingMLChart.dx + "/lang";
    DrawingMLChart.c3 = DrawingMLChart.dx + "/layout";
    DrawingMLChart.c4 = DrawingMLChart.dx + "/layoutTarget";
    DrawingMLChart.c5 = DrawingMLChart.dx + "/lblAlgn";
    DrawingMLChart.c6 = DrawingMLChart.dx + "/lblOffset";
    DrawingMLChart.c7 = DrawingMLChart.dx + "/leaderLines";
    DrawingMLChart.c8 = DrawingMLChart.dx + "/legacyDrawingHF";
    DrawingMLChart.c9 = DrawingMLChart.dx + "/legend";
    DrawingMLChart.da = DrawingMLChart.dx + "/legendEntry";
    DrawingMLChart.db = DrawingMLChart.dx + "/legendPos";
    DrawingMLChart.dc = DrawingMLChart.dx + "/line3DChart";
    DrawingMLChart.dd = DrawingMLChart.dx + "/lineChart";
    DrawingMLChart.de = DrawingMLChart.dx + "/logBase";
    DrawingMLChart.df = DrawingMLChart.dx + "/lvl";
    DrawingMLChart.dg = DrawingMLChart.dx + "/majorGridlines";
    DrawingMLChart.dh = DrawingMLChart.dx + "/majorTickMark";
    DrawingMLChart.di = DrawingMLChart.dx + "/majorTimeUnit";
    DrawingMLChart.dj = DrawingMLChart.dx + "/majorUnit";
    DrawingMLChart.dk = DrawingMLChart.dx + "/manualLayout";
    DrawingMLChart.dl = DrawingMLChart.dx + "/marker";
    DrawingMLChart.dm = DrawingMLChart.dx + "/max";
    DrawingMLChart.dn = DrawingMLChart.dx + "/min";
    DrawingMLChart.dp = DrawingMLChart.dx + "/minorGridlines";
    DrawingMLChart.dq = DrawingMLChart.dx + "/minorTickMark";
    DrawingMLChart.dr = DrawingMLChart.dx + "/minorTimeUnit";
    DrawingMLChart.ds = DrawingMLChart.dx + "/minorUnit";
    DrawingMLChart.dt = DrawingMLChart.dx + "/minus";
    DrawingMLChart.du = DrawingMLChart.dx + "/multiLvlStrCache";
    DrawingMLChart.dv = DrawingMLChart.dx + "/multiLvlStrRef";
    DrawingMLChart.dw = DrawingMLChart.dx + "/name";
    DrawingMLChart.dz = DrawingMLChart.dx + "/noEndCap";
    DrawingMLChart.d0 = DrawingMLChart.dx + "/noMultiLvlLbl";
    DrawingMLChart.d1 = DrawingMLChart.dx + "/numCache";
    DrawingMLChart.d2 = DrawingMLChart.dx + "/numFmt";
    DrawingMLChart.d3 = DrawingMLChart.dx + "/numLit";
    DrawingMLChart.d4 = DrawingMLChart.dx + "/numRef";
    DrawingMLChart.d5 = DrawingMLChart.dx + "/oddFooter";
    DrawingMLChart.d6 = DrawingMLChart.dx + "/oddHeader";
    DrawingMLChart.d7 = DrawingMLChart.dx + "/ofPieChart";
    DrawingMLChart.d8 = DrawingMLChart.dx + "/ofPieType";
    DrawingMLChart.d9 = DrawingMLChart.dx + "/order";
    DrawingMLChart.ea = DrawingMLChart.dx + "/orientation";
    DrawingMLChart.eb = DrawingMLChart.dx + "/overlap";
    DrawingMLChart.ec = DrawingMLChart.dx + "/overlay";
    DrawingMLChart.ed = DrawingMLChart.dx + "/pageMargins";
    DrawingMLChart.ee = DrawingMLChart.dx + "/pageSetup";
    DrawingMLChart.ef = DrawingMLChart.dx + "/period";
    DrawingMLChart.eg = DrawingMLChart.dx + "/perspective";
    DrawingMLChart.eh = DrawingMLChart.dx + "/pictureFormat";
    DrawingMLChart.ei = DrawingMLChart.dx + "/pictureOptions";
    DrawingMLChart.ej = DrawingMLChart.dx + "/pictureStackUnit";
    DrawingMLChart.ek = DrawingMLChart.dx + "/pie3DChart";
    DrawingMLChart.el = DrawingMLChart.dx + "/pieChart";
    DrawingMLChart.em = DrawingMLChart.dx + "/pivotFmt";
    DrawingMLChart.en = DrawingMLChart.dx + "/pivotFmts";
    DrawingMLChart.eo = DrawingMLChart.dx + "/pivotSource";
    DrawingMLChart.ep = DrawingMLChart.dx + "/plotArea";
    DrawingMLChart.eq = DrawingMLChart.dx + "/plotVisOnly";
    DrawingMLChart.er = DrawingMLChart.dx + "/plus";
    DrawingMLChart.es = DrawingMLChart.dx + "/printSettings";
    DrawingMLChart.et = DrawingMLChart.dx + "/protection";
    DrawingMLChart.eu = DrawingMLChart.dx + "/pt";
    DrawingMLChart.ev = DrawingMLChart.dx + "/ptCount";
    DrawingMLChart.ew = DrawingMLChart.dx + "/radarChart";
    DrawingMLChart.ex = DrawingMLChart.dx + "/radarStyle";
    DrawingMLChart.ey = DrawingMLChart.dx + "/rAngAx";
    DrawingMLChart.ez = DrawingMLChart.dx + "/rich";
    DrawingMLChart.e0 = DrawingMLChart.dx + "/rotX";
    DrawingMLChart.e1 = DrawingMLChart.dx + "/rotY";
    DrawingMLChart.e2 = DrawingMLChart.dx + "/roundedCorners";
    DrawingMLChart.e3 = DrawingMLChart.dx + "/scaling";
    DrawingMLChart.e4 = DrawingMLChart.dx + "/scatterChart";
    DrawingMLChart.e5 = DrawingMLChart.dx + "/scatterStyle";
    DrawingMLChart.e6 = DrawingMLChart.dx + "/secondPiePt";
    DrawingMLChart.e7 = DrawingMLChart.dx + "/secondPieSize";
    DrawingMLChart.e8 = DrawingMLChart.dx + "/selection";
    DrawingMLChart.e9 = DrawingMLChart.dx + "/separator";
    DrawingMLChart.fa = DrawingMLChart.dx + "/ser";
    DrawingMLChart.fb = DrawingMLChart.dx + "/serAx";
    DrawingMLChart.fc = DrawingMLChart.dx + "/serLines";
    DrawingMLChart.fd = DrawingMLChart.dx + "/shape";
    DrawingMLChart.fe = DrawingMLChart.dx + "/showBubbleSize";
    DrawingMLChart.ff = DrawingMLChart.dx + "/showCatName";
    DrawingMLChart.fg = DrawingMLChart.dx + "/showDLblsOverMax";
    DrawingMLChart.fh = DrawingMLChart.dx + "/showHorzBorder";
    DrawingMLChart.fi = DrawingMLChart.dx + "/showKeys";
    DrawingMLChart.fj = DrawingMLChart.dx + "/showLeaderLines";
    DrawingMLChart.fk = DrawingMLChart.dx + "/showLegendKey";
    DrawingMLChart.fl = DrawingMLChart.dx + "/showNegBubbles";
    DrawingMLChart.fm = DrawingMLChart.dx + "/showOutline";
    DrawingMLChart.fn = DrawingMLChart.dx + "/showPercent";
    DrawingMLChart.fo = DrawingMLChart.dx + "/showSerName";
    DrawingMLChart.fp = DrawingMLChart.dx + "/showVal";
    DrawingMLChart.fq = DrawingMLChart.dx + "/showVertBorder";
    DrawingMLChart.fr = DrawingMLChart.dx + "/sideWall";
    DrawingMLChart.fs = DrawingMLChart.dx + "/size";
    DrawingMLChart.ft = DrawingMLChart.dx + "/sizeRepresents";
    DrawingMLChart.fu = DrawingMLChart.dx + "/smooth";
    DrawingMLChart.fv = DrawingMLChart.dx + "/splitPos";
    DrawingMLChart.fw = DrawingMLChart.dx + "/splitType";
    DrawingMLChart.fx = DrawingMLChart.dx + "/spPr";
    DrawingMLChart.fy = DrawingMLChart.dx + "/stockChart";
    DrawingMLChart.fz = DrawingMLChart.dx + "/strCache";
    DrawingMLChart.f0 = DrawingMLChart.dx + "/strLit";
    DrawingMLChart.f1 = DrawingMLChart.dx + "/strRef";
    DrawingMLChart.f2 = DrawingMLChart.dx + "/style";
    DrawingMLChart.f3 = DrawingMLChart.dx + "/surface3DChart";
    DrawingMLChart.f4 = DrawingMLChart.dx + "/surfaceChart";
    DrawingMLChart.f5 = DrawingMLChart.dx + "/symbol";
    DrawingMLChart.f6 = DrawingMLChart.dx + "/thickness";
    DrawingMLChart.f7 = DrawingMLChart.dx + "/tickLblPos";
    DrawingMLChart.f8 = DrawingMLChart.dx + "/tickLblSkip";
    DrawingMLChart.f9 = DrawingMLChart.dx + "/tickMarkSkip";
    DrawingMLChart.ga = DrawingMLChart.dx + "/title";
    DrawingMLChart.gb = DrawingMLChart.dx + "/trendline";
    DrawingMLChart.gc = DrawingMLChart.dx + "/trendlineLbl";
    DrawingMLChart.gd = DrawingMLChart.dx + "/trendlineType";
    DrawingMLChart.ge = DrawingMLChart.dx + "/tx";
    DrawingMLChart.gf = DrawingMLChart.dx + "/txPr";
    DrawingMLChart.gg = DrawingMLChart.dx + "/upBars";
    DrawingMLChart.gh = DrawingMLChart.dx + "/upDownBars";
    DrawingMLChart.gi = DrawingMLChart.dx + "/userInterface";
    DrawingMLChart.gj = DrawingMLChart.dx + "/userShapes";
    DrawingMLChart.gk = DrawingMLChart.dx + "/v";
    DrawingMLChart.gl = DrawingMLChart.dx + "/val";
    DrawingMLChart.gm = DrawingMLChart.dx + "/valAx";
    DrawingMLChart.gn = DrawingMLChart.dx + "/varyColors";
    DrawingMLChart.go = DrawingMLChart.dx + "/view3D";
    DrawingMLChart.gp = DrawingMLChart.dx + "/w";
    DrawingMLChart.gq = DrawingMLChart.dx + "/wireframe";
    DrawingMLChart.gr = DrawingMLChart.dx + "/wMode";
    DrawingMLChart.gs = DrawingMLChart.dx + "/x";
    DrawingMLChart.gt = DrawingMLChart.dx + "/xMode";
    DrawingMLChart.gu = DrawingMLChart.dx + "/xVal";
    DrawingMLChart.gv = DrawingMLChart.dx + "/y";
    DrawingMLChart.gw = DrawingMLChart.dx + "/yMode";
    DrawingMLChart.gx = DrawingMLChart.dx + "/yVal";
    DrawingMLChart.ao = new DrawingMLChart();
    return DrawingMLChart;
}(XmlNamespaceDefinitionBase));
export { DrawingMLChart };
/**
 * @hidden
 */
var DrawingMLChart2014 = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DrawingMLChart2014, _super);
    function DrawingMLChart2014() {
        return _super.call(this) || this;
    }
    DrawingMLChart2014.prototype.s = function (a) {
        switch (a) {
            case 0: return DrawingMLChart2014.at;
            case 1: return DrawingMLChart2014.as;
            default: return DrawingMLChart2014.at;
        }
    };
    DrawingMLChart2014.prototype.get_t = function () {
        return "cx";
    };
    Object.defineProperty(DrawingMLChart2014.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    DrawingMLChart2014.au = function (a, b) {
        b = a.ao(OfficeDocumentRelationships.as);
        return {
            p1: b
        };
    };
    DrawingMLChart2014.av = function (a, b) {
        if (b === void 0) {
            b = null;
        }
        a.ad.p(DrawingMLChart2014.aq, "cx");
        a.ad.l(DrawingMLChart2014.ao);
        a.ad.l(OfficeDocumentRelationships.ao);
        var c;
        c = b;
        a.ad.h(OfficeDocumentRelationships.as, c);
    };
    DrawingMLChart2014.$t = markType(DrawingMLChart2014, 'DrawingMLChart2014', XmlNamespaceDefinitionBase.$);
    DrawingMLChart2014.at = "http://schemas.microsoft.com/office/drawing/2014/chartex";
    DrawingMLChart2014.as = DrawingMLChart2014.at;
    DrawingMLChart2014.ar = DrawingMLChart2014.at;
    DrawingMLChart2014.aq = DrawingMLChart2014.at + "/chart";
    DrawingMLChart2014.ao = new DrawingMLChart2014();
    return DrawingMLChart2014;
}(XmlNamespaceDefinitionBase));
export { DrawingMLChart2014 };
/**
 * @hidden
 */
var DrawingMLChartEx2015_9_8 = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DrawingMLChartEx2015_9_8, _super);
    function DrawingMLChartEx2015_9_8() {
        return _super.call(this) || this;
    }
    DrawingMLChartEx2015_9_8.prototype.s = function (a) {
        switch (a) {
            case 0: return DrawingMLChartEx2015_9_8.as;
            case 1: return DrawingMLChartEx2015_9_8.ar;
            default: return DrawingMLChartEx2015_9_8.as;
        }
    };
    DrawingMLChartEx2015_9_8.prototype.get_t = function () {
        return "cx1";
    };
    Object.defineProperty(DrawingMLChartEx2015_9_8.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    DrawingMLChartEx2015_9_8.$t = markType(DrawingMLChartEx2015_9_8, 'DrawingMLChartEx2015_9_8', XmlNamespaceDefinitionBase.$);
    DrawingMLChartEx2015_9_8.as = "http://schemas.microsoft.com/office/drawing/2015/9/8/chartex";
    DrawingMLChartEx2015_9_8.ar = "http://purl.oclc.org/ooxml/drawing/2015/9/8/chartex";
    DrawingMLChartEx2015_9_8.aq = DrawingMLChartEx2015_9_8.as;
    DrawingMLChartEx2015_9_8.ao = new DrawingMLChartEx2015_9_8();
    return DrawingMLChartEx2015_9_8;
}(XmlNamespaceDefinitionBase));
export { DrawingMLChartEx2015_9_8 };
/**
 * @hidden
 */
var DrawingMLChartEx2015_10_21 = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DrawingMLChartEx2015_10_21, _super);
    function DrawingMLChartEx2015_10_21() {
        return _super.call(this) || this;
    }
    DrawingMLChartEx2015_10_21.prototype.s = function (a) {
        switch (a) {
            case 0: return DrawingMLChartEx2015_10_21.as;
            case 1: return DrawingMLChartEx2015_10_21.ar;
            default: return DrawingMLChartEx2015_10_21.as;
        }
    };
    DrawingMLChartEx2015_10_21.prototype.get_t = function () {
        return "cx2";
    };
    Object.defineProperty(DrawingMLChartEx2015_10_21.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    DrawingMLChartEx2015_10_21.$t = markType(DrawingMLChartEx2015_10_21, 'DrawingMLChartEx2015_10_21', XmlNamespaceDefinitionBase.$);
    DrawingMLChartEx2015_10_21.as = "http://schemas.microsoft.com/office/drawing/2015/10/21/chartex";
    DrawingMLChartEx2015_10_21.ar = "http://purl.oclc.org/ooxml/drawing/2015/10/21/chartex";
    DrawingMLChartEx2015_10_21.aq = DrawingMLChartEx2015_10_21.as;
    DrawingMLChartEx2015_10_21.ao = new DrawingMLChartEx2015_10_21();
    return DrawingMLChartEx2015_10_21;
}(XmlNamespaceDefinitionBase));
export { DrawingMLChartEx2015_10_21 };
/**
 * @hidden
 */
var DrawingMLChartEx2016_5_10 = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DrawingMLChartEx2016_5_10, _super);
    function DrawingMLChartEx2016_5_10() {
        return _super.call(this) || this;
    }
    DrawingMLChartEx2016_5_10.prototype.s = function (a) {
        switch (a) {
            case 0: return DrawingMLChartEx2016_5_10.as;
            case 1: return DrawingMLChartEx2016_5_10.ar;
            default: return DrawingMLChartEx2016_5_10.as;
        }
    };
    DrawingMLChartEx2016_5_10.prototype.get_t = function () {
        return "cx4";
    };
    Object.defineProperty(DrawingMLChartEx2016_5_10.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    DrawingMLChartEx2016_5_10.$t = markType(DrawingMLChartEx2016_5_10, 'DrawingMLChartEx2016_5_10', XmlNamespaceDefinitionBase.$);
    DrawingMLChartEx2016_5_10.as = "http://schemas.microsoft.com/office/drawing/2016/5/10/chartex";
    DrawingMLChartEx2016_5_10.ar = "http://purl.oclc.org/ooxml/drawing/2016/5/10/chartex";
    DrawingMLChartEx2016_5_10.aq = DrawingMLChartEx2016_5_10.as;
    DrawingMLChartEx2016_5_10.ao = new DrawingMLChartEx2016_5_10();
    return DrawingMLChartEx2016_5_10;
}(XmlNamespaceDefinitionBase));
export { DrawingMLChartEx2016_5_10 };
/**
 * @hidden
 */
var DrawingMLMain = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DrawingMLMain, _super);
    function DrawingMLMain() {
        return _super.call(this) || this;
    }
    DrawingMLMain.prototype.s = function (a) {
        switch (a) {
            case 0: return DrawingMLMain.gq;
            case 1: return DrawingMLMain.gp;
            default: return DrawingMLMain.gq;
        }
    };
    DrawingMLMain.prototype.get_t = function () {
        return "a";
    };
    Object.defineProperty(DrawingMLMain.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    DrawingMLMain.kw = function (a, b, c) {
        var d = a.ao("val");
        if (d == null) {
            c = ST_Angle.a(0);
        }
        else {
            c = ST_Angle.b(d);
        }
        return {
            p2: c
        };
    };
    DrawingMLMain.nx = function (a, b, c) {
        a.ad.p(b, "a");
        var d;
        d = c.toString();
        a.ad.h("val", d);
    };
    DrawingMLMain.kx = function (a, b) {
    };
    DrawingMLMain.ny = function (a, b) {
        a.ad.p(b, "a");
    };
    DrawingMLMain.ky = function (a, b, c) {
        var d = a.ao("val");
        if (d == null) {
            c = new ST_FixedPercentage();
        }
        else {
            c = ST_FixedPercentage.c(d, a.d._z);
        }
        return {
            p2: c
        };
    };
    DrawingMLMain.nz = function (a, b, c) {
        a.ad.p(b, "a");
        var d;
        d = c.s(a.d._z);
        a.ad.h("val", d);
    };
    DrawingMLMain.kz = function (a, b, c, d, e) {
        var e_20, _0;
        c = toNullable(ST_LineEndType_$type, null);
        d = toNullable(ST_LineEndWidth_$type, null);
        e = toNullable(ST_LineEndLength_$type, null);
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var f = _2.value;
                switch (f.a.e(a.d)) {
                    case "type":
                        c = toNullable(ST_LineEndType_$type, XmlNamespaceDefinitionBase.b(ST_LineEndType_$type, f.d));
                        break;
                    case "w":
                        d = toNullable(ST_LineEndWidth_$type, XmlNamespaceDefinitionBase.b(ST_LineEndWidth_$type, f.d));
                        break;
                    case "len":
                        e = toNullable(ST_LineEndLength_$type, XmlNamespaceDefinitionBase.b(ST_LineEndLength_$type, f.d));
                        break;
                    default: break;
                }
            }
        }
        catch (e_20_1) {
            e_20 = { error: e_20_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_20)
                    throw e_20.error;
            }
        }
        return {
            p2: c,
            p3: d,
            p4: e
        };
    };
    DrawingMLMain.n0 = function (a, b, c, d, e) {
        a.ad.p(b, "a");
        var f;
        if (nullableNotEquals(c, null)) {
            f = XmlNamespaceDefinitionBase.p(ST_LineEndType_$type, c.value);
            a.ad.h("type", f);
        }
        if (nullableNotEquals(d, null)) {
            f = XmlNamespaceDefinitionBase.p(ST_LineEndWidth_$type, d.value);
            a.ad.h("w", f);
        }
        if (nullableNotEquals(e, null)) {
            f = XmlNamespaceDefinitionBase.p(ST_LineEndLength_$type, e.value);
            a.ad.h("len", f);
        }
    };
    DrawingMLMain.k0 = function (a, b, c, d, e, f, g) {
        var e_21, _0;
        c = new ST_DrawingElementId();
        d = null;
        e = null;
        f = false;
        g = null;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var h = _2.value;
                switch (h.a.e(a.d)) {
                    case "id":
                        c = ST_DrawingElementId.c(h.d);
                        break;
                    case "name":
                        d = h.d;
                        break;
                    case "descr":
                        e = h.d;
                        break;
                    case "hidden":
                        f = ST_OnOff.e(h.d);
                        break;
                    case "title":
                        g = h.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_21_1) {
            e_21 = { error: e_21_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_21)
                    throw e_21.error;
            }
        }
        return {
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g
        };
    };
    DrawingMLMain.n1 = function (a, b, c, d, e, f, g) {
        a.ad.p(b, "a");
        var h;
        h = c.toString();
        a.ad.h("id", h);
        h = d;
        a.ad.h("name", h);
        h = e;
        a.ad.h("descr", h);
        if (f != false) {
            h = ST_OnOff.g(f);
            a.ad.h("hidden", h);
        }
        h = g;
        a.ad.h("title", h);
    };
    DrawingMLMain.k1 = function (a, b, c) {
        var d = a.ao("val");
        if (d == null) {
            c = new ST_Percentage();
        }
        else {
            c = ST_Percentage.d(d, a.d._z);
        }
        return {
            p2: c
        };
    };
    DrawingMLMain.n2 = function (a, b, c) {
        a.ad.p(b, "a");
        var d;
        d = c.r(a.d._z);
        a.ad.h("val", d);
    };
    DrawingMLMain.k2 = function (a, b, c, d) {
        var e_22, _0;
        c = new ST_Coordinate();
        d = new ST_Coordinate();
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var e = _2.value;
                switch (e.a.e(a.d)) {
                    case "x":
                        c = ST_Coordinate.h(e.d);
                        break;
                    case "y":
                        d = ST_Coordinate.h(e.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_22_1) {
            e_22 = { error: e_22_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_22)
                    throw e_22.error;
            }
        }
        return {
            p2: c,
            p3: d
        };
    };
    DrawingMLMain.n3 = function (a, b, c, d) {
        a.ad.p(b, "a");
        var e;
        e = c.toString();
        a.ad.h("x", e);
        e = d.toString();
        a.ad.h("y", e);
    };
    DrawingMLMain.k3 = function (a, b, c) {
        var d = a.ao("val");
        if (d == null) {
            c = ST_PositiveFixedAngle.e(ST_Angle.a(0));
        }
        else {
            c = ST_PositiveFixedAngle.g(d);
        }
        return {
            p2: c
        };
    };
    DrawingMLMain.n4 = function (a, b, c) {
        a.ad.p(b, "a");
        var d;
        d = c.toString();
        a.ad.h("val", d);
    };
    DrawingMLMain.k4 = function (a, b, c) {
        var d = a.ao("val");
        if (d == null) {
            c = new ST_PositiveFixedPercentage();
        }
        else {
            c = ST_PositiveFixedPercentage.f(d, a.d._z);
        }
        return {
            p2: c
        };
    };
    DrawingMLMain.n5 = function (a, b, c) {
        a.ad.p(b, "a");
        var d;
        d = c.u(a.d._z);
        a.ad.h("val", d);
    };
    DrawingMLMain.k5 = function (a, b, c) {
        var d = a.ao("val");
        if (d == null) {
            c = new ST_PositivePercentage();
        }
        else {
            c = ST_PositivePercentage.f(d, a.d._z);
        }
        return {
            p2: c
        };
    };
    DrawingMLMain.n6 = function (a, b, c) {
        a.ad.p(b, "a");
        var d;
        d = c.s(a.d._z);
        a.ad.h("val", d);
    };
    DrawingMLMain.k6 = function (a, b, c, d) {
        var e_23, _0;
        c = new ST_PositiveCoordinate();
        d = new ST_PositiveCoordinate();
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var e = _2.value;
                switch (e.a.e(a.d)) {
                    case "cx":
                        c = ST_PositiveCoordinate.c(e.d);
                        break;
                    case "cy":
                        d = ST_PositiveCoordinate.c(e.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_23_1) {
            e_23 = { error: e_23_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_23)
                    throw e_23.error;
            }
        }
        return {
            p2: c,
            p3: d
        };
    };
    DrawingMLMain.n7 = function (a, b, c, d) {
        a.ad.p(b, "a");
        var e;
        e = c.toString();
        a.ad.h("cx", e);
        e = d.toString();
        a.ad.h("cy", e);
    };
    DrawingMLMain.k7 = function (a, b, c, d, e, f) {
        var e_24, _0;
        c = ST_Percentage.b(0);
        d = ST_Percentage.b(0);
        e = ST_Percentage.b(0);
        f = ST_Percentage.b(0);
        var g = a.d._z;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var h = _2.value;
                switch (h.a.e(a.d)) {
                    case "l":
                        c = ST_Percentage.d(h.d, g);
                        break;
                    case "t":
                        d = ST_Percentage.d(h.d, g);
                        break;
                    case "r":
                        e = ST_Percentage.d(h.d, g);
                        break;
                    case "b":
                        f = ST_Percentage.d(h.d, g);
                        break;
                    default: break;
                }
            }
        }
        catch (e_24_1) {
            e_24 = { error: e_24_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_24)
                    throw e_24.error;
            }
        }
        return {
            p2: c,
            p3: d,
            p4: e,
            p5: f
        };
    };
    DrawingMLMain.n8 = function (a, b, c, d, e, f) {
        a.ad.p(b, "a");
        var g;
        var h = a.d._z;
        if (ST_Percentage.g(c, ST_Percentage.b(0))) {
            g = c.r(h);
            a.ad.h("l", g);
        }
        if (ST_Percentage.g(d, ST_Percentage.b(0))) {
            g = d.r(h);
            a.ad.h("t", g);
        }
        if (ST_Percentage.g(e, ST_Percentage.b(0))) {
            g = e.r(h);
            a.ad.h("r", g);
        }
        if (ST_Percentage.g(f, ST_Percentage.b(0))) {
            g = f.r(h);
            a.ad.h("b", g);
        }
    };
    DrawingMLMain.k8 = function (a, b, c) {
        var d = a.ao("idx");
        if (d == null) {
            c = 0;
        }
        else {
            c = parseUInt32_1(d, CultureInfo.invariantCulture);
        }
        return {
            p2: c
        };
    };
    DrawingMLMain.n9 = function (a, b, c) {
        a.ad.p(b, "a");
        var d;
        d = c.toString();
        a.ad.h("idx", d);
    };
    DrawingMLMain.k9 = function (a, b, c, d, e, f, g) {
        var e_25, _0;
        if (g === void 0) {
            g = true;
        }
        c = null;
        d = null;
        e = toNullable(Number_$type, null);
        f = toNullable(Number_$type, null);
        var h = 1;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var i = _2.value;
                switch (i.a.e(a.d)) {
                    case "typeface":
                        c = i.d;
                        break;
                    case "panose":
                        d = ST_Panose.b(i.d);
                        break;
                    case "pitchFamily":
                        e = toNullable(Number_$type, parseInt8_1(i.d, CultureInfo.invariantCulture));
                        break;
                    case "charset":
                        f = toNullable(Number_$type, parseInt8_1(i.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_25_1) {
            e_25 = { error: e_25_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_25)
                    throw e_25.error;
            }
        }
        if (g && f.hasValue == false) {
            f = toNullable(Number_$type, h);
        }
        return {
            p2: c,
            p3: d,
            p4: e,
            p5: f
        };
    };
    DrawingMLMain.oa = function (a, b, c, d, e, f) {
        a.ad.p(b, "a");
        var g;
        g = c != null ? c : "";
        a.ad.h("typeface", g);
        if (d != null) {
            g = d.toString();
            a.ad.h("panose", g);
        }
        if (nullableNotEquals(e, null)) {
            g = e.value.toString();
            a.ad.h("pitchFamily", g);
        }
        if (f != 1) {
            g = f.toString();
            a.ad.h("charset", g);
        }
    };
    DrawingMLMain.kb = function (a) {
    };
    DrawingMLMain.nc = function (a) {
        DrawingMLMain.ny(a, DrawingMLMain.ar);
    };
    DrawingMLMain.kc = function (a) {
    };
    DrawingMLMain.nd = function (a) {
        DrawingMLMain.ny(a, DrawingMLMain.as);
    };
    DrawingMLMain.kd = function (a) {
    };
    DrawingMLMain.ne = function (a) {
        DrawingMLMain.ny(a, DrawingMLMain.at);
    };
    DrawingMLMain.ke = function (a) {
    };
    DrawingMLMain.nf = function (a) {
        DrawingMLMain.ny(a, DrawingMLMain.au);
    };
    DrawingMLMain.kf = function (a) {
    };
    DrawingMLMain.ng = function (a) {
        DrawingMLMain.ny(a, DrawingMLMain.av);
    };
    DrawingMLMain.kg = function (a) {
    };
    DrawingMLMain.nh = function (a) {
        DrawingMLMain.ny(a, DrawingMLMain.aw);
    };
    DrawingMLMain.kh = function (a, b) {
        var c = DrawingMLMain.k4(a, DrawingMLMain.a2, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.ni = function (a, b) {
        DrawingMLMain.n5(a, DrawingMLMain.a2, b);
    };
    DrawingMLMain.ki = function (a, b) {
        var c = DrawingMLMain.k5(a, DrawingMLMain.a7, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.nj = function (a, b) {
        DrawingMLMain.n6(a, DrawingMLMain.a7, b);
    };
    DrawingMLMain.kj = function (a, b) {
        var c = DrawingMLMain.ky(a, DrawingMLMain.a9, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.nk = function (a, b) {
        DrawingMLMain.nz(a, DrawingMLMain.a9, b);
    };
    DrawingMLMain.kk = function (a) {
    };
    DrawingMLMain.nl = function (a) {
        a.ad.p(DrawingMLMain.bh, "a");
    };
    DrawingMLMain.kl = function (a, b, c, d, e) {
        var e_26, _0;
        if (e === void 0) {
            e = true;
        }
        b = null;
        c = null;
        if (e) {
            d = toNullable(ST_BlipCompression_$type, 0);
        }
        else {
            d = toNullable(ST_BlipCompression_$type, null);
        }
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var f = _2.value;
                switch (f.a.e(a.d)) {
                    case OfficeDocumentRelationships.aq:
                        b = f.d;
                        break;
                    case OfficeDocumentRelationships.at:
                        c = f.d;
                        break;
                    case "cstate":
                        d = toNullable(ST_BlipCompression_$type, XmlNamespaceDefinitionBase.b(ST_BlipCompression_$type, f.d, 0));
                        break;
                    default: break;
                }
            }
        }
        catch (e_26_1) {
            e_26 = { error: e_26_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_26)
                    throw e_26.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    DrawingMLMain.nm = function (a, b, c, d) {
        a.ad.p(DrawingMLMain.bt, "a");
        var e;
        e = b;
        a.ad.h(OfficeDocumentRelationships.aq, e);
        e = c;
        a.ad.h(OfficeDocumentRelationships.at, e);
        if (d.hasValue && d.value != 0) {
            e = XmlNamespaceDefinitionBase.p(ST_BlipCompression_$type, d.value);
            a.ad.h("cstate", e);
        }
    };
    DrawingMLMain.km = function (a, b, c) {
        var e_27, _0;
        b = toNullable(Number_$type, null);
        c = toNullable(Boolean_$type, null);
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var d = _2.value;
                switch (d.a.e(a.d)) {
                    case "dpi":
                        b = toNullable(Number_$type, parseUInt32_1(d.d, CultureInfo.invariantCulture));
                        break;
                    case "rotWithShape":
                        c = toNullable(Boolean_$type, ST_OnOff.e(d.d));
                        break;
                    default: break;
                }
            }
        }
        catch (e_27_1) {
            e_27 = { error: e_27_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_27)
                    throw e_27.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    DrawingMLMain.nn = function (a, b, c) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        if (c === void 0) {
            c = toNullable(Boolean_$type, null);
        }
        a.ad.p(DrawingMLMain.bu, "a");
        var d;
        if (nullableNotEquals(b, null)) {
            d = b.value.toString();
            a.ad.h("dpi", d);
        }
        if (nullableNotEquals(c, null)) {
            d = ST_OnOff.g(c.value);
            a.ad.h("rotWithShape", d);
        }
    };
    DrawingMLMain.kn = function (a, b) {
        var c = DrawingMLMain.k1(a, DrawingMLMain.bv, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.no = function (a, b) {
        DrawingMLMain.n2(a, DrawingMLMain.bv, b);
    };
    DrawingMLMain.ko = function (a, b) {
        var c = DrawingMLMain.k1(a, DrawingMLMain.bw, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.np = function (a, b) {
        DrawingMLMain.n2(a, DrawingMLMain.bw, b);
    };
    DrawingMLMain.kp = function (a, b) {
        var c = DrawingMLMain.k1(a, DrawingMLMain.bx, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.nq = function (a, b) {
        DrawingMLMain.n2(a, DrawingMLMain.bx, b);
    };
    DrawingMLMain.kq = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
        var e_28, _0;
        b = toNullable(Number_$type, null);
        c = toNullable(Boolean_$type, null);
        d = toNullable(ST_TextVertOverflowType_$type, null);
        e = toNullable(ST_TextHorzOverflowType_$type, null);
        f = toNullable(ST_TextVerticalType_$type, null);
        g = toNullable(ST_TextWrappingType_$type, null);
        h = toNullable(ST_Coordinate32.$, null);
        i = toNullable(ST_Coordinate32.$, null);
        j = toNullable(ST_Coordinate32.$, null);
        k = toNullable(ST_Coordinate32.$, null);
        l = toNullable(Number_$type, null);
        m = toNullable(Number_$type, null);
        n = toNullable(Boolean_$type, null);
        o = toNullable(Boolean_$type, null);
        p = toNullable(ST_TextAnchoringType_$type, null);
        q = toNullable(Boolean_$type, null);
        r = toNullable(Boolean_$type, null);
        s = false;
        t = toNullable(Boolean_$type, null);
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var u = _2.value;
                switch (u.a.e(a.d)) {
                    case "rot":
                        b = toNullable(Number_$type, parseInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "spcFirstLastPara":
                        c = toNullable(Boolean_$type, ST_OnOff.e(u.d));
                        break;
                    case "vertOverflow":
                        d = toNullable(ST_TextVertOverflowType_$type, XmlNamespaceDefinitionBase.b(ST_TextVertOverflowType_$type, u.d));
                        break;
                    case "horzOverflow":
                        e = toNullable(ST_TextHorzOverflowType_$type, XmlNamespaceDefinitionBase.b(ST_TextHorzOverflowType_$type, u.d));
                        break;
                    case "vert":
                        f = toNullable(ST_TextVerticalType_$type, XmlNamespaceDefinitionBase.b(ST_TextVerticalType_$type, u.d));
                        break;
                    case "wrap":
                        g = toNullable(ST_TextWrappingType_$type, XmlNamespaceDefinitionBase.b(ST_TextWrappingType_$type, u.d));
                        break;
                    case "lIns":
                        h = toNullable(ST_Coordinate32.$, ST_Coordinate32.g(u.d));
                        break;
                    case "tIns":
                        i = toNullable(ST_Coordinate32.$, ST_Coordinate32.g(u.d));
                        break;
                    case "rIns":
                        j = toNullable(ST_Coordinate32.$, ST_Coordinate32.g(u.d));
                        break;
                    case "bIns":
                        k = toNullable(ST_Coordinate32.$, ST_Coordinate32.g(u.d));
                        break;
                    case "numCol":
                        l = toNullable(Number_$type, parseInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "spcCol":
                        m = toNullable(Number_$type, parseInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "rtlCol":
                        n = toNullable(Boolean_$type, ST_OnOff.e(u.d));
                        break;
                    case "fromWordArt":
                        o = toNullable(Boolean_$type, ST_OnOff.e(u.d));
                        break;
                    case "anchor":
                        p = toNullable(ST_TextAnchoringType_$type, XmlNamespaceDefinitionBase.b(ST_TextAnchoringType_$type, u.d));
                        break;
                    case "anchorCtr":
                        q = toNullable(Boolean_$type, ST_OnOff.e(u.d));
                        break;
                    case "forceAA":
                        r = toNullable(Boolean_$type, ST_OnOff.e(u.d));
                        break;
                    case "upright":
                        s = ST_OnOff.e(u.d);
                        break;
                    case "compatLnSpc":
                        t = toNullable(Boolean_$type, ST_OnOff.e(u.d));
                        break;
                    default: break;
                }
            }
        }
        catch (e_28_1) {
            e_28 = { error: e_28_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_28)
                    throw e_28.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q,
            p17: r,
            p18: s,
            p19: t
        };
    };
    DrawingMLMain.nr = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        if (c === void 0) {
            c = toNullable(Boolean_$type, null);
        }
        if (d === void 0) {
            d = toNullable(ST_TextVertOverflowType_$type, null);
        }
        if (e === void 0) {
            e = toNullable(ST_TextHorzOverflowType_$type, null);
        }
        if (f === void 0) {
            f = toNullable(ST_TextVerticalType_$type, null);
        }
        if (g === void 0) {
            g = toNullable(ST_TextWrappingType_$type, null);
        }
        if (h === void 0) {
            h = toNullable(ST_Coordinate32.$, null);
        }
        if (i === void 0) {
            i = toNullable(ST_Coordinate32.$, null);
        }
        if (j === void 0) {
            j = toNullable(ST_Coordinate32.$, null);
        }
        if (k === void 0) {
            k = toNullable(ST_Coordinate32.$, null);
        }
        if (l === void 0) {
            l = toNullable(Number_$type, null);
        }
        if (m === void 0) {
            m = toNullable(Number_$type, null);
        }
        if (n === void 0) {
            n = toNullable(Boolean_$type, null);
        }
        if (o === void 0) {
            o = toNullable(Boolean_$type, null);
        }
        if (p === void 0) {
            p = toNullable(ST_TextAnchoringType_$type, null);
        }
        if (q === void 0) {
            q = toNullable(Boolean_$type, null);
        }
        if (r === void 0) {
            r = toNullable(Boolean_$type, null);
        }
        if (s === void 0) {
            s = false;
        }
        if (t === void 0) {
            t = toNullable(Boolean_$type, null);
        }
        a.ad.p(DrawingMLMain.b0, "a");
        var u;
        if (nullableNotEquals(b, null)) {
            u = b.value.toString();
            a.ad.h("rot", u);
        }
        if (nullableNotEquals(c, null)) {
            u = ST_OnOff.g(c.value);
            a.ad.h("spcFirstLastPara", u);
        }
        if (nullableNotEquals(d, null)) {
            u = XmlNamespaceDefinitionBase.p(ST_TextVertOverflowType_$type, d.value);
            a.ad.h("vertOverflow", u);
        }
        if (nullableNotEquals(e, null)) {
            u = XmlNamespaceDefinitionBase.p(ST_TextHorzOverflowType_$type, e.value);
            a.ad.h("horzOverflow", u);
        }
        if (nullableNotEquals(f, null)) {
            u = XmlNamespaceDefinitionBase.p(ST_TextVerticalType_$type, f.value);
            a.ad.h("vert", u);
        }
        if (nullableNotEquals(g, null)) {
            u = XmlNamespaceDefinitionBase.p(ST_TextWrappingType_$type, g.value);
            a.ad.h("wrap", u);
        }
        if (nullableNotEquals(h, null)) {
            u = h.value.toString();
            a.ad.h("lIns", u);
        }
        if (nullableNotEquals(i, null)) {
            u = i.value.toString();
            a.ad.h("tIns", u);
        }
        if (nullableNotEquals(j, null)) {
            u = j.value.toString();
            a.ad.h("rIns", u);
        }
        if (nullableNotEquals(k, null)) {
            u = k.value.toString();
            a.ad.h("bIns", u);
        }
        if (nullableNotEquals(l, null)) {
            u = l.value.toString();
            a.ad.h("numCol", u);
        }
        if (nullableNotEquals(m, null)) {
            u = m.value.toString();
            a.ad.h("spcCol", u);
        }
        if (nullableNotEquals(n, null)) {
            u = ST_OnOff.g(n.value);
            a.ad.h("rtlCol", u);
        }
        if (nullableNotEquals(o, null)) {
            u = ST_OnOff.g(o.value);
            a.ad.h("fromWordArt", u);
        }
        if (nullableNotEquals(p, null)) {
            u = XmlNamespaceDefinitionBase.p(ST_TextAnchoringType_$type, p.value);
            a.ad.h("anchor", u);
        }
        if (nullableNotEquals(q, null)) {
            u = ST_OnOff.g(q.value);
            a.ad.h("anchorCtr", u);
        }
        if (nullableNotEquals(r, null)) {
            u = ST_OnOff.g(r.value);
            a.ad.h("forceAA", u);
        }
        if (s != false) {
            u = ST_OnOff.g(s);
            a.ad.h("upright", u);
        }
        if (nullableNotEquals(t, null)) {
            u = ST_OnOff.g(t.value);
            a.ad.h("compatLnSpc", u);
        }
    };
    DrawingMLMain.kr = function (a, b, c) {
        var d = DrawingMLMain.k6(a, DrawingMLMain.ch, b, c);
        b = d.p2;
        c = d.p3;
        return {
            p1: b,
            p2: c
        };
    };
    DrawingMLMain.ns = function (a, b, c) {
        DrawingMLMain.n7(a, DrawingMLMain.ch, b, c);
    };
    DrawingMLMain.ks = function (a, b, c) {
        var d = DrawingMLMain.k2(a, DrawingMLMain.ci, b, c);
        b = d.p2;
        c = d.p3;
        return {
            p1: b,
            p2: c
        };
    };
    DrawingMLMain.nt = function (a, b, c) {
        DrawingMLMain.n3(a, DrawingMLMain.ci, b, c);
    };
    DrawingMLMain.kt = function (a, b) {
        b = a.ao("name");
        return {
            p1: b
        };
    };
    DrawingMLMain.nu = function (a, b) {
        a.ad.p(DrawingMLMain.cn, "a");
        var c;
        c = b;
        a.ad.h("name", c);
    };
    DrawingMLMain.ku = function (a) {
    };
    DrawingMLMain.nv = function (a) {
        a.ad.p(DrawingMLMain.cq, "a");
    };
    DrawingMLMain.kv = function (a, b, c, d, e, f) {
        if (f === void 0) {
            f = true;
        }
        var g = DrawingMLMain.k9(a, DrawingMLMain.cu, b, c, d, e);
        b = g.p2;
        c = g.p3;
        d = g.p4;
        e = g.p5;
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    DrawingMLMain.nw = function (a, b, c, d, e) {
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        if (e === void 0) {
            e = 1;
        }
        DrawingMLMain.oa(a, DrawingMLMain.cu, b, c, d, e);
    };
    DrawingMLMain.la = function (a, b) {
        var c = a.ao("name");
        if (c == null) {
            b = "";
        }
        else {
            b = c;
        }
        return {
            p1: b
        };
    };
    DrawingMLMain.ob = function (a, b) {
        if (b === void 0) {
            b = "";
        }
        a.ad.p(DrawingMLMain.cx, "a");
        var c;
        if (b != "") {
            c = b;
            a.ad.h("name", c);
        }
    };
    DrawingMLMain.lb = function (a) {
    };
    DrawingMLMain.oc = function (a) {
        a.ad.p(DrawingMLMain.cy, "a");
    };
    DrawingMLMain.lc = function (a) {
    };
    DrawingMLMain.od = function (a) {
        DrawingMLMain.ny(a, DrawingMLMain.da);
    };
    DrawingMLMain.ld = function (a) {
    };
    DrawingMLMain.oe = function (a) {
        DrawingMLMain.ny(a, DrawingMLMain.db);
    };
    DrawingMLMain.le = function (a, b, c, d, e) {
        var f = toNullable(Number_$type, null);
        var g = DrawingMLMain.k9(a, DrawingMLMain.df, b, c, d, f);
        b = g.p2;
        c = g.p3;
        d = g.p4;
        f = g.p5;
        e = f.hasValue ? f.value : 1;
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    DrawingMLMain.of = function (a, b, c, d, e) {
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        if (e === void 0) {
            e = 1;
        }
        DrawingMLMain.oa(a, DrawingMLMain.df, b, c, d, e);
    };
    DrawingMLMain.lf = function (a, b) {
        var c = DrawingMLMain.k8(a, DrawingMLMain.dk, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.og = function (a, b) {
        DrawingMLMain.n9(a, DrawingMLMain.dk, b);
    };
    DrawingMLMain.lg = function (a, b, c) {
        var d = DrawingMLMain.k6(a, DrawingMLMain.dr, b, c);
        b = d.p2;
        c = d.p3;
        return {
            p1: b,
            p2: c
        };
    };
    DrawingMLMain.oh = function (a, b, c) {
        DrawingMLMain.n7(a, DrawingMLMain.dr, b, c);
    };
    DrawingMLMain.lh = function (a) {
    };
    DrawingMLMain.oi = function (a) {
        a.ad.p(DrawingMLMain.ds, "a");
    };
    DrawingMLMain.li = function (a) {
    };
    DrawingMLMain.oj = function (a) {
        a.ad.p(DrawingMLMain.dt, "a");
    };
    DrawingMLMain.lj = function (a) {
    };
    DrawingMLMain.ok = function (a) {
        a.ad.p(DrawingMLMain.du, "a");
    };
    DrawingMLMain.lk = function (a, b, c, d, e) {
        var f = DrawingMLMain.k7(a, DrawingMLMain.dz, b, c, d, e);
        b = f.p2;
        c = f.p3;
        d = f.p4;
        e = f.p5;
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    DrawingMLMain.ol = function (a, b, c, d, e) {
        DrawingMLMain.n8(a, DrawingMLMain.dz, b, c, d, e);
    };
    DrawingMLMain.ll = function (a, b) {
        var c = DrawingMLMain.k8(a, DrawingMLMain.d0, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.om = function (a, b) {
        DrawingMLMain.n9(a, DrawingMLMain.d0, b);
    };
    DrawingMLMain.lm = function (a) {
    };
    DrawingMLMain.on = function (a) {
        DrawingMLMain.ny(a, DrawingMLMain.d9);
    };
    DrawingMLMain.ln = function (a, b, c) {
        var e_29, _0;
        b = null;
        c = null;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var d = _2.value;
                switch (d.a.e(a.d)) {
                    case "script":
                        b = d.d;
                        break;
                    case "typeface":
                        c = d.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_29_1) {
            e_29 = { error: e_29_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_29)
                    throw e_29.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    DrawingMLMain.oo = function (a, b, c) {
        a.ad.p(DrawingMLMain.ea, "a");
        var d;
        d = b;
        a.ad.h("script", d);
        d = c;
        a.ad.h("typeface", d);
    };
    DrawingMLMain.lo = function (a, b) {
        b = 0;
        var c = a.ao("idx");
        if (c != null) {
            b = XmlNamespaceDefinitionBase.b(ST_FontCollectionIndex_$type, c, b);
        }
        return {
            p1: b
        };
    };
    DrawingMLMain.op = function (a, b) {
        a.ad.p(DrawingMLMain.ec, "a");
        var c;
        c = XmlNamespaceDefinitionBase.p(ST_FontCollectionIndex_$type, b);
        a.ad.h("idx", c);
    };
    DrawingMLMain.lp = function (a, b) {
        b = a.ao("name");
        return {
            p1: b
        };
    };
    DrawingMLMain.oq = function (a, b) {
        a.ad.p(DrawingMLMain.ed, "a");
        var c;
        c = b;
        a.ad.h("name", c);
    };
    DrawingMLMain.lq = function (a, b, c) {
        var e_30, _0;
        b = null;
        c = null;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var d = _2.value;
                switch (d.a.e(a.d)) {
                    case "name":
                        b = d.d;
                        break;
                    case "fmla":
                        c = d.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_30_1) {
            e_30 = { error: e_30_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_30)
                    throw e_30.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    DrawingMLMain.or = function (a, b, c) {
        a.ad.p(DrawingMLMain.eh, "a");
        var d;
        d = b;
        a.ad.h("name", d);
        d = c;
        a.ad.h("fmla", d);
    };
    DrawingMLMain.lr = function (a, b) {
        b = a.ao("uri");
        return {
            p1: b
        };
    };
    DrawingMLMain.os = function (a, b) {
        a.ad.p(DrawingMLMain.em, "a");
        var c;
        c = b;
        a.ad.h("uri", c);
    };
    DrawingMLMain.ls = function (a) {
    };
    DrawingMLMain.ot = function (a) {
        a.ad.p(DrawingMLMain.el, "a");
    };
    DrawingMLMain.lt = function (a, b, c, d, e, f, g) {
        var e_31, _0;
        b = false;
        c = false;
        d = false;
        e = false;
        f = false;
        g = false;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var h = _2.value;
                switch (h.a.e(a.d)) {
                    case "noGrp":
                        b = ST_OnOff.e(h.d);
                        break;
                    case "noDrilldown":
                        c = ST_OnOff.e(h.d);
                        break;
                    case "noSelect":
                        d = ST_OnOff.e(h.d);
                        break;
                    case "noChangeAspect":
                        e = ST_OnOff.e(h.d);
                        break;
                    case "noMove":
                        f = ST_OnOff.e(h.d);
                        break;
                    case "noResize":
                        g = ST_OnOff.e(h.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_31_1) {
            e_31 = { error: e_31_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_31)
                    throw e_31.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g
        };
    };
    DrawingMLMain.ou = function (a, b, c, d, e, f, g) {
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = false;
        }
        a.ad.p(DrawingMLMain.en, "a");
        var h;
        if (b != false) {
            h = ST_OnOff.g(b);
            a.ad.h("noGrp", h);
        }
        if (c != false) {
            h = ST_OnOff.g(c);
            a.ad.h("noDrilldown", h);
        }
        if (d != false) {
            h = ST_OnOff.g(d);
            a.ad.h("noSelect", h);
        }
        if (e != false) {
            h = ST_OnOff.g(e);
            a.ad.h("noChangeAspect", h);
        }
        if (f != false) {
            h = ST_OnOff.g(f);
            a.ad.h("noMove", h);
        }
        if (g != false) {
            h = ST_OnOff.g(g);
            a.ad.h("noResize", h);
        }
    };
    DrawingMLMain.lu = function (a) {
    };
    DrawingMLMain.ov = function (a) {
        a.ad.p(DrawingMLMain.eo, "a");
    };
    DrawingMLMain.lv = function (a, b) {
        var c = DrawingMLMain.k1(a, DrawingMLMain.eq, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.ow = function (a, b) {
        DrawingMLMain.n2(a, DrawingMLMain.eq, b);
    };
    DrawingMLMain.lw = function (a, b) {
        var c = DrawingMLMain.k1(a, DrawingMLMain.er, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.ox = function (a, b) {
        DrawingMLMain.n2(a, DrawingMLMain.er, b);
    };
    DrawingMLMain.lx = function (a, b) {
        var c = DrawingMLMain.k1(a, DrawingMLMain.es, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.oy = function (a, b) {
        DrawingMLMain.n2(a, DrawingMLMain.es, b);
    };
    DrawingMLMain.ly = function (a) {
    };
    DrawingMLMain.oz = function (a) {
        a.ad.p(DrawingMLMain.et, "a");
    };
    DrawingMLMain.lz = function (a, b, c, d) {
        var e = DrawingMLMain.kz(a, DrawingMLMain.ex, b, c, d);
        b = e.p2;
        c = e.p3;
        d = e.p4;
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    DrawingMLMain.o0 = function (a, b, c, d) {
        DrawingMLMain.n0(a, DrawingMLMain.ex, b, c, d);
    };
    DrawingMLMain.l0 = function (a, b, c, d, e, f, g, h, i) {
        var e_32, _0;
        b = null;
        c = "";
        d = "";
        e = "";
        f = "";
        g = true;
        h = false;
        i = false;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var j = _2.value;
                switch (j.a.e(a.d)) {
                    case OfficeDocumentRelationships.as:
                        b = j.d;
                        break;
                    case "invalidUrl":
                        c = j.d;
                        break;
                    case "action":
                        d = j.d;
                        break;
                    case "tgtFrame":
                        e = j.d;
                        break;
                    case "tooltip":
                        f = j.d;
                        break;
                    case "history":
                        g = ST_OnOff.e(j.d);
                        break;
                    case "highlightClick":
                        h = ST_OnOff.e(j.d);
                        break;
                    case "endSnd":
                        i = ST_OnOff.e(j.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_32_1) {
            e_32 = { error: e_32_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_32)
                    throw e_32.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i
        };
    };
    DrawingMLMain.o1 = function (a, b, c, d, e, f, g, h, i) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = "";
        }
        if (d === void 0) {
            d = "";
        }
        if (e === void 0) {
            e = "";
        }
        if (f === void 0) {
            f = "";
        }
        if (g === void 0) {
            g = true;
        }
        if (h === void 0) {
            h = false;
        }
        if (i === void 0) {
            i = false;
        }
        a.ad.p(DrawingMLMain.e3, "a");
        var j;
        j = b;
        a.ad.h(OfficeDocumentRelationships.as, j);
        j = c;
        a.ad.h("invalidUrl", j);
        j = d;
        a.ad.h("action", j);
        j = e;
        a.ad.h("tgtFrame", j);
        j = f;
        a.ad.h("tooltip", j);
        if (g != true) {
            j = ST_OnOff.g(g);
            a.ad.h("history", j);
        }
        if (h != false) {
            j = ST_OnOff.g(h);
            a.ad.h("highlightClick", j);
        }
        if (i != false) {
            j = ST_OnOff.g(i);
            a.ad.h("endSnd", j);
        }
    };
    DrawingMLMain.l1 = function (a) {
    };
    DrawingMLMain.o2 = function (a) {
        DrawingMLMain.ny(a, DrawingMLMain.e2);
    };
    DrawingMLMain.l2 = function (a, b) {
        var c = DrawingMLMain.k3(a, DrawingMLMain.e9, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.o3 = function (a, b) {
        DrawingMLMain.n4(a, DrawingMLMain.e9, b);
    };
    DrawingMLMain.l3 = function (a, b) {
        var c = DrawingMLMain.k5(a, DrawingMLMain.fa, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.o4 = function (a, b) {
        DrawingMLMain.n6(a, DrawingMLMain.fa, b);
    };
    DrawingMLMain.l4 = function (a, b) {
        var c = DrawingMLMain.kw(a, DrawingMLMain.fb, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.o5 = function (a, b) {
        DrawingMLMain.nx(a, DrawingMLMain.fb, b);
    };
    DrawingMLMain.l5 = function (a) {
    };
    DrawingMLMain.o6 = function (a) {
        a.ad.p(DrawingMLMain.fh, "a");
    };
    DrawingMLMain.l6 = function (a, b, c, d, e) {
        var f = toNullable(Number_$type, null);
        var g = DrawingMLMain.k9(a, DrawingMLMain.fr, b, c, d, f);
        b = g.p2;
        c = g.p3;
        d = g.p4;
        f = g.p5;
        e = f.hasValue ? f.value : 1;
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    DrawingMLMain.o7 = function (a, b, c, d, e) {
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        if (e === void 0) {
            e = 1;
        }
        DrawingMLMain.oa(a, DrawingMLMain.fr, b, c, d, e);
    };
    DrawingMLMain.l7 = function (a, b, c, d, e) {
        var e_33, _0;
        b = toNullable(ST_LineWidth.$, null);
        c = toNullable(ST_LineCap_$type, null);
        d = toNullable(ST_CompoundLine_$type, null);
        e = toNullable(ST_PenAlignment_$type, null);
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var f = _2.value;
                switch (f.a.e(a.d)) {
                    case "w":
                        b = toNullable(ST_LineWidth.$, ST_LineWidth.f(f.d));
                        break;
                    case "cap":
                        c = toNullable(ST_LineCap_$type, XmlNamespaceDefinitionBase.b(ST_LineCap_$type, f.d));
                        break;
                    case "cmpd":
                        d = toNullable(ST_CompoundLine_$type, XmlNamespaceDefinitionBase.b(ST_CompoundLine_$type, f.d));
                        break;
                    case "algn":
                        e = toNullable(ST_PenAlignment_$type, XmlNamespaceDefinitionBase.b(ST_PenAlignment_$type, f.d));
                        break;
                    default: break;
                }
            }
        }
        catch (e_33_1) {
            e_33 = { error: e_33_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_33)
                    throw e_33.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    DrawingMLMain.o8 = function (a, b, c, d, e) {
        a.ad.p(DrawingMLMain.fx, "a");
        var f;
        if (ST_LineWidth.j(b, toNullable(ST_LineWidth.$, null))) {
            f = b.toString();
            a.ad.h("w", f);
        }
        if (nullableNotEquals(c, null)) {
            f = XmlNamespaceDefinitionBase.p(ST_LineCap_$type, c.value);
            a.ad.h("cap", f);
        }
        if (nullableNotEquals(d, null)) {
            f = XmlNamespaceDefinitionBase.p(ST_CompoundLine_$type, d.value);
            a.ad.h("cmpd", f);
        }
        if (nullableNotEquals(e, null)) {
            f = XmlNamespaceDefinitionBase.p(ST_PenAlignment_$type, e.value);
            a.ad.h("algn", f);
        }
    };
    DrawingMLMain.l8 = function (a, b) {
        var c = DrawingMLMain.k8(a, DrawingMLMain.fy, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.o9 = function (a, b) {
        DrawingMLMain.n9(a, DrawingMLMain.fy, b);
    };
    DrawingMLMain.l9 = function (a) {
    };
    DrawingMLMain.pa = function (a) {
        a.ad.p(DrawingMLMain.f2, "a");
    };
    DrawingMLMain.ma = function (a) {
    };
    DrawingMLMain.pb = function (a) {
        DrawingMLMain.ny(a, DrawingMLMain.f3);
    };
    DrawingMLMain.mb = function (a) {
    };
    DrawingMLMain.pc = function (a) {
        DrawingMLMain.ny(a, DrawingMLMain.f4);
    };
    DrawingMLMain.mc = function (a, b) {
        var c = DrawingMLMain.k1(a, DrawingMLMain.f5, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.pd = function (a, b) {
        DrawingMLMain.n2(a, DrawingMLMain.f5, b);
    };
    DrawingMLMain.md = function (a, b) {
        var c = DrawingMLMain.k1(a, DrawingMLMain.f6, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.pe = function (a, b) {
        DrawingMLMain.n2(a, DrawingMLMain.f6, b);
    };
    DrawingMLMain.me = function (a, b) {
        var c = DrawingMLMain.k1(a, DrawingMLMain.f7, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.pf = function (a, b) {
        DrawingMLMain.n2(a, DrawingMLMain.f7, b);
    };
    DrawingMLMain.mf = function (a) {
    };
    DrawingMLMain.pg = function (a) {
        a.ad.p(DrawingMLMain.gi, "a");
    };
    DrawingMLMain.mg = function (a) {
    };
    DrawingMLMain.ph = function (a) {
        a.ad.p(DrawingMLMain.gl, "a");
    };
    DrawingMLMain.mh = function (a) {
    };
    DrawingMLMain.pi = function (a) {
        a.ad.p(DrawingMLMain.gz, "a");
    };
    DrawingMLMain.mi = function (a) {
    };
    DrawingMLMain.pj = function (a) {
        a.ad.p(DrawingMLMain.hb, "a");
    };
    DrawingMLMain.mj = function (a, b, c) {
        var d = DrawingMLMain.k2(a, DrawingMLMain.hc, b, c);
        b = d.p2;
        c = d.p3;
        return {
            p1: b,
            p2: c
        };
    };
    DrawingMLMain.pk = function (a, b, c) {
        DrawingMLMain.n3(a, DrawingMLMain.hc, b, c);
    };
    DrawingMLMain.mk = function (a) {
    };
    DrawingMLMain.pl = function (a) {
        a.ad.p(DrawingMLMain.he, "a");
    };
    DrawingMLMain.ml = function (a, b, c, d, e, f, g, h, i, j, k, l) {
        var e_34, _0;
        b = false;
        c = false;
        d = false;
        e = false;
        f = false;
        g = false;
        h = false;
        i = false;
        j = false;
        k = false;
        l = false;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var m = _2.value;
                switch (m.a.e(a.d)) {
                    case "noGrp":
                        b = ST_OnOff.e(m.d);
                        break;
                    case "noSelect":
                        c = ST_OnOff.e(m.d);
                        break;
                    case "noRot":
                        d = ST_OnOff.e(m.d);
                        break;
                    case "noChangeAspect":
                        e = ST_OnOff.e(m.d);
                        break;
                    case "noMove":
                        f = ST_OnOff.e(m.d);
                        break;
                    case "noResize":
                        g = ST_OnOff.e(m.d);
                        break;
                    case "noEditPoints":
                        h = ST_OnOff.e(m.d);
                        break;
                    case "noAdjustHandles":
                        i = ST_OnOff.e(m.d);
                        break;
                    case "noChangeArrowheads":
                        j = ST_OnOff.e(m.d);
                        break;
                    case "noChangeShapeType":
                        k = ST_OnOff.e(m.d);
                        break;
                    case "noCrop":
                        l = ST_OnOff.e(m.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_34_1) {
            e_34 = { error: e_34_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_34)
                    throw e_34.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l
        };
    };
    DrawingMLMain.pm = function (a, b, c, d, e, f, g, h, i, j, k, l) {
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = false;
        }
        if (h === void 0) {
            h = false;
        }
        if (i === void 0) {
            i = false;
        }
        if (j === void 0) {
            j = false;
        }
        if (k === void 0) {
            k = false;
        }
        if (l === void 0) {
            l = false;
        }
        a.ad.p(DrawingMLMain.hj, "a");
        var m;
        if (b != false) {
            m = ST_OnOff.g(b);
            a.ad.h("noGrp", m);
        }
        if (c != false) {
            m = ST_OnOff.g(c);
            a.ad.h("noSelect", m);
        }
        if (d != false) {
            m = ST_OnOff.g(d);
            a.ad.h("noRot", m);
        }
        if (e != false) {
            m = ST_OnOff.g(e);
            a.ad.h("noChangeAspect", m);
        }
        if (f != false) {
            m = ST_OnOff.g(f);
            a.ad.h("noMove", m);
        }
        if (g != false) {
            m = ST_OnOff.g(g);
            a.ad.h("noResize", m);
        }
        if (h != false) {
            m = ST_OnOff.g(h);
            a.ad.h("noEditPoints", m);
        }
        if (i != false) {
            m = ST_OnOff.g(i);
            a.ad.h("noAdjustHandles", m);
        }
        if (j != false) {
            m = ST_OnOff.g(j);
            a.ad.h("noChangeArrowheads", m);
        }
        if (k != false) {
            m = ST_OnOff.g(k);
            a.ad.h("noChangeShapeType", m);
        }
        if (l != false) {
            m = ST_OnOff.g(l);
            a.ad.h("noCrop", m);
        }
    };
    DrawingMLMain.mm = function (a, b, c, d, e, f, g, h, i, j, k, l) {
        var e_35, _0;
        b = toNullable(ST_TextMargin.$, null);
        c = toNullable(ST_TextMargin.$, null);
        d = toNullable(ST_TextIndentLevelType.$, null);
        e = toNullable(ST_TextIndent.$, null);
        f = toNullable(ST_TextAlignType_$type, null);
        g = toNullable(ST_Coordinate32.$, null);
        h = toNullable(Boolean_$type, null);
        i = toNullable(Boolean_$type, null);
        j = toNullable(ST_TextFontAlignType_$type, null);
        k = toNullable(Boolean_$type, null);
        l = toNullable(Boolean_$type, null);
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var m = _2.value;
                switch (m.a.e(a.d)) {
                    case "marL":
                        b = toNullable(ST_TextMargin.$, ST_TextMargin.c(m.d));
                        break;
                    case "marR":
                        c = toNullable(ST_TextMargin.$, ST_TextMargin.c(m.d));
                        break;
                    case "lvl":
                        d = toNullable(ST_TextIndentLevelType.$, ST_TextIndentLevelType.c(m.d));
                        break;
                    case "indent":
                        e = toNullable(ST_TextIndent.$, ST_TextIndent.c(m.d));
                        break;
                    case "algn":
                        f = toNullable(ST_TextAlignType_$type, XmlNamespaceDefinitionBase.b(ST_TextAlignType_$type, m.d));
                        break;
                    case "defTabSz":
                        g = toNullable(ST_Coordinate32.$, ST_Coordinate32.g(m.d));
                        break;
                    case "rtl":
                        h = toNullable(Boolean_$type, ST_OnOff.e(m.d));
                        break;
                    case "eaLnBrk":
                        i = toNullable(Boolean_$type, ST_OnOff.e(m.d));
                        break;
                    case "fontAlgn":
                        j = toNullable(ST_TextFontAlignType_$type, XmlNamespaceDefinitionBase.b(ST_TextFontAlignType_$type, m.d));
                        break;
                    case "latinLnBrk":
                        k = toNullable(Boolean_$type, ST_OnOff.e(m.d));
                        break;
                    case "hangingPunct":
                        l = toNullable(Boolean_$type, ST_OnOff.e(m.d));
                        break;
                    default: break;
                }
            }
        }
        catch (e_35_1) {
            e_35 = { error: e_35_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_35)
                    throw e_35.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l
        };
    };
    DrawingMLMain.pn = function (a, b, c, d, e, f, g, h, i, j, k, l) {
        if (b === void 0) {
            b = toNullable(ST_TextMargin.$, null);
        }
        if (c === void 0) {
            c = toNullable(ST_TextMargin.$, null);
        }
        if (d === void 0) {
            d = toNullable(ST_TextIndentLevelType.$, null);
        }
        if (e === void 0) {
            e = toNullable(ST_TextIndent.$, null);
        }
        if (f === void 0) {
            f = toNullable(ST_TextAlignType_$type, null);
        }
        if (g === void 0) {
            g = toNullable(ST_Coordinate32.$, null);
        }
        if (h === void 0) {
            h = toNullable(Boolean_$type, null);
        }
        if (i === void 0) {
            i = toNullable(Boolean_$type, null);
        }
        if (j === void 0) {
            j = toNullable(ST_TextFontAlignType_$type, null);
        }
        if (k === void 0) {
            k = toNullable(Boolean_$type, null);
        }
        if (l === void 0) {
            l = toNullable(Boolean_$type, null);
        }
        a.ad.p(DrawingMLMain.hm, "a");
        var m;
        if (nullableNotEquals(b, null)) {
            m = b.value.toString();
            a.ad.h("marL", m);
        }
        if (nullableNotEquals(c, null)) {
            m = c.value.toString();
            a.ad.h("marR", m);
        }
        if (nullableNotEquals(d, null)) {
            m = d.value.toString();
            a.ad.h("lvl", m);
        }
        if (nullableNotEquals(e, null)) {
            m = e.value.toString();
            a.ad.h("indent", m);
        }
        if (nullableNotEquals(f, null)) {
            m = XmlNamespaceDefinitionBase.p(ST_TextAlignType_$type, f.value);
            a.ad.h("algn", m);
        }
        if (nullableNotEquals(g, null)) {
            m = g.value.toString();
            a.ad.h("defTabSz", m);
        }
        if (nullableNotEquals(h, null)) {
            m = ST_OnOff.g(h.value);
            a.ad.h("rtl", m);
        }
        if (nullableNotEquals(i, null)) {
            m = ST_OnOff.g(i.value);
            a.ad.h("eaLnBrk", m);
        }
        if (nullableNotEquals(j, null)) {
            m = XmlNamespaceDefinitionBase.p(ST_TextFontAlignType_$type, j.value);
            a.ad.h("fontAlgn", m);
        }
        if (nullableNotEquals(k, null)) {
            m = ST_OnOff.g(k.value);
            a.ad.h("latinLnBrk", m);
        }
        if (nullableNotEquals(l, null)) {
            m = ST_OnOff.g(l.value);
            a.ad.h("hangingPunct", m);
        }
    };
    DrawingMLMain.mn = function (a, b) {
        b = 7;
        var c = a.ao("val");
        if (c != null) {
            b = XmlNamespaceDefinitionBase.b(ST_PresetColorVal_$type, c, b);
        }
        return {
            p1: b
        };
    };
    DrawingMLMain.po = function (a, b) {
        a.ad.p(DrawingMLMain.ho, "a");
        var c;
        c = XmlNamespaceDefinitionBase.p(ST_PresetColorVal_$type, b);
        a.ad.h("val", c);
    };
    DrawingMLMain.mo = function (a, b) {
        var c = a.ao("prst");
        b = 0;
        if (c != null) {
            b = XmlNamespaceDefinitionBase.b(ST_ShapeType_$type, c, b);
        }
        return {
            p1: b
        };
    };
    DrawingMLMain.pp = function (a, b) {
        a.ad.p(DrawingMLMain.hq, "a");
        var c;
        c = XmlNamespaceDefinitionBase.p(ST_ShapeType_$type, b);
        a.ad.h("prst", c);
    };
    DrawingMLMain.mp = function (a, b) {
        var c = DrawingMLMain.k1(a, DrawingMLMain.hy, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.pq = function (a, b) {
        DrawingMLMain.n2(a, DrawingMLMain.hy, b);
    };
    DrawingMLMain.mq = function (a, b) {
        var c = DrawingMLMain.k1(a, DrawingMLMain.hz, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.pr = function (a, b) {
        DrawingMLMain.n2(a, DrawingMLMain.hz, b);
    };
    DrawingMLMain.mr = function (a, b) {
        var c = DrawingMLMain.k1(a, DrawingMLMain.h0, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.ps = function (a, b) {
        DrawingMLMain.n2(a, DrawingMLMain.h0, b);
    };
    DrawingMLMain.ms = function (a) {
    };
    DrawingMLMain.pt = function (a) {
        a.ad.p(DrawingMLMain.hv, "a");
    };
    DrawingMLMain.mt = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v) {
        var e_36, _0;
        if (u === void 0) {
            u = DrawingMLMain.h8;
        }
        if (v === void 0) {
            v = true;
        }
        b = toNullable(Boolean_$type, null);
        c = null;
        d = null;
        e = toNullable(ST_TextFontSize.$, null);
        f = toNullable(Boolean_$type, null);
        g = toNullable(Boolean_$type, null);
        h = toNullable(ST_TextUnderlineType_$type, null);
        i = toNullable(ST_TextStrikeType_$type, null);
        j = toNullable(Number_$type, null);
        k = toNullable(ST_TextCapsType_$type, null);
        l = toNullable(ST_TextPoint.$, null);
        m = toNullable(Boolean_$type, null);
        n = toNullable(ST_Percentage.$, null);
        o = toNullable(Boolean_$type, null);
        p = toNullable(Boolean_$type, null);
        q = toNullable(Boolean_$type, null);
        r = toNullable(Boolean_$type, null);
        s = toNullable(Number_$type, null);
        var w = true;
        var x = false;
        var y = true;
        var z = 0;
        t = null;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var aa = _2.value;
                switch (aa.a.e(a.d)) {
                    case "kumimoji":
                        b = toNullable(Boolean_$type, ST_OnOff.e(aa.d));
                        break;
                    case "lang":
                        c = aa.d;
                        break;
                    case "altLang":
                        d = aa.d;
                        break;
                    case "sz":
                        e = toNullable(ST_TextFontSize.$, ST_TextFontSize.c(aa.d));
                        break;
                    case "b":
                        f = toNullable(Boolean_$type, ST_OnOff.e(aa.d));
                        break;
                    case "i":
                        g = toNullable(Boolean_$type, ST_OnOff.e(aa.d));
                        break;
                    case "u":
                        h = toNullable(ST_TextUnderlineType_$type, XmlNamespaceDefinitionBase.b(ST_TextUnderlineType_$type, aa.d));
                        break;
                    case "strike":
                        i = toNullable(ST_TextStrikeType_$type, XmlNamespaceDefinitionBase.b(ST_TextStrikeType_$type, aa.d));
                        break;
                    case "kern":
                        j = toNullable(Number_$type, parseInt32_1(aa.d, CultureInfo.invariantCulture));
                        break;
                    case "cap":
                        k = toNullable(ST_TextCapsType_$type, XmlNamespaceDefinitionBase.b(ST_TextCapsType_$type, aa.d));
                        break;
                    case "spc":
                        l = toNullable(ST_TextPoint.$, ST_TextPoint.a(aa.d));
                        break;
                    case "normalizeH":
                        m = toNullable(Boolean_$type, ST_OnOff.e(aa.d));
                        break;
                    case "baseline":
                        n = toNullable(ST_Percentage.$, ST_Percentage.d(aa.d, a.d._z));
                        break;
                    case "noProof":
                        o = toNullable(Boolean_$type, ST_OnOff.e(aa.d));
                        break;
                    case "dirty":
                        p = toNullable(Boolean_$type, ST_OnOff.e(aa.d));
                        break;
                    case "err":
                        q = toNullable(Boolean_$type, ST_OnOff.e(aa.d));
                        break;
                    case "smtClean":
                        r = toNullable(Boolean_$type, ST_OnOff.e(aa.d));
                        break;
                    case "smtId":
                        s = toNullable(Number_$type, parseUInt32_1(aa.d, CultureInfo.invariantCulture));
                        break;
                    case "bmk":
                        t = aa.d;
                        break;
                    default: break;
                }
                if (v) {
                    if (p.hasValue == false) {
                        p = toNullable(Boolean_$type, w);
                    }
                    if (q.hasValue == false) {
                        q = toNullable(Boolean_$type, x);
                    }
                    if (r.hasValue == false) {
                        r = toNullable(Boolean_$type, y);
                    }
                    if (s.hasValue == false) {
                        s = toNullable(Number_$type, z);
                    }
                }
            }
        }
        catch (e_36_1) {
            e_36 = { error: e_36_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_36)
                    throw e_36.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q,
            p17: r,
            p18: s,
            p19: t
        };
    };
    DrawingMLMain.pu = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
        if (b === void 0) {
            b = toNullable(Boolean_$type, null);
        }
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = toNullable(ST_TextFontSize.$, null);
        }
        if (f === void 0) {
            f = toNullable(Boolean_$type, null);
        }
        if (g === void 0) {
            g = toNullable(Boolean_$type, null);
        }
        if (h === void 0) {
            h = toNullable(ST_TextUnderlineType_$type, null);
        }
        if (i === void 0) {
            i = toNullable(ST_TextStrikeType_$type, null);
        }
        if (j === void 0) {
            j = toNullable(Number_$type, null);
        }
        if (k === void 0) {
            k = toNullable(ST_TextCapsType_$type, null);
        }
        if (l === void 0) {
            l = toNullable(ST_TextPoint.$, null);
        }
        if (m === void 0) {
            m = toNullable(Boolean_$type, null);
        }
        if (n === void 0) {
            n = toNullable(ST_Percentage.$, null);
        }
        if (o === void 0) {
            o = toNullable(Boolean_$type, null);
        }
        if (p === void 0) {
            p = toNullable(Boolean_$type, true);
        }
        if (q === void 0) {
            q = toNullable(Boolean_$type, false);
        }
        if (r === void 0) {
            r = toNullable(Boolean_$type, true);
        }
        if (s === void 0) {
            s = toNullable(Number_$type, 0);
        }
        if (t === void 0) {
            t = null;
        }
        a.ad.p(DrawingMLMain.h8, "a");
        var u;
        if (nullableNotEquals(b, null)) {
            u = ST_OnOff.g(b.value);
            a.ad.h("kumimoji", u);
        }
        u = c;
        a.ad.h("lang", u);
        u = d;
        a.ad.h("altLang", u);
        if (nullableNotEquals(e, null)) {
            u = e.value.toString();
            a.ad.h("sz", u);
        }
        if (nullableNotEquals(f, null)) {
            u = ST_OnOff.g(f.value);
            a.ad.h("b", u);
        }
        if (nullableNotEquals(g, null)) {
            u = ST_OnOff.g(g.value);
            a.ad.h("i", u);
        }
        if (nullableNotEquals(h, null)) {
            u = XmlNamespaceDefinitionBase.p(ST_TextUnderlineType_$type, h.value);
            a.ad.h("u", u);
        }
        if (nullableNotEquals(i, null)) {
            u = XmlNamespaceDefinitionBase.p(ST_TextStrikeType_$type, i.value);
            a.ad.h("strike", u);
        }
        if (nullableNotEquals(j, null)) {
            u = j.value.toString();
            a.ad.h("kern", u);
        }
        if (nullableNotEquals(k, null)) {
            u = XmlNamespaceDefinitionBase.p(ST_TextCapsType_$type, k.value);
            a.ad.h("cap", u);
        }
        if (nullableNotEquals(l, null)) {
            u = l.value.toString();
            a.ad.h("spc", u);
        }
        if (nullableNotEquals(m, null)) {
            u = ST_OnOff.g(m.value);
            a.ad.h("normalizeH", u);
        }
        if (ST_Percentage.h(n, toNullable(ST_Percentage.$, null))) {
            u = n.value.r(a.d._z);
            a.ad.h("baseline", u);
        }
        if (nullableNotEquals(o, null)) {
            u = ST_OnOff.g(o.value);
            a.ad.h("noProof", u);
        }
        if (p.hasValue && nullableNotEquals(p, true)) {
            u = ST_OnOff.g(p.value);
            a.ad.h("dirty", u);
        }
        if (q.hasValue && nullableNotEquals(q, false)) {
            u = ST_OnOff.g(q.value);
            a.ad.h("err", u);
        }
        if (r.hasValue && nullableNotEquals(r, true)) {
            u = ST_OnOff.g(r.value);
            a.ad.h("smtClean", u);
        }
        if (s.hasValue && nullableNotEquals(s, 0)) {
            u = s.value.toString();
            a.ad.h("smtId", u);
        }
        u = t;
        a.ad.h("bmk", u);
    };
    DrawingMLMain.mu = function (a, b) {
        var c = DrawingMLMain.k1(a, DrawingMLMain.ib, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.pv = function (a, b) {
        DrawingMLMain.n2(a, DrawingMLMain.ib, b);
    };
    DrawingMLMain.mv = function (a, b) {
        var c = DrawingMLMain.k1(a, DrawingMLMain.ic, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.pw = function (a, b) {
        DrawingMLMain.n2(a, DrawingMLMain.ic, b);
    };
    DrawingMLMain.mw = function (a, b) {
        var c = DrawingMLMain.k1(a, DrawingMLMain.id, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.px = function (a, b) {
        DrawingMLMain.n2(a, DrawingMLMain.id, b);
    };
    DrawingMLMain.mx = function (a, b) {
        var c = a.ao("val");
        if (c == null) {
            b = 0;
        }
        else {
            b = XmlNamespaceDefinitionBase.b(ST_SchemeColorVal_$type, c, 0);
        }
        return {
            p1: b
        };
    };
    DrawingMLMain.py = function (a, b) {
        a.ad.p(DrawingMLMain.ig, "a");
        var c;
        c = XmlNamespaceDefinitionBase.p(ST_SchemeColorVal_$type, b);
        a.ad.h("val", c);
    };
    DrawingMLMain.my = function (a, b) {
        var c = DrawingMLMain.k4(a, DrawingMLMain.ij, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.pz = function (a, b) {
        DrawingMLMain.n5(a, DrawingMLMain.ij, b);
    };
    DrawingMLMain.mz = function (a) {
    };
    DrawingMLMain.p0 = function (a) {
        a.ad.p(DrawingMLMain.ip, "a");
    };
    DrawingMLMain.m0 = function (a, b, c, d, e, f, g, h, i, j, k, l) {
        var e_37, _0;
        b = false;
        c = false;
        d = false;
        e = false;
        f = false;
        g = false;
        h = false;
        i = false;
        j = false;
        k = false;
        l = false;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var m = _2.value;
                switch (m.a.e(a.d)) {
                    case "noGrp":
                        b = ST_OnOff.e(m.d);
                        break;
                    case "noSelect":
                        c = ST_OnOff.e(m.d);
                        break;
                    case "noRot":
                        d = ST_OnOff.e(m.d);
                        break;
                    case "noChangeAspect":
                        e = ST_OnOff.e(m.d);
                        break;
                    case "noMove":
                        f = ST_OnOff.e(m.d);
                        break;
                    case "noResize":
                        g = ST_OnOff.e(m.d);
                        break;
                    case "noEditPoints":
                        h = ST_OnOff.e(m.d);
                        break;
                    case "noAdjustHandles":
                        i = ST_OnOff.e(m.d);
                        break;
                    case "noChangeArrowheads":
                        j = ST_OnOff.e(m.d);
                        break;
                    case "noChangeShapeType":
                        k = ST_OnOff.e(m.d);
                        break;
                    case "noTextEdit":
                        l = ST_OnOff.e(m.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_37_1) {
            e_37 = { error: e_37_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_37)
                    throw e_37.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l
        };
    };
    DrawingMLMain.p1 = function (a, b, c, d, e, f, g, h, i, j, k, l) {
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = false;
        }
        if (h === void 0) {
            h = false;
        }
        if (i === void 0) {
            i = false;
        }
        if (j === void 0) {
            j = false;
        }
        if (k === void 0) {
            k = false;
        }
        if (l === void 0) {
            l = false;
        }
        a.ad.p(DrawingMLMain.iz, "a");
        var m;
        if (b != false) {
            m = ST_OnOff.g(b);
            a.ad.h("noGrp", m);
        }
        if (c != false) {
            m = ST_OnOff.g(c);
            a.ad.h("noSelect", m);
        }
        if (d != false) {
            m = ST_OnOff.g(d);
            a.ad.h("noRot", m);
        }
        if (e != false) {
            m = ST_OnOff.g(e);
            a.ad.h("noChangeAspect", m);
        }
        if (f != false) {
            m = ST_OnOff.g(f);
            a.ad.h("noMove", m);
        }
        if (g != false) {
            m = ST_OnOff.g(g);
            a.ad.h("noResize", m);
        }
        if (h != false) {
            m = ST_OnOff.g(h);
            a.ad.h("noEditPoints", m);
        }
        if (i != false) {
            m = ST_OnOff.g(i);
            a.ad.h("noAdjustHandles", m);
        }
        if (j != false) {
            m = ST_OnOff.g(j);
            a.ad.h("noChangeArrowheads", m);
        }
        if (k != false) {
            m = ST_OnOff.g(k);
            a.ad.h("noChangeShapeType", m);
        }
        if (l != false) {
            m = ST_OnOff.g(l);
            a.ad.h("noTextEdit", m);
        }
    };
    DrawingMLMain.m1 = function (a, b, c, d, e) {
        var f = DrawingMLMain.k7(a, DrawingMLMain.i0, b, c, d, e);
        b = f.p2;
        c = f.p3;
        d = f.p4;
        e = f.p5;
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    DrawingMLMain.p2 = function (a, b, c, d, e) {
        DrawingMLMain.n8(a, DrawingMLMain.i0, b, c, d, e);
    };
    DrawingMLMain.m2 = function (a, b) {
        var c = a.ao("val");
        if (c == null) {
            b = ST_HexColorRGB.a;
        }
        else {
            b = ST_HexColorRGB.d(c);
        }
        return {
            p1: b
        };
    };
    DrawingMLMain.p3 = function (a, b) {
        a.ad.p(DrawingMLMain.i1, "a");
        var c;
        c = b.toString();
        a.ad.h("val", c);
    };
    DrawingMLMain.m3 = function (a) {
    };
    DrawingMLMain.p4 = function (a) {
        a.ad.p(DrawingMLMain.i3, "a");
    };
    DrawingMLMain.m4 = function (a, b, c) {
        var e_38, _0;
        b = 0;
        c = ST_HexColorRGB.a;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var d = _2.value;
                switch (d.a.e(a.d)) {
                    case "val":
                        b = XmlNamespaceDefinitionBase.b(ST_SystemColorVal_$type, d.d, b);
                        break;
                    case "lastClr":
                        c = ST_HexColorRGB.d(d.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_38_1) {
            e_38 = { error: e_38_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_38)
                    throw e_38.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    DrawingMLMain.p5 = function (a, b, c) {
        a.ad.p(DrawingMLMain.i9, "a");
        var d;
        d = XmlNamespaceDefinitionBase.p(ST_SystemColorVal_$type, b);
        a.ad.h("val", d);
        d = c.toString();
        a.ad.h("lastClr", d);
    };
    DrawingMLMain.m5 = function (a, b, c, d) {
        var e = DrawingMLMain.kz(a, DrawingMLMain.jf, b, c, d);
        b = e.p2;
        c = e.p3;
        d = e.p4;
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    DrawingMLMain.p6 = function (a, b, c, d) {
        DrawingMLMain.n0(a, DrawingMLMain.jf, b, c, d);
    };
    DrawingMLMain.m6 = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, DrawingMLMain.jb, 6);
        return {
            p1: b
        };
    };
    DrawingMLMain.p7 = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, DrawingMLMain.jb, "a", b, void 0, 6);
    };
    DrawingMLMain.m7 = function (a, b) {
        b = a.ao("name");
        return {
            p1: b
        };
    };
    DrawingMLMain.p8 = function (a, b) {
        a.ad.p(DrawingMLMain.jh, "a");
        var c;
        c = b;
        a.ad.h("name", c);
        a.ad.l(IGOfficeExtensions.ao, true);
    };
    DrawingMLMain.m8 = function (a) {
    };
    DrawingMLMain.p9 = function (a) {
        a.ad.p(DrawingMLMain.ji, "a");
    };
    DrawingMLMain.m9 = function (a) {
    };
    DrawingMLMain.qa = function (a) {
        a.ad.p(DrawingMLMain.jj, "a");
    };
    DrawingMLMain.na = function (a, b) {
        var c = DrawingMLMain.k4(a, DrawingMLMain.jn, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLMain.qb = function (a, b) {
        DrawingMLMain.n5(a, DrawingMLMain.jn, b);
    };
    DrawingMLMain.nb = function (a, b, c, d) {
        var e_39, _0;
        b = ST_Angle.a(0);
        c = false;
        d = false;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var e = _2.value;
                switch (e.a.e(a.d)) {
                    case "rot":
                        b = ST_Angle.b(e.d);
                        break;
                    case "flipH":
                        c = ST_OnOff.e(e.d);
                        break;
                    case "flipV":
                        d = ST_OnOff.e(e.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_39_1) {
            e_39 = { error: e_39_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_39)
                    throw e_39.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    DrawingMLMain.qc = function (a, b, c, d) {
        if (b === void 0) {
            b = new ST_Angle();
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = false;
        }
        a.ad.p(DrawingMLMain.j9, "a");
        var e;
        if (b.n() != 0) {
            e = b.toString();
            a.ad.h("rot", e);
        }
        if (c != false) {
            e = ST_OnOff.g(c);
            a.ad.h("flipH", e);
        }
        if (d != false) {
            e = ST_OnOff.g(d);
            a.ad.h("flipV", e);
        }
    };
    DrawingMLMain.$t = markType(DrawingMLMain, 'DrawingMLMain', XmlNamespaceDefinitionBase.$);
    DrawingMLMain.gq = "http://schemas.openxmlformats.org/drawingml/2006/main";
    DrawingMLMain.gp = "http://purl.oclc.org/ooxml/drawingml/main";
    DrawingMLMain.ar = DrawingMLMain.gp + "/accent1";
    DrawingMLMain.as = DrawingMLMain.gp + "/accent2";
    DrawingMLMain.at = DrawingMLMain.gp + "/accent3";
    DrawingMLMain.au = DrawingMLMain.gp + "/accent4";
    DrawingMLMain.av = DrawingMLMain.gp + "/accent5";
    DrawingMLMain.aw = DrawingMLMain.gp + "/accent6";
    DrawingMLMain.az = DrawingMLMain.gp + "/ahPolar";
    DrawingMLMain.a0 = DrawingMLMain.gp + "/ahXY";
    DrawingMLMain.a2 = DrawingMLMain.gp + "/alpha";
    DrawingMLMain.a7 = DrawingMLMain.gp + "/alphaMod";
    DrawingMLMain.a9 = DrawingMLMain.gp + "/alphaOff";
    DrawingMLMain.bg = DrawingMLMain.gp + "/arcTo";
    DrawingMLMain.bh = DrawingMLMain.gp + "/avLst";
    DrawingMLMain.bt = DrawingMLMain.gp + "/blip";
    DrawingMLMain.bu = DrawingMLMain.gp + "/blipFill";
    DrawingMLMain.bv = DrawingMLMain.gp + "/blue";
    DrawingMLMain.bw = DrawingMLMain.gp + "/blueMod";
    DrawingMLMain.bx = DrawingMLMain.gp + "/blueOff";
    DrawingMLMain.b0 = DrawingMLMain.gp + "/bodyPr";
    DrawingMLMain.ch = DrawingMLMain.gp + "/chExt";
    DrawingMLMain.ci = DrawingMLMain.gp + "/chOff";
    DrawingMLMain.cj = DrawingMLMain.gp + "/close";
    DrawingMLMain.cn = DrawingMLMain.gp + "/clrScheme";
    DrawingMLMain.cq = DrawingMLMain.gp + "/comp";
    DrawingMLMain.cu = DrawingMLMain.gp + "/cs";
    DrawingMLMain.cw = DrawingMLMain.gp + "/cubicBezTo";
    DrawingMLMain.cx = DrawingMLMain.gp + "/custClr";
    DrawingMLMain.cy = DrawingMLMain.gp + "/custClrLst";
    DrawingMLMain.c0 = DrawingMLMain.gp + "/custGeom";
    DrawingMLMain.da = DrawingMLMain.gp + "/dk1";
    DrawingMLMain.db = DrawingMLMain.gp + "/dk2";
    DrawingMLMain.df = DrawingMLMain.gp + "/ea";
    DrawingMLMain.dk = DrawingMLMain.gp + "/effectRef";
    DrawingMLMain.dr = DrawingMLMain.gp + "/ext";
    DrawingMLMain.ds = DrawingMLMain.gp + "/extLst";
    DrawingMLMain.dt = DrawingMLMain.gp + "/extraClrScheme";
    DrawingMLMain.du = DrawingMLMain.gp + "/extraClrSchemeLst";
    DrawingMLMain.dz = DrawingMLMain.gp + "/fillRect";
    DrawingMLMain.d0 = DrawingMLMain.gp + "/fillRef";
    DrawingMLMain.d8 = DrawingMLMain.gp + "/fmtScheme";
    DrawingMLMain.d9 = DrawingMLMain.gp + "/folHlink";
    DrawingMLMain.ea = DrawingMLMain.gp + "/font";
    DrawingMLMain.ec = DrawingMLMain.gp + "/fontRef";
    DrawingMLMain.ed = DrawingMLMain.gp + "/fontScheme";
    DrawingMLMain.eh = DrawingMLMain.gp + "/gd";
    DrawingMLMain.el = DrawingMLMain.gp + "/graphic";
    DrawingMLMain.em = DrawingMLMain.gp + "/graphicData";
    DrawingMLMain.en = DrawingMLMain.gp + "/graphicFrameLocks";
    DrawingMLMain.eo = DrawingMLMain.gp + "/gray";
    DrawingMLMain.eq = DrawingMLMain.gp + "/green";
    DrawingMLMain.er = DrawingMLMain.gp + "/greenMod";
    DrawingMLMain.es = DrawingMLMain.gp + "/greenOff";
    DrawingMLMain.et = DrawingMLMain.gp + "/grpFill";
    DrawingMLMain.ex = DrawingMLMain.gp + "/headEnd";
    DrawingMLMain.e2 = DrawingMLMain.gp + "/hlink";
    DrawingMLMain.e3 = DrawingMLMain.gp + "/hlinkClick";
    DrawingMLMain.e9 = DrawingMLMain.gp + "/hue";
    DrawingMLMain.fa = DrawingMLMain.gp + "/hueMod";
    DrawingMLMain.fb = DrawingMLMain.gp + "/hueOff";
    DrawingMLMain.fh = DrawingMLMain.gp + "/inv";
    DrawingMLMain.fr = DrawingMLMain.gp + "/latin";
    DrawingMLMain.fx = DrawingMLMain.gp + "/ln";
    DrawingMLMain.fy = DrawingMLMain.gp + "/lnRef";
    DrawingMLMain.f1 = DrawingMLMain.gp + "/lnTo";
    DrawingMLMain.f2 = DrawingMLMain.gp + "/lstStyle";
    DrawingMLMain.f3 = DrawingMLMain.gp + "/lt1";
    DrawingMLMain.f4 = DrawingMLMain.gp + "/lt2";
    DrawingMLMain.f5 = DrawingMLMain.gp + "/lum";
    DrawingMLMain.f6 = DrawingMLMain.gp + "/lumMod";
    DrawingMLMain.f7 = DrawingMLMain.gp + "/lumOff";
    DrawingMLMain.gi = DrawingMLMain.gp + "/majorFont";
    DrawingMLMain.gl = DrawingMLMain.gp + "/minorFont";
    DrawingMLMain.gn = DrawingMLMain.gp + "/moveTo";
    DrawingMLMain.gz = DrawingMLMain.gp + "/noFill";
    DrawingMLMain.hb = DrawingMLMain.gp + "/objectDefaults";
    DrawingMLMain.hc = DrawingMLMain.gp + "/off";
    DrawingMLMain.he = DrawingMLMain.gp + "/p";
    DrawingMLMain.hj = DrawingMLMain.gp + "/picLocks";
    DrawingMLMain.hm = DrawingMLMain.gp + "/pPr";
    DrawingMLMain.ho = DrawingMLMain.gp + "/prstClr";
    DrawingMLMain.hq = DrawingMLMain.gp + "/prstGeom";
    DrawingMLMain.ht = DrawingMLMain.gp + "/pt";
    DrawingMLMain.hu = DrawingMLMain.gp + "/quadBezTo";
    DrawingMLMain.hv = DrawingMLMain.gp + "/r";
    DrawingMLMain.hy = DrawingMLMain.gp + "/red";
    DrawingMLMain.hz = DrawingMLMain.gp + "/redMod";
    DrawingMLMain.h0 = DrawingMLMain.gp + "/redOff";
    DrawingMLMain.h8 = DrawingMLMain.gp + "/rPr";
    DrawingMLMain.ib = DrawingMLMain.gp + "/sat";
    DrawingMLMain.ic = DrawingMLMain.gp + "/satMod";
    DrawingMLMain.id = DrawingMLMain.gp + "/satOff";
    DrawingMLMain.ig = DrawingMLMain.gp + "/schemeClr";
    DrawingMLMain.ij = DrawingMLMain.gp + "/shade";
    DrawingMLMain.ip = DrawingMLMain.gp + "/solidFill";
    DrawingMLMain.iz = DrawingMLMain.gp + "/spLocks";
    DrawingMLMain.i0 = DrawingMLMain.gp + "/srcRect";
    DrawingMLMain.i1 = DrawingMLMain.gp + "/srgbClr";
    DrawingMLMain.i3 = DrawingMLMain.gp + "/stretch";
    DrawingMLMain.i9 = DrawingMLMain.gp + "/sysClr";
    DrawingMLMain.jb = DrawingMLMain.gp + "/t";
    DrawingMLMain.jf = DrawingMLMain.gp + "/tailEnd";
    DrawingMLMain.jh = DrawingMLMain.gp + "/theme";
    DrawingMLMain.ji = DrawingMLMain.gp + "/themeElements";
    DrawingMLMain.jj = DrawingMLMain.gp + "/themeManager";
    DrawingMLMain.jn = DrawingMLMain.gp + "/tint";
    DrawingMLMain.j9 = DrawingMLMain.gp + "/xfrm";
    DrawingMLMain.gs = DrawingMLMain.gp + "/noAutofit";
    DrawingMLMain.g6 = DrawingMLMain.gp + "/normAutofit";
    DrawingMLMain.hs = DrawingMLMain.gp + "/prstTxWarp";
    DrawingMLMain.ie = DrawingMLMain.gp + "/scene3d";
    DrawingMLMain.iq = DrawingMLMain.gp + "/sp3d";
    DrawingMLMain.ir = DrawingMLMain.gp + "/spAutoFit";
    DrawingMLMain.bj = DrawingMLMain.gp + "/backdrop";
    DrawingMLMain.bm = DrawingMLMain.gp + "/bevelB";
    DrawingMLMain.bn = DrawingMLMain.gp + "/bevelT";
    DrawingMLMain.ce = DrawingMLMain.gp + "/camera";
    DrawingMLMain.fu = DrawingMLMain.gp + "/lightRig";
    DrawingMLMain.hd = DrawingMLMain.gp + "/outerShdw";
    DrawingMLMain.bd = DrawingMLMain.gp + "/anchor";
    DrawingMLMain.g4 = DrawingMLMain.gp + "/norm";
    DrawingMLMain.jz = DrawingMLMain.gp + "/up";
    DrawingMLMain.h4 = DrawingMLMain.gp + "/rot";
    DrawingMLMain.ct = DrawingMLMain.gp + "/contourClr";
    DrawingMLMain.dv = DrawingMLMain.gp + "/extrusionClr";
    DrawingMLMain.e8 = DrawingMLMain.gp + "/hslClr";
    DrawingMLMain.ih = DrawingMLMain.gp + "/scrgbClr";
    DrawingMLMain.eg = DrawingMLMain.gp + "/gamma";
    DrawingMLMain.fj = DrawingMLMain.gp + "/invGamma";
    DrawingMLMain.di = DrawingMLMain.gp + "/effectDag";
    DrawingMLMain.dj = DrawingMLMain.gp + "/effectLst";
    DrawingMLMain.ek = DrawingMLMain.gp + "/gradFill";
    DrawingMLMain.ez = DrawingMLMain.gp + "/highlight";
    DrawingMLMain.e4 = DrawingMLMain.gp + "/hlinkMouseOver";
    DrawingMLMain.hi = DrawingMLMain.gp + "/pattFill";
    DrawingMLMain.i8 = DrawingMLMain.gp + "/sym";
    DrawingMLMain.jv = DrawingMLMain.gp + "/uFill";
    DrawingMLMain.jw = DrawingMLMain.gp + "/uFillTx";
    DrawingMLMain.jx = DrawingMLMain.gp + "/uLn";
    DrawingMLMain.jy = DrawingMLMain.gp + "/uLnTx";
    DrawingMLMain.a3 = DrawingMLMain.gp + "/alphaBiLevel";
    DrawingMLMain.a4 = DrawingMLMain.gp + "/alphaCeiling";
    DrawingMLMain.a5 = DrawingMLMain.gp + "/alphaFloor";
    DrawingMLMain.a6 = DrawingMLMain.gp + "/alphaInv";
    DrawingMLMain.a8 = DrawingMLMain.gp + "/alphaModFix";
    DrawingMLMain.bb = DrawingMLMain.gp + "/alphaRepl";
    DrawingMLMain.ba = DrawingMLMain.gp + "/alphaOutset";
    DrawingMLMain.bs = DrawingMLMain.gp + "/blend";
    DrawingMLMain.jk = DrawingMLMain.gp + "/tile";
    DrawingMLMain.bq = DrawingMLMain.gp + "/biLevel";
    DrawingMLMain.by = DrawingMLMain.gp + "/blur";
    DrawingMLMain.ck = DrawingMLMain.gp + "/clrChange";
    DrawingMLMain.cm = DrawingMLMain.gp + "/clrRepl";
    DrawingMLMain.de = DrawingMLMain.gp + "/duotone";
    DrawingMLMain.dh = DrawingMLMain.gp + "/effect";
    DrawingMLMain.dx = DrawingMLMain.gp + "/fill";
    DrawingMLMain.dy = DrawingMLMain.gp + "/fillOverlay";
    DrawingMLMain.ep = DrawingMLMain.gp + "/grayscl";
    DrawingMLMain.e7 = DrawingMLMain.gp + "/hsl";
    DrawingMLMain.cl = DrawingMLMain.gp + "/clrFrom";
    DrawingMLMain.co = DrawingMLMain.gp + "/clrTo";
    DrawingMLMain.ej = DrawingMLMain.gp + "/glow";
    DrawingMLMain.fg = DrawingMLMain.gp + "/innerShdw";
    DrawingMLMain.hr = DrawingMLMain.gp + "/prstShdw";
    DrawingMLMain.h1 = DrawingMLMain.gp + "/reflection";
    DrawingMLMain.io = DrawingMLMain.gp + "/softEdge";
    DrawingMLMain.ev = DrawingMLMain.gp + "/gsLst";
    DrawingMLMain.fv = DrawingMLMain.gp + "/lin";
    DrawingMLMain.hg = DrawingMLMain.gp + "/path";
    DrawingMLMain.jl = DrawingMLMain.gp + "/tileRect";
    DrawingMLMain.eu = DrawingMLMain.gp + "/gs";
    DrawingMLMain.im = DrawingMLMain.gp + "/snd";
    DrawingMLMain.bl = DrawingMLMain.gp + "/bevel";
    DrawingMLMain.cz = DrawingMLMain.gp + "/custDash";
    DrawingMLMain.hp = DrawingMLMain.gp + "/prstDash";
    DrawingMLMain.gm = DrawingMLMain.gp + "/miter";
    DrawingMLMain.h7 = DrawingMLMain.gp + "/round";
    DrawingMLMain.dd = DrawingMLMain.gp + "/ds";
    DrawingMLMain.bo = DrawingMLMain.gp + "/bgClr";
    DrawingMLMain.dw = DrawingMLMain.gp + "/fgClr";
    DrawingMLMain.ay = DrawingMLMain.gp + "/ahLst";
    DrawingMLMain.c3 = DrawingMLMain.gp + "/cxnLst";
    DrawingMLMain.ei = DrawingMLMain.gp + "/gdLst";
    DrawingMLMain.hh = DrawingMLMain.gp + "/pathLst";
    DrawingMLMain.hx = DrawingMLMain.gp + "/rect";
    DrawingMLMain.c2 = DrawingMLMain.gp + "/cxn";
    DrawingMLMain.hl = DrawingMLMain.gp + "/pos";
    DrawingMLMain.d3 = DrawingMLMain.gp + "/flatTx";
    DrawingMLMain.bp = DrawingMLMain.gp + "/bgFillStyleLst";
    DrawingMLMain.dm = DrawingMLMain.gp + "/effectStyleLst";
    DrawingMLMain.d1 = DrawingMLMain.gp + "/fillStyleLst";
    DrawingMLMain.f0 = DrawingMLMain.gp + "/lnStyleLst";
    DrawingMLMain.cs = DrawingMLMain.gp + "/cont";
    DrawingMLMain.d2 = DrawingMLMain.gp + "/fillToRect";
    DrawingMLMain.dl = DrawingMLMain.gp + "/effectStyle";
    DrawingMLMain.h2 = DrawingMLMain.gp + "/relOff";
    DrawingMLMain.c5 = DrawingMLMain.gp + "/defPPr";
    DrawingMLMain.f9 = DrawingMLMain.gp + "/lvl1pPr";
    DrawingMLMain.ga = DrawingMLMain.gp + "/lvl2pPr";
    DrawingMLMain.gb = DrawingMLMain.gp + "/lvl3pPr";
    DrawingMLMain.gc = DrawingMLMain.gp + "/lvl4pPr";
    DrawingMLMain.gd = DrawingMLMain.gp + "/lvl5pPr";
    DrawingMLMain.ge = DrawingMLMain.gp + "/lvl6pPr";
    DrawingMLMain.gf = DrawingMLMain.gp + "/lvl7pPr";
    DrawingMLMain.gg = DrawingMLMain.gp + "/lvl8pPr";
    DrawingMLMain.gh = DrawingMLMain.gp + "/lvl9pPr";
    DrawingMLMain.fz = DrawingMLMain.gp + "/lnSpc";
    DrawingMLMain.it = DrawingMLMain.gp + "/spcAft";
    DrawingMLMain.iu = DrawingMLMain.gp + "/spcBef";
    DrawingMLMain.ix = DrawingMLMain.gp + "/spcPct";
    DrawingMLMain.iy = DrawingMLMain.gp + "/spcPts";
    DrawingMLMain.b5 = DrawingMLMain.gp + "/buClr";
    DrawingMLMain.b6 = DrawingMLMain.gp + "/buClrTx";
    DrawingMLMain.b7 = DrawingMLMain.gp + "/buFont";
    DrawingMLMain.b8 = DrawingMLMain.gp + "/buFontTx";
    DrawingMLMain.ca = DrawingMLMain.gp + "/buSzPct";
    DrawingMLMain.cb = DrawingMLMain.gp + "/buSzPts";
    DrawingMLMain.cc = DrawingMLMain.gp + "/buSzTx";
    DrawingMLMain.b2 = DrawingMLMain.gp + "/buAutoNum";
    DrawingMLMain.b9 = DrawingMLMain.gp + "/buNone";
    DrawingMLMain.b3 = DrawingMLMain.gp + "/buBlip";
    DrawingMLMain.b4 = DrawingMLMain.gp + "/buChar";
    DrawingMLMain.c6 = DrawingMLMain.gp + "/defRPr";
    DrawingMLMain.jd = DrawingMLMain.gp + "/tab";
    DrawingMLMain.b1 = DrawingMLMain.gp + "/br";
    DrawingMLMain.d4 = DrawingMLMain.gp + "/fld";
    DrawingMLMain.dn = DrawingMLMain.gp + "/endParaRPr";
    DrawingMLMain.je = DrawingMLMain.gp + "/tabLst";
    DrawingMLMain.ao = new DrawingMLMain();
    return DrawingMLMain;
}(XmlNamespaceDefinitionBase));
export { DrawingMLMain };
/**
 * @hidden
 */
var DrawingNamespaceDefinitionBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DrawingNamespaceDefinitionBase, _super);
    function DrawingNamespaceDefinitionBase(a, b) {
        var _this = _super.call(this) || this;
        _this.ao = null;
        _this.aq = null;
        _this.ar = null;
        _this.as = null;
        _this.at = null;
        _this.au = null;
        _this.av = null;
        _this.aw = null;
        _this.ax = null;
        _this.az = null;
        _this.a4 = null;
        _this.a5 = null;
        _this.a6 = null;
        _this.a7 = null;
        _this.bo = null;
        _this.bp = null;
        _this.bq = null;
        _this.br = null;
        _this.bs = null;
        _this.bt = null;
        _this.bx = null;
        _this.by = null;
        _this.bz = null;
        _this.b0 = null;
        _this.b2 = null;
        _this.b4 = null;
        _this.bb = null;
        _this.bc = null;
        _this.bb = a;
        _this.bc = b;
        _this.ao = a + "/blipFill";
        _this.aq = a + "/cNvCxnSpPr";
        _this.ar = a + "/cNvGraphicFramePr";
        _this.as = a + "/cNvGrpSpPr";
        _this.at = a + "/cNvPicPr";
        _this.au = a + "/cNvPr";
        _this.av = a + "/cNvSpPr";
        _this.aw = a + "/cxnSp";
        _this.ax = a + "/cxnSpLocks";
        _this.az = a + "/endCxn";
        _this.a4 = a + "/graphicFrame";
        _this.a5 = a + "/grpSp";
        _this.a6 = a + "/grpSpLocks";
        _this.a7 = a + "/grpSpPr";
        _this.bo = a + "/nvCxnSpPr";
        _this.bp = a + "/nvGraphicFramePr";
        _this.bq = a + "/nvGrpSpPr";
        _this.br = a + "/nvPicPr";
        _this.bs = a + "/nvSpPr";
        _this.bt = a + "/pic";
        _this.bx = a + "/sp";
        _this.by = a + "/spPr";
        _this.bz = a + "/stCxn";
        _this.b0 = a + "/style";
        _this.b2 = a + "/txBody";
        _this.b4 = a + "/xfrm";
        return _this;
    }
    DrawingNamespaceDefinitionBase.prototype.s = function (a) {
        switch (a) {
            case 0: return this.bc;
            case 1: return this.bb;
            default: return this.bc;
        }
    };
    DrawingNamespaceDefinitionBase.prototype.cc = function (a, b, c, d) {
        var e_40, _0;
        c = 0;
        d = 0;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var e = _2.value;
                switch (e.a.e(a.d)) {
                    case "id":
                        c = parseUInt32_1(e.d, CultureInfo.invariantCulture);
                        break;
                    case "idx":
                        d = parseUInt32_1(e.d, CultureInfo.invariantCulture);
                        break;
                    default: break;
                }
            }
        }
        catch (e_40_1) {
            e_40 = { error: e_40_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_40)
                    throw e_40.error;
            }
        }
        return {
            p2: c,
            p3: d
        };
    };
    DrawingNamespaceDefinitionBase.prototype.c3 = function (a, b, c, d) {
        if (c === void 0) {
            c = 0;
        }
        if (d === void 0) {
            d = 0;
        }
        a.ad.p(b, this.t);
        var e;
        if (c != 0) {
            e = c.toString();
            a.ad.h("id", e);
        }
        if (d != 0) {
            e = d.toString();
            a.ad.h("idx", e);
        }
    };
    DrawingNamespaceDefinitionBase.db = function (a, b) {
        if (stringIsNullOrEmpty(b)) {
            return;
        }
        DrawingNamespaceDefinitionBase.db(a, b);
    };
    DrawingNamespaceDefinitionBase.prototype.b5 = function (a, b, c) {
        var e_41, _0;
        b = toNullable(Number_$type, null);
        c = toNullable(Boolean_$type, null);
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var d = _2.value;
                switch (d.a.e(a.d)) {
                    case "dpi":
                        b = toNullable(Number_$type, parseUInt32_1(d.d, CultureInfo.invariantCulture));
                        break;
                    case "rotWithShape":
                        c = toNullable(Boolean_$type, ST_OnOff.e(d.d));
                        break;
                    default: break;
                }
            }
        }
        catch (e_41_1) {
            e_41 = { error: e_41_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_41)
                    throw e_41.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    DrawingNamespaceDefinitionBase.prototype.cw = function (a, b, c) {
        a.ad.p(this.ao, this.t);
        var d;
        if (nullableNotEquals(b, null)) {
            d = b.value.toString();
            a.ad.h("dpi", d);
        }
        if (nullableNotEquals(c, null)) {
            d = ST_OnOff.g(c.value);
            a.ad.h("rotWithShape", d);
        }
    };
    DrawingNamespaceDefinitionBase.prototype.b6 = function (a) {
    };
    DrawingNamespaceDefinitionBase.prototype.cx = function (a) {
        a.ad.p(this.aq, this.t);
    };
    DrawingNamespaceDefinitionBase.prototype.b7 = function (a) {
    };
    DrawingNamespaceDefinitionBase.prototype.cy = function (a) {
        a.ad.p(this.ar, this.t);
    };
    DrawingNamespaceDefinitionBase.prototype.b8 = function (a) {
    };
    DrawingNamespaceDefinitionBase.prototype.cz = function (a) {
        a.ad.p(this.as, this.t);
    };
    DrawingNamespaceDefinitionBase.prototype.b9 = function (a, b) {
        var c = a.ao("preferRelativeResize");
        if (c == null) {
            b = true;
        }
        else {
            b = ST_OnOff.e(c);
        }
        return {
            p1: b
        };
    };
    DrawingNamespaceDefinitionBase.prototype.c0 = function (a, b) {
        if (b === void 0) {
            b = true;
        }
        a.ad.p(this.at, this.t);
        var c;
        if (b != true) {
            c = ST_OnOff.g(b);
            a.ad.h("preferRelativeResize", c);
        }
    };
    DrawingNamespaceDefinitionBase.prototype.ca = function (a, b, c, d, e, f) {
        var g = DrawingMLMain.k0(a, this.au, b, c, d, e, f);
        b = g.p2;
        c = g.p3;
        d = g.p4;
        e = g.p5;
        f = g.p6;
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f
        };
    };
    DrawingNamespaceDefinitionBase.prototype.c1 = function (a, b, c, d, e, f) {
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = null;
        }
        DrawingMLMain.n1(a, this.au, b, c, d, e, f);
    };
    DrawingNamespaceDefinitionBase.prototype.cb = function (a, b) {
        var c = a.ao("txBox");
        if (c == null) {
            b = false;
        }
        else {
            b = ST_OnOff.e(c);
        }
        return {
            p1: b
        };
    };
    DrawingNamespaceDefinitionBase.prototype.c2 = function (a, b) {
        if (b === void 0) {
            b = false;
        }
        a.ad.p(this.av, this.t);
        var c;
        if (b != false) {
            c = ST_OnOff.g(b);
            a.ad.h("txBox", c);
        }
    };
    DrawingNamespaceDefinitionBase.prototype.cd = function (a, b, c) {
        var e_42, _0;
        b = null;
        c = false;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var d = _2.value;
                switch (d.a.e(a.d)) {
                    case "macro":
                        b = d.d;
                        break;
                    case "fPublished":
                        c = ST_OnOff.e(d.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_42_1) {
            e_42 = { error: e_42_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_42)
                    throw e_42.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    DrawingNamespaceDefinitionBase.prototype.c4 = function (a, b, c) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = false;
        }
        a.ad.p(this.aw, this.t);
        var d;
        d = b;
        DrawingNamespaceDefinitionBase.db(a, d);
        if (c != false) {
            d = ST_OnOff.g(c);
            a.ad.h("fPublished", d);
        }
    };
    DrawingNamespaceDefinitionBase.prototype.ce = function (a, b, c, d, e, f, g, h, i, j, k) {
        var e_43, _0;
        b = false;
        c = false;
        d = false;
        e = false;
        f = false;
        g = false;
        h = false;
        i = false;
        j = false;
        k = false;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var l = _2.value;
                switch (l.a.e(a.d)) {
                    case "noGrp":
                        b = ST_OnOff.e(l.d);
                        break;
                    case "noSelect":
                        c = ST_OnOff.e(l.d);
                        break;
                    case "noRot":
                        d = ST_OnOff.e(l.d);
                        break;
                    case "noChangeAspect":
                        e = ST_OnOff.e(l.d);
                        break;
                    case "noMove":
                        f = ST_OnOff.e(l.d);
                        break;
                    case "noResize":
                        g = ST_OnOff.e(l.d);
                        break;
                    case "noEditPoints":
                        h = ST_OnOff.e(l.d);
                        break;
                    case "noAdjustHandles":
                        i = ST_OnOff.e(l.d);
                        break;
                    case "noChangeArrowheads":
                        j = ST_OnOff.e(l.d);
                        break;
                    case "noChangeShapeType":
                        k = ST_OnOff.e(l.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_43_1) {
            e_43 = { error: e_43_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_43)
                    throw e_43.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k
        };
    };
    DrawingNamespaceDefinitionBase.prototype.c5 = function (a, b, c, d, e, f, g, h, i, j, k) {
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = false;
        }
        if (h === void 0) {
            h = false;
        }
        if (i === void 0) {
            i = false;
        }
        if (j === void 0) {
            j = false;
        }
        if (k === void 0) {
            k = false;
        }
        a.ad.p(this.ax, this.t);
        var l;
        if (b != false) {
            l = ST_OnOff.g(b);
            a.ad.h("noGrp", l);
        }
        if (c != false) {
            l = ST_OnOff.g(c);
            a.ad.h("noSelect", l);
        }
        if (d != false) {
            l = ST_OnOff.g(d);
            a.ad.h("noRot", l);
        }
        if (e != false) {
            l = ST_OnOff.g(e);
            a.ad.h("noChangeAspect", l);
        }
        if (f != false) {
            l = ST_OnOff.g(f);
            a.ad.h("noMove", l);
        }
        if (g != false) {
            l = ST_OnOff.g(g);
            a.ad.h("noResize", l);
        }
        if (h != false) {
            l = ST_OnOff.g(h);
            a.ad.h("noEditPoints", l);
        }
        if (i != false) {
            l = ST_OnOff.g(i);
            a.ad.h("noAdjustHandles", l);
        }
        if (j != false) {
            l = ST_OnOff.g(j);
            a.ad.h("noChangeArrowheads", l);
        }
        if (k != false) {
            l = ST_OnOff.g(k);
            a.ad.h("noChangeShapeType", l);
        }
    };
    DrawingNamespaceDefinitionBase.prototype.cf = function (a, b, c) {
        var d = this.cc(a, this.az, b, c);
        b = d.p2;
        c = d.p3;
        return {
            p1: b,
            p2: c
        };
    };
    DrawingNamespaceDefinitionBase.prototype.c6 = function (a, b, c) {
        if (b === void 0) {
            b = 0;
        }
        if (c === void 0) {
            c = 0;
        }
        this.c3(a, this.az, b, c);
    };
    DrawingNamespaceDefinitionBase.prototype.cg = function (a, b, c) {
        var e_44, _0;
        b = null;
        c = false;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var d = _2.value;
                switch (d.a.e(a.d)) {
                    case "macro":
                        b = d.d;
                        break;
                    case "fPublished":
                        c = ST_OnOff.e(d.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_44_1) {
            e_44 = { error: e_44_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_44)
                    throw e_44.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    DrawingNamespaceDefinitionBase.prototype.c7 = function (a, b, c) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = false;
        }
        a.ad.p(this.a4, this.t);
        var d;
        d = b;
        DrawingNamespaceDefinitionBase.db(a, d);
        if (c != false) {
            d = ST_OnOff.g(c);
            a.ad.h("fPublished", d);
        }
    };
    DrawingNamespaceDefinitionBase.prototype.ch = function (a) {
    };
    DrawingNamespaceDefinitionBase.prototype.c8 = function (a) {
        a.ad.p(this.a5, this.t);
    };
    DrawingNamespaceDefinitionBase.prototype.ci = function (a, b, c, d, e, f, g, h) {
        var e_45, _0;
        b = false;
        c = false;
        d = false;
        e = false;
        f = false;
        g = false;
        h = false;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var i = _2.value;
                switch (i.a.e(a.d)) {
                    case "noGrp":
                        b = ST_OnOff.e(i.d);
                        break;
                    case "noUngrp":
                        c = ST_OnOff.e(i.d);
                        break;
                    case "noSelect":
                        d = ST_OnOff.e(i.d);
                        break;
                    case "noRot":
                        e = ST_OnOff.e(i.d);
                        break;
                    case "noChangeAspect":
                        f = ST_OnOff.e(i.d);
                        break;
                    case "noMove":
                        g = ST_OnOff.e(i.d);
                        break;
                    case "noResize":
                        h = ST_OnOff.e(i.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_45_1) {
            e_45 = { error: e_45_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_45)
                    throw e_45.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h
        };
    };
    DrawingNamespaceDefinitionBase.prototype.c9 = function (a, b, c, d, e, f, g, h) {
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = false;
        }
        if (h === void 0) {
            h = false;
        }
        a.ad.p(this.a6, this.t);
        var i;
        if (b != false) {
            i = ST_OnOff.g(b);
            a.ad.h("noGrp", i);
        }
        if (c != false) {
            i = ST_OnOff.g(c);
            a.ad.h("noUngrp", i);
        }
        if (d != false) {
            i = ST_OnOff.g(d);
            a.ad.h("noSelect", i);
        }
        if (e != false) {
            i = ST_OnOff.g(e);
            a.ad.h("noRot", i);
        }
        if (f != false) {
            i = ST_OnOff.g(f);
            a.ad.h("noChangeAspect", i);
        }
        if (g != false) {
            i = ST_OnOff.g(g);
            a.ad.h("noMove", i);
        }
        if (h != false) {
            i = ST_OnOff.g(h);
            a.ad.h("noResize", i);
        }
    };
    DrawingNamespaceDefinitionBase.prototype.cj = function (a, b) {
        var c = a.ao("bwMode");
        if (c == null) {
            b = toNullable(ST_BlackWhiteMode_$type, null);
        }
        else {
            b = toNullable(ST_BlackWhiteMode_$type, XmlNamespaceDefinitionBase.b(ST_BlackWhiteMode_$type, c));
        }
        return {
            p1: b
        };
    };
    DrawingNamespaceDefinitionBase.prototype.da = function (a, b) {
        if (b === void 0) {
            b = toNullable(ST_BlackWhiteMode_$type, null);
        }
        a.ad.p(this.a7, this.t);
        var c;
        if (nullableNotEquals(b, null)) {
            c = XmlNamespaceDefinitionBase.p(ST_BlackWhiteMode_$type, b.value);
            a.ad.h("bwMode", c);
        }
    };
    DrawingNamespaceDefinitionBase.prototype.ck = function (a) {
    };
    DrawingNamespaceDefinitionBase.prototype.dc = function (a) {
        a.ad.p(this.bo, this.t);
    };
    DrawingNamespaceDefinitionBase.prototype.cl = function (a) {
    };
    DrawingNamespaceDefinitionBase.prototype.dd = function (a) {
        a.ad.p(this.bp, this.t);
    };
    DrawingNamespaceDefinitionBase.prototype.cm = function (a) {
    };
    DrawingNamespaceDefinitionBase.prototype.de = function (a) {
        a.ad.p(this.bq, this.t);
    };
    DrawingNamespaceDefinitionBase.prototype.cn = function (a) {
    };
    DrawingNamespaceDefinitionBase.prototype.df = function (a) {
        a.ad.p(this.br, this.t);
    };
    DrawingNamespaceDefinitionBase.prototype.co = function (a) {
    };
    DrawingNamespaceDefinitionBase.prototype.dg = function (a) {
        a.ad.p(this.bs, this.t);
    };
    DrawingNamespaceDefinitionBase.prototype.cp = function (a, b, c) {
        var e_46, _0;
        b = "";
        c = false;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var d = _2.value;
                switch (d.a.e(a.d)) {
                    case "macro":
                        b = d.d;
                        break;
                    case "fPublished":
                        c = ST_OnOff.e(d.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_46_1) {
            e_46 = { error: e_46_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_46)
                    throw e_46.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    DrawingNamespaceDefinitionBase.prototype.dh = function (a, b, c) {
        if (b === void 0) {
            b = "";
        }
        if (c === void 0) {
            c = false;
        }
        a.ad.p(this.bt, this.t);
        var d;
        d = b;
        DrawingNamespaceDefinitionBase.db(a, d);
        if (c != false) {
            d = ST_OnOff.g(c);
            a.ad.h("fPublished", d);
        }
    };
    DrawingNamespaceDefinitionBase.prototype.cq = function (a, b, c, d, e) {
        var e_47, _0;
        b = null;
        c = null;
        d = true;
        e = false;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var f = _2.value;
                switch (f.a.e(a.d)) {
                    case "macro":
                        b = f.d;
                        break;
                    case "textlink":
                        c = f.d;
                        break;
                    case "fLocksText":
                        d = ST_OnOff.e(f.d);
                        break;
                    case "fPublished":
                        e = ST_OnOff.e(f.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_47_1) {
            e_47 = { error: e_47_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_47)
                    throw e_47.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    DrawingNamespaceDefinitionBase.prototype.di = function (a, b, c, d, e) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = true;
        }
        if (e === void 0) {
            e = false;
        }
        a.ad.p(this.bx, this.t);
        var f;
        f = b;
        DrawingNamespaceDefinitionBase.db(a, f);
        f = c;
        a.ad.h("textlink", f);
        if (d != true) {
            f = ST_OnOff.g(d);
            a.ad.h("fLocksText", f);
        }
        if (e != false) {
            f = ST_OnOff.g(e);
            a.ad.h("fPublished", f);
        }
    };
    DrawingNamespaceDefinitionBase.prototype.cr = function (a, b) {
        var c = a.ao("bwMode");
        if (c == null) {
            b = toNullable(ST_BlackWhiteMode_$type, null);
        }
        else {
            b = toNullable(ST_BlackWhiteMode_$type, XmlNamespaceDefinitionBase.b(ST_BlackWhiteMode_$type, c));
        }
        return {
            p1: b
        };
    };
    DrawingNamespaceDefinitionBase.prototype.dj = function (a, b) {
        if (b === void 0) {
            b = toNullable(ST_BlackWhiteMode_$type, null);
        }
        a.ad.p(this.by, this.t);
        var c;
        if (nullableNotEquals(b, null)) {
            c = XmlNamespaceDefinitionBase.p(ST_BlackWhiteMode_$type, b.value);
            a.ad.h("bwMode", c);
        }
    };
    DrawingNamespaceDefinitionBase.prototype.cs = function (a, b, c) {
        var d = this.cc(a, this.bz, b, c);
        b = d.p2;
        c = d.p3;
        return {
            p1: b,
            p2: c
        };
    };
    DrawingNamespaceDefinitionBase.prototype.dk = function (a, b, c) {
        if (b === void 0) {
            b = 0;
        }
        if (c === void 0) {
            c = 0;
        }
        this.c3(a, this.bz, b, c);
    };
    DrawingNamespaceDefinitionBase.prototype.ct = function (a) {
    };
    DrawingNamespaceDefinitionBase.prototype.dl = function (a) {
        a.ad.p(this.b0, this.t);
    };
    DrawingNamespaceDefinitionBase.prototype.cu = function (a) {
    };
    DrawingNamespaceDefinitionBase.prototype.dm = function (a) {
        a.ad.p(this.b2, this.t);
    };
    DrawingNamespaceDefinitionBase.prototype.cv = function (a, b, c, d) {
        var e_48, _0;
        b = ST_Angle.a(0);
        c = false;
        d = false;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var e = _2.value;
                switch (e.a.e(a.d)) {
                    case "rot":
                        b = ST_Angle.b(e.d);
                        break;
                    case "flipH":
                        c = ST_OnOff.e(e.d);
                        break;
                    case "flipV":
                        d = ST_OnOff.e(e.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_48_1) {
            e_48 = { error: e_48_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_48)
                    throw e_48.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    DrawingNamespaceDefinitionBase.prototype.dn = function (a, b, c, d) {
        if (b === void 0) {
            b = new ST_Angle();
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = false;
        }
        a.ad.p(this.b4, this.t);
        var e;
        if (b.n() != 0) {
            e = b.toString();
            a.ad.h("rot", e);
        }
        if (c != false) {
            e = ST_OnOff.g(c);
            a.ad.h("flipH", e);
        }
        if (d != false) {
            e = ST_OnOff.g(d);
            a.ad.h("flipV", e);
        }
    };
    DrawingNamespaceDefinitionBase.$t = markType(DrawingNamespaceDefinitionBase, 'DrawingNamespaceDefinitionBase', XmlNamespaceDefinitionBase.$);
    return DrawingNamespaceDefinitionBase;
}(XmlNamespaceDefinitionBase));
export { DrawingNamespaceDefinitionBase };
/**
 * @hidden
 */
var EmptyNamespace = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(EmptyNamespace, _super);
    function EmptyNamespace() {
        return _super.call(this) || this;
    }
    EmptyNamespace.prototype.s = function (a) {
        return stringEmpty();
    };
    EmptyNamespace.prototype.get_t = function () {
        return stringEmpty();
    };
    Object.defineProperty(EmptyNamespace.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    EmptyNamespace.aq = function (a) {
    };
    EmptyNamespace.ar = function (a, b, c) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        if (c === void 0) {
            c = toNullable(Number_$type, null);
        }
        a.ad.o("xml");
        var d = a.d._z;
        a.ad.l(VmlNamespace.ao);
        a.ad.l(OfficeNamespace.ao);
    };
    EmptyNamespace.$t = markType(EmptyNamespace, 'EmptyNamespace', XmlNamespaceDefinitionBase.$);
    EmptyNamespace.ao = new EmptyNamespace();
    return EmptyNamespace;
}(XmlNamespaceDefinitionBase));
export { EmptyNamespace };
/**
 * @hidden
 */
var IGOfficeExtensions = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IGOfficeExtensions, _super);
    function IGOfficeExtensions() {
        return _super.call(this) || this;
    }
    IGOfficeExtensions.prototype.s = function (a) {
        return IGOfficeExtensions.as;
    };
    IGOfficeExtensions.prototype.get_t = function () {
        return "ig";
    };
    Object.defineProperty(IGOfficeExtensions.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    IGOfficeExtensions.$t = markType(IGOfficeExtensions, 'IGOfficeExtensions', XmlNamespaceDefinitionBase.$);
    IGOfficeExtensions.as = "http://schemas.infragistics.com/officeExtensions";
    IGOfficeExtensions.aq = IGOfficeExtensions.as + "/isSupported";
    IGOfficeExtensions.ar = IGOfficeExtensions.as + "/listId";
    IGOfficeExtensions.at = IGOfficeExtensions.as + "/nodeId";
    IGOfficeExtensions.au = IGOfficeExtensions.as + "/unclosedParagraph";
    IGOfficeExtensions.ao = new IGOfficeExtensions();
    return IGOfficeExtensions;
}(XmlNamespaceDefinitionBase));
export { IGOfficeExtensions };
/**
 * @hidden
 */
var MarkupCompatibility2006 = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(MarkupCompatibility2006, _super);
    function MarkupCompatibility2006() {
        return _super.call(this) || this;
    }
    MarkupCompatibility2006.prototype.s = function (a) {
        return MarkupCompatibility2006.au;
    };
    MarkupCompatibility2006.prototype.get_t = function () {
        return "mc";
    };
    Object.defineProperty(MarkupCompatibility2006.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    MarkupCompatibility2006.aw = function (a) {
    };
    MarkupCompatibility2006.az = function (a) {
        a.ad.p(MarkupCompatibility2006.aq, "mc");
    };
    MarkupCompatibility2006.ax = function (a, b) {
        b = a.ao("Requires");
        return {
            p1: b
        };
    };
    MarkupCompatibility2006.a0 = function (a, b) {
        MarkupCompatibility2006.a1(a, stringJoin1(String_$type, " ", Enumerable.o(XmlNamespaceDefinitionBase.$, String_$type, b, function (c) { return c.t; })));
    };
    MarkupCompatibility2006.a1 = function (a, b) {
        a.ad.p(MarkupCompatibility2006.ar, "mc");
        var c;
        c = b;
        a.ad.h("Requires", c);
    };
    MarkupCompatibility2006.ay = function (a) {
    };
    MarkupCompatibility2006.a2 = function (a) {
        a.ad.p(MarkupCompatibility2006.as, "mc");
    };
    MarkupCompatibility2006.$t = markType(MarkupCompatibility2006, 'MarkupCompatibility2006', XmlNamespaceDefinitionBase.$);
    MarkupCompatibility2006.au = "http://schemas.openxmlformats.org/markup-compatibility/2006";
    MarkupCompatibility2006.aq = MarkupCompatibility2006.au + "/AlternateContent";
    MarkupCompatibility2006.ar = MarkupCompatibility2006.au + "/Choice";
    MarkupCompatibility2006.as = MarkupCompatibility2006.au + "/Fallback";
    MarkupCompatibility2006.at = MarkupCompatibility2006.au + "/Ignorable";
    MarkupCompatibility2006.ao = new MarkupCompatibility2006();
    return MarkupCompatibility2006;
}(XmlNamespaceDefinitionBase));
export { MarkupCompatibility2006 };
/**
 * @hidden
 */
var OfficeDocumentDocPropsVTypes = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(OfficeDocumentDocPropsVTypes, _super);
    function OfficeDocumentDocPropsVTypes() {
        return _super.call(this) || this;
    }
    OfficeDocumentDocPropsVTypes.prototype.s = function (a) {
        switch (a) {
            case 0: return OfficeDocumentDocPropsVTypes.a2;
            case 1: return OfficeDocumentDocPropsVTypes.a1;
            default: return OfficeDocumentDocPropsVTypes.a2;
        }
    };
    OfficeDocumentDocPropsVTypes.prototype.get_t = function () {
        return "vt";
    };
    Object.defineProperty(OfficeDocumentDocPropsVTypes.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    OfficeDocumentDocPropsVTypes.bu = function (a, b) {
        b = XmlNamespaceDefinitionBase.i(a, OfficeDocumentDocPropsVTypes.au);
        return {
            p1: b
        };
    };
    OfficeDocumentDocPropsVTypes.cg = function (a, b) {
        XmlNamespaceDefinitionBase.ad(a, OfficeDocumentDocPropsVTypes.au, "vt", b);
    };
    OfficeDocumentDocPropsVTypes.bv = function (a, b) {
        b = XmlNamespaceDefinitionBase.i(a, OfficeDocumentDocPropsVTypes.ap);
        return {
            p1: b
        };
    };
    OfficeDocumentDocPropsVTypes.ch = function (a, b) {
        XmlNamespaceDefinitionBase.ad(a, OfficeDocumentDocPropsVTypes.ap, "vt", b);
    };
    OfficeDocumentDocPropsVTypes.bw = function (a, b) {
        b = XmlNamespaceDefinitionBase.n(a, OfficeDocumentDocPropsVTypes.av);
        return {
            p1: b
        };
    };
    OfficeDocumentDocPropsVTypes.ci = function (a, b) {
        XmlNamespaceDefinitionBase.ab(a, OfficeDocumentDocPropsVTypes.av, "vt", b);
    };
    OfficeDocumentDocPropsVTypes.bx = function (a, b) {
        b = XmlNamespaceDefinitionBase.k(a, OfficeDocumentDocPropsVTypes.aw);
        return {
            p1: b
        };
    };
    OfficeDocumentDocPropsVTypes.cj = function (a, b) {
        XmlNamespaceDefinitionBase.ai(a, OfficeDocumentDocPropsVTypes.aw, "vt", b);
    };
    OfficeDocumentDocPropsVTypes.by = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, OfficeDocumentDocPropsVTypes.ax);
        return {
            p1: b
        };
    };
    OfficeDocumentDocPropsVTypes.ck = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, OfficeDocumentDocPropsVTypes.ax, "vt", b);
    };
    OfficeDocumentDocPropsVTypes.bz = function (a, b) {
        b = XmlNamespaceDefinitionBase.m(a, OfficeDocumentDocPropsVTypes.ay);
        return {
            p1: b
        };
    };
    OfficeDocumentDocPropsVTypes.cl = function (a, b) {
        XmlNamespaceDefinitionBase.ah(a, OfficeDocumentDocPropsVTypes.ay, "vt", b);
    };
    OfficeDocumentDocPropsVTypes.b0 = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, OfficeDocumentDocPropsVTypes.aq);
        return {
            p1: b
        };
    };
    OfficeDocumentDocPropsVTypes.cm = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, OfficeDocumentDocPropsVTypes.aq, "vt", b);
    };
    OfficeDocumentDocPropsVTypes.b1 = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, OfficeDocumentDocPropsVTypes.az);
        return {
            p1: b
        };
    };
    OfficeDocumentDocPropsVTypes.cn = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, OfficeDocumentDocPropsVTypes.az, "vt", b);
    };
    OfficeDocumentDocPropsVTypes.b2 = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, OfficeDocumentDocPropsVTypes.a0);
        return {
            p1: b
        };
    };
    OfficeDocumentDocPropsVTypes.co = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, OfficeDocumentDocPropsVTypes.a0, "vt", b);
    };
    OfficeDocumentDocPropsVTypes.b3 = function (a, b) {
        b = XmlNamespaceDefinitionBase.o(a, OfficeDocumentDocPropsVTypes.a3);
        return {
            p1: b
        };
    };
    OfficeDocumentDocPropsVTypes.cp = function (a, b) {
        XmlNamespaceDefinitionBase.af(a, OfficeDocumentDocPropsVTypes.a3, "vt", b);
    };
    OfficeDocumentDocPropsVTypes.b4 = function (a, b) {
        b = XmlNamespaceDefinitionBase.j(a, OfficeDocumentDocPropsVTypes.a4);
        return {
            p1: b
        };
    };
    OfficeDocumentDocPropsVTypes.cq = function (a, b) {
        XmlNamespaceDefinitionBase.ae(a, OfficeDocumentDocPropsVTypes.a4, "vt", b);
    };
    OfficeDocumentDocPropsVTypes.b5 = function (a, b) {
        b = XmlNamespaceDefinitionBase.f(a, OfficeDocumentDocPropsVTypes.a6);
        return {
            p1: b
        };
    };
    OfficeDocumentDocPropsVTypes.cr = function (a, b) {
        XmlNamespaceDefinitionBase.ak(a, OfficeDocumentDocPropsVTypes.a6, "vt", b);
    };
    OfficeDocumentDocPropsVTypes.b6 = function (a, b) {
        b = XmlNamespaceDefinitionBase.v(a, OfficeDocumentDocPropsVTypes.a7);
        return {
            p1: b
        };
    };
    OfficeDocumentDocPropsVTypes.cs = function (a, b) {
        XmlNamespaceDefinitionBase.an(a, OfficeDocumentDocPropsVTypes.a7, "vt", b);
    };
    OfficeDocumentDocPropsVTypes.b7 = function (a, b) {
        b = XmlNamespaceDefinitionBase.w(a, OfficeDocumentDocPropsVTypes.a8);
        return {
            p1: b
        };
    };
    OfficeDocumentDocPropsVTypes.ct = function (a, b) {
        XmlNamespaceDefinitionBase.al(a, OfficeDocumentDocPropsVTypes.a8, "vt", b);
    };
    OfficeDocumentDocPropsVTypes.b8 = function (a, b) {
        b = XmlNamespaceDefinitionBase.x(a, OfficeDocumentDocPropsVTypes.a9);
        return {
            p1: b
        };
    };
    OfficeDocumentDocPropsVTypes.cu = function (a, b) {
        XmlNamespaceDefinitionBase.am(a, OfficeDocumentDocPropsVTypes.a9, "vt", b);
    };
    OfficeDocumentDocPropsVTypes.b9 = function (a, b) {
        b = XmlNamespaceDefinitionBase.w(a, OfficeDocumentDocPropsVTypes.a8);
        return {
            p1: b
        };
    };
    OfficeDocumentDocPropsVTypes.cv = function (a, b) {
        XmlNamespaceDefinitionBase.al(a, OfficeDocumentDocPropsVTypes.a8, "vt", b);
    };
    OfficeDocumentDocPropsVTypes.ca = function (a) {
    };
    OfficeDocumentDocPropsVTypes.cw = function (a) {
        a.ad.p(OfficeDocumentDocPropsVTypes.ba, "vt");
    };
    OfficeDocumentDocPropsVTypes.cb = function (a, b, c) {
        var e_49, _0;
        b = 0;
        c = 0;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var d = _2.value;
                switch (d.a.e(a.d)) {
                    case "baseType":
                        b = XmlNamespaceDefinitionBase.b(ST_VectorBaseType_$type, d.d, b);
                        break;
                    case "size":
                        c = parseUInt32_1(d.d, CultureInfo.invariantCulture);
                        break;
                    default: break;
                }
            }
        }
        catch (e_49_1) {
            e_49 = { error: e_49_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_49)
                    throw e_49.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    OfficeDocumentDocPropsVTypes.cx = function (a, b, c) {
        a.ad.p(OfficeDocumentDocPropsVTypes.bb, "vt");
        var d;
        d = XmlNamespaceDefinitionBase.p(ST_VectorBaseType_$type, b);
        a.ad.h("baseType", d);
        d = c.toString();
        a.ad.h("size", d);
    };
    OfficeDocumentDocPropsVTypes.bc = function (a) {
        var b = a.s.a(IVariantValueContainer_$type);
        if (b == null) {
            return;
        }
        var c;
        var d = OfficeDocumentDocPropsVTypes.bv(a, c);
        c = d.p1;
        b.setValue(c, a.ab.ab);
    };
    OfficeDocumentDocPropsVTypes.bd = function (a) {
        var b = a.s.a(IVariantValueContainer_$type);
        if (b == null) {
            return;
        }
        var c;
        var d = OfficeDocumentDocPropsVTypes.bv(a, c);
        c = d.p1;
        b.setValue(c, a.ab.ab);
    };
    OfficeDocumentDocPropsVTypes.be = function (a) {
        var b = a.s.a(IVariantValueContainer_$type);
        if (b == null) {
            return;
        }
        var c;
        var d = OfficeDocumentDocPropsVTypes.bw(a, c);
        c = d.p1;
        b.setValue(c, a.ab.ab);
    };
    OfficeDocumentDocPropsVTypes.bf = function (a) {
        var b = a.s.a(IVariantValueContainer_$type);
        if (b == null) {
            return;
        }
        var c;
        var d = OfficeDocumentDocPropsVTypes.bx(a, c);
        c = d.p1;
        b.setValue(c, a.ab.ab);
    };
    OfficeDocumentDocPropsVTypes.bg = function (a) {
        var b = a.s.a(IVariantValueContainer_$type);
        if (b == null) {
            return;
        }
        var c;
        var d = OfficeDocumentDocPropsVTypes.by(a, c);
        c = d.p1;
        b.setValue(c, a.ab.ab);
    };
    OfficeDocumentDocPropsVTypes.bh = function (a) {
        var b = a.s.a(IVariantValueContainer_$type);
        if (b == null) {
            return;
        }
        var c;
        var d = OfficeDocumentDocPropsVTypes.bz(a, c);
        c = d.p1;
        b.setValue(c, a.ab.ab);
    };
    OfficeDocumentDocPropsVTypes.bi = function (a) {
        var b = a.s.a(IVariantValueContainer_$type);
        if (b == null) {
            return;
        }
        var c;
        var d = OfficeDocumentDocPropsVTypes.b0(a, c);
        c = d.p1;
        b.setValue(c, a.ab.ab);
    };
    OfficeDocumentDocPropsVTypes.bj = function (a) {
        var b = a.s.a(IVariantValueContainer_$type);
        if (b == null) {
            return;
        }
        var c;
        var d = OfficeDocumentDocPropsVTypes.b1(a, c);
        c = d.p1;
        b.setValue(c, a.ab.ab);
    };
    OfficeDocumentDocPropsVTypes.bk = function (a) {
        var b = a.s.a(IVariantValueContainer_$type);
        if (b == null) {
            return;
        }
        var c;
        var d = OfficeDocumentDocPropsVTypes.b2(a, c);
        c = d.p1;
        b.setValue(c, a.ab.ab);
    };
    OfficeDocumentDocPropsVTypes.bl = function (a) {
        var b = a.s.a(IVariantValueContainer_$type);
        if (b == null) {
            return;
        }
        var c;
        var d = OfficeDocumentDocPropsVTypes.b3(a, c);
        c = d.p1;
        b.setValue(c, a.ab.ab);
    };
    OfficeDocumentDocPropsVTypes.bm = function (a) {
        var b = a.s.a(IVariantValueContainer_$type);
        if (b == null) {
            return;
        }
        var c;
        var d = OfficeDocumentDocPropsVTypes.b4(a, c);
        c = d.p1;
        b.setValue(c, a.ab.ab);
    };
    OfficeDocumentDocPropsVTypes.bn = function (a) {
        var b = a.s.a(IVariantValueContainer_$type);
        if (b == null) {
            return;
        }
        var c;
        var d = OfficeDocumentDocPropsVTypes.b5(a, c);
        c = d.p1;
        b.setValue(c, a.ab.ab);
    };
    OfficeDocumentDocPropsVTypes.bo = function (a) {
        var b = a.s.a(IVariantValueContainer_$type);
        if (b == null) {
            return;
        }
        var c;
        var d = OfficeDocumentDocPropsVTypes.b6(a, c);
        c = d.p1;
        b.setValue(c, a.ab.ab);
    };
    OfficeDocumentDocPropsVTypes.bp = function (a) {
        var b = a.s.a(IVariantValueContainer_$type);
        if (b == null) {
            return;
        }
        var c;
        var d = OfficeDocumentDocPropsVTypes.b7(a, c);
        c = d.p1;
        b.setValue(c, a.ab.ab);
    };
    OfficeDocumentDocPropsVTypes.bq = function (a) {
        var b = a.s.a(IVariantValueContainer_$type);
        if (b == null) {
            return;
        }
        var c;
        var d = OfficeDocumentDocPropsVTypes.b8(a, c);
        c = d.p1;
        b.setValue(c, a.ab.ab);
    };
    OfficeDocumentDocPropsVTypes.br = function (a) {
        var b = a.s.a(IVariantValueContainer_$type);
        if (b == null) {
            return;
        }
        var c;
        var d = OfficeDocumentDocPropsVTypes.b9(a, c);
        c = d.p1;
        b.setValue(c, a.ab.ab);
    };
    OfficeDocumentDocPropsVTypes.bs = function (a) {
        var b = a.s.a(IVariantValueContainer_$type);
        if (b == null) {
            return;
        }
        var c = new OfficeDocumentDocPropsVTypes_VariantPlaceholder(b, a.ab.ab);
        a.s.k(c);
    };
    OfficeDocumentDocPropsVTypes.bt = function (a) {
        var b;
        var c;
        var d = OfficeDocumentDocPropsVTypes.cb(a, b, c);
        b = d.p1;
        c = d.p2;
        var e = new CT_Vector(0, c, b);
        a.s.k(e);
    };
    OfficeDocumentDocPropsVTypes.cc = function (a) {
        a.az(OfficeDocumentDocPropsVTypes.au, OfficeDocumentDocPropsVTypes.bc);
        a.az(OfficeDocumentDocPropsVTypes.ap, OfficeDocumentDocPropsVTypes.bd);
        a.az(OfficeDocumentDocPropsVTypes.av, OfficeDocumentDocPropsVTypes.be);
        a.az(OfficeDocumentDocPropsVTypes.aw, OfficeDocumentDocPropsVTypes.bf);
        a.az(OfficeDocumentDocPropsVTypes.ax, OfficeDocumentDocPropsVTypes.bg);
        a.az(OfficeDocumentDocPropsVTypes.ay, OfficeDocumentDocPropsVTypes.bh);
        a.az(OfficeDocumentDocPropsVTypes.aq, OfficeDocumentDocPropsVTypes.bi);
        a.az(OfficeDocumentDocPropsVTypes.az, OfficeDocumentDocPropsVTypes.bj);
        a.az(OfficeDocumentDocPropsVTypes.a0, OfficeDocumentDocPropsVTypes.bk);
        a.az(OfficeDocumentDocPropsVTypes.a3, OfficeDocumentDocPropsVTypes.bl);
        a.az(OfficeDocumentDocPropsVTypes.a4, OfficeDocumentDocPropsVTypes.bm);
        a.az(OfficeDocumentDocPropsVTypes.a6, OfficeDocumentDocPropsVTypes.bn);
        a.az(OfficeDocumentDocPropsVTypes.a7, OfficeDocumentDocPropsVTypes.bo);
        a.az(OfficeDocumentDocPropsVTypes.a8, OfficeDocumentDocPropsVTypes.bp);
        a.az(OfficeDocumentDocPropsVTypes.a9, OfficeDocumentDocPropsVTypes.bq);
        a.az(OfficeDocumentDocPropsVTypes.as, OfficeDocumentDocPropsVTypes.br);
        a.az(OfficeDocumentDocPropsVTypes.ba, OfficeDocumentDocPropsVTypes.bs);
        a.az(OfficeDocumentDocPropsVTypes.bb, OfficeDocumentDocPropsVTypes.bt);
    };
    OfficeDocumentDocPropsVTypes.cd = function (a, b) {
        var c = typeCast(String_$type, b);
        if (c != null) {
            OfficeDocumentDocPropsVTypes.cn(a, c);
        }
        else if (typeof b === 'number') {
            OfficeDocumentDocPropsVTypes.ck(a, typeGetValue(b));
        }
        else if (typeof b === 'number') {
            OfficeDocumentDocPropsVTypes.ci(a, typeGetValue(b));
        }
        else if (typeof b === 'number') {
            OfficeDocumentDocPropsVTypes.cj(a, typeGetValue(b));
        }
        else if (typeof b === 'number') {
            OfficeDocumentDocPropsVTypes.cl(a, typeGetValue(b));
        }
        else if (typeof b === 'number') {
            OfficeDocumentDocPropsVTypes.cr(a, typeGetValue(b));
        }
        else if (typeof b === 'number') {
            OfficeDocumentDocPropsVTypes.cs(a, typeGetValue(b));
        }
        else if (typeof b === 'number') {
            OfficeDocumentDocPropsVTypes.ct(a, typeGetValue(b));
        }
        else if (typeof b === 'number') {
            OfficeDocumentDocPropsVTypes.cu(a, typeGetValue(b));
        }
        else if (typeof b === 'number') {
            OfficeDocumentDocPropsVTypes.cp(a, b);
        }
        else if (typeof b === 'number') {
            OfficeDocumentDocPropsVTypes.cq(a, b);
        }
        else if (typeof b === 'number') {
            OfficeDocumentDocPropsVTypes.ch(a, b);
        }
        else {
            return;
        }
        a.ad.k();
    };
    OfficeDocumentDocPropsVTypes.ce = function (a, b) {
        OfficeDocumentDocPropsVTypes.cw(a);
        OfficeDocumentDocPropsVTypes.cd(a, b);
        a.ad.k();
    };
    OfficeDocumentDocPropsVTypes.cf = function (a, b) {
        OfficeDocumentDocPropsVTypes.cx(a, b.b, intSToU(b.a.length));
        if (b.b == 0) {
            DocCoreUtils.ao(Base.$, b.a, function (c) { return OfficeDocumentDocPropsVTypes.ce(a, c); });
        }
        else {
            DocCoreUtils.ao(Base.$, b.a, function (c) { return OfficeDocumentDocPropsVTypes.cd(a, c); });
        }
        a.ad.k();
    };
    OfficeDocumentDocPropsVTypes.$t = markType(OfficeDocumentDocPropsVTypes, 'OfficeDocumentDocPropsVTypes', XmlNamespaceDefinitionBase.$);
    OfficeDocumentDocPropsVTypes.a2 = "http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes";
    OfficeDocumentDocPropsVTypes.a1 = "http://purl.oclc.org/ooxml/officeDocument/docPropsVTypes";
    OfficeDocumentDocPropsVTypes.au = OfficeDocumentDocPropsVTypes.a1 + "/cy";
    OfficeDocumentDocPropsVTypes.ap = OfficeDocumentDocPropsVTypes.a1 + "/decimal";
    OfficeDocumentDocPropsVTypes.av = OfficeDocumentDocPropsVTypes.a1 + "/i1";
    OfficeDocumentDocPropsVTypes.aw = OfficeDocumentDocPropsVTypes.a1 + "/i2";
    OfficeDocumentDocPropsVTypes.ax = OfficeDocumentDocPropsVTypes.a1 + "/i4";
    OfficeDocumentDocPropsVTypes.ay = OfficeDocumentDocPropsVTypes.a1 + "/i8";
    OfficeDocumentDocPropsVTypes.aq = OfficeDocumentDocPropsVTypes.a1 + "/int";
    OfficeDocumentDocPropsVTypes.a3 = OfficeDocumentDocPropsVTypes.a1 + "/r4";
    OfficeDocumentDocPropsVTypes.a4 = OfficeDocumentDocPropsVTypes.a1 + "/r8";
    OfficeDocumentDocPropsVTypes.a6 = OfficeDocumentDocPropsVTypes.a1 + "/ui1";
    OfficeDocumentDocPropsVTypes.a7 = OfficeDocumentDocPropsVTypes.a1 + "/ui2";
    OfficeDocumentDocPropsVTypes.a8 = OfficeDocumentDocPropsVTypes.a1 + "/ui4";
    OfficeDocumentDocPropsVTypes.a9 = OfficeDocumentDocPropsVTypes.a1 + "/ui8";
    OfficeDocumentDocPropsVTypes.as = OfficeDocumentDocPropsVTypes.a1 + "/uint";
    OfficeDocumentDocPropsVTypes.az = OfficeDocumentDocPropsVTypes.a1 + "/lpstr";
    OfficeDocumentDocPropsVTypes.a0 = OfficeDocumentDocPropsVTypes.a1 + "/lpwstr";
    OfficeDocumentDocPropsVTypes.ba = OfficeDocumentDocPropsVTypes.a1 + "/variant";
    OfficeDocumentDocPropsVTypes.bb = OfficeDocumentDocPropsVTypes.a1 + "/vector";
    OfficeDocumentDocPropsVTypes.ao = new OfficeDocumentDocPropsVTypes();
    return OfficeDocumentDocPropsVTypes;
}(XmlNamespaceDefinitionBase));
export { OfficeDocumentDocPropsVTypes };
/**
 * @hidden
 */
var OfficeDocumentExtendedProperties = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(OfficeDocumentExtendedProperties, _super);
    function OfficeDocumentExtendedProperties() {
        return _super.call(this) || this;
    }
    OfficeDocumentExtendedProperties.prototype.s = function (a) {
        switch (a) {
            case 0: return OfficeDocumentExtendedProperties.a5;
            case 1: return OfficeDocumentExtendedProperties.a4;
            default: return OfficeDocumentExtendedProperties.a5;
        }
    };
    OfficeDocumentExtendedProperties.prototype.get_t = function () {
        return null;
    };
    Object.defineProperty(OfficeDocumentExtendedProperties.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    OfficeDocumentExtendedProperties.bi = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, OfficeDocumentExtendedProperties.aq);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.b9 = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, OfficeDocumentExtendedProperties.aq, null, b);
    };
    OfficeDocumentExtendedProperties.bj = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, OfficeDocumentExtendedProperties.ar);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.ca = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, OfficeDocumentExtendedProperties.ar, null, b);
    };
    OfficeDocumentExtendedProperties.bk = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, OfficeDocumentExtendedProperties.as);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.cb = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, OfficeDocumentExtendedProperties.as, null, b);
    };
    OfficeDocumentExtendedProperties.bl = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, OfficeDocumentExtendedProperties.at);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.cc = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, OfficeDocumentExtendedProperties.at, null, b);
    };
    OfficeDocumentExtendedProperties.bm = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, OfficeDocumentExtendedProperties.au);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.cd = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, OfficeDocumentExtendedProperties.au, null, b);
    };
    OfficeDocumentExtendedProperties.bn = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, OfficeDocumentExtendedProperties.av);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.ce = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, OfficeDocumentExtendedProperties.av, null, b);
    };
    OfficeDocumentExtendedProperties.bo = function (a) {
    };
    OfficeDocumentExtendedProperties.cf = function (a) {
        a.ad.p(OfficeDocumentExtendedProperties.aw, null);
    };
    OfficeDocumentExtendedProperties.bp = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, OfficeDocumentExtendedProperties.ax);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.cg = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, OfficeDocumentExtendedProperties.ax, null, b);
    };
    OfficeDocumentExtendedProperties.bq = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, OfficeDocumentExtendedProperties.ay);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.ch = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, OfficeDocumentExtendedProperties.ay, null, b);
    };
    OfficeDocumentExtendedProperties.br = function (a, b) {
        b = XmlNamespaceDefinitionBase.e(a, OfficeDocumentExtendedProperties.az);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.ci = function (a, b) {
        XmlNamespaceDefinitionBase.aa(a, OfficeDocumentExtendedProperties.az, null, b);
    };
    OfficeDocumentExtendedProperties.bs = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, OfficeDocumentExtendedProperties.a0);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.cj = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, OfficeDocumentExtendedProperties.a0, null, b);
    };
    OfficeDocumentExtendedProperties.bt = function (a, b) {
        b = XmlNamespaceDefinitionBase.e(a, OfficeDocumentExtendedProperties.a1);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.ck = function (a, b) {
        XmlNamespaceDefinitionBase.aa(a, OfficeDocumentExtendedProperties.a1, null, b);
    };
    OfficeDocumentExtendedProperties.bu = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, OfficeDocumentExtendedProperties.a2);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.cl = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, OfficeDocumentExtendedProperties.a2, null, b);
    };
    OfficeDocumentExtendedProperties.bv = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, OfficeDocumentExtendedProperties.a3);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.cm = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, OfficeDocumentExtendedProperties.a3, null, b);
    };
    OfficeDocumentExtendedProperties.bw = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, OfficeDocumentExtendedProperties.a6);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.cn = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, OfficeDocumentExtendedProperties.a6, null, b);
    };
    OfficeDocumentExtendedProperties.bx = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, OfficeDocumentExtendedProperties.a7);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.co = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, OfficeDocumentExtendedProperties.a7, null, b);
    };
    OfficeDocumentExtendedProperties.by = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, OfficeDocumentExtendedProperties.a8);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.cp = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, OfficeDocumentExtendedProperties.a8, null, b);
    };
    OfficeDocumentExtendedProperties.bz = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, OfficeDocumentExtendedProperties.a9);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.cq = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, OfficeDocumentExtendedProperties.a9, null, b);
    };
    OfficeDocumentExtendedProperties.b0 = function (a) {
    };
    OfficeDocumentExtendedProperties.cr = function (a) {
        a.ad.p(OfficeDocumentExtendedProperties.ba, null);
        var b = a.d._z;
        a.ad.l(OfficeDocumentExtendedProperties.ao);
        a.ad.l(OfficeDocumentDocPropsVTypes.ao);
    };
    OfficeDocumentExtendedProperties.b1 = function (a, b) {
        b = XmlNamespaceDefinitionBase.e(a, OfficeDocumentExtendedProperties.bb);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.cs = function (a, b) {
        XmlNamespaceDefinitionBase.aa(a, OfficeDocumentExtendedProperties.bb, null, b);
    };
    OfficeDocumentExtendedProperties.b2 = function (a, b) {
        b = XmlNamespaceDefinitionBase.e(a, OfficeDocumentExtendedProperties.bc);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.ct = function (a, b) {
        XmlNamespaceDefinitionBase.aa(a, OfficeDocumentExtendedProperties.bc, null, b);
    };
    OfficeDocumentExtendedProperties.b3 = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, OfficeDocumentExtendedProperties.bd);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.b8 = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, OfficeDocumentExtendedProperties.bd, null, b);
    };
    OfficeDocumentExtendedProperties.b4 = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, OfficeDocumentExtendedProperties.be);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.cu = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, OfficeDocumentExtendedProperties.be, null, b);
    };
    OfficeDocumentExtendedProperties.b5 = function (a) {
    };
    OfficeDocumentExtendedProperties.cv = function (a) {
        a.ad.p(OfficeDocumentExtendedProperties.bf, null);
    };
    OfficeDocumentExtendedProperties.b6 = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, OfficeDocumentExtendedProperties.bg);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.cw = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, OfficeDocumentExtendedProperties.bg, null, b);
    };
    OfficeDocumentExtendedProperties.b7 = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, OfficeDocumentExtendedProperties.bh);
        return {
            p1: b
        };
    };
    OfficeDocumentExtendedProperties.cx = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, OfficeDocumentExtendedProperties.bh, null, b);
    };
    OfficeDocumentExtendedProperties.$t = markType(OfficeDocumentExtendedProperties, 'OfficeDocumentExtendedProperties', XmlNamespaceDefinitionBase.$);
    OfficeDocumentExtendedProperties.a5 = "http://schemas.openxmlformats.org/officeDocument/2006/extended-properties";
    OfficeDocumentExtendedProperties.a4 = "http://purl.oclc.org/ooxml/officeDocument/extendedProperties";
    OfficeDocumentExtendedProperties.aq = OfficeDocumentExtendedProperties.a4 + "/Application";
    OfficeDocumentExtendedProperties.ar = OfficeDocumentExtendedProperties.a4 + "/AppVersion";
    OfficeDocumentExtendedProperties.as = OfficeDocumentExtendedProperties.a4 + "/Characters";
    OfficeDocumentExtendedProperties.at = OfficeDocumentExtendedProperties.a4 + "/CharactersWithSpaces";
    OfficeDocumentExtendedProperties.au = OfficeDocumentExtendedProperties.a4 + "/Company";
    OfficeDocumentExtendedProperties.av = OfficeDocumentExtendedProperties.a4 + "/DocSecurity";
    OfficeDocumentExtendedProperties.aw = OfficeDocumentExtendedProperties.a4 + "/HeadingPairs";
    OfficeDocumentExtendedProperties.ax = OfficeDocumentExtendedProperties.a4 + "/HiddenSlides";
    OfficeDocumentExtendedProperties.ay = OfficeDocumentExtendedProperties.a4 + "/HyperlinkBase";
    OfficeDocumentExtendedProperties.az = OfficeDocumentExtendedProperties.a4 + "/HyperlinksChanged";
    OfficeDocumentExtendedProperties.a0 = OfficeDocumentExtendedProperties.a4 + "/Lines";
    OfficeDocumentExtendedProperties.a1 = OfficeDocumentExtendedProperties.a4 + "/LinksUpToDate";
    OfficeDocumentExtendedProperties.a2 = OfficeDocumentExtendedProperties.a4 + "/Manager";
    OfficeDocumentExtendedProperties.a3 = OfficeDocumentExtendedProperties.a4 + "/MMClips";
    OfficeDocumentExtendedProperties.a6 = OfficeDocumentExtendedProperties.a4 + "/Notes";
    OfficeDocumentExtendedProperties.a7 = OfficeDocumentExtendedProperties.a4 + "/Pages";
    OfficeDocumentExtendedProperties.a8 = OfficeDocumentExtendedProperties.a4 + "/Paragraphs";
    OfficeDocumentExtendedProperties.ba = OfficeDocumentExtendedProperties.a4 + "/Properties";
    OfficeDocumentExtendedProperties.a9 = OfficeDocumentExtendedProperties.a4 + "/PresentationFormat";
    OfficeDocumentExtendedProperties.bb = OfficeDocumentExtendedProperties.a4 + "/ScaleCrop";
    OfficeDocumentExtendedProperties.bc = OfficeDocumentExtendedProperties.a4 + "/SharedDoc";
    OfficeDocumentExtendedProperties.bd = OfficeDocumentExtendedProperties.a4 + "/Slides";
    OfficeDocumentExtendedProperties.be = OfficeDocumentExtendedProperties.a4 + "/Template";
    OfficeDocumentExtendedProperties.bf = OfficeDocumentExtendedProperties.a4 + "/TitlesOfParts";
    OfficeDocumentExtendedProperties.bg = OfficeDocumentExtendedProperties.a4 + "/TotalTime";
    OfficeDocumentExtendedProperties.bh = OfficeDocumentExtendedProperties.a4 + "/Words";
    OfficeDocumentExtendedProperties.ao = new OfficeDocumentExtendedProperties();
    return OfficeDocumentExtendedProperties;
}(XmlNamespaceDefinitionBase));
export { OfficeDocumentExtendedProperties };
/**
 * @hidden
 */
var OfficeDocumentRelationships = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(OfficeDocumentRelationships, _super);
    function OfficeDocumentRelationships() {
        return _super.call(this) || this;
    }
    OfficeDocumentRelationships.prototype.s = function (a) {
        switch (a) {
            case 0: return OfficeDocumentRelationships.av;
            case 1: return OfficeDocumentRelationships.au;
            default: return OfficeDocumentRelationships.av;
        }
    };
    OfficeDocumentRelationships.prototype.get_t = function () {
        return "r";
    };
    Object.defineProperty(OfficeDocumentRelationships.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    OfficeDocumentRelationships.$t = markType(OfficeDocumentRelationships, 'OfficeDocumentRelationships', XmlNamespaceDefinitionBase.$);
    OfficeDocumentRelationships.av = "http://schemas.openxmlformats.org/officeDocument/2006/relationships";
    OfficeDocumentRelationships.au = "http://purl.oclc.org/ooxml/officeDocument/relationships";
    OfficeDocumentRelationships.aq = OfficeDocumentRelationships.au + "/embed";
    OfficeDocumentRelationships.ar = OfficeDocumentRelationships.au + "/href";
    OfficeDocumentRelationships.as = OfficeDocumentRelationships.au + "/id";
    OfficeDocumentRelationships.at = OfficeDocumentRelationships.au + "/link";
    OfficeDocumentRelationships.aw = OfficeDocumentRelationships.au + "/pict";
    OfficeDocumentRelationships.ao = new OfficeDocumentRelationships();
    return OfficeDocumentRelationships;
}(XmlNamespaceDefinitionBase));
export { OfficeDocumentRelationships };
/**
 * @hidden
 */
var OfficeNamespace = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(OfficeNamespace, _super);
    function OfficeNamespace() {
        return _super.call(this) || this;
    }
    OfficeNamespace.prototype.s = function (a) {
        switch (a) {
            case 0:
            case 1: return "urn:schemas-microsoft-com:office:office";
            default: return "urn:schemas-microsoft-com:office:office";
        }
    };
    OfficeNamespace.prototype.get_t = function () {
        return "o";
    };
    Object.defineProperty(OfficeNamespace.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    OfficeNamespace.ci = function (a, b, c) {
        var e_50, _0;
        b = toNullable(ST_Ext_$type, null);
        c = null;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var d = _2.value;
                switch (d.a.e(a.d)) {
                    case "urn:schemas-microsoft-com:vml/ext":
                        b = toNullable(ST_Ext_$type, XmlNamespaceDefinitionBase.b(ST_Ext_$type, d.d));
                        break;
                    case "data":
                        c = d.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_50_1) {
            e_50 = { error: e_50_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_50)
                    throw e_50.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    OfficeNamespace.cl = function (a, b, c) {
        if (b === void 0) {
            b = toNullable(ST_Ext_$type, null);
        }
        if (c === void 0) {
            c = null;
        }
        a.ad.p(OfficeNamespace.bs, "o");
        var d;
        if (nullableNotEquals(b, null)) {
            d = XmlNamespaceDefinitionBase.p(ST_Ext_$type, b.value);
            a.ad.h("urn:schemas-microsoft-com:vml/ext", d);
        }
        d = c;
        a.ad.h("data", d);
    };
    OfficeNamespace.cj = function (a, b, c, d, e, f, g, h, i, j, k, l, m) {
        var e_51, _0;
        b = toNullable(ST_Ext_$type, null);
        c = toNullable(Boolean_$type, null);
        d = toNullable(Boolean_$type, null);
        e = toNullable(Boolean_$type, null);
        f = toNullable(Boolean_$type, null);
        g = toNullable(Boolean_$type, null);
        h = toNullable(Boolean_$type, null);
        i = toNullable(Boolean_$type, null);
        j = toNullable(Boolean_$type, null);
        k = toNullable(Boolean_$type, null);
        l = toNullable(Boolean_$type, null);
        m = toNullable(Boolean_$type, null);
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var n = _2.value;
                switch (n.a.e(a.d)) {
                    case "urn:schemas-microsoft-com:vml/ext":
                        b = toNullable(ST_Ext_$type, XmlNamespaceDefinitionBase.b(ST_Ext_$type, n.d));
                        break;
                    case "position":
                        c = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(n.d)));
                        break;
                    case "selection":
                        d = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(n.d)));
                        break;
                    case "grouping":
                        e = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(n.d)));
                        break;
                    case "ungrouping":
                        f = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(n.d)));
                        break;
                    case "rotation":
                        g = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(n.d)));
                        break;
                    case "cropping":
                        h = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(n.d)));
                        break;
                    case "verticies":
                        i = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(n.d)));
                        break;
                    case "adjusthandles":
                        j = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(n.d)));
                        break;
                    case "text":
                        k = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(n.d)));
                        break;
                    case "aspectratio":
                        l = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(n.d)));
                        break;
                    case "shapetype":
                        m = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(n.d)));
                        break;
                    default: break;
                }
            }
        }
        catch (e_51_1) {
            e_51 = { error: e_51_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_51)
                    throw e_51.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m
        };
    };
    OfficeNamespace.cm = function (a, b, c, d, e, f, g, h, i, j, k, l, m) {
        if (b === void 0) {
            b = toNullable(ST_Ext_$type, null);
        }
        if (c === void 0) {
            c = toNullable(Boolean_$type, null);
        }
        if (d === void 0) {
            d = toNullable(Boolean_$type, null);
        }
        if (e === void 0) {
            e = toNullable(Boolean_$type, null);
        }
        if (f === void 0) {
            f = toNullable(Boolean_$type, null);
        }
        if (g === void 0) {
            g = toNullable(Boolean_$type, null);
        }
        if (h === void 0) {
            h = toNullable(Boolean_$type, null);
        }
        if (i === void 0) {
            i = toNullable(Boolean_$type, null);
        }
        if (j === void 0) {
            j = toNullable(Boolean_$type, null);
        }
        if (k === void 0) {
            k = toNullable(Boolean_$type, null);
        }
        if (l === void 0) {
            l = toNullable(Boolean_$type, null);
        }
        if (m === void 0) {
            m = toNullable(Boolean_$type, null);
        }
        a.ad.p(OfficeNamespace.ap, "o");
        var n;
        if (nullableNotEquals(b, null)) {
            n = XmlNamespaceDefinitionBase.p(ST_Ext_$type, b.value);
            a.ad.h("urn:schemas-microsoft-com:vml/ext", n);
        }
        if (nullableNotEquals(c, null)) {
            n = ST_TrueFalse.k(ST_TrueFalse.b(c.value));
            a.ad.h("position", n);
        }
        if (nullableNotEquals(d, null)) {
            n = ST_TrueFalse.k(ST_TrueFalse.b(d.value));
            a.ad.h("selection", n);
        }
        if (nullableNotEquals(e, null)) {
            n = ST_TrueFalse.k(ST_TrueFalse.b(e.value));
            a.ad.h("grouping", n);
        }
        if (nullableNotEquals(f, null)) {
            n = ST_TrueFalse.k(ST_TrueFalse.b(f.value));
            a.ad.h("ungrouping", n);
        }
        if (nullableNotEquals(g, null)) {
            n = ST_TrueFalse.k(ST_TrueFalse.b(g.value));
            a.ad.h("rotation", n);
        }
        if (nullableNotEquals(h, null)) {
            n = ST_TrueFalse.k(ST_TrueFalse.b(h.value));
            a.ad.h("cropping", n);
        }
        if (nullableNotEquals(i, null)) {
            n = ST_TrueFalse.k(ST_TrueFalse.b(i.value));
            a.ad.h("verticies", n);
        }
        if (nullableNotEquals(j, null)) {
            n = ST_TrueFalse.k(ST_TrueFalse.b(j.value));
            a.ad.h("adjusthandles", n);
        }
        if (nullableNotEquals(k, null)) {
            n = ST_TrueFalse.k(ST_TrueFalse.b(k.value));
            a.ad.h("text", n);
        }
        if (nullableNotEquals(l, null)) {
            n = ST_TrueFalse.k(ST_TrueFalse.b(l.value));
            a.ad.h("aspectratio", n);
        }
        if (nullableNotEquals(m, null)) {
            n = ST_TrueFalse.k(ST_TrueFalse.b(m.value));
            a.ad.h("shapetype", n);
        }
    };
    OfficeNamespace.ck = function (a, b) {
        var c = a.ao("urn:schemas-microsoft-com:vml/ext");
        if (c == null) {
            b = toNullable(ST_Ext_$type, null);
        }
        else {
            b = toNullable(ST_Ext_$type, XmlNamespaceDefinitionBase.b(ST_Ext_$type, c));
        }
        return {
            p1: b
        };
    };
    OfficeNamespace.cn = function (a, b) {
        if (b === void 0) {
            b = toNullable(ST_Ext_$type, null);
        }
        a.ad.p(OfficeNamespace.b7, "o");
        var c;
        if (nullableNotEquals(b, null)) {
            c = XmlNamespaceDefinitionBase.p(ST_Ext_$type, b.value);
            a.ad.h("urn:schemas-microsoft-com:vml/ext", c);
        }
    };
    OfficeNamespace.$t = markType(OfficeNamespace, 'OfficeNamespace', XmlNamespaceDefinitionBase.$);
    OfficeNamespace.bs = "urn:schemas-microsoft-com:office:office" + "/idmap";
    OfficeNamespace.ap = "urn:schemas-microsoft-com:office:office" + "/lock";
    OfficeNamespace.b7 = "urn:schemas-microsoft-com:office:office" + "/shapelayout";
    OfficeNamespace.as = "urn:schemas-microsoft-com:office:office" + "/allowincell";
    OfficeNamespace.au = "urn:schemas-microsoft-com:office:office" + "/althref";
    OfficeNamespace.at = "urn:schemas-microsoft-com:office:office" + "/allowoverlap";
    OfficeNamespace.a2 = "urn:schemas-microsoft-com:office:office" + "/bwmode";
    OfficeNamespace.a3 = "urn:schemas-microsoft-com:office:office" + "/bwnormal";
    OfficeNamespace.a4 = "urn:schemas-microsoft-com:office:office" + "/bwpure";
    OfficeNamespace.aw = "urn:schemas-microsoft-com:office:office" + "/borderbottomcolor";
    OfficeNamespace.ax = "urn:schemas-microsoft-com:office:office" + "/borderleftcolor";
    OfficeNamespace.ay = "urn:schemas-microsoft-com:office:office" + "/borderrightcolor";
    OfficeNamespace.az = "urn:schemas-microsoft-com:office:office" + "/bordertopcolor";
    OfficeNamespace.a0 = "urn:schemas-microsoft-com:office:office" + "/bullet";
    OfficeNamespace.a1 = "urn:schemas-microsoft-com:office:office" + "/button";
    OfficeNamespace.a5 = "urn:schemas-microsoft-com:office:office" + "/clip";
    OfficeNamespace.a6 = "urn:schemas-microsoft-com:office:office" + "/cliptowrap";
    OfficeNamespace.a7 = "urn:schemas-microsoft-com:office:office" + "/connectangles";
    OfficeNamespace.a8 = "urn:schemas-microsoft-com:office:office" + "/connectlocs";
    OfficeNamespace.a9 = "urn:schemas-microsoft-com:office:office" + "/connectortype";
    OfficeNamespace.ba = "urn:schemas-microsoft-com:office:office" + "/connecttype";
    OfficeNamespace.bd = "urn:schemas-microsoft-com:office:office" + "/detectmouseclick";
    OfficeNamespace.be = "urn:schemas-microsoft-com:office:office" + "/dgmlayout";
    OfficeNamespace.bf = "urn:schemas-microsoft-com:office:office" + "/dgmlayoutmru";
    OfficeNamespace.bg = "urn:schemas-microsoft-com:office:office" + "/dgmnodekind";
    OfficeNamespace.bh = "urn:schemas-microsoft-com:office:office" + "/doubleclicknotify";
    OfficeNamespace.bi = "urn:schemas-microsoft-com:office:office" + "/extrusionok";
    OfficeNamespace.bj = "urn:schemas-microsoft-com:office:office" + "/forcedash";
    OfficeNamespace.bk = "urn:schemas-microsoft-com:office:office" + "/gfxdata";
    OfficeNamespace.bm = "urn:schemas-microsoft-com:office:office" + "/hr";
    OfficeNamespace.bn = "urn:schemas-microsoft-com:office:office" + "/hralign";
    OfficeNamespace.bo = "urn:schemas-microsoft-com:office:office" + "/href";
    OfficeNamespace.bp = "urn:schemas-microsoft-com:office:office" + "/hrnoshade";
    OfficeNamespace.bq = "urn:schemas-microsoft-com:office:office" + "/hrpct";
    OfficeNamespace.br = "urn:schemas-microsoft-com:office:office" + "/hrstd";
    OfficeNamespace.bt = "urn:schemas-microsoft-com:office:office" + "/insetmode";
    OfficeNamespace.bu = "urn:schemas-microsoft-com:office:office" + "/movie";
    OfficeNamespace.bw = "urn:schemas-microsoft-com:office:office" + "/ole";
    OfficeNamespace.bx = "urn:schemas-microsoft-com:office:office" + "/oleicon";
    OfficeNamespace.by = "urn:schemas-microsoft-com:office:office" + "/oleid";
    OfficeNamespace.bz = "urn:schemas-microsoft-com:office:office" + "/oned";
    OfficeNamespace.b0 = "urn:schemas-microsoft-com:office:office" + "/opacity2";
    OfficeNamespace.b2 = "urn:schemas-microsoft-com:office:office" + "/preferrelative";
    OfficeNamespace.b3 = "urn:schemas-microsoft-com:office:office" + "/regroupid";
    OfficeNamespace.b4 = "urn:schemas-microsoft-com:office:office" + "/relid";
    OfficeNamespace.b9 = "urn:schemas-microsoft-com:office:office" + "/singleclick";
    OfficeNamespace.ca = "urn:schemas-microsoft-com:office:office" + "/spid";
    OfficeNamespace.cb = "urn:schemas-microsoft-com:office:office" + "/spt";
    OfficeNamespace.cd = "urn:schemas-microsoft-com:office:office" + "/title";
    OfficeNamespace.cf = "urn:schemas-microsoft-com:office:office" + "/userdrawn";
    OfficeNamespace.cg = "urn:schemas-microsoft-com:office:office" + "/userhidden";
    OfficeNamespace.ao = new OfficeNamespace();
    return OfficeNamespace;
}(XmlNamespaceDefinitionBase));
export { OfficeNamespace };
/**
 * @hidden
 */
var VmlNamespace = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(VmlNamespace, _super);
    function VmlNamespace() {
        return _super.call(this) || this;
    }
    VmlNamespace.prototype.s = function (a) {
        switch (a) {
            case 0:
            case 1: return "urn:schemas-microsoft-com:vml";
            default: return "urn:schemas-microsoft-com:vml";
        }
    };
    VmlNamespace.prototype.get_t = function () {
        return "v";
    };
    Object.defineProperty(VmlNamespace.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    VmlNamespace.dp = function (a, b, c) {
        var e_52, _0;
        b = toNullable(Number_$type, null);
        c = toNullable(Number_$type, null);
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var d = _2.value;
                switch (d.a.e(a.d)) {
                    case "startAngle":
                        b = toNullable(Number_$type, parseNumber(d.d, CultureInfo.invariantCulture));
                        break;
                    case "endAngle":
                        c = toNullable(Number_$type, parseNumber(d.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_52_1) {
            e_52 = { error: e_52_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_52)
                    throw e_52.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    VmlNamespace.dy = function (a, b, c) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        if (c === void 0) {
            c = toNullable(Number_$type, null);
        }
        a.ad.p("urn:schemas-microsoft-com:vml/arc", "v");
        var d;
        if (nullableNotEquals(b, null)) {
            d = numberToString(b.value, CultureInfo.invariantCulture);
            a.ad.h("startAngle", d);
        }
        if (nullableNotEquals(c, null)) {
            d = numberToString(c.value, CultureInfo.invariantCulture);
            a.ad.h("endAngle", d);
        }
    };
    VmlNamespace.dq = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, aa, ab) {
        var e_53, _0;
        b = null;
        c = toNullable(ST_FillType_$type, null);
        d = toNullable(Boolean_$type, null);
        e = null;
        f = null;
        g = null;
        h = null;
        i = null;
        j = null;
        k = null;
        l = null;
        m = null;
        n = toNullable(ST_ImageAspect_$type, null);
        o = null;
        p = toNullable(Number_$type, null);
        q = toNullable(Boolean_$type, null);
        r = null;
        s = null;
        t = null;
        u = toNullable(ST_FillMethod_$type, null);
        v = toNullable(Boolean_$type, null);
        w = null;
        x = null;
        y = toNullable(Boolean_$type, null);
        z = toNullable(Boolean_$type, null);
        aa = null;
        ab = null;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var ac = _2.value;
                switch (ac.a.e(a.d)) {
                    case "id":
                        b = ac.d;
                        break;
                    case "type":
                        c = toNullable(ST_FillType_$type, XmlNamespaceDefinitionBase.b(ST_FillType_$type, ac.d));
                        break;
                    case "on":
                        d = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(ac.d)));
                        break;
                    case "color":
                        e = ac.d;
                        break;
                    case "opacity":
                        f = ac.d;
                        break;
                    case "color2":
                        g = ac.d;
                        break;
                    case "src":
                        h = ac.d;
                        break;
                    case OfficeNamespace.bo:
                        i = ac.d;
                        break;
                    case OfficeNamespace.au:
                        j = ac.d;
                        break;
                    case "size":
                        k = ac.d;
                        break;
                    case "origin":
                        l = ac.d;
                        break;
                    case "position":
                        m = ac.d;
                        break;
                    case "aspect":
                        n = toNullable(ST_ImageAspect_$type, XmlNamespaceDefinitionBase.b(ST_ImageAspect_$type, ac.d));
                        break;
                    case "colors":
                        o = ac.d;
                        break;
                    case "angle":
                        p = toNullable(Number_$type, parseNumber(ac.d, CultureInfo.invariantCulture));
                        break;
                    case "alignshape":
                        q = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(ac.d)));
                        break;
                    case "focus":
                        r = ac.d;
                        break;
                    case "focussize":
                        s = ac.d;
                        break;
                    case "focusposition":
                        t = ac.d;
                        break;
                    case "method":
                        u = toNullable(ST_FillMethod_$type, XmlNamespaceDefinitionBase.b(ST_FillMethod_$type, ac.d));
                        break;
                    case OfficeNamespace.bd:
                        v = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(ac.d)));
                        break;
                    case OfficeNamespace.cd:
                        w = ac.d;
                        break;
                    case OfficeNamespace.b0:
                        x = ac.d;
                        break;
                    case "recolor":
                        y = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(ac.d)));
                        break;
                    case "rotate":
                        z = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(ac.d)));
                        break;
                    case OfficeDocumentRelationships.as:
                        aa = ac.d;
                        break;
                    case OfficeNamespace.b4:
                        ab = ac.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_53_1) {
            e_53 = { error: e_53_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_53)
                    throw e_53.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q,
            p17: r,
            p18: s,
            p19: t,
            p20: u,
            p21: v,
            p22: w,
            p23: x,
            p24: y,
            p25: z,
            p26: aa,
            p27: ab
        };
    };
    VmlNamespace.dz = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, aa, ab) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = toNullable(ST_FillType_$type, null);
        }
        if (d === void 0) {
            d = toNullable(Boolean_$type, null);
        }
        if (e === void 0) {
            e = null;
        }
        if (f === void 0) {
            f = null;
        }
        if (g === void 0) {
            g = null;
        }
        if (h === void 0) {
            h = null;
        }
        if (i === void 0) {
            i = null;
        }
        if (j === void 0) {
            j = null;
        }
        if (k === void 0) {
            k = null;
        }
        if (l === void 0) {
            l = null;
        }
        if (m === void 0) {
            m = null;
        }
        if (n === void 0) {
            n = toNullable(ST_ImageAspect_$type, null);
        }
        if (o === void 0) {
            o = null;
        }
        if (p === void 0) {
            p = toNullable(Number_$type, null);
        }
        if (q === void 0) {
            q = toNullable(Boolean_$type, null);
        }
        if (r === void 0) {
            r = null;
        }
        if (s === void 0) {
            s = null;
        }
        if (t === void 0) {
            t = null;
        }
        if (u === void 0) {
            u = toNullable(ST_FillMethod_$type, null);
        }
        if (v === void 0) {
            v = toNullable(Boolean_$type, null);
        }
        if (w === void 0) {
            w = null;
        }
        if (x === void 0) {
            x = null;
        }
        if (y === void 0) {
            y = toNullable(Boolean_$type, null);
        }
        if (z === void 0) {
            z = toNullable(Boolean_$type, null);
        }
        if (aa === void 0) {
            aa = null;
        }
        if (ab === void 0) {
            ab = null;
        }
        a.ad.p("urn:schemas-microsoft-com:vml/fill", "v");
        var ac;
        ac = b;
        a.ad.h("id", ac);
        if (nullableNotEquals(c, null)) {
            ac = XmlNamespaceDefinitionBase.p(ST_FillType_$type, c.value);
            a.ad.h("type", ac);
        }
        if (nullableNotEquals(d, null)) {
            ac = ST_TrueFalse.k(ST_TrueFalse.b(d.value));
            a.ad.h("on", ac);
        }
        ac = e;
        a.ad.h("color", ac);
        ac = f;
        a.ad.h("opacity", ac);
        ac = g;
        a.ad.h("color2", ac);
        ac = h;
        a.ad.h("src", ac);
        ac = i;
        a.ad.h(OfficeNamespace.bo, ac);
        ac = j;
        a.ad.h(OfficeNamespace.au, ac);
        ac = k;
        a.ad.h("size", ac);
        ac = l;
        a.ad.h("origin", ac);
        ac = m;
        a.ad.h("position", ac);
        if (nullableNotEquals(n, null)) {
            ac = XmlNamespaceDefinitionBase.p(ST_ImageAspect_$type, n.value);
            a.ad.h("aspect", ac);
        }
        ac = o;
        a.ad.h("colors", ac);
        if (nullableNotEquals(p, null)) {
            ac = numberToString(p.value, CultureInfo.invariantCulture);
            a.ad.h("angle", ac);
        }
        if (nullableNotEquals(q, null)) {
            ac = ST_TrueFalse.k(ST_TrueFalse.b(q.value));
            a.ad.h("alignshape", ac);
        }
        ac = r;
        a.ad.h("focus", ac);
        ac = s;
        a.ad.h("focussize", ac);
        ac = t;
        a.ad.h("focusposition", ac);
        if (nullableNotEquals(u, null)) {
            ac = XmlNamespaceDefinitionBase.p(ST_FillMethod_$type, u.value);
            a.ad.h("method", ac);
        }
        if (nullableNotEquals(v, null)) {
            ac = ST_TrueFalse.k(ST_TrueFalse.b(v.value));
            a.ad.h(OfficeNamespace.bd, ac);
        }
        ac = w;
        a.ad.h(OfficeNamespace.cd, ac);
        ac = x;
        a.ad.h(OfficeNamespace.b0, ac);
        if (nullableNotEquals(y, null)) {
            ac = ST_TrueFalse.k(ST_TrueFalse.b(y.value));
            a.ad.h("recolor", ac);
        }
        if (nullableNotEquals(z, null)) {
            ac = ST_TrueFalse.k(ST_TrueFalse.b(z.value));
            a.ad.h("rotate", ac);
        }
        ac = aa;
        a.ad.h(OfficeDocumentRelationships.as, ac);
        ac = ab;
        a.ad.h(OfficeNamespace.b4, ac);
    };
    VmlNamespace.dr = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y) {
        var e_54, _0;
        b = null;
        c = null;
        d = null;
        e = null;
        f = null;
        g = null;
        h = null;
        i = null;
        j = null;
        k = toNullable(Boolean_$type, null);
        l = toNullable(Boolean_$type, null);
        m = null;
        n = null;
        o = null;
        p = null;
        q = null;
        r = null;
        s = toNullable(Number_$type, null);
        t = toNullable(Boolean_$type, null);
        u = toNullable(Number_$type, null);
        v = null;
        w = null;
        x = null;
        y = null;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var z = _2.value;
                switch (z.a.e(a.d)) {
                    case "id":
                        b = z.d;
                        break;
                    case "src":
                        c = z.d;
                        break;
                    case "cropleft":
                        d = z.d;
                        break;
                    case "croptop":
                        e = z.d;
                        break;
                    case "cropright":
                        f = z.d;
                        break;
                    case "cropbottom":
                        g = z.d;
                        break;
                    case "gain":
                        h = z.d;
                        break;
                    case "blacklevel":
                        i = z.d;
                        break;
                    case "gamma":
                        j = z.d;
                        break;
                    case "grayscale":
                        k = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(z.d)));
                        break;
                    case "bilevel":
                        l = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(z.d)));
                        break;
                    case "chromakey":
                        m = z.d;
                        break;
                    case "embosscolor":
                        n = z.d;
                        break;
                    case "recolortarget":
                        o = z.d;
                        break;
                    case OfficeNamespace.bo:
                        p = z.d;
                        break;
                    case OfficeNamespace.au:
                        q = z.d;
                        break;
                    case OfficeNamespace.cd:
                        r = z.d;
                        break;
                    case OfficeNamespace.by:
                        s = toNullable(Number_$type, parseNumber(z.d, CultureInfo.invariantCulture));
                        break;
                    case OfficeNamespace.bd:
                        t = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(z.d)));
                        break;
                    case OfficeNamespace.bu:
                        u = toNullable(Number_$type, parseNumber(z.d, CultureInfo.invariantCulture));
                        break;
                    case OfficeNamespace.b4:
                        v = z.d;
                        break;
                    case OfficeDocumentRelationships.as:
                        w = z.d;
                        break;
                    case OfficeDocumentRelationships.aw:
                        x = z.d;
                        break;
                    case OfficeDocumentRelationships.ar:
                        y = z.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_54_1) {
            e_54 = { error: e_54_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_54)
                    throw e_54.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q,
            p17: r,
            p18: s,
            p19: t,
            p20: u,
            p21: v,
            p22: w,
            p23: x,
            p24: y
        };
    };
    VmlNamespace.d0 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = null;
        }
        if (f === void 0) {
            f = null;
        }
        if (g === void 0) {
            g = null;
        }
        if (h === void 0) {
            h = null;
        }
        if (i === void 0) {
            i = null;
        }
        if (j === void 0) {
            j = null;
        }
        if (k === void 0) {
            k = toNullable(Boolean_$type, null);
        }
        if (l === void 0) {
            l = toNullable(Boolean_$type, null);
        }
        if (m === void 0) {
            m = null;
        }
        if (n === void 0) {
            n = null;
        }
        if (o === void 0) {
            o = null;
        }
        if (p === void 0) {
            p = null;
        }
        if (q === void 0) {
            q = null;
        }
        if (r === void 0) {
            r = null;
        }
        if (s === void 0) {
            s = toNullable(Number_$type, null);
        }
        if (t === void 0) {
            t = toNullable(Boolean_$type, null);
        }
        if (u === void 0) {
            u = toNullable(Number_$type, null);
        }
        if (v === void 0) {
            v = null;
        }
        if (w === void 0) {
            w = null;
        }
        if (x === void 0) {
            x = null;
        }
        if (y === void 0) {
            y = null;
        }
        a.ad.p("urn:schemas-microsoft-com:vml/imagedata", "v");
        var z;
        z = b;
        a.ad.h("id", z);
        z = c;
        a.ad.h("src", z);
        z = d;
        a.ad.h("cropleft", z);
        z = e;
        a.ad.h("croptop", z);
        z = f;
        a.ad.h("cropright", z);
        z = g;
        a.ad.h("cropbottom", z);
        z = h;
        a.ad.h("gain", z);
        z = i;
        a.ad.h("blacklevel", z);
        z = j;
        a.ad.h("gamma", z);
        if (nullableNotEquals(k, null)) {
            z = ST_TrueFalse.k(ST_TrueFalse.b(k.value));
            a.ad.h("grayscale", z);
        }
        if (nullableNotEquals(l, null)) {
            z = ST_TrueFalse.k(ST_TrueFalse.b(l.value));
            a.ad.h("bilevel", z);
        }
        z = m;
        a.ad.h("chromakey", z);
        z = n;
        a.ad.h("embosscolor", z);
        z = o;
        a.ad.h("recolortarget", z);
        z = p;
        a.ad.h(OfficeNamespace.bo, z);
        z = q;
        a.ad.h(OfficeNamespace.au, z);
        z = r;
        a.ad.h(OfficeNamespace.cd, z);
        if (nullableNotEquals(s, null)) {
            z = numberToString(s.value, CultureInfo.invariantCulture);
            a.ad.h(OfficeNamespace.by, z);
        }
        if (nullableNotEquals(t, null)) {
            z = ST_TrueFalse.k(ST_TrueFalse.b(t.value));
            a.ad.h(OfficeNamespace.bd, z);
        }
        if (nullableNotEquals(u, null)) {
            z = numberToString(u.value, CultureInfo.invariantCulture);
            a.ad.h(OfficeNamespace.bu, z);
        }
        z = v;
        a.ad.h(OfficeNamespace.b4, z);
        z = w;
        a.ad.h(OfficeDocumentRelationships.as, z);
        z = x;
        a.ad.h(OfficeDocumentRelationships.aw, z);
        z = y;
        a.ad.h(OfficeDocumentRelationships.ar, z);
    };
    VmlNamespace.ds = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
        var e_55, _0;
        b = null;
        c = null;
        d = null;
        e = null;
        f = toNullable(Boolean_$type, null);
        g = toNullable(Boolean_$type, null);
        h = toNullable(Boolean_$type, null);
        i = toNullable(Boolean_$type, null);
        j = toNullable(Boolean_$type, null);
        k = toNullable(Boolean_$type, null);
        l = toNullable(Boolean_$type, null);
        m = toNullable(ST_ConnectType_$type, null);
        n = null;
        o = null;
        p = toNullable(Boolean_$type, null);
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var q = _2.value;
                switch (q.a.e(a.d)) {
                    case "id":
                        b = q.d;
                        break;
                    case "v":
                        c = q.d;
                        break;
                    case "limo":
                        d = q.d;
                        break;
                    case "textboxrect":
                        e = q.d;
                        break;
                    case "fillok":
                        f = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(q.d)));
                        break;
                    case "strokeok":
                        g = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(q.d)));
                        break;
                    case "shadowok":
                        h = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(q.d)));
                        break;
                    case "arrowok":
                        i = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(q.d)));
                        break;
                    case "gradientshapeok":
                        j = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(q.d)));
                        break;
                    case "textpathok":
                        k = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(q.d)));
                        break;
                    case "insetpenok":
                        l = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(q.d)));
                        break;
                    case OfficeNamespace.ba:
                        m = toNullable(ST_ConnectType_$type, XmlNamespaceDefinitionBase.b(ST_ConnectType_$type, q.d));
                        break;
                    case OfficeNamespace.a8:
                        n = q.d;
                        break;
                    case OfficeNamespace.a7:
                        o = q.d;
                        break;
                    case OfficeNamespace.bi:
                        p = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(q.d)));
                        break;
                    default: break;
                }
            }
        }
        catch (e_55_1) {
            e_55 = { error: e_55_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_55)
                    throw e_55.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p
        };
    };
    VmlNamespace.d1 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = null;
        }
        if (f === void 0) {
            f = toNullable(Boolean_$type, null);
        }
        if (g === void 0) {
            g = toNullable(Boolean_$type, null);
        }
        if (h === void 0) {
            h = toNullable(Boolean_$type, null);
        }
        if (i === void 0) {
            i = toNullable(Boolean_$type, null);
        }
        if (j === void 0) {
            j = toNullable(Boolean_$type, null);
        }
        if (k === void 0) {
            k = toNullable(Boolean_$type, null);
        }
        if (l === void 0) {
            l = toNullable(Boolean_$type, null);
        }
        if (m === void 0) {
            m = toNullable(ST_ConnectType_$type, null);
        }
        if (n === void 0) {
            n = null;
        }
        if (o === void 0) {
            o = null;
        }
        if (p === void 0) {
            p = toNullable(Boolean_$type, null);
        }
        a.ad.p("urn:schemas-microsoft-com:vml/path", "v");
        var q;
        q = b;
        a.ad.h("id", q);
        q = c;
        a.ad.h("v", q);
        q = d;
        a.ad.h("limo", q);
        q = e;
        a.ad.h("textboxrect", q);
        if (nullableNotEquals(f, null)) {
            q = ST_TrueFalse.k(ST_TrueFalse.b(f.value));
            a.ad.h("fillok", q);
        }
        if (nullableNotEquals(g, null)) {
            q = ST_TrueFalse.k(ST_TrueFalse.b(g.value));
            a.ad.h("strokeok", q);
        }
        if (nullableNotEquals(h, null)) {
            q = ST_TrueFalse.k(ST_TrueFalse.b(h.value));
            a.ad.h("shadowok", q);
        }
        if (nullableNotEquals(i, null)) {
            q = ST_TrueFalse.k(ST_TrueFalse.b(i.value));
            a.ad.h("arrowok", q);
        }
        if (nullableNotEquals(j, null)) {
            q = ST_TrueFalse.k(ST_TrueFalse.b(j.value));
            a.ad.h("gradientshapeok", q);
        }
        if (nullableNotEquals(k, null)) {
            q = ST_TrueFalse.k(ST_TrueFalse.b(k.value));
            a.ad.h("textpathok", q);
        }
        if (nullableNotEquals(l, null)) {
            q = ST_TrueFalse.k(ST_TrueFalse.b(l.value));
            a.ad.h("insetpenok", q);
        }
        if (nullableNotEquals(m, null)) {
            q = XmlNamespaceDefinitionBase.p(ST_ConnectType_$type, m.value);
            a.ad.h(OfficeNamespace.ba, q);
        }
        q = n;
        a.ad.h(OfficeNamespace.a8, q);
        q = o;
        a.ad.h(OfficeNamespace.a7, q);
        if (nullableNotEquals(p, null)) {
            q = ST_TrueFalse.k(ST_TrueFalse.b(p.value));
            a.ad.h(OfficeNamespace.bi, q);
        }
    };
    VmlNamespace.dt = function (a, b, c, d, e, f, g, h, i, j, k, l) {
        var e_56, _0;
        b = null;
        c = toNullable(Boolean_$type, null);
        d = toNullable(ST_ShadowType_$type, null);
        e = toNullable(Boolean_$type, null);
        f = null;
        g = null;
        h = null;
        i = null;
        j = null;
        k = null;
        l = null;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var m = _2.value;
                switch (m.a.e(a.d)) {
                    case "id":
                        b = m.d;
                        break;
                    case "on":
                        c = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(m.d)));
                        break;
                    case "type":
                        d = toNullable(ST_ShadowType_$type, XmlNamespaceDefinitionBase.b(ST_ShadowType_$type, m.d));
                        break;
                    case "obscured":
                        e = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(m.d)));
                        break;
                    case "color":
                        f = m.d;
                        break;
                    case "opacity":
                        g = m.d;
                        break;
                    case "offset":
                        h = m.d;
                        break;
                    case "color2":
                        i = m.d;
                        break;
                    case "offset2":
                        j = m.d;
                        break;
                    case "origin":
                        k = m.d;
                        break;
                    case "matrix":
                        l = m.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_56_1) {
            e_56 = { error: e_56_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_56)
                    throw e_56.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l
        };
    };
    VmlNamespace.d2 = function (a, b, c, d, e, f, g, h, i, j, k, l) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = toNullable(Boolean_$type, null);
        }
        if (d === void 0) {
            d = toNullable(ST_ShadowType_$type, null);
        }
        if (e === void 0) {
            e = toNullable(Boolean_$type, null);
        }
        if (f === void 0) {
            f = null;
        }
        if (g === void 0) {
            g = null;
        }
        if (h === void 0) {
            h = null;
        }
        if (i === void 0) {
            i = null;
        }
        if (j === void 0) {
            j = null;
        }
        if (k === void 0) {
            k = null;
        }
        if (l === void 0) {
            l = null;
        }
        a.ad.p("urn:schemas-microsoft-com:vml/shadow", "v");
        var m;
        m = b;
        a.ad.h("id", m);
        if (nullableNotEquals(c, null)) {
            m = ST_TrueFalse.k(ST_TrueFalse.b(c.value));
            a.ad.h("on", m);
        }
        if (nullableNotEquals(d, null)) {
            m = XmlNamespaceDefinitionBase.p(ST_ShadowType_$type, d.value);
            a.ad.h("type", m);
        }
        if (nullableNotEquals(e, null)) {
            m = ST_TrueFalse.k(ST_TrueFalse.b(e.value));
            a.ad.h("obscured", m);
        }
        m = f;
        a.ad.h("color", m);
        m = g;
        a.ad.h("opacity", m);
        m = h;
        a.ad.h("offset", m);
        m = i;
        a.ad.h("color2", m);
        m = j;
        a.ad.h("offset2", m);
        m = k;
        a.ad.h("origin", m);
        m = l;
        a.ad.h("matrix", m);
    };
    VmlNamespace.du = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, an, ao, ap, aq, ar, as, at, au, av, aw, ax, ay, az, a0, a1, a2, a3, a4, a5, a6) {
        var e_57, _0;
        b = null;
        c = null;
        d = null;
        e = null;
        f = null;
        g = null;
        h = null;
        i = null;
        j = null;
        k = null;
        l = toNullable(Boolean_$type, null);
        m = null;
        n = toNullable(Boolean_$type, null);
        o = null;
        p = toNullable(Boolean_$type, null);
        q = toNullable(Boolean_$type, null);
        r = toNullable(Boolean_$type, null);
        s = toNullable(Boolean_$type, null);
        t = toNullable(Boolean_$type, null);
        u = toNullable(Boolean_$type, null);
        v = toNullable(Boolean_$type, null);
        w = toNullable(Number_$type, null);
        x = toNullable(ST_HrAlign_$type, null);
        y = toNullable(Boolean_$type, null);
        z = toNullable(Boolean_$type, null);
        aa = toNullable(Boolean_$type, null);
        ab = null;
        ac = null;
        ad = null;
        ae = null;
        af = null;
        ag = null;
        ah = null;
        ai = toNullable(ST_InsetMode_$type, null);
        aj = null;
        ak = toNullable(Boolean_$type, null);
        al = null;
        am = null;
        an = toNullable(Boolean_$type, null);
        ao = null;
        ap = null;
        aq = toNullable(Boolean_$type, null);
        ar = toNullable(Number_$type, null);
        as = toNullable(ST_ConnectorType_$type, null);
        at = toNullable(ST_BWMode_$type, null);
        au = toNullable(ST_BWMode_$type, null);
        av = toNullable(ST_BWMode_$type, null);
        aw = toNullable(Boolean_$type, null);
        ax = toNullable(Boolean_$type, null);
        ay = toNullable(Boolean_$type, null);
        az = toNullable(Boolean_$type, null);
        a0 = toNullable(Boolean_$type, null);
        a1 = toNullable(Boolean_$type, null);
        a2 = null;
        a3 = null;
        a4 = null;
        a5 = null;
        a6 = null;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var a7 = _2.value;
                switch (a7.a.e(a.d)) {
                    case "id":
                        b = a7.d;
                        break;
                    case "style":
                        c = a7.d;
                        break;
                    case "href":
                        d = a7.d;
                        break;
                    case "target":
                        e = a7.d;
                        break;
                    case "class":
                        f = a7.d;
                        break;
                    case "title":
                        g = a7.d;
                        break;
                    case "alt":
                        h = a7.d;
                        break;
                    case "coordsize":
                        i = a7.d;
                        break;
                    case "coordorigin":
                        j = a7.d;
                        break;
                    case "wrapcoords":
                        k = a7.d;
                        break;
                    case "print":
                        l = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case OfficeNamespace.ca:
                        m = a7.d;
                        break;
                    case OfficeNamespace.bz:
                        n = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case OfficeNamespace.b3:
                        o = a7.d;
                        break;
                    case OfficeNamespace.bh:
                        p = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case OfficeNamespace.a1:
                        q = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case OfficeNamespace.cg:
                        r = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case OfficeNamespace.a0:
                        s = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case OfficeNamespace.bm:
                        t = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case OfficeNamespace.br:
                        u = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case OfficeNamespace.bp:
                        v = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case OfficeNamespace.bq:
                        w = toNullable(Number_$type, parseNumber(a7.d, CultureInfo.invariantCulture));
                        break;
                    case OfficeNamespace.bn:
                        x = toNullable(ST_HrAlign_$type, XmlNamespaceDefinitionBase.b(ST_HrAlign_$type, a7.d));
                        break;
                    case OfficeNamespace.as:
                        y = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case OfficeNamespace.at:
                        z = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case OfficeNamespace.cf:
                        aa = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case "bordertopcolor":
                        ab = a7.d;
                        break;
                    case "borderleftcolor":
                        ac = a7.d;
                        break;
                    case "borderbottomcolor":
                        ad = a7.d;
                        break;
                    case "borderrightcolor":
                        ae = a7.d;
                        break;
                    case OfficeNamespace.be:
                        af = a7.d;
                        break;
                    case OfficeNamespace.bg:
                        ag = a7.d;
                        break;
                    case OfficeNamespace.bf:
                        ah = a7.d;
                        break;
                    case OfficeNamespace.bt:
                        ai = toNullable(ST_InsetMode_$type, XmlNamespaceDefinitionBase.b(ST_InsetMode_$type, a7.d));
                        break;
                    case "chromakey":
                        aj = a7.d;
                        break;
                    case "filled":
                        ak = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case "fillcolor":
                        al = a7.d;
                        break;
                    case "opacity":
                        am = a7.d;
                        break;
                    case "stroked":
                        an = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case "strokecolor":
                        ao = a7.d;
                        break;
                    case "strokeweight":
                        ap = a7.d;
                        break;
                    case "insetpen":
                        aq = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case OfficeNamespace.cb:
                        ar = toNullable(Number_$type, parseNumber(a7.d, CultureInfo.invariantCulture));
                        break;
                    case OfficeNamespace.a9:
                        as = toNullable(ST_ConnectorType_$type, XmlNamespaceDefinitionBase.b(ST_ConnectorType_$type, a7.d));
                        break;
                    case "bwmode":
                        at = toNullable(ST_BWMode_$type, XmlNamespaceDefinitionBase.b(ST_BWMode_$type, a7.d));
                        break;
                    case "bwpure":
                        au = toNullable(ST_BWMode_$type, XmlNamespaceDefinitionBase.b(ST_BWMode_$type, a7.d));
                        break;
                    case "bwnormal":
                        av = toNullable(ST_BWMode_$type, XmlNamespaceDefinitionBase.b(ST_BWMode_$type, a7.d));
                        break;
                    case OfficeNamespace.bj:
                        aw = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case OfficeNamespace.bx:
                        ax = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case OfficeNamespace.bw:
                        ay = toNullable(Boolean_$type, ST_TrueFalseBlank.d(a7.d));
                        break;
                    case OfficeNamespace.b2:
                        az = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case OfficeNamespace.a6:
                        a0 = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case OfficeNamespace.a5:
                        a1 = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a7.d)));
                        break;
                    case "type":
                        a2 = a7.d;
                        break;
                    case "adj":
                        a3 = a7.d;
                        break;
                    case "path":
                        a4 = a7.d;
                        break;
                    case "gfxdata":
                        a5 = a7.d;
                        break;
                    case "equationxml":
                        a6 = a7.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_57_1) {
            e_57 = { error: e_57_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_57)
                    throw e_57.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q,
            p17: r,
            p18: s,
            p19: t,
            p20: u,
            p21: v,
            p22: w,
            p23: x,
            p24: y,
            p25: z,
            p26: aa,
            p27: ab,
            p28: ac,
            p29: ad,
            p30: ae,
            p31: af,
            p32: ag,
            p33: ah,
            p34: ai,
            p35: aj,
            p36: ak,
            p37: al,
            p38: am,
            p39: an,
            p40: ao,
            p41: ap,
            p42: aq,
            p43: ar,
            p44: as,
            p45: at,
            p46: au,
            p47: av,
            p48: aw,
            p49: ax,
            p50: ay,
            p51: az,
            p52: a0,
            p53: a1,
            p54: a2,
            p55: a3,
            p56: a4,
            p57: a5,
            p58: a6
        };
    };
    VmlNamespace.d3 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, an, ao, ap, aq, ar, as, at, au, av, aw, ax, ay, az, a0, a1, a2, a3, a4, a5, a6) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = null;
        }
        if (f === void 0) {
            f = null;
        }
        if (g === void 0) {
            g = null;
        }
        if (h === void 0) {
            h = null;
        }
        if (i === void 0) {
            i = null;
        }
        if (j === void 0) {
            j = null;
        }
        if (k === void 0) {
            k = null;
        }
        if (l === void 0) {
            l = toNullable(Boolean_$type, null);
        }
        if (m === void 0) {
            m = null;
        }
        if (n === void 0) {
            n = toNullable(Boolean_$type, null);
        }
        if (o === void 0) {
            o = null;
        }
        if (p === void 0) {
            p = toNullable(Boolean_$type, null);
        }
        if (q === void 0) {
            q = toNullable(Boolean_$type, null);
        }
        if (r === void 0) {
            r = toNullable(Boolean_$type, null);
        }
        if (s === void 0) {
            s = toNullable(Boolean_$type, null);
        }
        if (t === void 0) {
            t = toNullable(Boolean_$type, null);
        }
        if (u === void 0) {
            u = toNullable(Boolean_$type, null);
        }
        if (v === void 0) {
            v = toNullable(Boolean_$type, null);
        }
        if (w === void 0) {
            w = toNullable(Number_$type, null);
        }
        if (x === void 0) {
            x = toNullable(ST_HrAlign_$type, null);
        }
        if (y === void 0) {
            y = toNullable(Boolean_$type, null);
        }
        if (z === void 0) {
            z = toNullable(Boolean_$type, null);
        }
        if (aa === void 0) {
            aa = toNullable(Boolean_$type, null);
        }
        if (ab === void 0) {
            ab = null;
        }
        if (ac === void 0) {
            ac = null;
        }
        if (ad === void 0) {
            ad = null;
        }
        if (ae === void 0) {
            ae = null;
        }
        if (af === void 0) {
            af = null;
        }
        if (ag === void 0) {
            ag = null;
        }
        if (ah === void 0) {
            ah = null;
        }
        if (ai === void 0) {
            ai = toNullable(ST_InsetMode_$type, null);
        }
        if (aj === void 0) {
            aj = null;
        }
        if (ak === void 0) {
            ak = toNullable(Boolean_$type, null);
        }
        if (al === void 0) {
            al = null;
        }
        if (am === void 0) {
            am = null;
        }
        if (an === void 0) {
            an = toNullable(Boolean_$type, null);
        }
        if (ao === void 0) {
            ao = null;
        }
        if (ap === void 0) {
            ap = null;
        }
        if (aq === void 0) {
            aq = toNullable(Boolean_$type, null);
        }
        if (ar === void 0) {
            ar = toNullable(Number_$type, null);
        }
        if (as === void 0) {
            as = toNullable(ST_ConnectorType_$type, null);
        }
        if (at === void 0) {
            at = toNullable(ST_BWMode_$type, null);
        }
        if (au === void 0) {
            au = toNullable(ST_BWMode_$type, null);
        }
        if (av === void 0) {
            av = toNullable(ST_BWMode_$type, null);
        }
        if (aw === void 0) {
            aw = toNullable(Boolean_$type, null);
        }
        if (ax === void 0) {
            ax = toNullable(Boolean_$type, null);
        }
        if (ay === void 0) {
            ay = toNullable(Boolean_$type, null);
        }
        if (az === void 0) {
            az = toNullable(Boolean_$type, null);
        }
        if (a0 === void 0) {
            a0 = toNullable(Boolean_$type, null);
        }
        if (a1 === void 0) {
            a1 = toNullable(Boolean_$type, null);
        }
        if (a2 === void 0) {
            a2 = null;
        }
        if (a3 === void 0) {
            a3 = null;
        }
        if (a4 === void 0) {
            a4 = null;
        }
        if (a5 === void 0) {
            a5 = null;
        }
        if (a6 === void 0) {
            a6 = null;
        }
        a.ad.p("urn:schemas-microsoft-com:vml/shape", "v");
        var a7;
        a7 = b;
        a.ad.h("id", a7);
        a7 = c;
        a.ad.h("style", a7);
        a7 = d;
        a.ad.h("href", a7);
        a7 = e;
        a.ad.h("target", a7);
        a7 = f;
        a.ad.h("class", a7);
        a7 = g;
        a.ad.h("title", a7);
        a7 = h;
        a.ad.h("alt", a7);
        a7 = i;
        a.ad.h("coordsize", a7);
        a7 = j;
        a.ad.h("coordorigin", a7);
        a7 = k;
        a.ad.h("wrapcoords", a7);
        if (nullableNotEquals(l, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(l.value));
            a.ad.h("print", a7);
        }
        a7 = m;
        a.ad.h(OfficeNamespace.ca, a7);
        if (nullableNotEquals(n, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(n.value));
            a.ad.h(OfficeNamespace.bz, a7);
        }
        a7 = o;
        a.ad.h(OfficeNamespace.b3, a7);
        if (nullableNotEquals(p, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(p.value));
            a.ad.h(OfficeNamespace.bh, a7);
        }
        if (nullableNotEquals(q, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(q.value));
            a.ad.h(OfficeNamespace.a1, a7);
        }
        if (nullableNotEquals(r, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(r.value));
            a.ad.h(OfficeNamespace.cg, a7);
        }
        if (nullableNotEquals(s, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(s.value));
            a.ad.h(OfficeNamespace.a0, a7);
        }
        if (nullableNotEquals(t, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(t.value));
            a.ad.h(OfficeNamespace.bm, a7);
        }
        if (nullableNotEquals(u, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(u.value));
            a.ad.h(OfficeNamespace.br, a7);
        }
        if (nullableNotEquals(v, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(v.value));
            a.ad.h(OfficeNamespace.bp, a7);
        }
        if (nullableNotEquals(w, null)) {
            a7 = numberToString(w.value, CultureInfo.invariantCulture);
            a.ad.h(OfficeNamespace.bq, a7);
        }
        if (nullableNotEquals(x, null)) {
            a7 = XmlNamespaceDefinitionBase.p(ST_HrAlign_$type, x.value);
            a.ad.h(OfficeNamespace.bn, a7);
        }
        if (nullableNotEquals(y, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(y.value));
            a.ad.h(OfficeNamespace.as, a7);
        }
        if (nullableNotEquals(z, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(z.value));
            a.ad.h(OfficeNamespace.at, a7);
        }
        if (nullableNotEquals(aa, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(aa.value));
            a.ad.h(OfficeNamespace.cf, a7);
        }
        a7 = ab;
        a.ad.h("bordertopcolor", a7);
        a7 = ac;
        a.ad.h("borderleftcolor", a7);
        a7 = ad;
        a.ad.h("borderbottomcolor", a7);
        a7 = ae;
        a.ad.h("borderrightcolor", a7);
        a7 = af;
        a.ad.h(OfficeNamespace.be, a7);
        a7 = ag;
        a.ad.h(OfficeNamespace.bg, a7);
        a7 = ah;
        a.ad.h(OfficeNamespace.bf, a7);
        if (nullableNotEquals(ai, null)) {
            a7 = XmlNamespaceDefinitionBase.p(ST_InsetMode_$type, ai.value);
            a.ad.h(OfficeNamespace.bt, a7);
        }
        a7 = aj;
        a.ad.h("chromakey", a7);
        if (nullableNotEquals(ak, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(ak.value));
            a.ad.h("filled", a7);
        }
        a7 = al;
        a.ad.h("fillcolor", a7);
        a7 = am;
        a.ad.h("opacity", a7);
        if (nullableNotEquals(an, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(an.value));
            a.ad.h("stroked", a7);
        }
        a7 = ao;
        a.ad.h("strokecolor", a7);
        a7 = ap;
        a.ad.h("strokeweight", a7);
        if (nullableNotEquals(aq, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(aq.value));
            a.ad.h("insetpen", a7);
        }
        if (nullableNotEquals(ar, null)) {
            a7 = numberToString(ar.value, CultureInfo.invariantCulture);
            a.ad.h(OfficeNamespace.cb, a7);
        }
        if (nullableNotEquals(as, null)) {
            a7 = XmlNamespaceDefinitionBase.p(ST_ConnectorType_$type, as.value);
            a.ad.h(OfficeNamespace.a9, a7);
        }
        if (nullableNotEquals(at, null)) {
            a7 = XmlNamespaceDefinitionBase.p(ST_BWMode_$type, at.value);
            a.ad.h("bwmode", a7);
        }
        if (nullableNotEquals(au, null)) {
            a7 = XmlNamespaceDefinitionBase.p(ST_BWMode_$type, au.value);
            a.ad.h("bwpure", a7);
        }
        if (nullableNotEquals(av, null)) {
            a7 = XmlNamespaceDefinitionBase.p(ST_BWMode_$type, av.value);
            a.ad.h("bwnormal", a7);
        }
        if (nullableNotEquals(aw, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(aw.value));
            a.ad.h(OfficeNamespace.bj, a7);
        }
        if (nullableNotEquals(ax, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(ax.value));
            a.ad.h(OfficeNamespace.bx, a7);
        }
        if (nullableNotEquals(ay, null)) {
            a7 = ST_TrueFalseBlank.f(ay.value);
            a.ad.h(OfficeNamespace.bw, a7);
        }
        if (nullableNotEquals(az, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(az.value));
            a.ad.h(OfficeNamespace.b2, a7);
        }
        if (nullableNotEquals(a0, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(a0.value));
            a.ad.h(OfficeNamespace.a6, a7);
        }
        if (nullableNotEquals(a1, null)) {
            a7 = ST_TrueFalse.k(ST_TrueFalse.b(a1.value));
            a.ad.h(OfficeNamespace.a5, a7);
        }
        a7 = a2;
        a.ad.h("type", a7);
        a7 = a3;
        a.ad.h("adj", a7);
        a7 = a4;
        a.ad.h("path", a7);
        a7 = a5;
        a.ad.h("gfxdata", a7);
        a7 = a6;
        a.ad.h("equationxml", a7);
    };
    VmlNamespace.dv = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, an, ao, ap, aq, ar, as, at, au, av, aw, ax, ay, az, a0, a1, a2, a3, a4) {
        var e_58, _0;
        b = null;
        c = null;
        d = null;
        e = null;
        f = null;
        g = null;
        h = null;
        i = null;
        j = null;
        k = null;
        l = toNullable(Boolean_$type, null);
        m = null;
        n = toNullable(Boolean_$type, null);
        o = null;
        p = toNullable(Boolean_$type, null);
        q = toNullable(Boolean_$type, null);
        r = toNullable(Boolean_$type, null);
        s = toNullable(Boolean_$type, null);
        t = toNullable(Boolean_$type, null);
        u = toNullable(Boolean_$type, null);
        v = toNullable(Boolean_$type, null);
        w = toNullable(Number_$type, null);
        x = toNullable(ST_HrAlign_$type, null);
        y = toNullable(Boolean_$type, null);
        z = toNullable(Boolean_$type, null);
        aa = toNullable(Boolean_$type, null);
        ab = null;
        ac = null;
        ad = null;
        ae = null;
        af = null;
        ag = null;
        ah = null;
        ai = toNullable(ST_InsetMode_$type, null);
        aj = null;
        ak = toNullable(Boolean_$type, null);
        al = null;
        am = null;
        an = toNullable(Boolean_$type, null);
        ao = null;
        ap = null;
        aq = toNullable(Boolean_$type, null);
        ar = toNullable(Number_$type, null);
        as = toNullable(ST_ConnectorType_$type, null);
        at = toNullable(ST_BWMode_$type, null);
        au = toNullable(ST_BWMode_$type, null);
        av = toNullable(ST_BWMode_$type, null);
        aw = toNullable(Boolean_$type, null);
        ax = toNullable(Boolean_$type, null);
        ay = toNullable(Boolean_$type, null);
        az = toNullable(Boolean_$type, null);
        a0 = toNullable(Boolean_$type, null);
        a1 = toNullable(Boolean_$type, null);
        a2 = null;
        a3 = null;
        a4 = null;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var a5 = _2.value;
                switch (a5.a.e(a.d)) {
                    case "id":
                        b = a5.d;
                        break;
                    case "style":
                        c = a5.d;
                        break;
                    case "href":
                        d = a5.d;
                        break;
                    case "target":
                        e = a5.d;
                        break;
                    case "class":
                        f = a5.d;
                        break;
                    case "title":
                        g = a5.d;
                        break;
                    case "alt":
                        h = a5.d;
                        break;
                    case "coordsize":
                        i = a5.d;
                        break;
                    case "coordorigin":
                        j = a5.d;
                        break;
                    case "wrapcoords":
                        k = a5.d;
                        break;
                    case "print":
                        l = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case OfficeNamespace.ca:
                        m = a5.d;
                        break;
                    case OfficeNamespace.bz:
                        n = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case OfficeNamespace.b3:
                        o = a5.d;
                        break;
                    case OfficeNamespace.bh:
                        p = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case OfficeNamespace.a1:
                        q = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case OfficeNamespace.cg:
                        r = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case OfficeNamespace.a0:
                        s = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case OfficeNamespace.bm:
                        t = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case OfficeNamespace.br:
                        u = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case OfficeNamespace.bp:
                        v = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case OfficeNamespace.bq:
                        w = toNullable(Number_$type, parseNumber(a5.d, CultureInfo.invariantCulture));
                        break;
                    case OfficeNamespace.bn:
                        x = toNullable(ST_HrAlign_$type, XmlNamespaceDefinitionBase.b(ST_HrAlign_$type, a5.d));
                        break;
                    case OfficeNamespace.as:
                        y = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case OfficeNamespace.at:
                        z = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case OfficeNamespace.cf:
                        aa = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case "bordertopcolor":
                        ab = a5.d;
                        break;
                    case "borderleftcolor":
                        ac = a5.d;
                        break;
                    case "borderbottomcolor":
                        ad = a5.d;
                        break;
                    case "borderrightcolor":
                        ae = a5.d;
                        break;
                    case OfficeNamespace.be:
                        af = a5.d;
                        break;
                    case OfficeNamespace.bg:
                        ag = a5.d;
                        break;
                    case OfficeNamespace.bf:
                        ah = a5.d;
                        break;
                    case OfficeNamespace.bt:
                        ai = toNullable(ST_InsetMode_$type, XmlNamespaceDefinitionBase.b(ST_InsetMode_$type, a5.d));
                        break;
                    case "chromakey":
                        aj = a5.d;
                        break;
                    case "filled":
                        ak = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case "fillcolor":
                        al = a5.d;
                        break;
                    case "opacity":
                        am = a5.d;
                        break;
                    case "stroked":
                        an = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case "strokecolor":
                        ao = a5.d;
                        break;
                    case "strokeweight":
                        ap = a5.d;
                        break;
                    case "insetpen":
                        aq = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case OfficeNamespace.cb:
                        ar = toNullable(Number_$type, parseNumber(a5.d, CultureInfo.invariantCulture));
                        break;
                    case OfficeNamespace.a9:
                        as = toNullable(ST_ConnectorType_$type, XmlNamespaceDefinitionBase.b(ST_ConnectorType_$type, a5.d));
                        break;
                    case "bwmode":
                        at = toNullable(ST_BWMode_$type, XmlNamespaceDefinitionBase.b(ST_BWMode_$type, a5.d));
                        break;
                    case "bwpure":
                        au = toNullable(ST_BWMode_$type, XmlNamespaceDefinitionBase.b(ST_BWMode_$type, a5.d));
                        break;
                    case "bwnormal":
                        av = toNullable(ST_BWMode_$type, XmlNamespaceDefinitionBase.b(ST_BWMode_$type, a5.d));
                        break;
                    case OfficeNamespace.bj:
                        aw = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case OfficeNamespace.bx:
                        ax = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case OfficeNamespace.bw:
                        ay = toNullable(Boolean_$type, ST_TrueFalseBlank.d(a5.d));
                        break;
                    case OfficeNamespace.b2:
                        az = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case OfficeNamespace.a6:
                        a0 = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case OfficeNamespace.a5:
                        a1 = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(a5.d)));
                        break;
                    case "adj":
                        a2 = a5.d;
                        break;
                    case "path":
                        a3 = a5.d;
                        break;
                    case "master":
                        a4 = a5.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_58_1) {
            e_58 = { error: e_58_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_58)
                    throw e_58.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q,
            p17: r,
            p18: s,
            p19: t,
            p20: u,
            p21: v,
            p22: w,
            p23: x,
            p24: y,
            p25: z,
            p26: aa,
            p27: ab,
            p28: ac,
            p29: ad,
            p30: ae,
            p31: af,
            p32: ag,
            p33: ah,
            p34: ai,
            p35: aj,
            p36: ak,
            p37: al,
            p38: am,
            p39: an,
            p40: ao,
            p41: ap,
            p42: aq,
            p43: ar,
            p44: as,
            p45: at,
            p46: au,
            p47: av,
            p48: aw,
            p49: ax,
            p50: ay,
            p51: az,
            p52: a0,
            p53: a1,
            p54: a2,
            p55: a3,
            p56: a4
        };
    };
    VmlNamespace.d4 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, an, ao, ap, aq, ar, as, at, au, av, aw, ax, ay, az, a0, a1, a2, a3, a4) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = null;
        }
        if (f === void 0) {
            f = null;
        }
        if (g === void 0) {
            g = null;
        }
        if (h === void 0) {
            h = null;
        }
        if (i === void 0) {
            i = null;
        }
        if (j === void 0) {
            j = null;
        }
        if (k === void 0) {
            k = null;
        }
        if (l === void 0) {
            l = toNullable(Boolean_$type, null);
        }
        if (m === void 0) {
            m = null;
        }
        if (n === void 0) {
            n = toNullable(Boolean_$type, null);
        }
        if (o === void 0) {
            o = null;
        }
        if (p === void 0) {
            p = toNullable(Boolean_$type, null);
        }
        if (q === void 0) {
            q = toNullable(Boolean_$type, null);
        }
        if (r === void 0) {
            r = toNullable(Boolean_$type, null);
        }
        if (s === void 0) {
            s = toNullable(Boolean_$type, null);
        }
        if (t === void 0) {
            t = toNullable(Boolean_$type, null);
        }
        if (u === void 0) {
            u = toNullable(Boolean_$type, null);
        }
        if (v === void 0) {
            v = toNullable(Boolean_$type, null);
        }
        if (w === void 0) {
            w = toNullable(Number_$type, null);
        }
        if (x === void 0) {
            x = toNullable(ST_HrAlign_$type, null);
        }
        if (y === void 0) {
            y = toNullable(Boolean_$type, null);
        }
        if (z === void 0) {
            z = toNullable(Boolean_$type, null);
        }
        if (aa === void 0) {
            aa = toNullable(Boolean_$type, null);
        }
        if (ab === void 0) {
            ab = null;
        }
        if (ac === void 0) {
            ac = null;
        }
        if (ad === void 0) {
            ad = null;
        }
        if (ae === void 0) {
            ae = null;
        }
        if (af === void 0) {
            af = null;
        }
        if (ag === void 0) {
            ag = null;
        }
        if (ah === void 0) {
            ah = null;
        }
        if (ai === void 0) {
            ai = toNullable(ST_InsetMode_$type, null);
        }
        if (aj === void 0) {
            aj = null;
        }
        if (ak === void 0) {
            ak = toNullable(Boolean_$type, null);
        }
        if (al === void 0) {
            al = null;
        }
        if (am === void 0) {
            am = null;
        }
        if (an === void 0) {
            an = toNullable(Boolean_$type, null);
        }
        if (ao === void 0) {
            ao = null;
        }
        if (ap === void 0) {
            ap = null;
        }
        if (aq === void 0) {
            aq = toNullable(Boolean_$type, null);
        }
        if (ar === void 0) {
            ar = toNullable(Number_$type, null);
        }
        if (as === void 0) {
            as = toNullable(ST_ConnectorType_$type, null);
        }
        if (at === void 0) {
            at = toNullable(ST_BWMode_$type, null);
        }
        if (au === void 0) {
            au = toNullable(ST_BWMode_$type, null);
        }
        if (av === void 0) {
            av = toNullable(ST_BWMode_$type, null);
        }
        if (aw === void 0) {
            aw = toNullable(Boolean_$type, null);
        }
        if (ax === void 0) {
            ax = toNullable(Boolean_$type, null);
        }
        if (ay === void 0) {
            ay = toNullable(Boolean_$type, null);
        }
        if (az === void 0) {
            az = toNullable(Boolean_$type, null);
        }
        if (a0 === void 0) {
            a0 = toNullable(Boolean_$type, null);
        }
        if (a1 === void 0) {
            a1 = toNullable(Boolean_$type, null);
        }
        if (a2 === void 0) {
            a2 = null;
        }
        if (a3 === void 0) {
            a3 = null;
        }
        if (a4 === void 0) {
            a4 = null;
        }
        a.ad.p("urn:schemas-microsoft-com:vml/shapetype", "v");
        var a5;
        a5 = b;
        a.ad.h("id", a5);
        a5 = c;
        a.ad.h("style", a5);
        a5 = d;
        a.ad.h("href", a5);
        a5 = e;
        a.ad.h("target", a5);
        a5 = f;
        a.ad.h("class", a5);
        a5 = g;
        a.ad.h("title", a5);
        a5 = h;
        a.ad.h("alt", a5);
        a5 = i;
        a.ad.h("coordsize", a5);
        a5 = j;
        a.ad.h("coordorigin", a5);
        a5 = k;
        a.ad.h("wrapcoords", a5);
        if (nullableNotEquals(l, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(l.value));
            a.ad.h("print", a5);
        }
        a5 = m;
        a.ad.h(OfficeNamespace.ca, a5);
        if (nullableNotEquals(n, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(n.value));
            a.ad.h(OfficeNamespace.bz, a5);
        }
        a5 = o;
        a.ad.h(OfficeNamespace.b3, a5);
        if (nullableNotEquals(p, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(p.value));
            a.ad.h(OfficeNamespace.bh, a5);
        }
        if (nullableNotEquals(q, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(q.value));
            a.ad.h(OfficeNamespace.a1, a5);
        }
        if (nullableNotEquals(r, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(r.value));
            a.ad.h(OfficeNamespace.cg, a5);
        }
        if (nullableNotEquals(s, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(s.value));
            a.ad.h(OfficeNamespace.a0, a5);
        }
        if (nullableNotEquals(t, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(t.value));
            a.ad.h(OfficeNamespace.bm, a5);
        }
        if (nullableNotEquals(u, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(u.value));
            a.ad.h(OfficeNamespace.br, a5);
        }
        if (nullableNotEquals(v, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(v.value));
            a.ad.h(OfficeNamespace.bp, a5);
        }
        if (nullableNotEquals(w, null)) {
            a5 = numberToString(w.value, CultureInfo.invariantCulture);
            a.ad.h(OfficeNamespace.bq, a5);
        }
        if (nullableNotEquals(x, null)) {
            a5 = XmlNamespaceDefinitionBase.p(ST_HrAlign_$type, x.value);
            a.ad.h(OfficeNamespace.bn, a5);
        }
        if (nullableNotEquals(y, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(y.value));
            a.ad.h(OfficeNamespace.as, a5);
        }
        if (nullableNotEquals(z, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(z.value));
            a.ad.h(OfficeNamespace.at, a5);
        }
        if (nullableNotEquals(aa, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(aa.value));
            a.ad.h(OfficeNamespace.cf, a5);
        }
        a5 = ab;
        a.ad.h("bordertopcolor", a5);
        a5 = ac;
        a.ad.h("borderleftcolor", a5);
        a5 = ad;
        a.ad.h("borderbottomcolor", a5);
        a5 = ae;
        a.ad.h("borderrightcolor", a5);
        a5 = af;
        a.ad.h(OfficeNamespace.be, a5);
        a5 = ag;
        a.ad.h(OfficeNamespace.bg, a5);
        a5 = ah;
        a.ad.h(OfficeNamespace.bf, a5);
        if (nullableNotEquals(ai, null)) {
            a5 = XmlNamespaceDefinitionBase.p(ST_InsetMode_$type, ai.value);
            a.ad.h(OfficeNamespace.bt, a5);
        }
        a5 = aj;
        a.ad.h("chromakey", a5);
        if (nullableNotEquals(ak, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(ak.value));
            a.ad.h("filled", a5);
        }
        a5 = al;
        a.ad.h("fillcolor", a5);
        a5 = am;
        a.ad.h("opacity", a5);
        if (nullableNotEquals(an, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(an.value));
            a.ad.h("stroked", a5);
        }
        a5 = ao;
        a.ad.h("strokecolor", a5);
        a5 = ap;
        a.ad.h("strokeweight", a5);
        if (nullableNotEquals(aq, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(aq.value));
            a.ad.h("insetpen", a5);
        }
        if (nullableNotEquals(ar, null)) {
            a5 = numberToString(ar.value, CultureInfo.invariantCulture);
            a.ad.h(OfficeNamespace.cb, a5);
        }
        if (nullableNotEquals(as, null)) {
            a5 = XmlNamespaceDefinitionBase.p(ST_ConnectorType_$type, as.value);
            a.ad.h(OfficeNamespace.a9, a5);
        }
        if (nullableNotEquals(at, null)) {
            a5 = XmlNamespaceDefinitionBase.p(ST_BWMode_$type, at.value);
            a.ad.h("bwmode", a5);
        }
        if (nullableNotEquals(au, null)) {
            a5 = XmlNamespaceDefinitionBase.p(ST_BWMode_$type, au.value);
            a.ad.h("bwpure", a5);
        }
        if (nullableNotEquals(av, null)) {
            a5 = XmlNamespaceDefinitionBase.p(ST_BWMode_$type, av.value);
            a.ad.h("bwnormal", a5);
        }
        if (nullableNotEquals(aw, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(aw.value));
            a.ad.h(OfficeNamespace.bj, a5);
        }
        if (nullableNotEquals(ax, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(ax.value));
            a.ad.h(OfficeNamespace.bx, a5);
        }
        if (nullableNotEquals(ay, null)) {
            a5 = ST_TrueFalseBlank.f(ay.value);
            a.ad.h(OfficeNamespace.bw, a5);
        }
        if (nullableNotEquals(az, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(az.value));
            a.ad.h(OfficeNamespace.b2, a5);
        }
        if (nullableNotEquals(a0, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(a0.value));
            a.ad.h(OfficeNamespace.a6, a5);
        }
        if (nullableNotEquals(a1, null)) {
            a5 = ST_TrueFalse.k(ST_TrueFalse.b(a1.value));
            a.ad.h(OfficeNamespace.a5, a5);
        }
        a5 = a2;
        a.ad.h("adj", a5);
        a5 = a3;
        a.ad.h("path", a5);
        a5 = a4;
        a.ad.h("master", a5);
    };
    VmlNamespace.dw = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, aa, ab, ac, ad) {
        var e_59, _0;
        b = null;
        c = toNullable(Boolean_$type, null);
        d = null;
        e = null;
        f = null;
        g = toNullable(ST_StrokeLineStyle_$type, null);
        h = toNullable(Number_$type, null);
        i = toNullable(ST_StrokeJoinStyle_$type, null);
        j = toNullable(ST_StrokeEndCap_$type, null);
        k = null;
        l = toNullable(ST_FillType_$type, null);
        m = null;
        n = toNullable(ST_ImageAspect_$type, null);
        o = null;
        p = toNullable(Boolean_$type, null);
        q = null;
        r = toNullable(ST_StrokeArrowType_$type, null);
        s = toNullable(ST_StrokeArrowWidth_$type, null);
        t = toNullable(ST_StrokeArrowLength_$type, null);
        u = toNullable(ST_StrokeArrowType_$type, null);
        v = toNullable(ST_StrokeArrowWidth_$type, null);
        w = toNullable(ST_StrokeArrowLength_$type, null);
        x = null;
        y = null;
        z = null;
        aa = toNullable(Boolean_$type, null);
        ab = null;
        ac = toNullable(Boolean_$type, null);
        ad = null;
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var ae = _2.value;
                switch (ae.a.e(a.d)) {
                    case "id":
                        b = ae.d;
                        break;
                    case "on":
                        c = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(ae.d)));
                        break;
                    case "weight":
                        d = ae.d;
                        break;
                    case "color":
                        e = ae.d;
                        break;
                    case "opacity":
                        f = ae.d;
                        break;
                    case "linestyle":
                        g = toNullable(ST_StrokeLineStyle_$type, XmlNamespaceDefinitionBase.b(ST_StrokeLineStyle_$type, ae.d));
                        break;
                    case "miterlimit":
                        h = toNullable(Number_$type, parseNumber(ae.d, CultureInfo.invariantCulture));
                        break;
                    case "joinstyle":
                        i = toNullable(ST_StrokeJoinStyle_$type, XmlNamespaceDefinitionBase.b(ST_StrokeJoinStyle_$type, ae.d));
                        break;
                    case "endcap":
                        j = toNullable(ST_StrokeEndCap_$type, XmlNamespaceDefinitionBase.b(ST_StrokeEndCap_$type, ae.d));
                        break;
                    case "dashstyle":
                        k = ae.d;
                        break;
                    case "filltype":
                        l = toNullable(ST_FillType_$type, XmlNamespaceDefinitionBase.b(ST_FillType_$type, ae.d));
                        break;
                    case "src":
                        m = ae.d;
                        break;
                    case "imageaspect":
                        n = toNullable(ST_ImageAspect_$type, XmlNamespaceDefinitionBase.b(ST_ImageAspect_$type, ae.d));
                        break;
                    case "imagesize":
                        o = ae.d;
                        break;
                    case "imagealignshape":
                        p = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(ae.d)));
                        break;
                    case "color2":
                        q = ae.d;
                        break;
                    case "startarrow":
                        r = toNullable(ST_StrokeArrowType_$type, XmlNamespaceDefinitionBase.b(ST_StrokeArrowType_$type, ae.d));
                        break;
                    case "startarrowwidth":
                        s = toNullable(ST_StrokeArrowWidth_$type, XmlNamespaceDefinitionBase.b(ST_StrokeArrowWidth_$type, ae.d));
                        break;
                    case "startarrowlength":
                        t = toNullable(ST_StrokeArrowLength_$type, XmlNamespaceDefinitionBase.b(ST_StrokeArrowLength_$type, ae.d));
                        break;
                    case "endarrow":
                        u = toNullable(ST_StrokeArrowType_$type, XmlNamespaceDefinitionBase.b(ST_StrokeArrowType_$type, ae.d));
                        break;
                    case "endarrowwidth":
                        v = toNullable(ST_StrokeArrowWidth_$type, XmlNamespaceDefinitionBase.b(ST_StrokeArrowWidth_$type, ae.d));
                        break;
                    case "endarrowlength":
                        w = toNullable(ST_StrokeArrowLength_$type, XmlNamespaceDefinitionBase.b(ST_StrokeArrowLength_$type, ae.d));
                        break;
                    case OfficeNamespace.bo:
                        x = ae.d;
                        break;
                    case OfficeNamespace.au:
                        y = ae.d;
                        break;
                    case OfficeNamespace.cd:
                        z = ae.d;
                        break;
                    case OfficeNamespace.bj:
                        aa = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(ae.d)));
                        break;
                    case OfficeDocumentRelationships.as:
                        ab = ae.d;
                        break;
                    case "insetpen":
                        ac = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(ae.d)));
                        break;
                    case OfficeNamespace.b4:
                        ad = ae.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_59_1) {
            e_59 = { error: e_59_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_59)
                    throw e_59.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q,
            p17: r,
            p18: s,
            p19: t,
            p20: u,
            p21: v,
            p22: w,
            p23: x,
            p24: y,
            p25: z,
            p26: aa,
            p27: ab,
            p28: ac,
            p29: ad
        };
    };
    VmlNamespace.d5 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, aa, ab, ac, ad) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = toNullable(Boolean_$type, null);
        }
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = null;
        }
        if (f === void 0) {
            f = null;
        }
        if (g === void 0) {
            g = toNullable(ST_StrokeLineStyle_$type, null);
        }
        if (h === void 0) {
            h = toNullable(Number_$type, null);
        }
        if (i === void 0) {
            i = toNullable(ST_StrokeJoinStyle_$type, null);
        }
        if (j === void 0) {
            j = toNullable(ST_StrokeEndCap_$type, null);
        }
        if (k === void 0) {
            k = null;
        }
        if (l === void 0) {
            l = toNullable(ST_FillType_$type, null);
        }
        if (m === void 0) {
            m = null;
        }
        if (n === void 0) {
            n = toNullable(ST_ImageAspect_$type, null);
        }
        if (o === void 0) {
            o = null;
        }
        if (p === void 0) {
            p = toNullable(Boolean_$type, null);
        }
        if (q === void 0) {
            q = null;
        }
        if (r === void 0) {
            r = toNullable(ST_StrokeArrowType_$type, null);
        }
        if (s === void 0) {
            s = toNullable(ST_StrokeArrowWidth_$type, null);
        }
        if (t === void 0) {
            t = toNullable(ST_StrokeArrowLength_$type, null);
        }
        if (u === void 0) {
            u = toNullable(ST_StrokeArrowType_$type, null);
        }
        if (v === void 0) {
            v = toNullable(ST_StrokeArrowWidth_$type, null);
        }
        if (w === void 0) {
            w = toNullable(ST_StrokeArrowLength_$type, null);
        }
        if (x === void 0) {
            x = null;
        }
        if (y === void 0) {
            y = null;
        }
        if (z === void 0) {
            z = null;
        }
        if (aa === void 0) {
            aa = toNullable(Boolean_$type, null);
        }
        if (ab === void 0) {
            ab = null;
        }
        if (ac === void 0) {
            ac = toNullable(Boolean_$type, null);
        }
        if (ad === void 0) {
            ad = null;
        }
        a.ad.p("urn:schemas-microsoft-com:vml/stroke", "v");
        var ae;
        ae = b;
        a.ad.h("id", ae);
        if (nullableNotEquals(c, null)) {
            ae = ST_TrueFalse.k(ST_TrueFalse.b(c.value));
            a.ad.h("on", ae);
        }
        ae = d;
        a.ad.h("weight", ae);
        ae = e;
        a.ad.h("color", ae);
        ae = f;
        a.ad.h("opacity", ae);
        if (nullableNotEquals(g, null)) {
            ae = XmlNamespaceDefinitionBase.p(ST_StrokeLineStyle_$type, g.value);
            a.ad.h("linestyle", ae);
        }
        if (nullableNotEquals(h, null)) {
            ae = numberToString(h.value, CultureInfo.invariantCulture);
            a.ad.h("miterlimit", ae);
        }
        if (nullableNotEquals(i, null)) {
            ae = XmlNamespaceDefinitionBase.p(ST_StrokeJoinStyle_$type, i.value);
            a.ad.h("joinstyle", ae);
        }
        if (nullableNotEquals(j, null)) {
            ae = XmlNamespaceDefinitionBase.p(ST_StrokeEndCap_$type, j.value);
            a.ad.h("endcap", ae);
        }
        ae = k;
        a.ad.h("dashstyle", ae);
        if (nullableNotEquals(l, null)) {
            ae = XmlNamespaceDefinitionBase.p(ST_FillType_$type, l.value);
            a.ad.h("filltype", ae);
        }
        ae = m;
        a.ad.h("src", ae);
        if (nullableNotEquals(n, null)) {
            ae = XmlNamespaceDefinitionBase.p(ST_ImageAspect_$type, n.value);
            a.ad.h("imageaspect", ae);
        }
        ae = o;
        a.ad.h("imagesize", ae);
        if (nullableNotEquals(p, null)) {
            ae = ST_TrueFalse.k(ST_TrueFalse.b(p.value));
            a.ad.h("imagealignshape", ae);
        }
        ae = q;
        a.ad.h("color2", ae);
        if (nullableNotEquals(r, null)) {
            ae = XmlNamespaceDefinitionBase.p(ST_StrokeArrowType_$type, r.value);
            a.ad.h("startarrow", ae);
        }
        if (nullableNotEquals(s, null)) {
            ae = XmlNamespaceDefinitionBase.p(ST_StrokeArrowWidth_$type, s.value);
            a.ad.h("startarrowwidth", ae);
        }
        if (nullableNotEquals(t, null)) {
            ae = XmlNamespaceDefinitionBase.p(ST_StrokeArrowLength_$type, t.value);
            a.ad.h("startarrowlength", ae);
        }
        if (nullableNotEquals(u, null)) {
            ae = XmlNamespaceDefinitionBase.p(ST_StrokeArrowType_$type, u.value);
            a.ad.h("endarrow", ae);
        }
        if (nullableNotEquals(v, null)) {
            ae = XmlNamespaceDefinitionBase.p(ST_StrokeArrowWidth_$type, v.value);
            a.ad.h("endarrowwidth", ae);
        }
        if (nullableNotEquals(w, null)) {
            ae = XmlNamespaceDefinitionBase.p(ST_StrokeArrowLength_$type, w.value);
            a.ad.h("endarrowlength", ae);
        }
        ae = x;
        a.ad.h(OfficeNamespace.bo, ae);
        ae = y;
        a.ad.h(OfficeNamespace.au, ae);
        ae = z;
        a.ad.h(OfficeNamespace.cd, ae);
        if (nullableNotEquals(aa, null)) {
            ae = ST_TrueFalse.k(ST_TrueFalse.b(aa.value));
            a.ad.h(OfficeNamespace.bj, ae);
        }
        ae = ab;
        a.ad.h(OfficeDocumentRelationships.as, ae);
        if (nullableNotEquals(ac, null)) {
            ae = ST_TrueFalse.k(ST_TrueFalse.b(ac.value));
            a.ad.h("insetpen", ae);
        }
        ae = ad;
        a.ad.h(OfficeNamespace.b4, ae);
    };
    VmlNamespace.dx = function (a, b, c, d, e, f) {
        var e_60, _0;
        b = null;
        c = null;
        d = null;
        e = toNullable(Boolean_$type, null);
        f = toNullable(ST_InsetMode_$type, null);
        try {
            for (var _1 = __values(fromEnum(a.ab.u)), _2 = _1.next(); !_2.done; _2 = _1.next()) {
                var g = _2.value;
                switch (g.a.e(a.d)) {
                    case "id":
                        b = g.d;
                        break;
                    case "style":
                        c = g.d;
                        break;
                    case "inset":
                        d = g.d;
                        break;
                    case OfficeNamespace.b9:
                        e = toNullable(Boolean_$type, ST_TrueFalse.g(ST_TrueFalse.d(g.d)));
                        break;
                    case OfficeNamespace.bt:
                        f = toNullable(ST_InsetMode_$type, XmlNamespaceDefinitionBase.b(ST_InsetMode_$type, g.d));
                        break;
                    default: break;
                }
            }
        }
        catch (e_60_1) {
            e_60 = { error: e_60_1 };
        }
        finally {
            try {
                if (_2 && !_2.done && (_0 = _1.return))
                    _0.call(_1);
            }
            finally {
                if (e_60)
                    throw e_60.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f
        };
    };
    VmlNamespace.d6 = function (a, b, c, d, e, f) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = toNullable(Boolean_$type, null);
        }
        if (f === void 0) {
            f = toNullable(ST_InsetMode_$type, null);
        }
        a.ad.p("urn:schemas-microsoft-com:vml/textbox", "v");
        var g;
        g = b;
        a.ad.h("id", g);
        g = c;
        a.ad.h("style", g);
        g = d;
        a.ad.h("inset", g);
        if (nullableNotEquals(e, null)) {
            g = ST_TrueFalse.k(ST_TrueFalse.b(e.value));
            a.ad.h(OfficeNamespace.b9, g);
        }
        if (nullableNotEquals(f, null)) {
            g = XmlNamespaceDefinitionBase.p(ST_InsetMode_$type, f.value);
            a.ad.h(OfficeNamespace.bt, g);
        }
    };
    VmlNamespace.$t = markType(VmlNamespace, 'VmlNamespace', XmlNamespaceDefinitionBase.$);
    VmlNamespace.ax = "urn:schemas-microsoft-com:vml" + "/background";
    VmlNamespace.ao = new VmlNamespace();
    return VmlNamespace;
}(XmlNamespaceDefinitionBase));
export { VmlNamespace };
/**
 * @hidden
 */
var XmlNamespace = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(XmlNamespace, _super);
    function XmlNamespace() {
        return _super.call(this) || this;
    }
    XmlNamespace.prototype.s = function (a) {
        switch (a) {
            case 0:
            case 1: return "http://www.w3.org/XML/1998/namespace";
            default: return "http://www.w3.org/XML/1998/namespace";
        }
    };
    XmlNamespace.prototype.get_t = function () {
        return "xml";
    };
    Object.defineProperty(XmlNamespace.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    XmlNamespace.at = function (a) {
        a.i("xml", "space", "http://www.w3.org/XML/1998/namespace", "preserve");
    };
    XmlNamespace.$t = markType(XmlNamespace, 'XmlNamespace', XmlNamespaceDefinitionBase.$);
    XmlNamespace.aq = "http://www.w3.org/XML/1998/namespace" + "/lang";
    XmlNamespace.as = "http://www.w3.org/XML/1998/namespace" + "/space";
    XmlNamespace.ao = new XmlNamespace();
    return XmlNamespace;
}(XmlNamespaceDefinitionBase));
export { XmlNamespace };
/**
 * @hidden
 */
var XmlSchemaInstance = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(XmlSchemaInstance, _super);
    function XmlSchemaInstance() {
        return _super.call(this) || this;
    }
    XmlSchemaInstance.prototype.s = function (a) {
        switch (a) {
            case 0:
            case 1: return XmlSchemaInstance.aq;
            default: return XmlSchemaInstance.aq;
        }
    };
    XmlSchemaInstance.prototype.get_t = function () {
        return "xsi";
    };
    Object.defineProperty(XmlSchemaInstance.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    XmlSchemaInstance.$t = markType(XmlSchemaInstance, 'XmlSchemaInstance', XmlNamespaceDefinitionBase.$);
    XmlSchemaInstance.aq = "http://www.w3.org/2001/XMLSchema-instance";
    XmlSchemaInstance.ar = XmlSchemaInstance.aq + "/type";
    XmlSchemaInstance.ao = new XmlSchemaInstance();
    return XmlSchemaInstance;
}(XmlNamespaceDefinitionBase));
export { XmlSchemaInstance };
