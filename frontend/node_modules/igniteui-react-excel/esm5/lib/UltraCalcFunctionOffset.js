/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { RegionGroupCalcReference } from "./RegionGroupCalcReference";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
var UltraCalcFunctionOffset = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionOffset, _super);
    function UltraCalcFunctionOffset() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionOffset.prototype.evaluate = function (a, b) {
        var c = null;
        if (b == 5) {
            c = a.pop();
        }
        var d = null;
        if (b >= 4) {
            d = a.pop();
        }
        var e = a.pop();
        var f = a.pop();
        var g = a.pop();
        if (g.isReference == false && g.isError) {
            return g;
        }
        if (f.isError) {
            return f;
        }
        if (e.isError) {
            return e;
        }
        if (d != null && d.isError) {
            return d;
        }
        if (c != null && c.isError) {
            return c;
        }
        if (g.isReference == false) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(1));
        }
        var h = RegionGroupCalcReference._a7(g.toReference());
        if (h._ba.count != 1) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(1));
        }
        var i = h._ba.item(0);
        var j = f._toInt321();
        var k = e._toInt321();
        var l = d == null ? i._aa : d._toInt321();
        var m = c == null ? i._ad : c._toInt321();
        if (l <= 0 || m <= 0) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(0));
        }
        var n = i.firstRow + j;
        var o = i.firstColumn + k;
        if (o < 0 || n < 0) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(0));
        }
        var p = n + l - 1;
        var q = o + m - 1;
        var r = i.worksheet;
        if (r == null) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(0));
        }
        var s = r._rows$i.maxCount - 1;
        var t = r._columns$i.maxCount - 1;
        if (s < p || t < q) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(0));
        }
        return new ExcelCalcValue(r._cx(n, o, p, q)._c);
    };
    UltraCalcFunctionOffset.prototype.get_name = function () {
        return "offset";
    };
    Object.defineProperty(UltraCalcFunctionOffset.prototype, "name", {
        get: function () {
            return this.get_name();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionOffset.prototype.get_minArgs = function () {
        return 3;
    };
    Object.defineProperty(UltraCalcFunctionOffset.prototype, "minArgs", {
        get: function () {
            return this.get_minArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionOffset.prototype.get_maxArgs = function () {
        return 5;
    };
    Object.defineProperty(UltraCalcFunctionOffset.prototype, "maxArgs", {
        get: function () {
            return this.get_maxArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionOffset.prototype._v = function (a) {
        if (a == 0) {
            return false;
        }
        return true;
    };
    UltraCalcFunctionOffset.$t = markType(UltraCalcFunctionOffset, 'UltraCalcFunctionOffset', BuiltInFunctionBase.$);
    return UltraCalcFunctionOffset;
}(BuiltInFunctionBase));
export { UltraCalcFunctionOffset };
