/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { List$1 } from "igniteui-react-core";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { Number_$type, runOn, markType } from "igniteui-react-core";
import { CalcArgumentHelper } from "./CalcArgumentHelper";
import { truncate } from "igniteui-react-core";
/**
 * @hidden
 */
var UltraCalcFunctionPercentileBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionPercentileBase, _super);
    function UltraCalcFunctionPercentileBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionPercentileBase._ak = function (a, b, c) {
        var d = a.pop();
        var e = a.pop();
        if (d.isError) {
            return new ExcelCalcValue(d.toErrorValue());
        }
        var f = d._toDouble3();
        if (c) {
            if (b) {
                if (f < 1 || f >= 4) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(4));
                }
            }
            else {
                if (f < 0 || f >= 5) {
                    return new ExcelCalcValue(new ExcelCalcErrorValue(4));
                }
            }
            f = truncate(f) / 4;
        }
        else {
            if (f < 0 || f > 1) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            if (b && (f == 0 || f == 1)) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
        }
        var g = new List$1(Number_$type, 0);
        var h = CalcArgumentHelper.c(e, 0, 1101, runOn(g, g.add));
        if (h != null) {
            return h;
        }
        if (g.count == 0) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(4));
        }
        var i = 1 / (g.count + 1);
        if (b && (f < i || (f + i > 1))) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(4));
        }
        var j = g._inner[0];
        if (g.count > 1) {
            if (b) {
                f = (f - i) * (1 / (1 - i * 2));
            }
            g.y();
            var k = 1 / (g.count - 1);
            var l = (f % k) / k;
            var m = truncate(((g.count - 1) * f));
            j = g._inner[m];
            if (m < g.count - 1 && l != 0) {
                j += (g._inner[m + 1] - g._inner[m]) * l;
            }
        }
        return new ExcelCalcValue(j);
    };
    UltraCalcFunctionPercentileBase.prototype.get_maxArgs = function () {
        return 2;
    };
    Object.defineProperty(UltraCalcFunctionPercentileBase.prototype, "maxArgs", {
        get: function () {
            return this.get_maxArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionPercentileBase.prototype.get_minArgs = function () {
        return 2;
    };
    Object.defineProperty(UltraCalcFunctionPercentileBase.prototype, "minArgs", {
        get: function () {
            return this.get_minArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionPercentileBase.$t = markType(UltraCalcFunctionPercentileBase, 'UltraCalcFunctionPercentileBase', BuiltInFunctionBase.$);
    return UltraCalcFunctionPercentileBase;
}(BuiltInFunctionBase));
export { UltraCalcFunctionPercentileBase };
