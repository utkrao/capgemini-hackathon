/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType, getInstanceType } from "igniteui-react-core";
import { ISupportSetProperty_$type } from "./ISupportSetProperty";
import { EG_FillProperties } from "./EG_FillProperties";
import { EG_EffectProperties } from "./EG_EffectProperties";
/**
 * @hidden
 */
var CT_BackgroundFormatting = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CT_BackgroundFormatting, _super);
    function CT_BackgroundFormatting() {
        var _this = _super.call(this) || this;
        _this.c = null;
        _this.a = null;
        return _this;
    }
    Object.defineProperty(CT_BackgroundFormatting.prototype, "d", {
        get: function () {
            if (this.c == null) {
                this.c = new EG_FillProperties();
            }
            return this.c;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_BackgroundFormatting.prototype, "b", {
        get: function () {
            if (this.a == null) {
                this.a = new EG_EffectProperties();
            }
            return this.a;
        },
        enumerable: false,
        configurable: true
    });
    CT_BackgroundFormatting.prototype.setProperty = function (a, b) {
        switch (a) {
            default:
                if (this.d.f(a)) {
                    this.d.j(a, b);
                    return;
                }
                else if (this.b.c(a)) {
                    this.b.e(a, b);
                    return;
                }
                break;
        }
    };
    CT_BackgroundFormatting.prototype.toString = function () {
        var a = getInstanceType(this);
        return a != null ? a.typeName : _super.prototype.toString.call(this);
    };
    CT_BackgroundFormatting.$t = markType(CT_BackgroundFormatting, 'CT_BackgroundFormatting', Base.$, [ISupportSetProperty_$type]);
    return CT_BackgroundFormatting;
}(Base));
export { CT_BackgroundFormatting };
