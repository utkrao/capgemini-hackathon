/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "igniteui-react-core";
import { ArgumentNullException } from "igniteui-react-core";
/**
 * @hidden
 */
var LinkedListNode = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(LinkedListNode, _super);
    function LinkedListNode() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.a = null;
        _this.c = null;
        _this.d = null;
        return _this;
    }
    Object.defineProperty(LinkedListNode.prototype, "b", {
        get: function () {
            return this.a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinkedListNode.prototype, "e", {
        get: function () {
            return this.c;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinkedListNode.prototype, "f", {
        get: function () {
            return this.d;
        },
        enumerable: false,
        configurable: true
    });
    LinkedListNode.prototype.g = function (a) {
        if (a == null) {
            throw new ArgumentNullException(1);
        }
        this.m();
        if (a.c == null) {
            this.l(a.a);
        }
        else {
            a.c.d = this;
            this.c = a.c;
            a.c = this;
            this.d = a;
            this.a = a.a;
        }
    };
    LinkedListNode.prototype.h = function (a) {
        if (a == null) {
            throw new ArgumentNullException(1);
        }
        this.m();
        if (a.d == null) {
            this.j(a.a);
        }
        else {
            a.d.c = this;
            this.d = a.d;
            a.d = this;
            this.c = a;
            this.a = a.a;
        }
    };
    LinkedListNode.prototype.i = function () {
        this.j(this.a);
    };
    LinkedListNode.prototype.j = function (a) {
        if (a == null) {
            throw new ArgumentNullException(1);
        }
        if (a != this.a || a.c != this) {
            this.m();
            this.a = a;
            if (a.c == null) {
                a.c = a.d = this;
            }
            else {
                this.c = a.c;
                a.c = this;
                this.c.d = this;
            }
        }
    };
    LinkedListNode.prototype.k = function () {
        this.l(this.b);
    };
    LinkedListNode.prototype.l = function (a) {
        if (a == null) {
            throw new ArgumentNullException(1);
        }
        if (a != this.a || a.d != this) {
            this.m();
            this.a = a;
            if (a.d == null) {
                a.c = a.d = this;
            }
            else {
                this.d = a.d;
                a.d = this;
                this.d.c = this;
            }
        }
    };
    LinkedListNode.prototype.m = function () {
        if (this.a != null) {
            var a = this.a;
            if (this.d != null) {
                this.d.c = this.c;
            }
            if (this.c != null) {
                this.c.d = this.d;
            }
            if (a.c == this) {
                a.c = this.c;
            }
            if (a.d == this) {
                a.d = this.d;
            }
            this.c = null;
            this.d = null;
            this.a = null;
        }
    };
    LinkedListNode.$t = markType(LinkedListNode, 'LinkedListNode');
    return LinkedListNode;
}(Base));
export { LinkedListNode };
/**
 * @hidden
 */
var LinkedList = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(LinkedList, _super);
    function LinkedList() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.a = null;
        _this.b = null;
        return _this;
    }
    Object.defineProperty(LinkedList.prototype, "c", {
        get: function () {
            return this.a;
        },
        set: function (a) {
            this.a = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinkedList.prototype, "d", {
        get: function () {
            return this.b;
        },
        set: function (a) {
            this.b = a;
        },
        enumerable: false,
        configurable: true
    });
    LinkedList.prototype.e = function (a) {
        if (a === void 0) {
            a = false;
        }
        if (a) {
            while (this.b != null) {
                this.b.m();
            }
        }
        else {
            this.a = this.b = null;
        }
    };
    LinkedList.$t = markType(LinkedList, 'LinkedList');
    return LinkedList;
}(Base));
export { LinkedList };
