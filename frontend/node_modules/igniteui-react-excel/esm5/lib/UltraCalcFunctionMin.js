/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { markType } from "igniteui-react-core";
import { CalcFunctionUtilities } from "./CalcFunctionUtilities";
/**
 * @hidden
 */
var UltraCalcFunctionMin = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionMin, _super);
    function UltraCalcFunctionMin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionMin.prototype.evaluate = function (a, b) {
        return CalcFunctionUtilities.d(a, b, 1229, UltraCalcFunctionMin._ak);
    };
    UltraCalcFunctionMin.prototype.canParameterBeEnumerable = function (a) {
        return true;
    };
    UltraCalcFunctionMin._ak = function (a) {
        if (a.count == 0) {
            return new ExcelCalcValue(0);
        }
        var b = a._inner[0];
        for (var c = 1; c < a.count; c++) {
            if (a._inner[c] < b) {
                b = a._inner[c];
            }
        }
        return new ExcelCalcValue(b);
    };
    UltraCalcFunctionMin.prototype.get_name = function () {
        return "min";
    };
    Object.defineProperty(UltraCalcFunctionMin.prototype, "name", {
        get: function () {
            return this.get_name();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionMin.prototype.get_minArgs = function () {
        return 1;
    };
    Object.defineProperty(UltraCalcFunctionMin.prototype, "minArgs", {
        get: function () {
            return this.get_minArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionMin.prototype.get_maxArgs = function () {
        return 0x7FFFFFFF;
    };
    Object.defineProperty(UltraCalcFunctionMin.prototype, "maxArgs", {
        get: function () {
            return this.get_maxArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionMin.prototype.doesParameterAllowIntermediateResultArray = function (a, b) {
        return (b == false);
    };
    UltraCalcFunctionMin.$t = markType(UltraCalcFunctionMin, 'UltraCalcFunctionMin', BuiltInFunctionBase.$);
    return UltraCalcFunctionMin;
}(BuiltInFunctionBase));
export { UltraCalcFunctionMin };
