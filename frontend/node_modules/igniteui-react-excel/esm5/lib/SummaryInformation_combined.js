/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { InformationBase } from "./InformationBase";
import { Base, markType, String_$type, Date_$type, Number_$type, getInstanceType } from "igniteui-react-core";
import { DocCoreUtils } from "./DocCoreUtils";
/**
 * @hidden
 */
var SummaryInformation = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SummaryInformation, _super);
    function SummaryInformation() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.s = null;
        return _this;
    }
    SummaryInformation.prototype.get_f = function () {
        return "f29f85e04ff91068ab9108002b27b3d9";
    };
    Object.defineProperty(SummaryInformation.prototype, "f", {
        get: function () {
            return this.get_f();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SummaryInformation.prototype, "t", {
        get: function () {
            if (this.s == null) {
                this.s = new SummaryInformation_SummaryInformationProperties(this);
            }
            return this.s;
        },
        enumerable: false,
        configurable: true
    });
    SummaryInformation.$t = markType(SummaryInformation, 'SummaryInformation', InformationBase.$);
    return SummaryInformation;
}(InformationBase));
export { SummaryInformation };
/**
 * @hidden
 */
var SummaryInformation_SummaryInformationProperties = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SummaryInformation_SummaryInformationProperties, _super);
    function SummaryInformation_SummaryInformationProperties(a) {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.a = a;
        return _this;
    }
    SummaryInformation_SummaryInformationProperties.b = function (a, b) {
        if (1 == a) {
            return false;
        }
        switch (a) {
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 18: return b == String_$type;
            case 10:
            case 11:
            case 12:
            case 13: return b == Date_$type;
            case 14:
            case 15:
            case 16:
            case 19: return b == Number_$type;
            case 17: return false;
            default: return true;
        }
    };
    SummaryInformation_SummaryInformationProperties.prototype.item = function (a, b) {
        if (arguments.length === 2) {
            var c = a;
            if (DocCoreUtils.e(b)) {
                if (this.a.b.containsKey(c)) {
                    this.a.b.removeItem(c);
                }
            }
            else {
                if (SummaryInformation_SummaryInformationProperties.b(a, getInstanceType(b)) == false) {
                    return;
                }
                if (this.a.b.containsKey(c)) {
                    this.a.b.item(c, b);
                }
                else {
                    this.a.b.addItem(c, b);
                }
            }
            return b;
        }
        else {
            var b_1 = a;
            if (this.a.b.containsKey(b_1) == false) {
                return null;
            }
            return this.a.b.item(b_1);
        }
    };
    SummaryInformation_SummaryInformationProperties.$t = markType(SummaryInformation_SummaryInformationProperties, 'SummaryInformation_SummaryInformationProperties');
    return SummaryInformation_SummaryInformationProperties;
}(Base));
export { SummaryInformation_SummaryInformationProperties };
