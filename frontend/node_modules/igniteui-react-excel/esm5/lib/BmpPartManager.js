/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ImagePartManagerBase } from "./ImagePartManagerBase";
import { ImageFormat } from "./ImageFormat";
import { IOPath } from "igniteui-react-core";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
var BmpPartManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(BmpPartManager, _super);
    function BmpPartManager(a) {
        var _this = _super.call(this) || this;
        _this.aa = false;
        _this.aa = a;
        return _this;
    }
    BmpPartManager.prototype.get_s = function () {
        return this.aa ? "/xl/media/image.dib" : "/xl/media/image.bmp";
    };
    Object.defineProperty(BmpPartManager.prototype, "s", {
        get: function () {
            return this.get_s();
        },
        enumerable: false,
        configurable: true
    });
    BmpPartManager.prototype.get_t = function () {
        return this.aa ? "/ppt/media/image.dib" : "/ppt/media/image.bmp";
    };
    Object.defineProperty(BmpPartManager.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    BmpPartManager.prototype.get_u = function () {
        return this.aa ? "/word/media/image.dib" : "/word/media/image.bmp";
    };
    Object.defineProperty(BmpPartManager.prototype, "u", {
        get: function () {
            return this.get_u();
        },
        enumerable: false,
        configurable: true
    });
    BmpPartManager.prototype.get_m = function () {
        return "image/bmp";
    };
    Object.defineProperty(BmpPartManager.prototype, "m", {
        get: function () {
            return this.get_m();
        },
        enumerable: false,
        configurable: true
    });
    BmpPartManager.prototype.r = function (a) {
        var b = IOPath.getExtension(a);
        if (b.toLowerCase() == ".dib") {
            return ImageFormat.b;
        }
        return ImageFormat.a;
    };
    BmpPartManager.$t = markType(BmpPartManager, 'BmpPartManager', ImagePartManagerBase.$);
    BmpPartManager.y = new BmpPartManager(false);
    BmpPartManager.z = new BmpPartManager(true);
    return BmpPartManager;
}(ImagePartManagerBase));
export { BmpPartManager };
