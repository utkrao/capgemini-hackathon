/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { UltraCalcFunctionComplex_ComplexNumber } from "./UltraCalcFunctionComplex_ComplexNumber";
import { markType } from "igniteui-react-core";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
/**
 * @hidden
 */
var UltraCalcFunctionImLog2 = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionImLog2, _super);
    function UltraCalcFunctionImLog2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionImLog2.prototype.evaluate = function (a, b) {
        var c = a.pop();
        if (c.isError) {
            return c;
        }
        var d = c.toString();
        var e = new UltraCalcFunctionComplex_ComplexNumber(1, a._w, d);
        if (e.y == false) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(4));
        }
        var f = e.o();
        if (f.y == false) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(4));
        }
        return new ExcelCalcValue(f.toString());
    };
    UltraCalcFunctionImLog2.prototype.get_name = function () {
        return "imlog2";
    };
    Object.defineProperty(UltraCalcFunctionImLog2.prototype, "name", {
        get: function () {
            return this.get_name();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionImLog2.prototype.get_minArgs = function () {
        return 1;
    };
    Object.defineProperty(UltraCalcFunctionImLog2.prototype, "minArgs", {
        get: function () {
            return this.get_minArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionImLog2.prototype.get_maxArgs = function () {
        return 1;
    };
    Object.defineProperty(UltraCalcFunctionImLog2.prototype, "maxArgs", {
        get: function () {
            return this.get_maxArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionImLog2.prototype.doesParameterAllowIntermediateResultArray = function (a, b) {
        return (b == false);
    };
    UltraCalcFunctionImLog2.$t = markType(UltraCalcFunctionImLog2, 'UltraCalcFunctionImLog2', BuiltInFunctionBase.$);
    return UltraCalcFunctionImLog2;
}(BuiltInFunctionBase));
export { UltraCalcFunctionImLog2 };
