/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { UltraCalcFunctionTwoMatrixFunction } from "./UltraCalcFunctionTwoMatrixFunction";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
var UltraCalcFunctionIntercept = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionIntercept, _super);
    function UltraCalcFunctionIntercept() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionIntercept.prototype.evaluate = function (a, b) {
        var c;
        var d;
        var e;
        var f = UltraCalcFunctionTwoMatrixFunction._aq(a, d, e, c);
        d = f.p1;
        e = f.p2;
        c = f.p3;
        if (c != null) {
            return new ExcelCalcValue(c);
        }
        return new ExcelCalcValue(e);
    };
    UltraCalcFunctionIntercept.prototype.get_name = function () {
        return "intercept";
    };
    Object.defineProperty(UltraCalcFunctionIntercept.prototype, "name", {
        get: function () {
            return this.get_name();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionIntercept.$t = markType(UltraCalcFunctionIntercept, 'UltraCalcFunctionIntercept', UltraCalcFunctionTwoMatrixFunction.$);
    return UltraCalcFunctionIntercept;
}(UltraCalcFunctionTwoMatrixFunction));
export { UltraCalcFunctionIntercept };
