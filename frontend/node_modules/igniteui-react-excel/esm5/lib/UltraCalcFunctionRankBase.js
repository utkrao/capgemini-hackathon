/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { Base, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var UltraCalcFunctionRankBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionRankBase, _super);
    function UltraCalcFunctionRankBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionRankBase._ak = function (a, b, c) {
        var d = true;
        if (b == 3) {
            var e = a.pop();
            d = !e._toBoolean1();
        }
        var f = a.pop();
        var g = a.pop();
        if (g.isError) {
            return new ExcelCalcValue(g.toErrorValue());
        }
        var h = g._toDouble3();
        var i = f.toArrayProxy();
        var j = i.getLength(0);
        var k = i.getLength(1);
        var l, m, n;
        l = m = n = 0;
        for (var o = 0; o < j; o++) {
            for (var p = 0; p < k; p++) {
                var q = i.item(o, p);
                if (q.isError) {
                    return new ExcelCalcValue(q.toErrorValue());
                }
                if (q.isNull || q.isString || q.isBoolean) {
                    l++;
                }
                else {
                    var r = Base.compareSimple(h, q._toDouble3());
                    if (r < 0) {
                        m++;
                    }
                    else if (r == 0) {
                        n++;
                    }
                }
            }
        }
        if (n == 0) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(3));
        }
        var s = !d ? (k * j) - (l + m + n) : m;
        var t = s + 1;
        if (c) {
            t += (n - 1) / 2;
        }
        return new ExcelCalcValue(t);
    };
    UltraCalcFunctionRankBase.prototype.get_maxArgs = function () {
        return 3;
    };
    Object.defineProperty(UltraCalcFunctionRankBase.prototype, "maxArgs", {
        get: function () {
            return this.get_maxArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionRankBase.prototype.get_minArgs = function () {
        return 2;
    };
    Object.defineProperty(UltraCalcFunctionRankBase.prototype, "minArgs", {
        get: function () {
            return this.get_minArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionRankBase.$t = markType(UltraCalcFunctionRankBase, 'UltraCalcFunctionRankBase', BuiltInFunctionBase.$);
    return UltraCalcFunctionRankBase;
}(BuiltInFunctionBase));
export { UltraCalcFunctionRankBase };
