/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __generator } from "tslib";
import { Base, IEnumerable$1_$type, Type, toEnum, markType } from "igniteui-react-core";
import { KeyValuePair$2 } from "igniteui-react-core";
import { Comparer$1 } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { KeyNotFoundException } from "./KeyNotFoundException";
/**
 * @hidden
 */
var SortedList$2 = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SortedList$2, _super);
    function SortedList$2($tKey, $tValue, a) {
        var _rest = [];
        for (var _a = 3; _a < arguments.length; _a++) {
            _rest[_a - 3] = arguments[_a];
        }
        var _this = _super.call(this) || this;
        _this.$tKey = null;
        _this.$tValue = null;
        _this._f = null;
        _this._g = null;
        _this._i = null;
        _this.$tKey = $tKey;
        _this.$tValue = $tValue;
        _this.$type = _this.$type.specialize(_this.$tKey, _this.$tValue);
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = [Comparer$1.defaultComparerValue(_this.$tKey)];
                    {
                        var e = c[0];
                        _this._f = e;
                        _this._g = new List$1(_this.$tKey, 0);
                        _this._i = new List$1(_this.$tValue, 0);
                    }
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    _this._f = c;
                    _this._g = new List$1(_this.$tKey, 0);
                    _this._i = new List$1(_this.$tValue, 0);
                }
                break;
        }
        return _this;
    }
    SortedList$2.prototype._getEnumerator = function () {
        var a;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    a = 0;
                    _a.label = 1;
                case 1:
                    if (!(a < this._g.count))
                        return [3 /*break*/, 4];
                    return [4 /*yield*/, new KeyValuePair$2(this.$tKey, this.$tValue, 1, this._g._inner[a], this._i._inner[a])];
                case 2:
                    _a.sent();
                    _a.label = 3;
                case 3:
                    a++;
                    return [3 /*break*/, 1];
                case 4: return [2 /*return*/];
            }
        });
    };
    SortedList$2.prototype.getEnumerator = function () {
        var _this = this;
        return toEnum(function () { return _this._getEnumerator(); }).getEnumerator();
    };
    SortedList$2.prototype.getEnumeratorObject = function () {
        return this.getEnumerator();
    };
    SortedList$2.prototype._m = function (a, b) {
        var c = this._g.g(a, this._f);
        if (c < 0) {
            this._g.insert(~c, a);
            this._i.insert(~c, b);
        }
        else {
        }
    };
    SortedList$2.prototype._b = function (a) {
        var b = this._g.g(a, this._f);
        return 0 <= b;
    };
    SortedList$2.prototype._l = function (a) {
        var b = this._g.g(a, this._f);
        if (b < 0) {
            return -1;
        }
        return b;
    };
    SortedList$2.prototype._c = function (a) {
        var b = this._g.g(a, this._f);
        if (b < 0) {
            return false;
        }
        this._n(b);
        return true;
    };
    SortedList$2.prototype._n = function (a) {
        this._g.removeAt(a);
        this._i.removeAt(a);
    };
    SortedList$2.prototype._d = function (a, b) {
        var c = this._g.g(a, this._f);
        if (c < 0) {
            b = Type.getDefaultValue(this.$tValue);
            return {
                ret: false,
                p1: b
            };
        }
        b = this._i._inner[c];
        return {
            ret: true,
            p1: b
        };
    };
    Object.defineProperty(SortedList$2.prototype, "_e", {
        get: function () {
            return this._f;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SortedList$2.prototype, "_k", {
        get: function () {
            return this._g.count;
        },
        enumerable: false,
        configurable: true
    });
    SortedList$2.prototype._item = function (a, b) {
        if (arguments.length === 2) {
            var c = this._g.g(a, this._f);
            if (c < 0) {
                this._g.insert(~c, a);
                this._i.insert(~c, b);
            }
            else {
                this._i._inner[c] = b;
            }
            return b;
        }
        else {
            var b_1 = this._g.g(a, this._f);
            if (b_1 < 0) {
                throw new KeyNotFoundException(null, null);
            }
            return this._i._inner[b_1];
        }
    };
    Object.defineProperty(SortedList$2.prototype, "_h", {
        get: function () {
            return this._g;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SortedList$2.prototype, "_j", {
        get: function () {
            return this._i;
        },
        enumerable: false,
        configurable: true
    });
    SortedList$2.$t = markType(SortedList$2, 'SortedList$2', Base.$, [IEnumerable$1_$type.specialize(KeyValuePair$2.$.specialize(0, 1))]);
    return SortedList$2;
}(Base));
export { SortedList$2 };
