/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { Base, fromEnum, typeCast, String_$type, markType, getInstanceType } from "igniteui-react-core";
import { ISupportSetProperty_$type } from "./ISupportSetProperty";
import { ST_OnOff } from "./ST_OnOff";
/**
 * @hidden
 */
var CT_HeaderFooter_Chart = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CT_HeaderFooter_Chart, _super);
    function CT_HeaderFooter_Chart() {
        var _this = _super.call(this) || this;
        _this.u = null;
        _this.s = null;
        _this.m = null;
        _this.k = null;
        _this.q = null;
        _this.o = null;
        _this.b = false;
        _this.i = false;
        _this.g = false;
        return _this;
    }
    Object.defineProperty(CT_HeaderFooter_Chart.prototype, "t", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_HeaderFooter_Chart.prototype, "r", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_HeaderFooter_Chart.prototype, "l", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_HeaderFooter_Chart.prototype, "j", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_HeaderFooter_Chart.prototype, "p", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_HeaderFooter_Chart.prototype, "n", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_HeaderFooter_Chart.prototype, "a", {
        get: function () {
            return this.b;
        },
        set: function (a) {
            this.b = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_HeaderFooter_Chart.prototype, "h", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_HeaderFooter_Chart.prototype, "f", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            this.g = a;
        },
        enumerable: false,
        configurable: true
    });
    CT_HeaderFooter_Chart.w = function (a, b, c, d) {
        var e_1, _a;
        b = false;
        c = false;
        d = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                switch (e.a.e(a.d)) {
                    case "alignWithMargins":
                        b = ST_OnOff.e(e.d);
                        break;
                    case "differentOddEven":
                        c = ST_OnOff.e(e.d);
                        break;
                    case "differentFirst":
                        d = ST_OnOff.e(e.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        ;
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    CT_HeaderFooter_Chart.x = function (a, b, c, d, e) {
        a.ad.p(b, "c");
        var f = null;
        var g = null;
        g = "alignWithMargins";
        f = ST_OnOff.g(c);
        a.ad.h(g, f);
        g = "differentFirst";
        f = ST_OnOff.g(d);
        a.ad.h(g, f);
        g = "differentOddEven";
        f = ST_OnOff.g(e);
        a.ad.h(g, f);
        ;
    };
    CT_HeaderFooter_Chart.prototype.setProperty = function (a, b) {
        switch (a) {
            case 1118:
                this.t = typeCast(String_$type, b);
                break;
            case 1117:
                this.r = typeCast(String_$type, b);
                break;
            case 597:
                this.l = typeCast(String_$type, b);
                break;
            case 596:
                this.j = typeCast(String_$type, b);
                break;
            case 645:
                this.p = typeCast(String_$type, b);
                break;
            case 644:
                this.n = typeCast(String_$type, b);
                break;
            default: break;
        }
    };
    CT_HeaderFooter_Chart.prototype.toString = function () {
        var a = getInstanceType(this);
        return a != null ? a.typeName : _super.prototype.toString.call(this);
    };
    CT_HeaderFooter_Chart.$t = markType(CT_HeaderFooter_Chart, 'CT_HeaderFooter_Chart', Base.$, [ISupportSetProperty_$type]);
    return CT_HeaderFooter_Chart;
}(Base));
export { CT_HeaderFooter_Chart };
