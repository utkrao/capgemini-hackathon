/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ValueType, toNullable, markStruct } from "igniteui-react-core";
import { Guid } from "igniteui-react-core";
import { CultureInfo } from "igniteui-react-core";
import { stringToLocaleUpper } from "igniteui-react-core";
/**
 * @hidden
 */
var ST_Guid = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ST_Guid, _super);
    function ST_Guid(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this.d = new Guid();
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0: break;
            case 1:
                {
                    var c = _rest[0];
                    _this.d = c;
                }
                break;
        }
        return _this;
    }
    ST_Guid.c = function (a) {
        return ST_Guid.a(new Guid(3, a));
    };
    ST_Guid.prototype.toString = function () {
        return stringToLocaleUpper(this.d.toString2("B"), CultureInfo.invariantCulture);
    };
    ST_Guid.a = function (a) {
        return new ST_Guid(1, a);
    };
    ST_Guid.h = function (a) {
        if (!a.hasValue) {
            return toNullable(ST_Guid.$, null);
        }
        return toNullable(ST_Guid.$, ST_Guid.a(a.value));
    };
    ST_Guid.e = function (a) {
        return a.d;
    };
    ST_Guid.g = function (a) {
        if (!a.hasValue) {
            return toNullable(Guid.$, null);
        }
        return toNullable(Guid.$, ST_Guid.e(a.value));
    };
    ST_Guid.$t = markStruct(ST_Guid, 'ST_Guid');
    return ST_Guid;
}(ValueType));
export { ST_Guid };
