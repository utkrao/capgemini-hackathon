/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
import { intDivide } from "igniteui-react-core";
import { stringFormat } from "igniteui-react-core";
import { stringEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
var UltraCalcFunctionDec2XBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionDec2XBase, _super);
    function UltraCalcFunctionDec2XBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionDec2XBase.prototype.evaluate = function (a, b) {
        var c = 0;
        if (b == 2) {
            var d = a.pop()._toInt321();
            if (d <= 0) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            else {
                c = d;
            }
        }
        var e = a.pop();
        if (e.isError) {
            return new ExcelCalcValue(e.toErrorValue());
        }
        var f = e._toInt641();
        if (f < this._ap || f > this._al) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(4));
        }
        var g = UltraCalcFunctionDec2XBase._at(f, this._ak, this._ap, this._al);
        if (c > 0) {
            if (g.length < 10 && g.length > c) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
        }
        else {
            c = 1;
        }
        while (g.length < c) {
            g = stringFormat("{0}{1}", "0", g);
        }
        return new ExcelCalcValue(g);
    };
    UltraCalcFunctionDec2XBase.prototype.get_minArgs = function () {
        return 1;
    };
    Object.defineProperty(UltraCalcFunctionDec2XBase.prototype, "minArgs", {
        get: function () {
            return this.get_minArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionDec2XBase.prototype.get_maxArgs = function () {
        return 2;
    };
    Object.defineProperty(UltraCalcFunctionDec2XBase.prototype, "maxArgs", {
        get: function () {
            return this.get_maxArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionDec2XBase._at = function (a, b, c, d) {
        var e = false;
        if (a < 0) {
            a -= c;
            e = true;
        }
        a &= d;
        if (e) {
            a |= (-c);
        }
        var f = stringEmpty();
        if (a == 0) {
            f = "0";
        }
        while (a > 0) {
            var g = a % b;
            var h = void 0;
            if (g < 10) {
                h = g.toString();
            }
            else {
                g = g - 10;
                h = String.fromCharCode((g + 65)).toString();
            }
            f = stringFormat("{0}{1}", h, f);
            a = intDivide(a, b);
        }
        return f;
    };
    UltraCalcFunctionDec2XBase.$t = markType(UltraCalcFunctionDec2XBase, 'UltraCalcFunctionDec2XBase', BuiltInFunctionBase.$);
    return UltraCalcFunctionDec2XBase;
}(BuiltInFunctionBase));
export { UltraCalcFunctionDec2XBase };
