/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, typeCast, markType } from "igniteui-react-core";
import { ColorInfo } from "./ColorInfo";
import { CellFillGradientStop } from "./CellFillGradientStop";
import { WorkbookColorInfo } from "./WorkbookColorInfo";
import { ColorsInternal } from "./ColorsInternal";
/**
 * @hidden
 */
var StopInfo = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StopInfo, _super);
    function StopInfo() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.f = 0;
        _this.b = null;
        return _this;
    }
    Object.defineProperty(StopInfo.prototype, "g", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StopInfo.prototype, "c", {
        get: function () {
            return this.b;
        },
        set: function (a) {
            this.b = a;
        },
        enumerable: false,
        configurable: true
    });
    StopInfo.prototype.equals = function (a) {
        if (Base.referenceEquals(this, a)) {
            return true;
        }
        var b = typeCast(StopInfo.$, a);
        if (b == null) {
            return false;
        }
        return Base.equalsStatic(this.f, b.f) && Base.equalsStatic(this.b, b.b);
    };
    StopInfo.prototype.getHashCode = function () {
        var a = (this.f);
        if (this.b != null) {
            a ^= this.b.getHashCode();
        }
        return a;
    };
    StopInfo.d = function (a, b) {
        var c = new StopInfo();
        c.c = ColorInfo.a(a, b.colorInfo, 1);
        c.g = b.offset;
        return c;
    };
    StopInfo.prototype.a = function (a) {
        var b = new WorkbookColorInfo(ColorsInternal.a);
        if (this.c != null) {
            b = this.c.c(a);
        }
        return new CellFillGradientStop(b, this.g);
    };
    StopInfo.$t = markType(StopInfo, 'StopInfo');
    return StopInfo;
}(Base));
export { StopInfo };
