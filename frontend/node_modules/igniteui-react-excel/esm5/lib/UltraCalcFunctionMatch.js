/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { UltraCalcFunctionLookupBase } from "./UltraCalcFunctionLookupBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { MathUtilities } from "./MathUtilities";
import { markType } from "igniteui-react-core";
import { truncate } from "igniteui-react-core";
/**
 * @hidden
 */
var UltraCalcFunctionMatch = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionMatch, _super);
    function UltraCalcFunctionMatch() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionMatch.prototype.evaluate = function (a, b) {
        var c = null;
        if (b == 3) {
            c = a.pop();
        }
        var d = a.pop();
        var e = a.pop();
        if (e.isError) {
            return e;
        }
        if (d.isError) {
            return d;
        }
        if (c != null && c.isError) {
            return c;
        }
        if (e.isNull) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(3));
        }
        var f = d._d(false);
        var g = f.getLength(0);
        var h = f.getLength(1);
        if (g != 1 && h != 1) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(3));
        }
        var i = (h < g);
        var j = i ? g : h;
        var k = 1;
        if (c != null && ((function () { var l = c._toDouble1(k); k = l.p0; return l.ret; })()) == false) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(1));
        }
        var l = truncate(MathUtilities.j(k));
        var m = UltraCalcFunctionLookupBase._al(f._j(i ? 1 : 0, 0), e, l);
        if (m < 0 || j <= m) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(3));
        }
        return new ExcelCalcValue(m + 1);
    };
    UltraCalcFunctionMatch.prototype.get_name = function () {
        return "match";
    };
    Object.defineProperty(UltraCalcFunctionMatch.prototype, "name", {
        get: function () {
            return this.get_name();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionMatch.prototype.get_minArgs = function () {
        return 2;
    };
    UltraCalcFunctionMatch.prototype.get_maxArgs = function () {
        return 3;
    };
    UltraCalcFunctionMatch.prototype.doesParameterAllowIntermediateResultArray = function (a, b) {
        return (b == false);
    };
    UltraCalcFunctionMatch.$t = markType(UltraCalcFunctionMatch, 'UltraCalcFunctionMatch', UltraCalcFunctionLookupBase.$);
    return UltraCalcFunctionMatch;
}(UltraCalcFunctionLookupBase));
export { UltraCalcFunctionMatch };
