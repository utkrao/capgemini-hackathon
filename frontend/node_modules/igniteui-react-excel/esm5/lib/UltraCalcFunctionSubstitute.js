/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
import { stringIsNullOrEmpty, stringReplace } from "igniteui-react-core";
/**
 * @hidden
 */
var UltraCalcFunctionSubstitute = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionSubstitute, _super);
    function UltraCalcFunctionSubstitute() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionSubstitute.prototype.evaluate = function (a, b) {
        var c = 0;
        var d = null;
        if (b == 4) {
            d = a.pop();
        }
        var e = a.pop();
        var f = a.pop();
        var g = a.pop();
        if (g.isError) {
            return new ExcelCalcValue(g.toErrorValue());
        }
        if (f.isError) {
            return new ExcelCalcValue(f.toErrorValue());
        }
        if (e.isError) {
            return new ExcelCalcValue(e.toErrorValue());
        }
        if (d != null) {
            if (d.isError) {
                return new ExcelCalcValue(d.toErrorValue());
            }
            c = d._toInt();
            if (c < 1) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(1));
            }
        }
        var h = g.toString();
        var i = f.toString();
        if (!stringIsNullOrEmpty(h) && !stringIsNullOrEmpty(i)) {
            var j = e.toString();
            if (c == 0) {
                h = stringReplace(h, i, j);
            }
            else {
                var k = 0;
                while (c > 0) {
                    k = h.indexOf(i, k);
                    c--;
                    if (c > 0 && k >= 0) {
                        k++;
                    }
                }
                if (k >= 0) {
                    var l = k > 0 ? h.substr(0, k) : "";
                    var m = k + i.length < h.length ? h.substr(k + i.length) : "";
                    h = l + j + m;
                }
            }
        }
        return new ExcelCalcValue(h);
    };
    UltraCalcFunctionSubstitute.prototype.get_name = function () {
        return "substitute";
    };
    Object.defineProperty(UltraCalcFunctionSubstitute.prototype, "name", {
        get: function () {
            return this.get_name();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionSubstitute.prototype.get_minArgs = function () {
        return 3;
    };
    Object.defineProperty(UltraCalcFunctionSubstitute.prototype, "minArgs", {
        get: function () {
            return this.get_minArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionSubstitute.prototype.get_maxArgs = function () {
        return 4;
    };
    Object.defineProperty(UltraCalcFunctionSubstitute.prototype, "maxArgs", {
        get: function () {
            return this.get_maxArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionSubstitute.$t = markType(UltraCalcFunctionSubstitute, 'UltraCalcFunctionSubstitute', BuiltInFunctionBase.$);
    return UltraCalcFunctionSubstitute;
}(BuiltInFunctionBase));
export { UltraCalcFunctionSubstitute };
