/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ValueType, Type, toNullable, Number_$type, markStruct } from "igniteui-react-core";
/**
 * @hidden
 */
var EvaluationResult$1 = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(EvaluationResult$1, _super);
    function EvaluationResult$1($t, a) {
        var _rest = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            _rest[_i - 2] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this.$t = null;
        _this.a = null;
        _this.c = false;
        _this.e = toNullable(Number_$type, null);
        _this.$t = $t;
        _this.$type = _this.$type.specialize(_this.$t);
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0: break;
            case 1:
                {
                    var c = _rest[0];
                    _this.c = true;
                    _this.a = c;
                    _this.e = toNullable(Number_$type, null);
                }
                break;
            case 2:
                {
                    var c = _rest[0];
                    _this.c = false;
                    _this.a = Type.getDefaultValue(_this.$t);
                    _this.e = c;
                }
                break;
        }
        return _this;
    }
    Object.defineProperty(EvaluationResult$1.prototype, "d", {
        get: function () {
            return this.c;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvaluationResult$1.prototype, "b", {
        get: function () {
            return this.a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvaluationResult$1.prototype, "f", {
        get: function () {
            return this.e;
        },
        enumerable: false,
        configurable: true
    });
    EvaluationResult$1.$t = markStruct(EvaluationResult$1, 'EvaluationResult$1');
    return EvaluationResult$1;
}(ValueType));
export { EvaluationResult$1 };
