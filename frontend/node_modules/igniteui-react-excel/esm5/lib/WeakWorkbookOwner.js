/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, typeCast, markType } from "igniteui-react-core";
import { IWorkbookOwner_$type } from "./IWorkbookOwner";
import { WeakReference } from "igniteui-react-core";
import { ExcelUtils } from "./ExcelUtils";
/**
 * @hidden
 */
var WeakWorkbookOwner = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WeakWorkbookOwner, _super);
    function WeakWorkbookOwner(a) {
        var _this = _super.call(this) || this;
        _this.b = null;
        _this.b = new WeakReference(a);
        return _this;
    }
    Object.defineProperty(WeakWorkbookOwner.prototype, "a", {
        get: function () {
            return typeCast(IWorkbookOwner_$type, ExcelUtils.dy(this.b));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WeakWorkbookOwner.prototype, "isUndoEnabled", {
        get: function () {
            var a = typeCast(IWorkbookOwner_$type, ExcelUtils.dy(this.b));
            return a != null && a.isUndoEnabled;
        },
        enumerable: false,
        configurable: true
    });
    WeakWorkbookOwner.prototype.onCellValueChange = function (a, b) {
        var c = typeCast(IWorkbookOwner_$type, ExcelUtils.dy(this.b));
        if (c != null) {
            c.onCellValueChange(a, b);
        }
    };
    WeakWorkbookOwner.prototype._onChange$2$i = function ($tContext, $tValue, a, b, c, d, e) {
        var f = ExcelUtils.dy(this.b);
        if (f != null) {
            f._onChange$2$i($tContext, $tValue, a, b, c, d, e);
        }
    };
    WeakWorkbookOwner.prototype.onConditionalFormatChange = function (a) {
        var b = typeCast(IWorkbookOwner_$type, ExcelUtils.dy(this.b));
        if (b != null) {
            b.onConditionalFormatChange(a);
        }
    };
    WeakWorkbookOwner.prototype.onCustomViewApplied = function (a) {
        var b = typeCast(IWorkbookOwner_$type, ExcelUtils.dy(this.b));
        if (b != null) {
            b.onCustomViewApplied(a);
        }
    };
    WeakWorkbookOwner.prototype.onSheetRemoving = function (a) {
        var b = typeCast(IWorkbookOwner_$type, ExcelUtils.dy(this.b));
        if (b != null) {
            b.onSheetRemoving(a);
        }
    };
    WeakWorkbookOwner.prototype.onTransactionalChangeBegin = function (a, b) {
        var c = typeCast(IWorkbookOwner_$type, ExcelUtils.dy(this.b));
        return c != null ? c.onTransactionalChangeBegin(a, b) : null;
    };
    WeakWorkbookOwner.prototype.onTransactionalChangeEnd = function (a) {
        var b = typeCast(IWorkbookOwner_$type, ExcelUtils.dy(this.b));
        if (b != null) {
            b.onTransactionalChangeEnd(a);
        }
    };
    WeakWorkbookOwner.prototype.onTransactionalChangeRollback = function (a) {
        var b = typeCast(IWorkbookOwner_$type, ExcelUtils.dy(this.b));
        if (b != null) {
            b.onTransactionalChangeRollback(a);
        }
    };
    WeakWorkbookOwner.$t = markType(WeakWorkbookOwner, 'WeakWorkbookOwner', Base.$, [IWorkbookOwner_$type]);
    return WeakWorkbookOwner;
}(Base));
export { WeakWorkbookOwner };
