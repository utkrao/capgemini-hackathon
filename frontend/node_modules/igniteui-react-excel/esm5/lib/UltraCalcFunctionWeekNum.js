/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
import { intDivide } from "igniteui-react-core";
import { dateGetDate, dateFromValues, dateAddDays } from "igniteui-react-core";
import { timeSpanDays } from "igniteui-react-core";
/**
 * @hidden
 */
var UltraCalcFunctionWeekNum = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionWeekNum, _super);
    function UltraCalcFunctionWeekNum() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionWeekNum.prototype.evaluate = function (a, b) {
        var c = (b == 2) ? a.pop()._toInt321() : 1;
        var d;
        switch (c) {
            case 1:
                d = 0;
                break;
            case 2:
                d = 1;
                break;
            default: return new ExcelCalcValue(new ExcelCalcErrorValue(4));
        }
        var e = dateGetDate(a.pop()._toDateTime1());
        var f = dateFromValues(e.getFullYear(), 1, 1, 0, 0, 0, 0);
        var g = f;
        while (g.getDay() != d) {
            g = dateAddDays(g, 1);
        }
        var h = (intDivide((timeSpanDays((+e - +g))), 7)) + 1;
        if (+f != +g && e >= g) {
            h += 1;
        }
        return new ExcelCalcValue(h);
    };
    UltraCalcFunctionWeekNum.prototype.get_name = function () {
        return "weeknum";
    };
    Object.defineProperty(UltraCalcFunctionWeekNum.prototype, "name", {
        get: function () {
            return this.get_name();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionWeekNum.prototype.get_minArgs = function () {
        return 1;
    };
    Object.defineProperty(UltraCalcFunctionWeekNum.prototype, "minArgs", {
        get: function () {
            return this.get_minArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionWeekNum.prototype.get_maxArgs = function () {
        return 2;
    };
    Object.defineProperty(UltraCalcFunctionWeekNum.prototype, "maxArgs", {
        get: function () {
            return this.get_maxArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionWeekNum.prototype.doesParameterAllowIntermediateResultArray = function (a, b) {
        return (b == false);
    };
    UltraCalcFunctionWeekNum.$t = markType(UltraCalcFunctionWeekNum, 'UltraCalcFunctionWeekNum', BuiltInFunctionBase.$);
    return UltraCalcFunctionWeekNum;
}(BuiltInFunctionBase));
export { UltraCalcFunctionWeekNum };
