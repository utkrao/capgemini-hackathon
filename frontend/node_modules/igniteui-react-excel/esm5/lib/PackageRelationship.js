/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "igniteui-react-core";
import { IPackageRelationship_$type } from "./IPackageRelationship";
import { Uri } from "igniteui-react-core";
/**
 * @hidden
 */
var PackageRelationship = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PackageRelationship, _super);
    function PackageRelationship(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this._sourceUri = null;
        _this._targetUri = null;
        _this._id = null;
        _this._relationshipType = null;
        _this._targetMode = 0;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    var f = _rest[3];
                    var g = [new Uri(1, "/", 2), c, d, e, f];
                    {
                        var i = g[0];
                        var j = g[1];
                        var k = g[2];
                        var l = g[3];
                        var m = g[4];
                        _this.sourceUri = i;
                        _this.targetMode = k;
                        _this.targetUri = j;
                        _this.id = m;
                        _this.relationshipType = l;
                    }
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    var f = _rest[3];
                    var g = _rest[4];
                    _this.sourceUri = c;
                    _this.targetMode = e;
                    _this.targetUri = d;
                    _this.id = g;
                    _this.relationshipType = f;
                }
                break;
        }
        return _this;
    }
    Object.defineProperty(PackageRelationship.prototype, "sourceUri", {
        get: function () {
            return this._sourceUri;
        },
        set: function (a) {
            this._sourceUri = a;
        },
        enumerable: false,
        configurable: true
    });
    PackageRelationship.prototype.get_targetUri = function () {
        return this._targetUri;
    };
    PackageRelationship.prototype.set_targetUri = function (a) {
        this._targetUri = a;
    };
    Object.defineProperty(PackageRelationship.prototype, "targetUri", {
        get: function () {
            return this.get_targetUri();
        },
        set: function (a) {
            this.set_targetUri(a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PackageRelationship.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (a) {
            this._id = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PackageRelationship.prototype, "relationshipType", {
        get: function () {
            return this._relationshipType;
        },
        set: function (a) {
            this._relationshipType = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PackageRelationship.prototype, "targetMode", {
        get: function () {
            return this._targetMode;
        },
        set: function (a) {
            this._targetMode = a;
        },
        enumerable: false,
        configurable: true
    });
    PackageRelationship.$t = markType(PackageRelationship, 'PackageRelationship', Base.$, [IPackageRelationship_$type]);
    return PackageRelationship;
}(Base));
export { PackageRelationship };
