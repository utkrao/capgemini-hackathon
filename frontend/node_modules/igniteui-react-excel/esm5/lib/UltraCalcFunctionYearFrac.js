/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { CalcDateUtilities } from "./CalcDateUtilities";
import { MathUtilities } from "./MathUtilities";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
var UltraCalcFunctionYearFrac = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionYearFrac, _super);
    function UltraCalcFunctionYearFrac() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionYearFrac.prototype.evaluate = function (a, b) {
        var c = b == 3 ? a.pop() : null;
        var d = a.pop();
        var e = a.pop();
        var f, g;
        if (!((function () { var h = e._aj(a._w, f, false, true); f = h.p1; return h.ret; })())) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(4));
        }
        if (!((function () { var h = d._aj(a._w, g, false, true); g = h.p1; return h.ret; })())) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(4));
        }
        var h = c == null ? 0 : c._toInt321();
        if (h < 0 || h > 4) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(4));
        }
        var i = CalcDateUtilities.d(f, g, h);
        return new ExcelCalcValue(MathUtilities.i(i));
    };
    UltraCalcFunctionYearFrac.prototype.get_maxArgs = function () {
        return 3;
    };
    Object.defineProperty(UltraCalcFunctionYearFrac.prototype, "maxArgs", {
        get: function () {
            return this.get_maxArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionYearFrac.prototype.get_minArgs = function () {
        return 2;
    };
    Object.defineProperty(UltraCalcFunctionYearFrac.prototype, "minArgs", {
        get: function () {
            return this.get_minArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionYearFrac.prototype.get_name = function () {
        return "yearfrac";
    };
    Object.defineProperty(UltraCalcFunctionYearFrac.prototype, "name", {
        get: function () {
            return this.get_name();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionYearFrac.$t = markType(UltraCalcFunctionYearFrac, 'UltraCalcFunctionYearFrac', BuiltInFunctionBase.$);
    return UltraCalcFunctionYearFrac;
}(BuiltInFunctionBase));
export { UltraCalcFunctionYearFrac };
