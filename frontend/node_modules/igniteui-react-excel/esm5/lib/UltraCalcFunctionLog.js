/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
import { logBase } from "igniteui-react-core";
/**
 * @hidden
 */
var UltraCalcFunctionLog = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionLog, _super);
    function UltraCalcFunctionLog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionLog.prototype.evaluate = function (a, b) {
        var c = null;
        if (b == 2) {
            c = a.pop();
        }
        var d = a.pop();
        if (d.isError) {
            return new ExcelCalcValue(d.toErrorValue());
        }
        if (c != null && c.isError) {
            return new ExcelCalcValue(c.toErrorValue());
        }
        var e, f;
        if (c != null) {
            if (((function () { var g = c._toDouble1(e); e = g.p0; return g.ret; })()) == false) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(1));
            }
        }
        else {
            e = 10;
        }
        if (((function () { var g = d._toDouble1(f); f = g.p0; return g.ret; })()) == false) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(1));
        }
        if (true && f == 0) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(4));
        }
        return new ExcelCalcValue(logBase(f, e));
    };
    UltraCalcFunctionLog.prototype.get_name = function () {
        return "log";
    };
    Object.defineProperty(UltraCalcFunctionLog.prototype, "name", {
        get: function () {
            return this.get_name();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionLog.prototype.get_minArgs = function () {
        return 1;
    };
    Object.defineProperty(UltraCalcFunctionLog.prototype, "minArgs", {
        get: function () {
            return this.get_minArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionLog.prototype.get_maxArgs = function () {
        return 2;
    };
    Object.defineProperty(UltraCalcFunctionLog.prototype, "maxArgs", {
        get: function () {
            return this.get_maxArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionLog.prototype.doesParameterAllowIntermediateResultArray = function (a, b) {
        return true;
    };
    UltraCalcFunctionLog.$t = markType(UltraCalcFunctionLog, 'UltraCalcFunctionLog', BuiltInFunctionBase.$);
    return UltraCalcFunctionLog;
}(BuiltInFunctionBase));
export { UltraCalcFunctionLog };
