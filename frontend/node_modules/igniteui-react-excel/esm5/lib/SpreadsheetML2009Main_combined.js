/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { XmlNamespaceDefinitionBase } from "./XmlNamespaceDefinitionBase";
import { ST_ConformanceClass_$type } from "./ST_ConformanceClass";
import { ST_DataValidationType_$type } from "./ST_DataValidationType";
import { ST_DataValidationErrorStyle_$type } from "./ST_DataValidationErrorStyle";
import { ST_DataValidationImeMode_$type } from "./ST_DataValidationImeMode";
import { ST_DataValidationOperator_$type } from "./ST_DataValidationOperator";
import { fromEnum, toNullable, Number_$type, Boolean_$type, markType, String_$type, Date_$type } from "igniteui-react-core";
import { ST_OnOff } from "./ST_OnOff";
import { CultureInfo } from "igniteui-react-core";
import { ST_CfType_$type } from "./ST_CfType";
import { ST_ConditionalFormattingOperator_$type } from "./ST_ConditionalFormattingOperator";
import { ST_TimePeriod_$type } from "./ST_TimePeriod";
import { ST_CfvoType_$type } from "./ST_CfvoType";
import { ST_DataBarDirection_$type } from "./ST_DataBarDirection";
import { ST_DataBarAxisPosition_$type } from "./ST_DataBarAxisPosition";
import { ST_IconSetType_$type } from "./ST_IconSetType";
import { nullableNotEquals } from "igniteui-react-core";
import { OfficeDocumentRelationships } from "./OfficeDocumentRelationships";
import { parseUInt32_1, u32BitwiseOr, tryParseInt32_2, parseNumber, parseInt32_1, parseUInt8_1, parseUInt16_1 } from "igniteui-react-core";
import { stringIsNullOrEmpty, stringJoin1 } from "igniteui-react-core";
import { StringBuilder } from "igniteui-react-core";
import { DocCoreUtils } from "./DocCoreUtils";
import { ST_BorderStyle_$type } from "./ST_BorderStyle";
import { ST_UnsignedIntHex } from "./ST_UnsignedIntHex";
import { ST_HorizontalAlignment_$type } from "./ST_HorizontalAlignment";
import { ST_VerticalAlignment_$type } from "./ST_VerticalAlignment";
import { ST_CalcMode_$type } from "./ST_CalcMode";
import { ST_RefMode_$type } from "./ST_RefMode";
import { ST_CellType_$type } from "./ST_CellType";
import { XLOpenXmlUtilities } from "./XLOpenXmlUtilities";
import { ST_UnsignedShortHex } from "./ST_UnsignedShortHex";
import { ST_Guid } from "./ST_Guid";
import { DrawingNamespaceDefinitionBase } from "./DrawingNamespaceDefinitionBase";
import { ST_SheetState_$type } from "./ST_SheetState";
import { ST_FilterOperator_$type } from "./ST_FilterOperator";
import { ST_SheetViewType_$type } from "./ST_SheetViewType";
import { ST_Comments_$type } from "./ST_Comments";
import { ST_Objects_$type } from "./ST_Objects";
import { ST_DateTimeGrouping_$type } from "./ST_DateTimeGrouping";
import { ST_DynamicFilterType_$type } from "./ST_DynamicFilterType";
import { ST_CellFormulaType_$type } from "./ST_CellFormulaType";
import { XmlNamespace } from "./XmlNamespace";
import { Convert } from "igniteui-react-core";
import { ST_CalendarType_$type } from "./ST_CalendarType";
import { ST_GradientType_$type } from "./ST_GradientType";
import { AlternateContentChoice } from "./AlternateContentChoice";
import { ST_PageOrder_$type } from "./ST_PageOrder";
import { ST_Orientation_$type } from "./ST_Orientation";
import { ST_CellComments_$type } from "./ST_CellComments";
import { ST_PrintError_$type } from "./ST_PrintError";
import { ST_Pane_$type } from "./ST_Pane";
import { ST_PaneState_$type } from "./ST_PaneState";
import { ST_PatternType_$type } from "./ST_PatternType";
import { ST_FontScheme_$type } from "./ST_FontScheme";
import { ST_SortBy_$type } from "./ST_SortBy";
import { ST_SortMethod_$type } from "./ST_SortMethod";
import { ST_TotalsRowFunction_$type } from "./ST_TotalsRowFunction";
import { ST_TableType_$type } from "./ST_TableType";
import { ST_TableStyleType_$type } from "./ST_TableStyleType";
import { ST_UnderlineValues_$type } from "./ST_UnderlineValues";
import { ST_VerticalAlignRun_$type } from "./ST_VerticalAlignRun";
import { ST_UpdateLinks_$type } from "./ST_UpdateLinks";
import { ST_Visibility_$type } from "./ST_Visibility";
import { dateParse, dateToString } from "igniteui-react-core";
/**
 * @hidden
 */
var SpreadsheetML2009Main = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SpreadsheetML2009Main, _super);
    function SpreadsheetML2009Main() {
        return _super.call(this) || this;
    }
    SpreadsheetML2009Main.prototype.s = function (a) {
        switch (a) {
            case 0:
            case 1: return SpreadsheetML2009Main.b1;
            default: return SpreadsheetML2009Main.b1;
        }
    };
    SpreadsheetML2009Main.prototype.get_t = function () {
        return "x14";
    };
    Object.defineProperty(SpreadsheetML2009Main.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    SpreadsheetML2009Main.cz = function (a, b, c, d, e, f, g, h, i, j, k, l, m) {
        var e_1, _a;
        b = 0;
        c = 0;
        d = 0;
        e = 0;
        f = false;
        g = false;
        h = false;
        i = false;
        j = null;
        k = null;
        l = null;
        m = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var n = _c.value;
                switch (n.a.e(a.d)) {
                    case "type":
                        b = XmlNamespaceDefinitionBase.b(ST_DataValidationType_$type, n.d, b);
                        break;
                    case "errorStyle":
                        c = XmlNamespaceDefinitionBase.b(ST_DataValidationErrorStyle_$type, n.d, c);
                        break;
                    case "imeMode":
                        d = XmlNamespaceDefinitionBase.b(ST_DataValidationImeMode_$type, n.d, d);
                        break;
                    case "operator":
                        e = XmlNamespaceDefinitionBase.b(ST_DataValidationOperator_$type, n.d, e);
                        break;
                    case "allowBlank":
                        f = ST_OnOff.e(n.d);
                        break;
                    case "showDropDown":
                        g = ST_OnOff.e(n.d);
                        break;
                    case "showInputMessage":
                        h = ST_OnOff.e(n.d);
                        break;
                    case "showErrorMessage":
                        i = ST_OnOff.e(n.d);
                        break;
                    case "errorTitle":
                        j = n.d;
                        break;
                    case "error":
                        k = n.d;
                        break;
                    case "promptTitle":
                        l = n.d;
                        break;
                    case "prompt":
                        m = n.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m
        };
    };
    SpreadsheetML2009Main.dh = function (a, b, c, d, e, f, g, h, i, j, k, l, m) {
        if (b === void 0) {
            b = 0;
        }
        if (c === void 0) {
            c = 0;
        }
        if (d === void 0) {
            d = 0;
        }
        if (e === void 0) {
            e = 0;
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = false;
        }
        if (h === void 0) {
            h = false;
        }
        if (i === void 0) {
            i = false;
        }
        if (j === void 0) {
            j = null;
        }
        if (k === void 0) {
            k = null;
        }
        if (l === void 0) {
            l = null;
        }
        if (m === void 0) {
            m = null;
        }
        a.ad.p(SpreadsheetML2009Main.be, "x14");
        var n;
        if (b != 0) {
            n = XmlNamespaceDefinitionBase.p(ST_DataValidationType_$type, b);
            a.ad.h("type", n);
        }
        if (c != 0) {
            n = XmlNamespaceDefinitionBase.p(ST_DataValidationErrorStyle_$type, c);
            a.ad.h("errorStyle", n);
        }
        if (d != 0) {
            n = XmlNamespaceDefinitionBase.p(ST_DataValidationImeMode_$type, d);
            a.ad.h("imeMode", n);
        }
        if (e != 0) {
            n = XmlNamespaceDefinitionBase.p(ST_DataValidationOperator_$type, e);
            a.ad.h("operator", n);
        }
        if (f != false) {
            n = ST_OnOff.g(f);
            a.ad.h("allowBlank", n);
        }
        if (g != false) {
            n = ST_OnOff.g(g);
            a.ad.h("showDropDown", n);
        }
        if (h != false) {
            n = ST_OnOff.g(h);
            a.ad.h("showInputMessage", n);
        }
        if (i != false) {
            n = ST_OnOff.g(i);
            a.ad.h("showErrorMessage", n);
        }
        n = j;
        a.ad.h("errorTitle", n);
        n = k;
        a.ad.h("error", n);
        n = l;
        a.ad.h("promptTitle", n);
        n = m;
        a.ad.h("prompt", n);
    };
    SpreadsheetML2009Main.c0 = function (a, b, c, d, e) {
        var e_2, _a;
        b = false;
        c = toNullable(Number_$type, null);
        d = toNullable(Number_$type, null);
        e = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "disablePrompts":
                        b = ST_OnOff.e(f.d);
                        break;
                    case "xWindow":
                        c = toNullable(Number_$type, parseUInt32_1(f.d, CultureInfo.invariantCulture));
                        break;
                    case "yWindow":
                        d = toNullable(Number_$type, parseUInt32_1(f.d, CultureInfo.invariantCulture));
                        break;
                    case "count":
                        e = toNullable(Number_$type, parseUInt32_1(f.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetML2009Main.di = function (a, b, c, d, e) {
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = toNullable(Number_$type, null);
        }
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        if (e === void 0) {
            e = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetML2009Main.bf, "x14");
        var f;
        if (b != false) {
            f = ST_OnOff.g(b);
            a.ad.h("disablePrompts", f);
        }
        if (nullableNotEquals(c, null)) {
            f = c.value.toString();
            a.ad.h("xWindow", f);
        }
        if (nullableNotEquals(d, null)) {
            f = d.value.toString();
            a.ad.h("yWindow", f);
        }
        if (nullableNotEquals(e, null)) {
            f = e.value.toString();
            a.ad.h("count", f);
        }
    };
    SpreadsheetML2009Main.c1 = function (a) {
    };
    SpreadsheetML2009Main.dj = function (a) {
        a.ad.p(SpreadsheetML2009Main.bo, "x14");
    };
    SpreadsheetML2009Main.c2 = function (a) {
    };
    SpreadsheetML2009Main.dk = function (a) {
        a.ad.p(SpreadsheetML2009Main.bp, "x14");
    };
    SpreadsheetML2009Main.c3 = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, SpreadsheetML2009Main.bw);
        return {
            p1: b
        };
    };
    SpreadsheetML2009Main.dl = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, SpreadsheetML2009Main.bw, SpreadsheetML2009Main.b1, b);
    };
    SpreadsheetML2009Main.df = function (a) {
        a.ad.p(SpreadsheetML2009Main.ba, "x14");
    };
    SpreadsheetML2009Main.cx = function (a, b) {
        var e_3, _a;
        b = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                switch (c.a.e(a.d)) {
                    case SpreadsheetML2009Main.bw:
                        b = c.d;
                        break;
                }
            }
        }
        catch (e_3_1) {
            e_3 = { error: e_3_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_3)
                    throw e_3.error;
            }
        }
        return {
            p1: b
        };
    };
    SpreadsheetML2009Main.de = function (a, b, c) {
        a.ad.p(SpreadsheetML2009Main.a9, "x14");
        var d;
        if (stringIsNullOrEmpty(b) == false) {
            d = b;
            a.ad.i("xmlns", "xm", null, d);
        }
        if (c.hasValue && c.value) {
            d = ST_OnOff.g(c.value);
            a.ad.h("pivot", d);
        }
    };
    SpreadsheetML2009Main.dd = function (a) {
        a.ad.p(SpreadsheetML2009Main.a7, "x14");
    };
    SpreadsheetML2009Main.db = function (a, b, c, d, e, f, g) {
        if (c === void 0) {
            c = toNullable(ST_CfType_$type, null);
        }
        if (d === void 0) {
            d = 0;
        }
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = toNullable(ST_ConditionalFormattingOperator_$type, null);
        }
        if (g === void 0) {
            g = toNullable(Boolean_$type, null);
        }
        var h = toNullable(Number_$type, null);
        var i = toNullable(Boolean_$type, null);
        var j = toNullable(Boolean_$type, null);
        var k = toNullable(Boolean_$type, null);
        var l = null;
        var m = toNullable(ST_TimePeriod_$type, null);
        var n = toNullable(Number_$type, null);
        var o = toNullable(Number_$type, null);
        var p = toNullable(Boolean_$type, null);
        SpreadsheetMLMain.zq(a, SpreadsheetML2009Main.ax, c, h, d, e, i, j, k, f, l, m, n, o, p, b, g);
    };
    SpreadsheetML2009Main.cw = function (a, b, c, d) {
        var e = SpreadsheetMLMain.t7(a, SpreadsheetML2009Main.ay, b, c, d);
        b = e.p2;
        c = e.p3;
        d = e.p4;
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    SpreadsheetML2009Main.dc = function (a, b, c) {
        if (c === void 0) {
            c = true;
        }
        a.ad.p(SpreadsheetML2009Main.ay, "x14");
        var d;
        d = XmlNamespaceDefinitionBase.p(ST_CfvoType_$type, b);
        a.ad.h("type", d);
        if (c != true) {
            d = ST_OnOff.g(c);
            a.ad.h("gte", d);
        }
    };
    SpreadsheetML2009Main.cy = function (a, b, c, d, e, f, g, h, i, j) {
        var e_4, _a;
        b = toNullable(Number_$type, null);
        c = toNullable(Number_$type, null);
        d = toNullable(Boolean_$type, null);
        e = toNullable(Boolean_$type, null);
        f = toNullable(Boolean_$type, null);
        g = toNullable(ST_DataBarDirection_$type, null);
        h = toNullable(Boolean_$type, null);
        i = toNullable(Boolean_$type, null);
        j = toNullable(ST_DataBarAxisPosition_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var k = _c.value;
                switch (k.a.e(a.d)) {
                    case "minLength":
                        c = toNullable(Number_$type, parseUInt32_1(k.d, CultureInfo.invariantCulture));
                        break;
                    case "maxLength":
                        b = toNullable(Number_$type, parseUInt32_1(k.d, CultureInfo.invariantCulture));
                        break;
                    case "showValue":
                        d = toNullable(Boolean_$type, ST_OnOff.e(k.d));
                        break;
                    case "border":
                        e = toNullable(Boolean_$type, ST_OnOff.e(k.d));
                        break;
                    case "gradient":
                        f = toNullable(Boolean_$type, ST_OnOff.e(k.d));
                        break;
                    case "direction":
                        g = toNullable(ST_DataBarDirection_$type, XmlNamespaceDefinitionBase.b(ST_DataBarDirection_$type, k.d));
                        break;
                    case "negativeBarColorSameAsPositive":
                        h = toNullable(Boolean_$type, ST_OnOff.e(k.d));
                        break;
                    case "negativeBarBorderColorSameAsPositive":
                        i = toNullable(Boolean_$type, ST_OnOff.e(k.d));
                        break;
                    case "axisPosition":
                        j = toNullable(ST_DataBarAxisPosition_$type, XmlNamespaceDefinitionBase.b(ST_DataBarAxisPosition_$type, k.d));
                        break;
                }
            }
        }
        catch (e_4_1) {
            e_4 = { error: e_4_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_4)
                    throw e_4.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j
        };
    };
    SpreadsheetML2009Main.dg = function (a, b, c, d, e, f, g, h, i, j) {
        a.ad.p(SpreadsheetML2009Main.bd, "x14");
        var k;
        if (b.hasValue) {
            k = b.value.toString();
            a.ad.h("minLength", k);
        }
        if (c.hasValue) {
            k = c.value.toString();
            a.ad.h("maxLength", k);
        }
        if (d.hasValue && d.value != true) {
            k = ST_OnOff.g(d.value);
            a.ad.h("showValue", k);
        }
        if (e.hasValue && e.value) {
            k = ST_OnOff.g(e.value);
            a.ad.h("border", k);
        }
        if (f.hasValue && f.value != true) {
            k = ST_OnOff.g(f.value);
            a.ad.h("gradient", k);
        }
        if (g.hasValue && g.value != 0) {
            k = XmlNamespaceDefinitionBase.p(ST_DataBarDirection_$type, g.value);
            a.ad.h("direction", k);
        }
        if (h.hasValue && h.value != false) {
            k = ST_OnOff.g(h.value);
            a.ad.h("negativeBarColorSameAsPositive", k);
        }
        if (i.hasValue && i.value != true) {
            k = ST_OnOff.g(i.value);
            a.ad.h("negativeBarBorderColorSameAsPositive", k);
        }
        if (j.hasValue && j.value != 0) {
            k = XmlNamespaceDefinitionBase.p(ST_DataBarAxisPosition_$type, j.value);
            a.ad.h("axisPosition", k);
        }
    };
    SpreadsheetML2009Main.cv = function (a, b, c) {
        var e_5, _a;
        b = 3;
        c = 0;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                switch (d.a.e(a.d)) {
                    case "iconSet":
                        b = XmlNamespaceDefinitionBase.b(ST_IconSetType_$type, d.d);
                        break;
                    case "iconId":
                        c = parseUInt32_1(d.d);
                        break;
                }
            }
        }
        catch (e_5_1) {
            e_5 = { error: e_5_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_5)
                    throw e_5.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetML2009Main.da = function (a, b, c) {
        a.ad.p(SpreadsheetML2009Main.aw, "x14");
        var d;
        d = XmlNamespaceDefinitionBase.p(ST_IconSetType_$type, b);
        a.ad.h("iconSet", d);
        d = c.toString();
        a.ad.h("iconId", d);
    };
    SpreadsheetML2009Main.c4 = function (a, b, c, d, e) {
        var e_6, _a;
        b = null;
        c = false;
        d = false;
        e = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "name":
                        b = f.d;
                        break;
                    case "icon":
                        c = ST_OnOff.e(f.d);
                        break;
                    case "advise":
                        d = ST_OnOff.e(f.d);
                        break;
                    case "preferPic":
                        e = ST_OnOff.e(f.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_6_1) {
            e_6 = { error: e_6_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_6)
                    throw e_6.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetML2009Main.dm = function (a, b, c, d, e) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = false;
        }
        a.ad.p(SpreadsheetML2009Main.b6, "x14");
        var f;
        f = b;
        a.ad.h("name", f);
        if (c != false) {
            f = ST_OnOff.g(c);
            a.ad.h("icon", f);
        }
        if (d != false) {
            f = ST_OnOff.g(d);
            a.ad.h("advise", f);
        }
        if (e != false) {
            f = ST_OnOff.g(e);
            a.ad.h("preferPic", f);
        }
    };
    SpreadsheetML2009Main.c5 = function (a) {
    };
    SpreadsheetML2009Main.dn = function (a) {
        a.ad.p(SpreadsheetML2009Main.b8, "x14");
    };
    SpreadsheetML2009Main.c8 = function (a, b) {
        b = a.ao(OfficeDocumentRelationships.as);
        return {
            p1: b
        };
    };
    SpreadsheetML2009Main.dr = function (a, b) {
        a.ad.p(SpreadsheetML2009Main.cg, "x14");
        var c;
        c = b;
        a.ad.h(OfficeDocumentRelationships.as, c);
    };
    SpreadsheetML2009Main.c6 = function (a, b) {
        b = a.ao(OfficeDocumentRelationships.as);
        return {
            p1: b
        };
    };
    SpreadsheetML2009Main.dp = function (a, b) {
        a.ad.p(SpreadsheetML2009Main.ch, "x14");
        var c;
        c = b;
        a.ad.h(OfficeDocumentRelationships.as, c);
    };
    SpreadsheetML2009Main.c7 = function (a) {
    };
    SpreadsheetML2009Main.dq = function (a) {
        a.ad.p(SpreadsheetML2009Main.ci, "x14");
    };
    SpreadsheetML2009Main.c9 = function (a) {
    };
    SpreadsheetML2009Main.ds = function (a) {
        a.ad.p(SpreadsheetML2009Main.ck, "x14");
    };
    SpreadsheetML2009Main.$t = markType(SpreadsheetML2009Main, 'SpreadsheetML2009Main', XmlNamespaceDefinitionBase.$);
    SpreadsheetML2009Main.b1 = "http://schemas.microsoft.com/office/spreadsheetml/2009/9/main";
    SpreadsheetML2009Main.as = SpreadsheetML2009Main.b1 + "/axisColor";
    SpreadsheetML2009Main.av = SpreadsheetML2009Main.b1 + "/borderColor";
    SpreadsheetML2009Main.a9 = SpreadsheetML2009Main.b1 + "/conditionalFormatting";
    SpreadsheetML2009Main.ba = SpreadsheetML2009Main.b1 + "/conditionalFormattings";
    SpreadsheetML2009Main.aw = SpreadsheetML2009Main.b1 + "/cfIcon";
    SpreadsheetML2009Main.ax = SpreadsheetML2009Main.b1 + "/cfRule";
    SpreadsheetML2009Main.ay = SpreadsheetML2009Main.b1 + "/cfvo";
    SpreadsheetML2009Main.az = SpreadsheetML2009Main.b1 + "/color";
    SpreadsheetML2009Main.a7 = SpreadsheetML2009Main.b1 + "/colorScale";
    SpreadsheetML2009Main.bd = SpreadsheetML2009Main.b1 + "/dataBar";
    SpreadsheetML2009Main.be = SpreadsheetML2009Main.b1 + "/dataValidation";
    SpreadsheetML2009Main.bf = SpreadsheetML2009Main.b1 + "/dataValidations";
    SpreadsheetML2009Main.bj = SpreadsheetML2009Main.b1 + "/dxf";
    SpreadsheetML2009Main.bn = SpreadsheetML2009Main.b1 + "/fillColor";
    SpreadsheetML2009Main.bo = SpreadsheetML2009Main.b1 + "/formula1";
    SpreadsheetML2009Main.bp = SpreadsheetML2009Main.b1 + "/formula2";
    SpreadsheetML2009Main.bs = SpreadsheetML2009Main.b1 + "/iconFilter";
    SpreadsheetML2009Main.bu = SpreadsheetML2009Main.b1 + "/iconSet";
    SpreadsheetML2009Main.bw = SpreadsheetML2009Main.b1 + "/id";
    SpreadsheetML2009Main.b4 = SpreadsheetML2009Main.b1 + "/negativeBorderColor";
    SpreadsheetML2009Main.b5 = SpreadsheetML2009Main.b1 + "/negativeFillColor";
    SpreadsheetML2009Main.b6 = SpreadsheetML2009Main.b1 + "/oleItem";
    SpreadsheetML2009Main.b8 = SpreadsheetML2009Main.b1 + "/pivotCaches";
    SpreadsheetML2009Main.cg = SpreadsheetML2009Main.b1 + "/slicer";
    SpreadsheetML2009Main.ch = SpreadsheetML2009Main.b1 + "/slicerCache";
    SpreadsheetML2009Main.ci = SpreadsheetML2009Main.b1 + "/slicerCaches";
    SpreadsheetML2009Main.ck = SpreadsheetML2009Main.b1 + "/slicerList";
    SpreadsheetML2009Main.cm = SpreadsheetML2009Main.b1 + "/sortCondition";
    SpreadsheetML2009Main.cn = SpreadsheetML2009Main.b1 + "/sparkline";
    SpreadsheetML2009Main.co = SpreadsheetML2009Main.b1 + "/sparklineGroup";
    SpreadsheetML2009Main.cp = SpreadsheetML2009Main.b1 + "/sparklineGroups";
    SpreadsheetML2009Main.cr = SpreadsheetML2009Main.b1 + "/sparklines";
    SpreadsheetML2009Main.a0 = SpreadsheetML2009Main.b1 + "/colorAxis";
    SpreadsheetML2009Main.a1 = SpreadsheetML2009Main.b1 + "/colorFirst";
    SpreadsheetML2009Main.a2 = SpreadsheetML2009Main.b1 + "/colorHigh";
    SpreadsheetML2009Main.a3 = SpreadsheetML2009Main.b1 + "/colorLast";
    SpreadsheetML2009Main.a4 = SpreadsheetML2009Main.b1 + "/colorLow";
    SpreadsheetML2009Main.a5 = SpreadsheetML2009Main.b1 + "/colorMarkers";
    SpreadsheetML2009Main.a6 = SpreadsheetML2009Main.b1 + "/colorNegative";
    SpreadsheetML2009Main.a8 = SpreadsheetML2009Main.b1 + "/colorSeries";
    SpreadsheetML2009Main.ao = new SpreadsheetML2009Main();
    return SpreadsheetML2009Main;
}(XmlNamespaceDefinitionBase));
export { SpreadsheetML2009Main };
/**
 * @hidden
 */
var SpreadsheetMLMain = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SpreadsheetMLMain, _super);
    function SpreadsheetMLMain() {
        return _super.call(this) || this;
    }
    SpreadsheetMLMain.prototype.s = function (a) {
        switch (a) {
            case 0: return SpreadsheetMLMain.lh;
            case 1: return SpreadsheetMLMain.lg;
            default: return SpreadsheetMLMain.lh;
        }
    };
    SpreadsheetMLMain.prototype.get_t = function () {
        return null;
    };
    Object.defineProperty(SpreadsheetMLMain.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    SpreadsheetMLMain.tk = function (a, b, c, d) {
        if (a == null) {
            a = new StringBuilder(1, b.length);
        }
        a.m(b, d, c - d);
        d = c + 1;
        return {
            p0: a,
            p3: d
        };
    };
    SpreadsheetMLMain.hh = function (a) {
        if (a == null) {
            return null;
        }
        var b = null;
        var c = 0;
        for (var d = 0; d < a.length; d++) {
            var e = a.charAt(d);
            if (e == '_') {
                if (a.length <= d + 6 || a.charAt(d + 1) != 'x' || a.charAt(d + 6) != '_') {
                    continue;
                }
                if (DocCoreUtils.d(a.charAt(d + 2)) == false || DocCoreUtils.d(a.charAt(d + 3)) == false || DocCoreUtils.d(a.charAt(d + 4)) == false || DocCoreUtils.d(a.charAt(d + 5)) == false) {
                    continue;
                }
                var f = SpreadsheetMLMain.tk(b, a, d, c);
                b = f.p0;
                c = f.p3;
                b.l("_x005F_");
            }
            if (e.charCodeAt(0) == 9 || e.charCodeAt(0) == 10 || e.charCodeAt(0) == 13 || (32 <= e.charCodeAt(0) && e.charCodeAt(0) <= 55295) || (57344 <= e.charCodeAt(0) && e.charCodeAt(0) <= 65533)) {
                continue;
            }
            if (65535 <= e.charCodeAt(0)) {
                continue;
            }
            var g = SpreadsheetMLMain.tk(b, a, d, c);
            b = g.p0;
            c = g.p3;
            b.q("_x{0:X4}_", e.charCodeAt(0));
        }
        if (c == 0) {
            return a;
        }
        var h = SpreadsheetMLMain.tk(b, a, a.length, c);
        b = h.p0;
        c = h.p3;
        return b.toString();
    };
    SpreadsheetMLMain.rw = function (a, b) {
        if (b === void 0) {
            b = false;
        }
        if (a == null) {
            return null;
        }
        var c = null;
        var d = 0;
        var _loop_1 = function (e) {
            var f = a.charAt(e);
            if (f != '_') {
                if (b) {
                    if (f == '\n') {
                        var g = SpreadsheetMLMain.tk(c, a, e, d);
                        c = g.p0;
                        d = g.p3;
                    }
                    else if (f == '\r') {
                        var h = SpreadsheetMLMain.tk(c, a, e, d);
                        c = h.p0;
                        d = h.p3;
                        if (e + 1 < a.length && a.charAt(e + 1) == '\n') {
                            e++;
                            d++;
                        }
                    }
                }
                return out_e_1 = e, "continue";
            }
            if (a.length <= e + 6 || a.charAt(e + 1) != 'x' || a.charAt(e + 6) != '_') {
                return out_e_1 = e, "continue";
            }
            var i = a.substr(e + 2, 4);
            var j;
            if (((function () { var k = tryParseInt32_2(i, 515, CultureInfo.invariantCulture, j); j = k.p3; return k.ret; })()) == false) {
                return out_e_1 = e, "continue";
            }
            var k = SpreadsheetMLMain.tk(c, a, e, d);
            c = k.p0;
            d = k.p3;
            c.h(String.fromCharCode(j));
            e += 6;
            d += 6;
            out_e_1 = e;
        };
        var out_e_1;
        for (var e = 0; e < a.length; e++) {
            _loop_1(e);
            e = out_e_1;
        }
        if (d == 0) {
            return a;
        }
        var l = SpreadsheetMLMain.tk(c, a, a.length, d);
        c = l.p0;
        d = l.p3;
        return c.toString();
    };
    SpreadsheetMLMain.ur = function (a, b, c) {
        var d = a.ao("val");
        if (d == null) {
            c = true;
        }
        else {
            c = ST_OnOff.e(d);
        }
        return {
            p2: c
        };
    };
    SpreadsheetMLMain.aac = function (a, b, c) {
        if (c === void 0) {
            c = true;
        }
        a.ad.p(b, null);
        var d;
        if (c != true) {
            d = ST_OnOff.g(c);
            a.ad.h("val", d);
        }
    };
    SpreadsheetMLMain.us = function (a, b, c) {
        c = 0;
        var d = a.ao("style");
        if (d != null) {
            c = XmlNamespaceDefinitionBase.b(ST_BorderStyle_$type, d, c);
        }
        return {
            p2: c
        };
    };
    SpreadsheetMLMain.aad = function (a, b, c) {
        if (c === void 0) {
            c = 0;
        }
        a.ad.p(b, null);
        var d;
        if (c != 0) {
            d = XmlNamespaceDefinitionBase.p(ST_BorderStyle_$type, c);
            a.ad.h("style", d);
        }
    };
    SpreadsheetMLMain.ut = function (a, b, c, d, e, f, g) {
        var e_7, _a;
        c = toNullable(Boolean_$type, null);
        d = toNullable(Number_$type, null);
        e = toNullable(ST_UnsignedIntHex.$, null);
        f = toNullable(Number_$type, null);
        g = 0;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var h = _c.value;
                switch (h.a.e(a.d)) {
                    case "auto":
                        c = toNullable(Boolean_$type, ST_OnOff.e(h.d));
                        break;
                    case "indexed":
                        d = toNullable(Number_$type, parseUInt32_1(h.d, CultureInfo.invariantCulture));
                        break;
                    case "rgb":
                        var i = ST_UnsignedIntHex.d(h.d);
                        if (h.d != null && h.d.length == 6) {
                            i = new ST_UnsignedIntHex(1, u32BitwiseOr(ST_UnsignedIntHex.h(i), 4278190080));
                        }
                        e = toNullable(ST_UnsignedIntHex.$, i);
                        break;
                    case "theme":
                        f = toNullable(Number_$type, parseUInt32_1(h.d, CultureInfo.invariantCulture));
                        break;
                    case "tint":
                        g = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    default: break;
                }
            }
        }
        catch (e_7_1) {
            e_7 = { error: e_7_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_7)
                    throw e_7.error;
            }
        }
        return {
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g
        };
    };
    SpreadsheetMLMain.aae = function (a, b, c, d, e, f, g) {
        if (c === void 0) {
            c = toNullable(Boolean_$type, null);
        }
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        if (e === void 0) {
            e = toNullable(ST_UnsignedIntHex.$, null);
        }
        if (f === void 0) {
            f = toNullable(Number_$type, null);
        }
        if (g === void 0) {
            g = 0;
        }
        a.ad.p(b, null);
        var h;
        if (nullableNotEquals(c, null)) {
            h = ST_OnOff.g(c.value);
            a.ad.h("auto", h);
        }
        if (nullableNotEquals(d, null)) {
            h = d.value.toString();
            a.ad.h("indexed", h);
        }
        if (nullableNotEquals(e, null)) {
            h = e.value.toString();
            a.ad.h("rgb", h);
        }
        if (nullableNotEquals(f, null)) {
            h = f.value.toString();
            a.ad.h("theme", h);
        }
        if (g != 0) {
            h = g.toString();
            a.ad.h("tint", h);
        }
    };
    SpreadsheetMLMain.uu = function (a, b, c) {
        c = XmlNamespaceDefinitionBase.u(a, b);
        return {
            p2: c
        };
    };
    SpreadsheetMLMain.aaf = function (a, b, c) {
        XmlNamespaceDefinitionBase.aj(a, b, null, c);
    };
    SpreadsheetMLMain.uv = function (a, b, c, d) {
        var e_8, _a;
        c = 0;
        d = 0;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                switch (e.a.e(a.d)) {
                    case "count":
                        c = parseUInt32_1(e.d, CultureInfo.invariantCulture);
                        break;
                    case "manualBreakCount":
                        d = parseUInt32_1(e.d, CultureInfo.invariantCulture);
                        break;
                    default: break;
                }
            }
        }
        catch (e_8_1) {
            e_8 = { error: e_8_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_8)
                    throw e_8.error;
            }
        }
        return {
            p2: c,
            p3: d
        };
    };
    SpreadsheetMLMain.aag = function (a, b, c, d) {
        if (c === void 0) {
            c = 0;
        }
        if (d === void 0) {
            d = 0;
        }
        a.ad.p(b, null);
        var e;
        if (c != 0) {
            e = c.toString();
            a.ad.h("count", e);
        }
        if (d != 0) {
            e = d.toString();
            a.ad.h("manualBreakCount", e);
        }
    };
    SpreadsheetMLMain.uw = function (a, b, c, d) {
        var e = a.ao("array");
        if (e == null) {
            d = false;
        }
        else {
            d = ST_OnOff.e(e);
        }
        c = a.ab.ad;
        return {
            p2: c,
            p3: d
        };
    };
    SpreadsheetMLMain.aah = function (a, b, c, d) {
        if (d === void 0) {
            d = false;
        }
        a.ad.p(b, null);
        var e;
        if (d != false) {
            e = ST_OnOff.g(d);
            a.ad.h("array", e);
        }
        a.ad.u(c);
    };
    SpreadsheetMLMain.tl = function (a, b, c, d, e, f, g, h, i, j) {
        var e_9, _a;
        b = toNullable(ST_HorizontalAlignment_$type, null);
        c = toNullable(ST_VerticalAlignment_$type, null);
        d = toNullable(Number_$type, null);
        e = false;
        f = toNullable(Number_$type, null);
        g = toNullable(Number_$type, null);
        h = false;
        i = false;
        j = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var k = _c.value;
                switch (k.a.e(a.d)) {
                    case "horizontal":
                        b = toNullable(ST_HorizontalAlignment_$type, XmlNamespaceDefinitionBase.b(ST_HorizontalAlignment_$type, k.d));
                        break;
                    case "vertical":
                        c = toNullable(ST_VerticalAlignment_$type, XmlNamespaceDefinitionBase.b(ST_VerticalAlignment_$type, k.d));
                        break;
                    case "textRotation":
                        d = toNullable(Number_$type, parseUInt32_1(k.d, CultureInfo.invariantCulture));
                        break;
                    case "wrapText":
                        e = ST_OnOff.e(k.d);
                        break;
                    case "indent":
                        f = toNullable(Number_$type, parseUInt32_1(k.d, CultureInfo.invariantCulture));
                        break;
                    case "relativeIndent":
                        g = toNullable(Number_$type, parseInt32_1(k.d, CultureInfo.invariantCulture));
                        break;
                    case "justifyLastLine":
                        h = ST_OnOff.e(k.d);
                        break;
                    case "shrinkToFit":
                        i = ST_OnOff.e(k.d);
                        break;
                    case "readingOrder":
                        j = toNullable(Number_$type, parseUInt32_1(k.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_9_1) {
            e_9 = { error: e_9_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_9)
                    throw e_9.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j
        };
    };
    SpreadsheetMLMain.y6 = function (a, b, c, d, e, f, g, h, i, j) {
        if (b === void 0) {
            b = toNullable(ST_HorizontalAlignment_$type, null);
        }
        if (c === void 0) {
            c = toNullable(ST_VerticalAlignment_$type, null);
        }
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = toNullable(Number_$type, null);
        }
        if (g === void 0) {
            g = toNullable(Number_$type, null);
        }
        if (h === void 0) {
            h = false;
        }
        if (i === void 0) {
            i = false;
        }
        if (j === void 0) {
            j = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.ck, null);
        var k;
        if (nullableNotEquals(b, null)) {
            k = XmlNamespaceDefinitionBase.p(ST_HorizontalAlignment_$type, b.value);
            a.ad.h("horizontal", k);
        }
        if (nullableNotEquals(c, null)) {
            k = XmlNamespaceDefinitionBase.p(ST_VerticalAlignment_$type, c.value);
            a.ad.h("vertical", k);
        }
        if (nullableNotEquals(d, null)) {
            k = d.value.toString();
            a.ad.h("textRotation", k);
        }
        if (e != false) {
            k = ST_OnOff.g(e);
            a.ad.h("wrapText", k);
        }
        if (nullableNotEquals(f, null)) {
            k = f.value.toString();
            a.ad.h("indent", k);
        }
        if (nullableNotEquals(g, null)) {
            k = g.value.toString();
            a.ad.h("relativeIndent", k);
        }
        if (h != false) {
            k = ST_OnOff.g(h);
            a.ad.h("justifyLastLine", k);
        }
        if (i != false) {
            k = ST_OnOff.g(i);
            a.ad.h("shrinkToFit", k);
        }
        if (nullableNotEquals(j, null)) {
            k = j.value.toString();
            a.ad.h("readingOrder", k);
        }
    };
    SpreadsheetMLMain.tm = function (a, b, c) {
        var e_10, _a;
        b = false;
        c = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                switch (d.a.e(a.d)) {
                    case "moveWithCells":
                        b = ST_OnOff.e(d.d);
                        break;
                    case "sizeWithCells":
                        c = ST_OnOff.e(d.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_10_1) {
            e_10 = { error: e_10_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_10)
                    throw e_10.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.y7 = function (a, b, c) {
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = false;
        }
        a.ad.p(SpreadsheetMLMain.cp, null);
        var d;
        if (b != false) {
            d = ST_OnOff.g(b);
            a.ad.h("moveWithCells", d);
        }
        if (c != false) {
            d = ST_OnOff.g(c);
            a.ad.h("sizeWithCells", d);
        }
    };
    SpreadsheetMLMain.tn = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, SpreadsheetMLMain.c0);
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.y8 = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, SpreadsheetMLMain.c0, null, b);
    };
    SpreadsheetMLMain.to = function (a) {
    };
    SpreadsheetMLMain.y9 = function (a) {
        a.ad.p(SpreadsheetMLMain.c2, null);
    };
    SpreadsheetMLMain.tp = function (a, b) {
        b = a.ao("ref");
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.za = function (a, b) {
        a.ad.p(SpreadsheetMLMain.c6, null);
        var c;
        c = b;
        a.ad.h("ref", c);
    };
    SpreadsheetMLMain.tq = function (a, b) {
        var c = SpreadsheetMLMain.ur(a, SpreadsheetMLMain.dd, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.zb = function (a, b) {
        if (b === void 0) {
            b = true;
        }
        SpreadsheetMLMain.aac(a, SpreadsheetMLMain.dd, b);
    };
    SpreadsheetMLMain.tr = function (a, b, c, d, e, f) {
        var g = SpreadsheetMLMain.ut(a, SpreadsheetMLMain.dh, b, c, d, e, f);
        b = g.p2;
        c = g.p3;
        d = g.p4;
        e = g.p5;
        f = g.p6;
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f
        };
    };
    SpreadsheetMLMain.zc = function (a, b, c, d, e, f) {
        if (b === void 0) {
            b = toNullable(Boolean_$type, null);
        }
        if (c === void 0) {
            c = toNullable(Number_$type, null);
        }
        if (d === void 0) {
            d = toNullable(ST_UnsignedIntHex.$, null);
        }
        if (e === void 0) {
            e = toNullable(Number_$type, null);
        }
        if (f === void 0) {
            f = 0;
        }
        SpreadsheetMLMain.aae(a, SpreadsheetMLMain.dh, b, c, d, e, f);
    };
    SpreadsheetMLMain.ts = function (a) {
    };
    SpreadsheetMLMain.zd = function (a) {
        a.ad.p(SpreadsheetMLMain.dk, null);
    };
    SpreadsheetMLMain.tt = function (a, b, c, d) {
        var e_11, _a;
        b = false;
        c = false;
        d = true;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                switch (e.a.e(a.d)) {
                    case "diagonalUp":
                        b = ST_OnOff.e(e.d);
                        break;
                    case "diagonalDown":
                        c = ST_OnOff.e(e.d);
                        break;
                    case "outline":
                        d = ST_OnOff.e(e.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_11_1) {
            e_11 = { error: e_11_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_11)
                    throw e_11.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    SpreadsheetMLMain.ze = function (a, b, c, d) {
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = true;
        }
        a.ad.p(SpreadsheetMLMain.dl, null);
        var e;
        if (b != false) {
            e = ST_OnOff.g(b);
            a.ad.h("diagonalUp", e);
        }
        if (c != false) {
            e = ST_OnOff.g(c);
            a.ad.h("diagonalDown", e);
        }
        if (d != true) {
            e = ST_OnOff.g(d);
            a.ad.h("outline", e);
        }
    };
    SpreadsheetMLMain.tu = function (a, b) {
        var c = a.ao("count");
        if (c == null) {
            b = toNullable(Number_$type, null);
        }
        else {
            b = toNullable(Number_$type, parseUInt32_1(c, CultureInfo.invariantCulture));
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.zf = function (a, b) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.dn, null);
        var c;
        if (nullableNotEquals(b, null)) {
            c = b.value.toString();
            a.ad.h("count", c);
        }
    };
    SpreadsheetMLMain.tv = function (a, b) {
        var c = SpreadsheetMLMain.us(a, SpreadsheetMLMain.dp, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.zg = function (a, b) {
        if (b === void 0) {
            b = 0;
        }
        SpreadsheetMLMain.aad(a, SpreadsheetMLMain.dp, b);
    };
    SpreadsheetMLMain.tw = function (a, b, c, d, e, f) {
        var e_12, _a;
        b = 0;
        c = toNullable(Number_$type, null);
        d = toNullable(Number_$type, null);
        e = false;
        f = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var g = _c.value;
                switch (g.a.e(a.d)) {
                    case "id":
                        b = parseUInt32_1(g.d, CultureInfo.invariantCulture);
                        break;
                    case "min":
                        c = toNullable(Number_$type, parseUInt32_1(g.d, CultureInfo.invariantCulture));
                        break;
                    case "max":
                        d = toNullable(Number_$type, parseUInt32_1(g.d, CultureInfo.invariantCulture));
                        break;
                    case "man":
                        e = ST_OnOff.e(g.d);
                        break;
                    case "pt":
                        f = ST_OnOff.e(g.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_12_1) {
            e_12 = { error: e_12_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_12)
                    throw e_12.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f
        };
    };
    SpreadsheetMLMain.zh = function (a, b, c, d, e, f) {
        if (b === void 0) {
            b = 0;
        }
        if (c === void 0) {
            c = toNullable(Number_$type, null);
        }
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = false;
        }
        a.ad.p(SpreadsheetMLMain.dr, null);
        var g;
        if (b != 0) {
            g = b.toString();
            a.ad.h("id", g);
        }
        if (c.hasValue && c.value != 0) {
            g = c.value.toString();
            a.ad.h("min", g);
        }
        if (d.hasValue && d.value != 0) {
            g = d.value.toString();
            a.ad.h("max", g);
        }
        if (e != false) {
            g = ST_OnOff.g(e);
            a.ad.h("man", g);
        }
        if (f != false) {
            g = ST_OnOff.g(f);
            a.ad.h("pt", g);
        }
    };
    SpreadsheetMLMain.tx = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
        var e_13, _a;
        b = toNullable(Number_$type, null);
        c = 1;
        d = false;
        e = 0;
        f = false;
        g = 100;
        h = 0.001;
        i = true;
        j = true;
        k = true;
        l = true;
        m = toNullable(Number_$type, null);
        n = toNullable(Boolean_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var o = _c.value;
                switch (o.a.e(a.d)) {
                    case "calcId":
                        b = toNullable(Number_$type, parseUInt32_1(o.d, CultureInfo.invariantCulture));
                        break;
                    case "calcMode":
                        c = XmlNamespaceDefinitionBase.b(ST_CalcMode_$type, o.d, c);
                        break;
                    case "fullCalcOnLoad":
                        d = ST_OnOff.e(o.d);
                        break;
                    case "refMode":
                        e = XmlNamespaceDefinitionBase.b(ST_RefMode_$type, o.d, e);
                        break;
                    case "iterate":
                        f = ST_OnOff.e(o.d);
                        break;
                    case "iterateCount":
                        g = parseUInt32_1(o.d, CultureInfo.invariantCulture);
                        break;
                    case "iterateDelta":
                        h = parseNumber(o.d, CultureInfo.invariantCulture);
                        break;
                    case "fullPrecision":
                        i = ST_OnOff.e(o.d);
                        break;
                    case "calcCompleted":
                        j = ST_OnOff.e(o.d);
                        break;
                    case "calcOnSave":
                        k = ST_OnOff.e(o.d);
                        break;
                    case "concurrentCalc":
                        l = ST_OnOff.e(o.d);
                        break;
                    case "concurrentManualCount":
                        m = toNullable(Number_$type, parseUInt32_1(o.d, CultureInfo.invariantCulture));
                        break;
                    case "forceFullCalc":
                        n = toNullable(Boolean_$type, ST_OnOff.e(o.d));
                        break;
                    default: break;
                }
            }
        }
        catch (e_13_1) {
            e_13 = { error: e_13_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_13)
                    throw e_13.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n
        };
    };
    SpreadsheetMLMain.zi = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        if (c === void 0) {
            c = 1;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = 0;
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = 100;
        }
        if (h === void 0) {
            h = 0.001;
        }
        if (i === void 0) {
            i = true;
        }
        if (j === void 0) {
            j = true;
        }
        if (k === void 0) {
            k = true;
        }
        if (l === void 0) {
            l = true;
        }
        if (m === void 0) {
            m = toNullable(Number_$type, null);
        }
        if (n === void 0) {
            n = toNullable(Boolean_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.d1, null);
        var o;
        if (nullableNotEquals(b, null)) {
            o = b.value.toString();
            a.ad.h("calcId", o);
        }
        if (c != 1) {
            o = XmlNamespaceDefinitionBase.p(ST_CalcMode_$type, c);
            a.ad.h("calcMode", o);
        }
        if (d != false) {
            o = ST_OnOff.g(d);
            a.ad.h("fullCalcOnLoad", o);
        }
        if (e != 0) {
            o = XmlNamespaceDefinitionBase.p(ST_RefMode_$type, e);
            a.ad.h("refMode", o);
        }
        if (f != false) {
            o = ST_OnOff.g(f);
            a.ad.h("iterate", o);
        }
        if (g != 100) {
            o = g.toString();
            a.ad.h("iterateCount", o);
        }
        if (h != 0.001) {
            o = h.toString();
            a.ad.h("iterateDelta", o);
        }
        if (i != true) {
            o = ST_OnOff.g(i);
            a.ad.h("fullPrecision", o);
        }
        if (j != true) {
            o = ST_OnOff.g(j);
            a.ad.h("calcCompleted", o);
        }
        if (k != true) {
            o = ST_OnOff.g(k);
            a.ad.h("calcOnSave", o);
        }
        if (l != true) {
            o = ST_OnOff.g(l);
            a.ad.h("concurrentCalc", o);
        }
        if (nullableNotEquals(m, null)) {
            o = m.value.toString();
            a.ad.h("concurrentManualCount", o);
        }
        if (nullableNotEquals(n, null)) {
            o = ST_OnOff.g(n.value);
            a.ad.h("forceFullCalc", o);
        }
    };
    SpreadsheetMLMain.ty = function (a, b, c) {
        var d = SpreadsheetMLMain.uw(a, SpreadsheetMLMain.d2, b, c);
        b = d.p2;
        c = d.p3;
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.zj = function (a, b, c) {
        if (c === void 0) {
            c = false;
        }
        SpreadsheetMLMain.aah(a, SpreadsheetMLMain.d2, b, c);
    };
    SpreadsheetMLMain.tz = function (a, b, c, d, e, f, g) {
        var e_14, _a;
        b = null;
        c = 0;
        d = 2;
        e = 0;
        f = 0;
        g = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var h = _c.value;
                switch (h.a.e(a.d)) {
                    case "r":
                        b = h.d;
                        break;
                    case "s":
                        c = parseUInt32_1(h.d, CultureInfo.invariantCulture);
                        break;
                    case "t":
                        d = SpreadsheetMLMain.ar(h.d);
                        break;
                    case "cm":
                        e = parseUInt32_1(h.d, CultureInfo.invariantCulture);
                        break;
                    case "vm":
                        f = parseUInt32_1(h.d, CultureInfo.invariantCulture);
                        break;
                    case "ph":
                        g = ST_OnOff.e(h.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_14_1) {
            e_14 = { error: e_14_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_14)
                    throw e_14.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g
        };
    };
    SpreadsheetMLMain.ar = function (a) {
        switch (a) {
            case "b": return 0;
            case "d": return 1;
            case "e": return 3;
            case "n": return 2;
            case "s": return 4;
            case "str": return 5;
            case "inlineStr": return 6;
            default: return 2;
        }
    };
    SpreadsheetMLMain.zk = function (a, b, c, d, e, f, g) {
        if (c === void 0) {
            c = 0;
        }
        if (d === void 0) {
            d = 2;
        }
        if (e === void 0) {
            e = 0;
        }
        if (f === void 0) {
            f = 0;
        }
        if (g === void 0) {
            g = false;
        }
        a.ad.r("c");
        a.ad.j("r", b);
        if (c != 0) {
            a.ad.j("s", c.toString());
        }
        if (d != 2) {
            a.ad.j("t", XLOpenXmlUtilities.a(d));
        }
        if (e != 0) {
            a.ad.j("cm", e.toString());
        }
        if (f != 0) {
            a.ad.j("vm", f.toString());
        }
        if (g != false) {
            a.ad.j("ph", ST_OnOff.g(g));
        }
    };
    SpreadsheetMLMain.t0 = function (a, b, c, d) {
        var e_15, _a;
        b = null;
        c = 2;
        d = 0;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                switch (e.a.e(a.d)) {
                    case "r":
                        b = e.d;
                        break;
                    case "t":
                        c = XmlNamespaceDefinitionBase.b(ST_CellType_$type, e.d, c);
                        break;
                    case "vm":
                        d = parseUInt32_1(e.d, CultureInfo.invariantCulture);
                        break;
                    default: break;
                }
            }
        }
        catch (e_15_1) {
            e_15 = { error: e_15_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_15)
                    throw e_15.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    SpreadsheetMLMain.zl = function (a, b, c, d) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = 2;
        }
        if (d === void 0) {
            d = 0;
        }
        a.ad.p(SpreadsheetMLMain.d5, null);
        var e;
        e = b;
        a.ad.h("r", e);
        if (c != 2) {
            e = XLOpenXmlUtilities.a(c);
            a.ad.h("t", e);
        }
        if (d != 0) {
            e = d.toString();
            a.ad.h("vm", e);
        }
    };
    SpreadsheetMLMain.t1 = function (a, b, c, d, e, f, g) {
        var e_16, _a;
        c = null;
        b = 0;
        d = toNullable(Number_$type, null);
        e = toNullable(Number_$type, null);
        f = false;
        g = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var h = _c.value;
                switch (h.a.e(a.d)) {
                    case "name":
                        c = SpreadsheetMLMain.rw(h.d);
                        break;
                    case "xfId":
                        b = parseUInt32_1(h.d, CultureInfo.invariantCulture);
                        break;
                    case "builtinId":
                        d = toNullable(Number_$type, parseUInt32_1(h.d, CultureInfo.invariantCulture));
                        break;
                    case "iLevel":
                        e = toNullable(Number_$type, parseUInt32_1(h.d, CultureInfo.invariantCulture));
                        break;
                    case "hidden":
                        f = ST_OnOff.e(h.d);
                        break;
                    case "customBuiltin":
                        g = ST_OnOff.e(h.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_16_1) {
            e_16 = { error: e_16_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_16)
                    throw e_16.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g
        };
    };
    SpreadsheetMLMain.zm = function (a, b, c, d, e, f, g) {
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        if (e === void 0) {
            e = toNullable(Number_$type, null);
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = false;
        }
        a.ad.p(SpreadsheetMLMain.d8, null);
        var h;
        h = SpreadsheetMLMain.hh(c);
        a.ad.h("name", h);
        h = b.toString();
        a.ad.h("xfId", h);
        if (nullableNotEquals(d, null)) {
            h = d.value.toString();
            a.ad.h("builtinId", h);
        }
        if (nullableNotEquals(e, null)) {
            h = e.value.toString();
            a.ad.h("iLevel", h);
        }
        if (f != false) {
            h = ST_OnOff.g(f);
            a.ad.h("hidden", h);
        }
        if (g != false) {
            h = ST_OnOff.g(g);
            a.ad.h("customBuiltin", h);
        }
    };
    SpreadsheetMLMain.t2 = function (a, b) {
        var c = a.ao("count");
        if (c == null) {
            b = toNullable(Number_$type, null);
        }
        else {
            b = toNullable(Number_$type, parseUInt32_1(c, CultureInfo.invariantCulture));
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.zn = function (a, b) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.d9, null);
        var c;
        if (nullableNotEquals(b, null)) {
            c = b.value.toString();
            a.ad.h("count", c);
        }
    };
    SpreadsheetMLMain.t3 = function (a, b) {
        var c = a.ao("count");
        if (c == null) {
            b = toNullable(Number_$type, null);
        }
        else {
            b = toNullable(Number_$type, parseUInt32_1(c, CultureInfo.invariantCulture));
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.zo = function (a, b) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.ea, null);
        var c;
        if (nullableNotEquals(b, null)) {
            c = b.value.toString();
            a.ad.h("count", c);
        }
    };
    SpreadsheetMLMain.t4 = function (a, b) {
        var c = a.ao("count");
        if (c == null) {
            b = toNullable(Number_$type, null);
        }
        else {
            b = toNullable(Number_$type, parseUInt32_1(c, CultureInfo.invariantCulture));
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.zp = function (a, b) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.eb, null);
        var c;
        if (nullableNotEquals(b, null)) {
            c = b.value.toString();
            a.ad.h("count", c);
        }
    };
    SpreadsheetMLMain.t5 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
        var e_17, _a;
        c = toNullable(ST_CfType_$type, null);
        d = toNullable(Number_$type, null);
        e = toNullable(Number_$type, null);
        f = toNullable(Boolean_$type, null);
        g = true;
        h = false;
        i = false;
        j = toNullable(ST_ConditionalFormattingOperator_$type, null);
        k = null;
        l = toNullable(ST_TimePeriod_$type, null);
        m = toNullable(Number_$type, null);
        n = toNullable(Number_$type, null);
        o = false;
        p = null;
        q = toNullable(Boolean_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var r = _c.value;
                var t1 = r.a.e(a.d);
                L0: while (true) {
                    switch (t1) {
                        case "type":
                            c = toNullable(ST_CfType_$type, XmlNamespaceDefinitionBase.b(ST_CfType_$type, r.d));
                            break;
                        case "dxfId":
                            d = toNullable(Number_$type, parseUInt32_1(r.d, CultureInfo.invariantCulture));
                            break;
                        case "priority":
                            e = toNullable(Number_$type, parseInt32_1(r.d, CultureInfo.invariantCulture));
                            break;
                        case "stopIfTrue":
                            f = toNullable(Boolean_$type, ST_OnOff.e(r.d));
                            break;
                        case "aboveAverage":
                            g = ST_OnOff.e(r.d);
                            break;
                        case "activePresent":
                            if (b != SpreadsheetML2009Main.ax) {
                                t1 = void 0;
                                continue L0;
                            }
                            q = toNullable(Boolean_$type, ST_OnOff.e(r.d));
                            break;
                        case "percent":
                            h = ST_OnOff.e(r.d);
                            break;
                        case "bottom":
                            i = ST_OnOff.e(r.d);
                            break;
                        case "operator":
                            j = toNullable(ST_ConditionalFormattingOperator_$type, XmlNamespaceDefinitionBase.b(ST_ConditionalFormattingOperator_$type, r.d));
                            break;
                        case "text":
                            k = r.d;
                            break;
                        case "timePeriod":
                            l = toNullable(ST_TimePeriod_$type, XmlNamespaceDefinitionBase.b(ST_TimePeriod_$type, r.d));
                            break;
                        case "rank":
                            m = toNullable(Number_$type, parseUInt32_1(r.d, CultureInfo.invariantCulture));
                            break;
                        case "stdDev":
                            n = toNullable(Number_$type, parseInt32_1(r.d, CultureInfo.invariantCulture));
                            break;
                        case "equalAverage":
                            o = ST_OnOff.e(r.d);
                            break;
                        case "id":
                            if (b != SpreadsheetML2009Main.ax) {
                                t1 = void 0;
                                continue L0;
                            }
                            p = r.d;
                            break;
                        default: break;
                    }
                    break;
                }
            }
        }
        catch (e_17_1) {
            e_17 = { error: e_17_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_17)
                    throw e_17.error;
            }
        }
        return {
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q
        };
    };
    SpreadsheetMLMain.zq = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
        if (c === void 0) {
            c = toNullable(ST_CfType_$type, null);
        }
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        if (e === void 0) {
            e = 0;
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = toNullable(Boolean_$type, null);
        }
        if (h === void 0) {
            h = toNullable(Boolean_$type, null);
        }
        if (i === void 0) {
            i = toNullable(Boolean_$type, null);
        }
        if (j === void 0) {
            j = toNullable(ST_ConditionalFormattingOperator_$type, null);
        }
        if (k === void 0) {
            k = null;
        }
        if (l === void 0) {
            l = toNullable(ST_TimePeriod_$type, null);
        }
        if (m === void 0) {
            m = toNullable(Number_$type, null);
        }
        if (n === void 0) {
            n = toNullable(Number_$type, null);
        }
        if (o === void 0) {
            o = toNullable(Boolean_$type, null);
        }
        if (p === void 0) {
            p = null;
        }
        if (q === void 0) {
            q = toNullable(Boolean_$type, null);
        }
        a.ad.p(b, null);
        var r;
        if (nullableNotEquals(c, null)) {
            r = XmlNamespaceDefinitionBase.p(ST_CfType_$type, c.value);
            a.ad.h("type", r);
        }
        if (nullableNotEquals(d, null)) {
            r = d.value.toString();
            a.ad.h("dxfId", r);
        }
        if (e != 0) {
            r = e.toString();
            a.ad.h("priority", r);
        }
        if (f != false) {
            r = ST_OnOff.g(f);
            a.ad.h("stopIfTrue", r);
        }
        if (g.hasValue) {
            r = ST_OnOff.g(g.value);
            a.ad.h("aboveAverage", r);
        }
        if (h.hasValue) {
            r = ST_OnOff.g(h.value);
            a.ad.h("percent", r);
        }
        if (i.hasValue) {
            r = ST_OnOff.g(i.value);
            a.ad.h("bottom", r);
        }
        if (nullableNotEquals(j, null)) {
            r = XmlNamespaceDefinitionBase.p(ST_ConditionalFormattingOperator_$type, j.value);
            a.ad.h("operator", r);
        }
        r = k;
        a.ad.h("text", r);
        if (nullableNotEquals(l, null)) {
            r = XmlNamespaceDefinitionBase.p(ST_TimePeriod_$type, l.value);
            a.ad.h("timePeriod", r);
        }
        if (nullableNotEquals(m, null)) {
            r = m.value.toString();
            a.ad.h("rank", r);
        }
        if (nullableNotEquals(n, null)) {
            r = n.value.toString();
            a.ad.h("stdDev", r);
        }
        if (o.hasValue) {
            r = ST_OnOff.g(o.hasValue);
            a.ad.h("equalAverage", r);
        }
        if (stringIsNullOrEmpty(p) == false) {
            r = p;
            a.ad.h("id", r);
        }
        if (q.hasValue && q.value) {
            if (b != SpreadsheetML2009Main.ax) {
            }
            r = ST_OnOff.g(q.value);
            a.ad.h("activePresent", r);
        }
    };
    SpreadsheetMLMain.t6 = function (a, b, c, d) {
        var e = SpreadsheetMLMain.t7(a, SpreadsheetMLMain.eh, b, c, d);
        b = e.p2;
        c = e.p3;
        d = e.p4;
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    SpreadsheetMLMain.t7 = function (a, b, c, d, e) {
        var e_18, _a;
        c = 0;
        d = null;
        e = true;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "type":
                        c = XmlNamespaceDefinitionBase.b(ST_CfvoType_$type, f.d, c);
                        break;
                    case "val":
                        d = f.d;
                        break;
                    case "gte":
                        e = ST_OnOff.e(f.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_18_1) {
            e_18 = { error: e_18_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_18)
                    throw e_18.error;
            }
        }
        return {
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetMLMain.zr = function (a, b, c, d) {
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = true;
        }
        a.ad.p(SpreadsheetMLMain.eh, null);
        var e;
        e = XmlNamespaceDefinitionBase.p(ST_CfvoType_$type, b);
        a.ad.h("type", e);
        e = c;
        a.ad.h("val", e);
        if (d != true) {
            e = ST_OnOff.g(d);
            a.ad.h("gte", e);
        }
    };
    SpreadsheetMLMain.t8 = function (a) {
    };
    SpreadsheetMLMain.zs = function (a) {
        a.ad.p(SpreadsheetMLMain.ej, null);
        var b = a.d._z;
        a.ad.l(OfficeDocumentRelationships.ao);
        a.ad.l(SpreadsheetMLMain.ap);
    };
    SpreadsheetMLMain.uc = function (a, b, c, d, e) {
        var e_19, _a;
        c = false;
        d = 100;
        b = 0;
        e = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "tabSelected":
                        c = ST_OnOff.e(f.d);
                        break;
                    case "zoomScale":
                        d = parseUInt32_1(f.d, CultureInfo.invariantCulture);
                        break;
                    case "workbookViewId":
                        b = parseUInt32_1(f.d, CultureInfo.invariantCulture);
                        break;
                    case "zoomToFit":
                        e = ST_OnOff.e(f.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_19_1) {
            e_19 = { error: e_19_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_19)
                    throw e_19.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetMLMain.zw = function (a, b, c, d, e) {
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = 100;
        }
        if (e === void 0) {
            e = true;
        }
        a.ad.p(SpreadsheetMLMain.oz, null);
        var f;
        if (c != false) {
            f = ST_OnOff.g(c);
            a.ad.h("tabSelected", f);
        }
        if (d != 100) {
            f = d.toString();
            a.ad.h("zoomScale", f);
        }
        f = b.toString();
        a.ad.h("workbookViewId", f);
        if (e != false) {
            f = ST_OnOff.g(e);
            a.ad.h("zoomToFit", f);
        }
    };
    SpreadsheetMLMain.t9 = function (a, b, c) {
        var e_20, _a;
        b = true;
        c = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                switch (d.a.e(a.d)) {
                    case "published":
                        b = ST_OnOff.e(d.d);
                        break;
                    case "codeName":
                        c = d.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_20_1) {
            e_20 = { error: e_20_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_20)
                    throw e_20.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.zt = function (a, b, c) {
        if (b === void 0) {
            b = true;
        }
        if (c === void 0) {
            c = null;
        }
        a.ad.p(SpreadsheetMLMain.ow, null);
        var d;
        if (b != true) {
            d = ST_OnOff.g(b);
            a.ad.h("published", d);
        }
        if (c != null) {
            d = c;
            a.ad.h("codeName", d);
        }
    };
    SpreadsheetMLMain.ua = function (a, b, c, d) {
        var e_21, _a;
        b = toNullable(ST_UnsignedShortHex.$, null);
        c = false;
        d = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                switch (e.a.e(a.d)) {
                    case "password":
                        b = toNullable(ST_UnsignedShortHex.$, ST_UnsignedShortHex.b(e.d));
                        break;
                    case "objects":
                        c = ST_OnOff.e(e.d);
                        break;
                    case "content":
                        d = ST_OnOff.e(e.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_21_1) {
            e_21 = { error: e_21_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_21)
                    throw e_21.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    SpreadsheetMLMain.zu = function (a, b, c, d) {
        if (b === void 0) {
            b = toNullable(ST_UnsignedShortHex.$, null);
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = false;
        }
        a.ad.p(SpreadsheetMLMain.ox, null);
        var e;
        if (nullableNotEquals(b, null)) {
            e = b.value.toString();
            a.ad.h("password", e);
        }
        if (c != false) {
            e = ST_OnOff.g(c);
            a.ad.h("objects", e);
        }
        if (d != false) {
            e = ST_OnOff.g(d);
            a.ad.h("content", e);
        }
    };
    SpreadsheetMLMain.ub = function (a, b, c, d, e, f, g) {
        var e_22, _a;
        b = null;
        c = null;
        d = null;
        e = toNullable(Number_$type, null);
        f = false;
        g = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var h = _c.value;
                switch (h.a.e(a.d)) {
                    case "algorithmName":
                        b = h.d;
                        break;
                    case "hashValue":
                        c = h.d;
                        break;
                    case "saltValue":
                        d = h.d;
                        break;
                    case "spinCount":
                        e = toNullable(Number_$type, parseUInt32_1(h.d, CultureInfo.invariantCulture));
                        break;
                    case "objects":
                        f = ST_OnOff.e(h.d);
                        break;
                    case "content":
                        g = ST_OnOff.e(h.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_22_1) {
            e_22 = { error: e_22_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_22)
                    throw e_22.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g
        };
    };
    SpreadsheetMLMain.zv = function (a, b, c, d, e, f, g) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = toNullable(Number_$type, null);
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = false;
        }
        a.ad.p(SpreadsheetMLMain.ox, null);
        var h;
        h = b;
        a.ad.h("algorithmName", h);
        h = c;
        a.ad.h("hashValue", h);
        h = d;
        a.ad.h("saltValue", h);
        if (nullableNotEquals(e, null)) {
            h = e.value.toString();
            a.ad.h("spinCount", h);
        }
        if (f != false) {
            h = ST_OnOff.g(f);
            a.ad.h("objects", h);
        }
        if (g != false) {
            h = ST_OnOff.g(g);
            a.ad.h("content", h);
        }
    };
    SpreadsheetMLMain.ud = function (a, b, c) {
        var d = SpreadsheetMLMain.uv(a, SpreadsheetMLMain.er, b, c);
        b = d.p2;
        c = d.p3;
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.zx = function (a, b, c) {
        SpreadsheetMLMain.aag(a, SpreadsheetMLMain.er, b, c);
    };
    SpreadsheetMLMain.ue = function (a, b, c, d, e, f, g, h, i, j, k) {
        var e_23, _a;
        b = 0;
        c = 0;
        d = toNullable(Number_$type, null);
        e = 0;
        f = false;
        g = false;
        h = false;
        i = false;
        j = 0;
        k = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var l = _c.value;
                switch (l.a.e(a.d)) {
                    case "min":
                        b = parseUInt32_1(l.d, CultureInfo.invariantCulture);
                        break;
                    case "max":
                        c = parseUInt32_1(l.d, CultureInfo.invariantCulture);
                        break;
                    case "width":
                        d = toNullable(Number_$type, parseNumber(l.d, CultureInfo.invariantCulture));
                        break;
                    case "style":
                        e = parseUInt32_1(l.d, CultureInfo.invariantCulture);
                        break;
                    case "hidden":
                        f = ST_OnOff.e(l.d);
                        break;
                    case "bestFit":
                        g = ST_OnOff.e(l.d);
                        break;
                    case "customWidth":
                        h = ST_OnOff.e(l.d);
                        break;
                    case "phonetic":
                        i = ST_OnOff.e(l.d);
                        break;
                    case "outlineLevel":
                        j = parseUInt8_1(l.d, CultureInfo.invariantCulture);
                        break;
                    case "collapsed":
                        k = ST_OnOff.e(l.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_23_1) {
            e_23 = { error: e_23_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_23)
                    throw e_23.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k
        };
    };
    SpreadsheetMLMain.zy = function (a, b, c, d, e, f, g, h, i, j, k) {
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        if (e === void 0) {
            e = 0;
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = false;
        }
        if (h === void 0) {
            h = false;
        }
        if (i === void 0) {
            i = false;
        }
        if (j === void 0) {
            j = 0;
        }
        if (k === void 0) {
            k = false;
        }
        a.ad.p(SpreadsheetMLMain.eq, null);
        var l;
        l = b.toString();
        a.ad.h("min", l);
        l = c.toString();
        a.ad.h("max", l);
        if (nullableNotEquals(d, null)) {
            l = d.value.toString();
            a.ad.h("width", l);
        }
        if (e != 0) {
            l = e.toString();
            a.ad.h("style", l);
        }
        if (f != false) {
            l = ST_OnOff.g(f);
            a.ad.h("hidden", l);
        }
        if (g != false) {
            l = ST_OnOff.g(g);
            a.ad.h("bestFit", l);
        }
        if (h != false) {
            l = ST_OnOff.g(h);
            a.ad.h("customWidth", l);
        }
        if (i != false) {
            l = ST_OnOff.g(i);
            a.ad.h("phonetic", l);
        }
        if (j != 0) {
            l = j.toString();
            a.ad.h("outlineLevel", l);
        }
        if (k != false) {
            l = ST_OnOff.g(k);
            a.ad.h("collapsed", l);
        }
    };
    SpreadsheetMLMain.uf = function (a, b, c, d, e, f) {
        var g = SpreadsheetMLMain.ut(a, SpreadsheetMLMain.eu, b, c, d, e, f);
        b = g.p2;
        c = g.p3;
        d = g.p4;
        e = g.p5;
        f = g.p6;
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f
        };
    };
    SpreadsheetMLMain.zz = function (a, b, c, d, e, f) {
        if (b === void 0) {
            b = toNullable(Boolean_$type, null);
        }
        if (c === void 0) {
            c = toNullable(Number_$type, null);
        }
        if (d === void 0) {
            d = toNullable(ST_UnsignedIntHex.$, null);
        }
        if (e === void 0) {
            e = toNullable(Number_$type, null);
        }
        if (f === void 0) {
            f = 0;
        }
        SpreadsheetMLMain.aae(a, SpreadsheetMLMain.eu, b, c, d, e, f);
    };
    SpreadsheetMLMain.ug = function (a, b, c) {
        var e_24, _a;
        b = toNullable(Number_$type, null);
        c = true;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                switch (d.a.e(a.d)) {
                    case "dxfId":
                        b = toNullable(Number_$type, parseUInt32_1(d.d, CultureInfo.invariantCulture));
                        break;
                    case "cellColor":
                        c = ST_OnOff.e(d.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_24_1) {
            e_24 = { error: e_24_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_24)
                    throw e_24.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.z0 = function (a, b, c) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        if (c === void 0) {
            c = true;
        }
        a.ad.p(SpreadsheetMLMain.ev, null);
        var d;
        if (nullableNotEquals(b, null)) {
            d = b.value.toString();
            a.ad.h("dxfId", d);
        }
        d = ST_OnOff.g(c);
        a.ad.h("cellColor", d);
    };
    SpreadsheetMLMain.z1 = function (a) {
        a.ad.p(SpreadsheetMLMain.ey, null);
    };
    SpreadsheetMLMain.uh = function (a) {
    };
    SpreadsheetMLMain.z2 = function (a) {
        a.ad.p(SpreadsheetMLMain.ex, null);
    };
    SpreadsheetMLMain.ui = function (a) {
    };
    SpreadsheetMLMain.z3 = function (a) {
        a.ad.p(SpreadsheetMLMain.ez, null);
    };
    SpreadsheetMLMain.uj = function (a, b, c, d, e) {
        var e_25, _a;
        b = null;
        c = 0;
        d = toNullable(ST_Guid.$, null);
        e = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "ref":
                        b = f.d;
                        break;
                    case "authorId":
                        c = parseUInt32_1(f.d, CultureInfo.invariantCulture);
                        break;
                    case "guid":
                        d = toNullable(ST_Guid.$, ST_Guid.c(f.d));
                        break;
                    case "shapeId":
                        e = toNullable(Number_$type, parseUInt32_1(f.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_25_1) {
            e_25 = { error: e_25_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_25)
                    throw e_25.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetMLMain.z4 = function (a, b, c, d, e) {
        if (d === void 0) {
            d = toNullable(ST_Guid.$, null);
        }
        if (e === void 0) {
            e = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.e1, null);
        var f;
        f = b;
        a.ad.h("ref", f);
        f = c.toString();
        a.ad.h("authorId", f);
        if (nullableNotEquals(d, null)) {
            f = d.value.toString();
            a.ad.h("guid", f);
        }
        if (nullableNotEquals(e, null)) {
            f = e.value.toString();
            a.ad.h("shapeId", f);
        }
    };
    SpreadsheetMLMain.uk = function (a) {
    };
    SpreadsheetMLMain.z5 = function (a) {
        a.ad.p(SpreadsheetMLMain.e3, null);
    };
    SpreadsheetMLMain.ul = function (a) {
    };
    SpreadsheetMLMain.z6 = function (a) {
        a.ad.p(SpreadsheetMLMain.e4, null);
    };
    SpreadsheetMLMain.um = function (a, b) {
        var c = SpreadsheetMLMain.ur(a, SpreadsheetMLMain.e7, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.z7 = function (a, b) {
        if (b === void 0) {
            b = true;
        }
        SpreadsheetMLMain.aac(a, SpreadsheetMLMain.e7, b);
    };
    SpreadsheetMLMain.un = function (a, b, c) {
        var e_26, _a;
        b = null;
        c = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                switch (d.a.e(a.d)) {
                    case "sqref":
                        b = XmlNamespaceDefinitionBase.g(String_$type, d.d, function (e) { return e; });
                        break;
                    case "pivot":
                        c = ST_OnOff.e(d.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_26_1) {
            e_26 = { error: e_26_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_26)
                    throw e_26.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.z8 = function (a, b, c) {
        if (c === void 0) {
            c = false;
        }
        a.ad.p(SpreadsheetMLMain.e8, null);
        var d;
        if (b != null) {
            d = stringJoin1(String_$type, " ", b);
            a.ad.h("sqref", d);
        }
        if (c != false) {
            d = ST_OnOff.g(c);
            a.ad.h("pivot", d);
        }
    };
    SpreadsheetMLMain.uo = function (a, b, c, d) {
        var e_27, _a;
        b = 0;
        c = null;
        d = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                switch (e.a.e(a.d)) {
                    case "shapeId":
                        b = parseUInt32_1(e.d, CultureInfo.invariantCulture);
                        break;
                    case OfficeDocumentRelationships.as:
                        c = e.d;
                        break;
                    case "name":
                        d = e.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_27_1) {
            e_27 = { error: e_27_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_27)
                    throw e_27.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    SpreadsheetMLMain.z9 = function (a, b, c, d) {
        if (d === void 0) {
            d = null;
        }
        a.ad.p(SpreadsheetMLMain.fd, null);
        var e;
        e = b.toString();
        a.ad.h("shapeId", e);
        e = c;
        a.ad.h(OfficeDocumentRelationships.as, e);
        e = d;
        a.ad.h("name", e);
    };
    SpreadsheetMLMain.up = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
        var e_28, _a;
        b = true;
        c = true;
        d = true;
        e = false;
        f = false;
        g = false;
        h = true;
        i = true;
        j = true;
        k = null;
        l = null;
        m = null;
        n = null;
        o = "pict";
        p = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var q = _c.value;
                switch (q.a.e(a.d)) {
                    case "locked":
                        b = ST_OnOff.e(q.d);
                        break;
                    case "defaultSize":
                        c = ST_OnOff.e(q.d);
                        break;
                    case "print":
                        d = ST_OnOff.e(q.d);
                        break;
                    case "disabled":
                        e = ST_OnOff.e(q.d);
                        break;
                    case "recalcAlways":
                        f = ST_OnOff.e(q.d);
                        break;
                    case "uiObject":
                        g = ST_OnOff.e(q.d);
                        break;
                    case "autoFill":
                        h = ST_OnOff.e(q.d);
                        break;
                    case "autoLine":
                        i = ST_OnOff.e(q.d);
                        break;
                    case "autoPict":
                        j = ST_OnOff.e(q.d);
                        break;
                    case "macro":
                        k = q.d;
                        break;
                    case "altText":
                        l = q.d;
                        break;
                    case "linkedCell":
                        m = q.d;
                        break;
                    case "listFillRange":
                        n = q.d;
                        break;
                    case "cf":
                        o = q.d;
                        break;
                    case OfficeDocumentRelationships.as:
                        p = q.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_28_1) {
            e_28 = { error: e_28_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_28)
                    throw e_28.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p
        };
    };
    SpreadsheetMLMain.aaa = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
        if (b === void 0) {
            b = true;
        }
        if (c === void 0) {
            c = true;
        }
        if (d === void 0) {
            d = true;
        }
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = false;
        }
        if (h === void 0) {
            h = true;
        }
        if (i === void 0) {
            i = true;
        }
        if (j === void 0) {
            j = true;
        }
        if (k === void 0) {
            k = null;
        }
        if (l === void 0) {
            l = null;
        }
        if (m === void 0) {
            m = null;
        }
        if (n === void 0) {
            n = null;
        }
        if (o === void 0) {
            o = "pict";
        }
        if (p === void 0) {
            p = null;
        }
        a.ad.p(SpreadsheetMLMain.fe, null);
        var q;
        if (b != true) {
            q = ST_OnOff.g(b);
            a.ad.h("locked", q);
        }
        if (c != true) {
            q = ST_OnOff.g(c);
            a.ad.h("defaultSize", q);
        }
        if (d != true) {
            q = ST_OnOff.g(d);
            a.ad.h("print", q);
        }
        if (e != false) {
            q = ST_OnOff.g(e);
            a.ad.h("disabled", q);
        }
        if (f != false) {
            q = ST_OnOff.g(f);
            a.ad.h("recalcAlways", q);
        }
        if (g != false) {
            q = ST_OnOff.g(g);
            a.ad.h("uiObject", q);
        }
        if (h != true) {
            q = ST_OnOff.g(h);
            a.ad.h("autoFill", q);
        }
        if (i != true) {
            q = ST_OnOff.g(i);
            a.ad.h("autoLine", q);
        }
        if (j != true) {
            q = ST_OnOff.g(j);
            a.ad.h("autoPict", q);
        }
        q = k;
        DrawingNamespaceDefinitionBase.db(a, q);
        q = l;
        a.ad.h("altText", q);
        q = m;
        a.ad.h("linkedCell", q);
        q = n;
        a.ad.h("listFillRange", q);
        q = o;
        a.ad.h("cf", q);
        q = p;
        a.ad.h(OfficeDocumentRelationships.as, q);
    };
    SpreadsheetMLMain.uq = function (a) {
    };
    SpreadsheetMLMain.aab = function (a) {
        a.ad.p(SpreadsheetMLMain.ff, null);
    };
    SpreadsheetMLMain.ux = function (a, b, c, d, e) {
        var e_29, _a;
        b = new ST_Guid();
        c = 100;
        d = 0;
        e = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "guid":
                        b = ST_Guid.c(f.d);
                        break;
                    case "scale":
                        c = parseUInt32_1(f.d, CultureInfo.invariantCulture);
                        break;
                    case "state":
                        d = XmlNamespaceDefinitionBase.b(ST_SheetState_$type, f.d, d);
                        break;
                    case "zoomToFit":
                        e = ST_OnOff.e(f.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_29_1) {
            e_29 = { error: e_29_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_29)
                    throw e_29.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetMLMain.aai = function (a, b, c, d, e) {
        if (c === void 0) {
            c = 100;
        }
        if (d === void 0) {
            d = 0;
        }
        if (e === void 0) {
            e = false;
        }
        a.ad.p(SpreadsheetMLMain.fq, null);
        var f;
        f = b.toString();
        a.ad.h("guid", f);
        if (c != 100) {
            f = c.toString();
            a.ad.h("scale", f);
        }
        if (d != 0) {
            f = XmlNamespaceDefinitionBase.p(ST_SheetState_$type, d);
            a.ad.h("state", f);
        }
        if (e != false) {
            f = ST_OnOff.g(e);
            a.ad.h("zoomToFit", f);
        }
    };
    SpreadsheetMLMain.uy = function (a, b, c) {
        var e_30, _a;
        c = 2;
        b = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                switch (d.a.e(a.d)) {
                    case "operator":
                        c = XmlNamespaceDefinitionBase.b(ST_FilterOperator_$type, d.d, c);
                        break;
                    case "val":
                        b = d.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_30_1) {
            e_30 = { error: e_30_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_30)
                    throw e_30.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.aaj = function (a, b, c) {
        if (c === void 0) {
            c = 2;
        }
        a.ad.p(SpreadsheetMLMain.fk, null);
        var d;
        if (c != 2) {
            d = XmlNamespaceDefinitionBase.p(ST_FilterOperator_$type, c);
            a.ad.h("operator", d);
        }
        d = b;
        a.ad.h("val", d);
    };
    SpreadsheetMLMain.uz = function (a, b) {
        var c = a.ao("and");
        if (c == null) {
            b = false;
        }
        else {
            b = ST_OnOff.e(c);
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.aak = function (a, b) {
        if (b === void 0) {
            b = false;
        }
        a.ad.p(SpreadsheetMLMain.fl, null);
        var c;
        if (b != false) {
            c = ST_OnOff.g(b);
            a.ad.h("and", c);
        }
    };
    SpreadsheetMLMain.u0 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u) {
        var e_31, _a;
        b = new ST_Guid();
        c = 100;
        d = 64;
        e = false;
        f = false;
        g = true;
        h = true;
        i = true;
        j = true;
        k = false;
        l = false;
        m = false;
        n = false;
        o = false;
        p = false;
        q = 0;
        r = false;
        s = 0;
        t = true;
        u = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var v = _c.value;
                switch (v.a.e(a.d)) {
                    case "guid":
                        b = ST_Guid.c(v.d);
                        break;
                    case "scale":
                        c = parseUInt32_1(v.d, CultureInfo.invariantCulture);
                        break;
                    case "colorId":
                        d = parseUInt32_1(v.d, CultureInfo.invariantCulture);
                        break;
                    case "showPageBreaks":
                        e = ST_OnOff.e(v.d);
                        break;
                    case "showFormulas":
                        f = ST_OnOff.e(v.d);
                        break;
                    case "showGridLines":
                        g = ST_OnOff.e(v.d);
                        break;
                    case "showRowCol":
                        h = ST_OnOff.e(v.d);
                        break;
                    case "outlineSymbols":
                        i = ST_OnOff.e(v.d);
                        break;
                    case "zeroValues":
                        j = ST_OnOff.e(v.d);
                        break;
                    case "fitToPage":
                        k = ST_OnOff.e(v.d);
                        break;
                    case "printArea":
                        l = ST_OnOff.e(v.d);
                        break;
                    case "filter":
                        m = ST_OnOff.e(v.d);
                        break;
                    case "showAutoFilter":
                        n = ST_OnOff.e(v.d);
                        break;
                    case "hiddenRows":
                        o = ST_OnOff.e(v.d);
                        break;
                    case "hiddenColumns":
                        p = ST_OnOff.e(v.d);
                        break;
                    case "state":
                        q = XmlNamespaceDefinitionBase.b(ST_SheetState_$type, v.d, q);
                        break;
                    case "filterUnique":
                        r = ST_OnOff.e(v.d);
                        break;
                    case "view":
                        s = XmlNamespaceDefinitionBase.b(ST_SheetViewType_$type, v.d, s);
                        break;
                    case "showRuler":
                        t = ST_OnOff.e(v.d);
                        break;
                    case "topLeftCell":
                        u = v.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_31_1) {
            e_31 = { error: e_31_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_31)
                    throw e_31.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q,
            p17: r,
            p18: s,
            p19: t,
            p20: u
        };
    };
    SpreadsheetMLMain.aal = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u) {
        if (c === void 0) {
            c = 100;
        }
        if (d === void 0) {
            d = 64;
        }
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = true;
        }
        if (h === void 0) {
            h = true;
        }
        if (i === void 0) {
            i = true;
        }
        if (j === void 0) {
            j = true;
        }
        if (k === void 0) {
            k = false;
        }
        if (l === void 0) {
            l = false;
        }
        if (m === void 0) {
            m = false;
        }
        if (n === void 0) {
            n = false;
        }
        if (o === void 0) {
            o = false;
        }
        if (p === void 0) {
            p = false;
        }
        if (q === void 0) {
            q = 0;
        }
        if (r === void 0) {
            r = false;
        }
        if (s === void 0) {
            s = 0;
        }
        if (t === void 0) {
            t = true;
        }
        if (u === void 0) {
            u = null;
        }
        a.ad.p(SpreadsheetMLMain.fq, null);
        var v;
        v = b.toString();
        a.ad.h("guid", v);
        if (c != 100) {
            v = c.toString();
            a.ad.h("scale", v);
        }
        if (d != 64) {
            v = d.toString();
            a.ad.h("colorId", v);
        }
        if (e != false) {
            v = ST_OnOff.g(e);
            a.ad.h("showPageBreaks", v);
        }
        if (f != false) {
            v = ST_OnOff.g(f);
            a.ad.h("showFormulas", v);
        }
        if (g != true) {
            v = ST_OnOff.g(g);
            a.ad.h("showGridLines", v);
        }
        if (h != true) {
            v = ST_OnOff.g(h);
            a.ad.h("showRowCol", v);
        }
        if (i != true) {
            v = ST_OnOff.g(i);
            a.ad.h("outlineSymbols", v);
        }
        if (j != true) {
            v = ST_OnOff.g(j);
            a.ad.h("zeroValues", v);
        }
        if (k != false) {
            v = ST_OnOff.g(k);
            a.ad.h("fitToPage", v);
        }
        if (l != false) {
            v = ST_OnOff.g(l);
            a.ad.h("printArea", v);
        }
        if (m != false) {
            v = ST_OnOff.g(m);
            a.ad.h("filter", v);
        }
        if (n != false) {
            v = ST_OnOff.g(n);
            a.ad.h("showAutoFilter", v);
        }
        if (o != false) {
            v = ST_OnOff.g(o);
            a.ad.h("hiddenRows", v);
        }
        if (p != false) {
            v = ST_OnOff.g(p);
            a.ad.h("hiddenColumns", v);
        }
        if (q != 0) {
            v = XmlNamespaceDefinitionBase.p(ST_SheetState_$type, q);
            a.ad.h("state", v);
        }
        if (r != false) {
            v = ST_OnOff.g(r);
            a.ad.h("filterUnique", v);
        }
        if (s != 0) {
            v = XmlNamespaceDefinitionBase.p(ST_SheetViewType_$type, s);
            a.ad.h("view", v);
        }
        if (t != true) {
            v = ST_OnOff.g(t);
            a.ad.h("showRuler", v);
        }
        v = u;
        a.ad.h("topLeftCell", v);
    };
    SpreadsheetMLMain.u1 = function (a) {
    };
    SpreadsheetMLMain.aam = function (a) {
        a.ad.p(SpreadsheetMLMain.fr, null);
    };
    SpreadsheetMLMain.u2 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y) {
        var e_32, _a;
        b = null;
        c = new ST_Guid();
        g = false;
        h = toNullable(Number_$type, null);
        i = false;
        j = false;
        k = false;
        l = true;
        m = true;
        n = false;
        o = false;
        p = true;
        q = true;
        r = true;
        s = 0;
        t = 0;
        e = 0;
        f = 0;
        u = 600;
        d = 0;
        v = true;
        w = true;
        x = 1;
        y = 0;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var z = _c.value;
                switch (z.a.e(a.d)) {
                    case "name":
                        b = z.d;
                        break;
                    case "guid":
                        c = ST_Guid.c(z.d);
                        break;
                    case "autoUpdate":
                        g = ST_OnOff.e(z.d);
                        break;
                    case "mergeInterval":
                        h = toNullable(Number_$type, parseUInt32_1(z.d, CultureInfo.invariantCulture));
                        break;
                    case "changesSavedWin":
                        i = ST_OnOff.e(z.d);
                        break;
                    case "onlySync":
                        j = ST_OnOff.e(z.d);
                        break;
                    case "personalView":
                        k = ST_OnOff.e(z.d);
                        break;
                    case "includePrintSettings":
                        l = ST_OnOff.e(z.d);
                        break;
                    case "includeHiddenRowCol":
                        m = ST_OnOff.e(z.d);
                        break;
                    case "maximized":
                        n = ST_OnOff.e(z.d);
                        break;
                    case "minimized":
                        o = ST_OnOff.e(z.d);
                        break;
                    case "showHorizontalScroll":
                        p = ST_OnOff.e(z.d);
                        break;
                    case "showVerticalScroll":
                        q = ST_OnOff.e(z.d);
                        break;
                    case "showSheetTabs":
                        r = ST_OnOff.e(z.d);
                        break;
                    case "xWindow":
                        s = parseInt32_1(z.d, CultureInfo.invariantCulture);
                        break;
                    case "yWindow":
                        t = parseInt32_1(z.d, CultureInfo.invariantCulture);
                        break;
                    case "windowWidth":
                        e = parseUInt32_1(z.d, CultureInfo.invariantCulture);
                        break;
                    case "windowHeight":
                        f = parseUInt32_1(z.d, CultureInfo.invariantCulture);
                        break;
                    case "tabRatio":
                        u = parseUInt32_1(z.d, CultureInfo.invariantCulture);
                        break;
                    case "activeSheetId":
                        d = parseUInt32_1(z.d, CultureInfo.invariantCulture);
                        break;
                    case "showFormulaBar":
                        v = ST_OnOff.e(z.d);
                        break;
                    case "showStatusbar":
                        w = ST_OnOff.e(z.d);
                        break;
                    case "showComments":
                        x = XmlNamespaceDefinitionBase.b(ST_Comments_$type, z.d, x);
                        break;
                    case "showObjects":
                        y = XmlNamespaceDefinitionBase.b(ST_Objects_$type, z.d, y);
                        break;
                    default: break;
                }
            }
        }
        catch (e_32_1) {
            e_32 = { error: e_32_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_32)
                    throw e_32.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q,
            p17: r,
            p18: s,
            p19: t,
            p20: u,
            p21: v,
            p22: w,
            p23: x,
            p24: y
        };
    };
    SpreadsheetMLMain.aan = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y) {
        if (g === void 0) {
            g = false;
        }
        if (h === void 0) {
            h = toNullable(Number_$type, null);
        }
        if (i === void 0) {
            i = false;
        }
        if (j === void 0) {
            j = false;
        }
        if (k === void 0) {
            k = false;
        }
        if (l === void 0) {
            l = true;
        }
        if (m === void 0) {
            m = true;
        }
        if (n === void 0) {
            n = false;
        }
        if (o === void 0) {
            o = false;
        }
        if (p === void 0) {
            p = true;
        }
        if (q === void 0) {
            q = true;
        }
        if (r === void 0) {
            r = true;
        }
        if (s === void 0) {
            s = 0;
        }
        if (t === void 0) {
            t = 0;
        }
        if (u === void 0) {
            u = 600;
        }
        if (v === void 0) {
            v = true;
        }
        if (w === void 0) {
            w = true;
        }
        if (x === void 0) {
            x = 1;
        }
        if (y === void 0) {
            y = 0;
        }
        a.ad.p(SpreadsheetMLMain.ft, null);
        var z;
        z = b;
        a.ad.h("name", z);
        z = c.toString();
        a.ad.h("guid", z);
        if (g != false) {
            z = ST_OnOff.g(g);
            a.ad.h("autoUpdate", z);
        }
        if (nullableNotEquals(h, null)) {
            z = h.value.toString();
            a.ad.h("mergeInterval", z);
        }
        if (i != false) {
            z = ST_OnOff.g(i);
            a.ad.h("changesSavedWin", z);
        }
        if (j != false) {
            z = ST_OnOff.g(j);
            a.ad.h("onlySync", z);
        }
        if (k != false) {
            z = ST_OnOff.g(k);
            a.ad.h("personalView", z);
        }
        if (l != true) {
            z = ST_OnOff.g(l);
            a.ad.h("includePrintSettings", z);
        }
        if (m != true) {
            z = ST_OnOff.g(m);
            a.ad.h("includeHiddenRowCol", z);
        }
        if (n != false) {
            z = ST_OnOff.g(n);
            a.ad.h("maximized", z);
        }
        if (o != false) {
            z = ST_OnOff.g(o);
            a.ad.h("minimized", z);
        }
        if (p != true) {
            z = ST_OnOff.g(p);
            a.ad.h("showHorizontalScroll", z);
        }
        if (q != true) {
            z = ST_OnOff.g(q);
            a.ad.h("showVerticalScroll", z);
        }
        if (r != true) {
            z = ST_OnOff.g(r);
            a.ad.h("showSheetTabs", z);
        }
        if (s != 0) {
            z = s.toString();
            a.ad.h("xWindow", z);
        }
        if (t != 0) {
            z = t.toString();
            a.ad.h("yWindow", z);
        }
        z = e.toString();
        a.ad.h("windowWidth", z);
        z = f.toString();
        a.ad.h("windowHeight", z);
        if (u != 600) {
            z = u.toString();
            a.ad.h("tabRatio", z);
        }
        z = d.toString();
        a.ad.h("activeSheetId", z);
        if (v != true) {
            z = ST_OnOff.g(v);
            a.ad.h("showFormulaBar", z);
        }
        if (w != true) {
            z = ST_OnOff.g(w);
            a.ad.h("showStatusbar", z);
        }
        if (x != 1) {
            z = XmlNamespaceDefinitionBase.p(ST_Comments_$type, x);
            a.ad.h("showComments", z);
        }
        if (y != 0) {
            z = XmlNamespaceDefinitionBase.p(ST_Objects_$type, y);
            a.ad.h("showObjects", z);
        }
    };
    SpreadsheetMLMain.u3 = function (a) {
    };
    SpreadsheetMLMain.aao = function (a) {
        a.ad.p(SpreadsheetMLMain.fu, null);
    };
    SpreadsheetMLMain.u4 = function (a, b, c, d) {
        var e_33, _a;
        c = toNullable(Number_$type, null);
        b = toNullable(Number_$type, null);
        d = toNullable(Boolean_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                switch (e.a.e(a.d)) {
                    case "minLength":
                        c = toNullable(Number_$type, parseUInt32_1(e.d, CultureInfo.invariantCulture));
                        break;
                    case "maxLength":
                        b = toNullable(Number_$type, parseUInt32_1(e.d, CultureInfo.invariantCulture));
                        break;
                    case "showValue":
                        d = toNullable(Boolean_$type, ST_OnOff.e(e.d));
                        break;
                    default: break;
                }
            }
        }
        catch (e_33_1) {
            e_33 = { error: e_33_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_33)
                    throw e_33.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    SpreadsheetMLMain.aap = function (a, b, c, d) {
        a.ad.p(SpreadsheetMLMain.fv, null);
        var e;
        if (b.hasValue) {
            e = b.value.toString();
            a.ad.h("minLength", e);
        }
        if (c.hasValue) {
            e = c.value.toString();
            a.ad.h("maxLength", e);
        }
        if (d.hasValue) {
            e = ST_OnOff.g(d.value);
            a.ad.h("showValue", e);
        }
    };
    SpreadsheetMLMain.u5 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
        var o;
        var p = SpreadsheetMLMain.u6(a, o, c, d, e, f, g, h, i, j, k, l, m, n);
        o = p.p1;
        c = p.p2;
        d = p.p3;
        e = p.p4;
        f = p.p5;
        g = p.p6;
        h = p.p7;
        i = p.p8;
        j = p.p9;
        k = p.p10;
        l = p.p11;
        m = p.p12;
        n = p.p13;
        b = XmlNamespaceDefinitionBase.g(String_$type, o, function (q) { return q; });
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n
        };
    };
    SpreadsheetMLMain.aaq = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
        if (c === void 0) {
            c = 0;
        }
        if (d === void 0) {
            d = 0;
        }
        if (e === void 0) {
            e = 0;
        }
        if (f === void 0) {
            f = 0;
        }
        if (g === void 0) {
            g = false;
        }
        if (h === void 0) {
            h = false;
        }
        if (i === void 0) {
            i = false;
        }
        if (j === void 0) {
            j = false;
        }
        if (k === void 0) {
            k = null;
        }
        if (l === void 0) {
            l = null;
        }
        if (m === void 0) {
            m = null;
        }
        if (n === void 0) {
            n = null;
        }
        SpreadsheetMLMain.aar(a, b == null ? null : stringJoin1(String_$type, " ", b), c, d, e, f, g, h, i, j, k, l, m, n);
    };
    SpreadsheetMLMain.u6 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
        var e_34, _a;
        b = null;
        c = 0;
        d = 0;
        e = 0;
        f = 0;
        g = false;
        h = false;
        i = false;
        j = false;
        k = null;
        l = null;
        m = null;
        n = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var o = _c.value;
                switch (o.a.e(a.d)) {
                    case "sqref":
                        b = o.d;
                        break;
                    case "type":
                        c = XmlNamespaceDefinitionBase.b(ST_DataValidationType_$type, o.d, c);
                        break;
                    case "errorStyle":
                        d = XmlNamespaceDefinitionBase.b(ST_DataValidationErrorStyle_$type, o.d, d);
                        break;
                    case "imeMode":
                        e = XmlNamespaceDefinitionBase.b(ST_DataValidationImeMode_$type, o.d, e);
                        break;
                    case "operator":
                        f = XmlNamespaceDefinitionBase.b(ST_DataValidationOperator_$type, o.d, f);
                        break;
                    case "allowBlank":
                        g = ST_OnOff.e(o.d);
                        break;
                    case "showDropDown":
                        h = ST_OnOff.e(o.d);
                        break;
                    case "showInputMessage":
                        i = ST_OnOff.e(o.d);
                        break;
                    case "showErrorMessage":
                        j = ST_OnOff.e(o.d);
                        break;
                    case "errorTitle":
                        k = o.d;
                        break;
                    case "error":
                        l = o.d;
                        break;
                    case "promptTitle":
                        m = o.d;
                        break;
                    case "prompt":
                        n = o.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_34_1) {
            e_34 = { error: e_34_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_34)
                    throw e_34.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n
        };
    };
    SpreadsheetMLMain.aar = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
        if (c === void 0) {
            c = 0;
        }
        if (d === void 0) {
            d = 0;
        }
        if (e === void 0) {
            e = 0;
        }
        if (f === void 0) {
            f = 0;
        }
        if (g === void 0) {
            g = false;
        }
        if (h === void 0) {
            h = false;
        }
        if (i === void 0) {
            i = false;
        }
        if (j === void 0) {
            j = false;
        }
        if (k === void 0) {
            k = null;
        }
        if (l === void 0) {
            l = null;
        }
        if (m === void 0) {
            m = null;
        }
        if (n === void 0) {
            n = null;
        }
        a.ad.p(SpreadsheetMLMain.fy, null);
        var o;
        o = b;
        a.ad.h("sqref", o);
        if (c != 0) {
            o = XmlNamespaceDefinitionBase.p(ST_DataValidationType_$type, c);
            a.ad.h("type", o);
        }
        if (d != 0) {
            o = XmlNamespaceDefinitionBase.p(ST_DataValidationErrorStyle_$type, d);
            a.ad.h("errorStyle", o);
        }
        if (e != 0) {
            o = XmlNamespaceDefinitionBase.p(ST_DataValidationImeMode_$type, e);
            a.ad.h("imeMode", o);
        }
        if (f != 0) {
            o = XmlNamespaceDefinitionBase.p(ST_DataValidationOperator_$type, f);
            a.ad.h("operator", o);
        }
        if (g != false) {
            o = ST_OnOff.g(g);
            a.ad.h("allowBlank", o);
        }
        if (h != false) {
            o = ST_OnOff.g(h);
            a.ad.h("showDropDown", o);
        }
        if (i != false) {
            o = ST_OnOff.g(i);
            a.ad.h("showInputMessage", o);
        }
        if (j != false) {
            o = ST_OnOff.g(j);
            a.ad.h("showErrorMessage", o);
        }
        o = k;
        a.ad.h("errorTitle", o);
        o = l;
        a.ad.h("error", o);
        o = m;
        a.ad.h("promptTitle", o);
        o = n;
        a.ad.h("prompt", o);
    };
    SpreadsheetMLMain.u7 = function (a, b, c, d, e) {
        var e_35, _a;
        b = false;
        c = toNullable(Number_$type, null);
        d = toNullable(Number_$type, null);
        e = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "disablePrompts":
                        b = ST_OnOff.e(f.d);
                        break;
                    case "xWindow":
                        c = toNullable(Number_$type, parseUInt32_1(f.d, CultureInfo.invariantCulture));
                        break;
                    case "yWindow":
                        d = toNullable(Number_$type, parseUInt32_1(f.d, CultureInfo.invariantCulture));
                        break;
                    case "count":
                        e = toNullable(Number_$type, parseUInt32_1(f.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_35_1) {
            e_35 = { error: e_35_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_35)
                    throw e_35.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetMLMain.aas = function (a, b, c, d, e) {
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = toNullable(Number_$type, null);
        }
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        if (e === void 0) {
            e = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.fz, null);
        var f;
        if (b != false) {
            f = ST_OnOff.g(b);
            a.ad.h("disablePrompts", f);
        }
        if (nullableNotEquals(c, null)) {
            f = c.value.toString();
            a.ad.h("xWindow", f);
        }
        if (nullableNotEquals(d, null)) {
            f = d.value.toString();
            a.ad.h("yWindow", f);
        }
        if (nullableNotEquals(e, null)) {
            f = e.value.toString();
            a.ad.h("count", f);
        }
    };
    SpreadsheetMLMain.u8 = function (a, b, c, d, e, f, g, h) {
        var e_36, _a;
        c = 0;
        d = toNullable(Number_$type, null);
        e = toNullable(Number_$type, null);
        f = toNullable(Number_$type, null);
        g = toNullable(Number_$type, null);
        h = toNullable(Number_$type, null);
        b = 0;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var i = _c.value;
                switch (i.a.e(a.d)) {
                    case "year":
                        c = parseUInt16_1(i.d, CultureInfo.invariantCulture);
                        break;
                    case "month":
                        d = toNullable(Number_$type, parseUInt16_1(i.d, CultureInfo.invariantCulture));
                        break;
                    case "day":
                        e = toNullable(Number_$type, parseUInt16_1(i.d, CultureInfo.invariantCulture));
                        break;
                    case "hour":
                        f = toNullable(Number_$type, parseUInt16_1(i.d, CultureInfo.invariantCulture));
                        break;
                    case "minute":
                        g = toNullable(Number_$type, parseUInt16_1(i.d, CultureInfo.invariantCulture));
                        break;
                    case "second":
                        h = toNullable(Number_$type, parseUInt16_1(i.d, CultureInfo.invariantCulture));
                        break;
                    case "dateTimeGrouping":
                        b = XmlNamespaceDefinitionBase.b(ST_DateTimeGrouping_$type, i.d, b);
                        break;
                    default: break;
                }
            }
        }
        catch (e_36_1) {
            e_36 = { error: e_36_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_36)
                    throw e_36.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h
        };
    };
    SpreadsheetMLMain.aat = function (a, b, c, d, e, f, g, h) {
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        if (e === void 0) {
            e = toNullable(Number_$type, null);
        }
        if (f === void 0) {
            f = toNullable(Number_$type, null);
        }
        if (g === void 0) {
            g = toNullable(Number_$type, null);
        }
        if (h === void 0) {
            h = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.f2, null);
        var i;
        i = c.toString();
        a.ad.h("year", i);
        if (nullableNotEquals(d, null)) {
            i = d.value.toString();
            a.ad.h("month", i);
        }
        if (nullableNotEquals(e, null)) {
            i = e.value.toString();
            a.ad.h("day", i);
        }
        if (nullableNotEquals(f, null)) {
            i = f.value.toString();
            a.ad.h("hour", i);
        }
        if (nullableNotEquals(g, null)) {
            i = g.value.toString();
            a.ad.h("minute", i);
        }
        if (nullableNotEquals(h, null)) {
            i = h.value.toString();
            a.ad.h("second", i);
        }
        i = XmlNamespaceDefinitionBase.p(ST_DateTimeGrouping_$type, b);
        a.ad.h("dateTimeGrouping", i);
    };
    SpreadsheetMLMain.u9 = function (a, b, c, d, e) {
        var e_37, _a;
        b = null;
        c = false;
        d = false;
        e = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "name":
                        b = f.d;
                        break;
                    case "ole":
                        c = ST_OnOff.e(f.d);
                        break;
                    case "advise":
                        d = ST_OnOff.e(f.d);
                        break;
                    case "preferPic":
                        e = ST_OnOff.e(f.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_37_1) {
            e_37 = { error: e_37_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_37)
                    throw e_37.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetMLMain.aau = function (a, b, c, d, e) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = false;
        }
        a.ad.p(SpreadsheetMLMain.f5, null);
        var f;
        f = b;
        a.ad.h("name", f);
        if (c != false) {
            f = ST_OnOff.g(c);
            a.ad.h("ole", f);
        }
        if (d != false) {
            f = ST_OnOff.g(d);
            a.ad.h("advise", f);
        }
        if (e != false) {
            f = ST_OnOff.g(e);
            a.ad.h("preferPic", f);
        }
    };
    SpreadsheetMLMain.va = function (a) {
    };
    SpreadsheetMLMain.aav = function (a) {
        a.ad.p(SpreadsheetMLMain.f6, null);
    };
    SpreadsheetMLMain.vb = function (a, b, c) {
        var e_38, _a;
        b = null;
        c = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                switch (d.a.e(a.d)) {
                    case "ddeService":
                        b = d.d;
                        break;
                    case "ddeTopic":
                        c = d.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_38_1) {
            e_38 = { error: e_38_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_38)
                    throw e_38.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.aaw = function (a, b, c) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = null;
        }
        a.ad.p(SpreadsheetMLMain.f7, null);
        var d;
        d = b;
        a.ad.h("ddeService", d);
        d = c;
        a.ad.h("ddeTopic", d);
    };
    SpreadsheetMLMain.vd = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
        var e_39, _a;
        c = null;
        d = null;
        e = null;
        f = null;
        g = null;
        h = null;
        i = toNullable(Number_$type, null);
        j = false;
        k = false;
        l = false;
        m = false;
        n = toNullable(Number_$type, null);
        o = null;
        p = false;
        q = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var r = _c.value;
                switch (r.a.e(a.d)) {
                    case "name":
                        c = r.d;
                        break;
                    case "comment":
                        d = r.d;
                        break;
                    case "customMenu":
                        e = r.d;
                        break;
                    case "description":
                        f = r.d;
                        break;
                    case "help":
                        g = r.d;
                        break;
                    case "statusBar":
                        h = r.d;
                        break;
                    case "localSheetId":
                        i = toNullable(Number_$type, parseUInt32_1(r.d, CultureInfo.invariantCulture));
                        break;
                    case "hidden":
                        j = ST_OnOff.e(r.d);
                        break;
                    case "function":
                        k = ST_OnOff.e(r.d);
                        break;
                    case "vbProcedure":
                        l = ST_OnOff.e(r.d);
                        break;
                    case "xlm":
                        m = ST_OnOff.e(r.d);
                        break;
                    case "functionGroupId":
                        n = toNullable(Number_$type, parseUInt32_1(r.d, CultureInfo.invariantCulture));
                        break;
                    case "shortcutKey":
                        o = r.d;
                        break;
                    case "publishToServer":
                        p = ST_OnOff.e(r.d);
                        break;
                    case "workbookParameter":
                        q = ST_OnOff.e(r.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_39_1) {
            e_39 = { error: e_39_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_39)
                    throw e_39.error;
            }
        }
        b = SpreadsheetMLMain.rw(a.ab.ad, true);
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q
        };
    };
    SpreadsheetMLMain.aay = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = null;
        }
        if (f === void 0) {
            f = null;
        }
        if (g === void 0) {
            g = null;
        }
        if (h === void 0) {
            h = null;
        }
        if (i === void 0) {
            i = toNullable(Number_$type, null);
        }
        if (j === void 0) {
            j = false;
        }
        if (k === void 0) {
            k = false;
        }
        if (l === void 0) {
            l = false;
        }
        if (m === void 0) {
            m = false;
        }
        if (n === void 0) {
            n = toNullable(Number_$type, null);
        }
        if (o === void 0) {
            o = null;
        }
        if (p === void 0) {
            p = false;
        }
        if (q === void 0) {
            q = false;
        }
        a.ad.p(SpreadsheetMLMain.gh, null);
        var r;
        r = c;
        a.ad.h("name", r);
        if (d != null) {
            r = d;
            a.ad.h("comment", r);
        }
        if (e != null) {
            r = e;
            a.ad.h("customMenu", r);
        }
        if (f != null) {
            r = f;
            a.ad.h("description", r);
        }
        if (g != null) {
            r = g;
            a.ad.h("help", r);
        }
        if (h != null) {
            r = h;
            a.ad.h("statusBar", r);
        }
        if (nullableNotEquals(i, null)) {
            r = i.value.toString();
            a.ad.h("localSheetId", r);
        }
        if (j != false) {
            r = ST_OnOff.g(j);
            a.ad.h("hidden", r);
        }
        if (k != false) {
            r = ST_OnOff.g(k);
            a.ad.h("function", r);
        }
        if (l != false) {
            r = ST_OnOff.g(l);
            a.ad.h("vbProcedure", r);
        }
        if (m != false) {
            r = ST_OnOff.g(m);
            a.ad.h("xlm", r);
        }
        if (nullableNotEquals(n, null)) {
            r = n.value.toString();
            a.ad.h("functionGroupId", r);
        }
        if (o != null) {
            r = o;
            a.ad.h("shortcutKey", r);
        }
        if (p != false) {
            r = ST_OnOff.g(p);
            a.ad.h("publishToServer", r);
        }
        if (q != false) {
            r = ST_OnOff.g(q);
            a.ad.h("workbookParameter", r);
        }
        if (b != null) {
            a.ad.u(SpreadsheetMLMain.hh(b));
        }
    };
    SpreadsheetMLMain.vc = function (a, b, c, d) {
        var e_40, _a;
        b = null;
        c = null;
        d = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                switch (e.a.e(a.d)) {
                    case "name":
                        b = e.d;
                        break;
                    case "refersTo":
                        c = e.d;
                        break;
                    case "sheetId":
                        d = toNullable(Number_$type, parseUInt32_1(e.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_40_1) {
            e_40 = { error: e_40_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_40)
                    throw e_40.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    SpreadsheetMLMain.aax = function (a, b, c, d) {
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.gh, null);
        var e;
        e = b;
        a.ad.h("name", e);
        e = c;
        a.ad.h("refersTo", e);
        if (nullableNotEquals(d, null)) {
            e = d.value.toString();
            a.ad.h("sheetId", e);
        }
    };
    SpreadsheetMLMain.ve = function (a) {
    };
    SpreadsheetMLMain.aaz = function (a) {
        a.ad.p(SpreadsheetMLMain.gi, null);
    };
    SpreadsheetMLMain.vf = function (a, b) {
        var c = SpreadsheetMLMain.us(a, SpreadsheetMLMain.gr, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.aa0 = function (a, b) {
        if (b === void 0) {
            b = 0;
        }
        SpreadsheetMLMain.aad(a, SpreadsheetMLMain.gr, b);
    };
    SpreadsheetMLMain.vg = function (a, b) {
        b = a.ao("ref");
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.aa1 = function (a, b) {
        a.ad.p(SpreadsheetMLMain.gw, null);
        var c;
        c = b;
        a.ad.h("ref", c);
    };
    SpreadsheetMLMain.vh = function (a, b) {
        b = a.ao(OfficeDocumentRelationships.as);
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.aa2 = function (a, b) {
        a.ad.p(SpreadsheetMLMain.g2, null);
        var c;
        c = b;
        a.ad.h(OfficeDocumentRelationships.as, c);
    };
    SpreadsheetMLMain.vi = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
        var e_41, _a;
        b = null;
        c = toNullable(Number_$type, null);
        d = toNullable(Number_$type, null);
        e = toNullable(Number_$type, null);
        f = toNullable(Number_$type, null);
        g = toNullable(Number_$type, null);
        h = toNullable(Number_$type, null);
        i = toNullable(Number_$type, null);
        j = toNullable(Number_$type, null);
        k = toNullable(Number_$type, null);
        l = toNullable(Number_$type, null);
        m = toNullable(Number_$type, null);
        n = toNullable(Number_$type, null);
        o = toNullable(Number_$type, null);
        p = toNullable(Number_$type, null);
        q = toNullable(Number_$type, null);
        r = toNullable(Number_$type, null);
        s = toNullable(Number_$type, null);
        t = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var u = _c.value;
                switch (u.a.e(a.d)) {
                    case OfficeDocumentRelationships.as:
                        b = u.d;
                        break;
                    case "lho":
                        c = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "lhe":
                        d = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "lhf":
                        e = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "cho":
                        f = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "che":
                        g = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "chf":
                        h = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "rho":
                        i = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "rhe":
                        j = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "rhf":
                        k = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "lfo":
                        l = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "lfe":
                        m = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "lff":
                        n = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "cfo":
                        o = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "cfe":
                        p = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "cff":
                        q = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "rfo":
                        r = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "rfe":
                        s = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "rff":
                        t = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_41_1) {
            e_41 = { error: e_41_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_41)
                    throw e_41.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q,
            p17: r,
            p18: s,
            p19: t
        };
    };
    SpreadsheetMLMain.aa3 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
        if (c === void 0) {
            c = toNullable(Number_$type, null);
        }
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        if (e === void 0) {
            e = toNullable(Number_$type, null);
        }
        if (f === void 0) {
            f = toNullable(Number_$type, null);
        }
        if (g === void 0) {
            g = toNullable(Number_$type, null);
        }
        if (h === void 0) {
            h = toNullable(Number_$type, null);
        }
        if (i === void 0) {
            i = toNullable(Number_$type, null);
        }
        if (j === void 0) {
            j = toNullable(Number_$type, null);
        }
        if (k === void 0) {
            k = toNullable(Number_$type, null);
        }
        if (l === void 0) {
            l = toNullable(Number_$type, null);
        }
        if (m === void 0) {
            m = toNullable(Number_$type, null);
        }
        if (n === void 0) {
            n = toNullable(Number_$type, null);
        }
        if (o === void 0) {
            o = toNullable(Number_$type, null);
        }
        if (p === void 0) {
            p = toNullable(Number_$type, null);
        }
        if (q === void 0) {
            q = toNullable(Number_$type, null);
        }
        if (r === void 0) {
            r = toNullable(Number_$type, null);
        }
        if (s === void 0) {
            s = toNullable(Number_$type, null);
        }
        if (t === void 0) {
            t = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.g3, null);
        var u;
        u = b;
        a.ad.h(OfficeDocumentRelationships.as, u);
        if (nullableNotEquals(c, null)) {
            u = c.value.toString();
            a.ad.h("lho", u);
        }
        if (nullableNotEquals(d, null)) {
            u = d.value.toString();
            a.ad.h("lhe", u);
        }
        if (nullableNotEquals(e, null)) {
            u = e.value.toString();
            a.ad.h("lhf", u);
        }
        if (nullableNotEquals(f, null)) {
            u = f.value.toString();
            a.ad.h("cho", u);
        }
        if (nullableNotEquals(g, null)) {
            u = g.value.toString();
            a.ad.h("che", u);
        }
        if (nullableNotEquals(h, null)) {
            u = h.value.toString();
            a.ad.h("chf", u);
        }
        if (nullableNotEquals(i, null)) {
            u = i.value.toString();
            a.ad.h("rho", u);
        }
        if (nullableNotEquals(j, null)) {
            u = j.value.toString();
            a.ad.h("rhe", u);
        }
        if (nullableNotEquals(k, null)) {
            u = k.value.toString();
            a.ad.h("rhf", u);
        }
        if (nullableNotEquals(l, null)) {
            u = l.value.toString();
            a.ad.h("lfo", u);
        }
        if (nullableNotEquals(m, null)) {
            u = m.value.toString();
            a.ad.h("lfe", u);
        }
        if (nullableNotEquals(n, null)) {
            u = n.value.toString();
            a.ad.h("lff", u);
        }
        if (nullableNotEquals(o, null)) {
            u = o.value.toString();
            a.ad.h("cfo", u);
        }
        if (nullableNotEquals(p, null)) {
            u = p.value.toString();
            a.ad.h("cfe", u);
        }
        if (nullableNotEquals(q, null)) {
            u = q.value.toString();
            a.ad.h("cff", u);
        }
        if (nullableNotEquals(r, null)) {
            u = r.value.toString();
            a.ad.h("rfo", u);
        }
        if (nullableNotEquals(s, null)) {
            u = s.value.toString();
            a.ad.h("rfe", u);
        }
        if (nullableNotEquals(t, null)) {
            u = t.value.toString();
            a.ad.h("rff", u);
        }
    };
    SpreadsheetMLMain.vj = function (a, b) {
        if (b === void 0) {
            b = SpreadsheetMLMain.g6;
        }
    };
    SpreadsheetMLMain.aa4 = function (a, b) {
        if (b === void 0) {
            b = SpreadsheetMLMain.g6;
        }
        a.ad.p(b, null);
    };
    SpreadsheetMLMain.vk = function (a, b) {
        var c = a.ao("count");
        if (c == null) {
            b = toNullable(Number_$type, null);
        }
        else {
            b = toNullable(Number_$type, parseUInt32_1(c, CultureInfo.invariantCulture));
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.aa5 = function (a, b) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.g8, null);
        var c;
        if (nullableNotEquals(b, null)) {
            c = b.value.toString();
            a.ad.h("count", c);
        }
    };
    SpreadsheetMLMain.vl = function (a, b, c, d) {
        var e_42, _a;
        b = 0;
        c = toNullable(Number_$type, null);
        d = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                switch (e.a.e(a.d)) {
                    case "type":
                        b = XmlNamespaceDefinitionBase.b(ST_DynamicFilterType_$type, e.d, b);
                        break;
                    case "val":
                        c = toNullable(Number_$type, parseNumber(e.d, CultureInfo.invariantCulture));
                        break;
                    case "maxVal":
                        d = toNullable(Number_$type, parseNumber(e.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_42_1) {
            e_42 = { error: e_42_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_42)
                    throw e_42.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    SpreadsheetMLMain.aa6 = function (a, b, c, d) {
        if (c === void 0) {
            c = toNullable(Number_$type, null);
        }
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.g9, null);
        var e;
        e = XmlNamespaceDefinitionBase.p(ST_DynamicFilterType_$type, b);
        a.ad.h("type", e);
        if (nullableNotEquals(c, null)) {
            e = c.value.toString();
            a.ad.h("val", e);
        }
        if (nullableNotEquals(d, null)) {
            e = d.value.toString();
            a.ad.h("maxVal", e);
        }
    };
    SpreadsheetMLMain.vm = function (a, b, c, d, e) {
        var e_43, _a;
        b = 0;
        c = toNullable(Number_$type, null);
        d = toNullable(Date_$type, null);
        e = toNullable(Date_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "type":
                        b = XmlNamespaceDefinitionBase.b(ST_DynamicFilterType_$type, f.d, b);
                        break;
                    case "val":
                        c = toNullable(Number_$type, parseNumber(f.d, CultureInfo.invariantCulture));
                        break;
                    case "valIso":
                        d = toNullable(Date_$type, dateParse(f.d, CultureInfo.invariantCulture));
                        break;
                    case "maxValIso":
                        e = toNullable(Date_$type, dateParse(f.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_43_1) {
            e_43 = { error: e_43_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_43)
                    throw e_43.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetMLMain.aa7 = function (a, b, c, d, e) {
        if (c === void 0) {
            c = toNullable(Number_$type, null);
        }
        if (d === void 0) {
            d = toNullable(Date_$type, null);
        }
        if (e === void 0) {
            e = toNullable(Date_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.g9, null);
        var f;
        f = XmlNamespaceDefinitionBase.p(ST_DynamicFilterType_$type, b);
        a.ad.h("type", f);
        if (nullableNotEquals(c, null)) {
            f = c.value.toString();
            a.ad.h("val", f);
        }
        if (nullableNotEquals(d, null)) {
            f = dateToString(d.value, CultureInfo.invariantCulture);
            a.ad.h("valIso", f);
        }
        if (nullableNotEquals(e, null)) {
            f = dateToString(e.value, CultureInfo.invariantCulture);
            a.ad.h("maxValIso", f);
        }
    };
    SpreadsheetMLMain.vn = function (a, b) {
        var c = SpreadsheetMLMain.us(a, SpreadsheetMLMain.hb, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.aa8 = function (a, b) {
        if (b === void 0) {
            b = 0;
        }
        SpreadsheetMLMain.aad(a, SpreadsheetMLMain.hb, b);
    };
    SpreadsheetMLMain.vo = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, SpreadsheetMLMain.hi);
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.aa9 = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, SpreadsheetMLMain.hi, null, b);
    };
    SpreadsheetMLMain.vp = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, SpreadsheetMLMain.hj);
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.aba = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, SpreadsheetMLMain.hj, null, b);
    };
    SpreadsheetMLMain.vq = function (a, b) {
        b = a.ao("uri");
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.abb = function (a, b, c) {
        if (c === void 0) {
            c = null;
        }
        a.ad.p(SpreadsheetMLMain.hk, null);
        var d;
        d = b;
        a.ad.h("uri", d);
        if (stringIsNullOrEmpty(c) == false) {
            d = c;
            a.ad.i("xmlns", "x14", null, d);
        }
    };
    SpreadsheetMLMain.vr = function (a, b) {
        var c = SpreadsheetMLMain.ur(a, SpreadsheetMLMain.hl, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.abc = function (a, b) {
        if (b === void 0) {
            b = true;
        }
        SpreadsheetMLMain.aac(a, SpreadsheetMLMain.hl, b);
    };
    SpreadsheetMLMain.vs = function (a, b) {
        b = a.ao(OfficeDocumentRelationships.as);
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.abd = function (a, b) {
        a.ad.p(SpreadsheetMLMain.hm, null);
        var c;
        c = b;
        a.ad.h(OfficeDocumentRelationships.as, c);
    };
    SpreadsheetMLMain.vt = function (a) {
    };
    SpreadsheetMLMain.abe = function (a) {
        a.ad.p(SpreadsheetMLMain.hn, null);
        var b = a.d._z;
        a.ad.l(SpreadsheetMLMain.ap);
    };
    SpreadsheetMLMain.vu = function (a, b) {
        b = a.ao(OfficeDocumentRelationships.as);
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.abf = function (a, b) {
        a.ad.p(SpreadsheetMLMain.ho, null);
        var c;
        c = b;
        a.ad.h(OfficeDocumentRelationships.as, c);
    };
    SpreadsheetMLMain.vv = function (a) {
    };
    SpreadsheetMLMain.abg = function (a) {
        a.ad.p(SpreadsheetMLMain.hp, null);
    };
    SpreadsheetMLMain.vw = function (a) {
    };
    SpreadsheetMLMain.abh = function (a) {
        a.ad.p(SpreadsheetMLMain.hq, null);
    };
    SpreadsheetMLMain.vx = function (a, b) {
        var c = a.ao("val");
        if (c == null) {
            b = 0;
        }
        else {
            b = parseInt32_1(c, CultureInfo.invariantCulture);
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.abi = function (a, b) {
        a.ad.p(SpreadsheetMLMain.hs, null);
        var c;
        c = b.toString();
        a.ad.h("val", c);
    };
    SpreadsheetMLMain.vy = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
        var e_44, _a;
        b = 0;
        c = false;
        d = null;
        e = false;
        f = false;
        g = false;
        h = false;
        i = null;
        j = null;
        k = false;
        l = toNullable(Number_$type, null);
        m = false;
        var o = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var p = _c.value;
                switch (p.a.e(a.d)) {
                    case "t":
                        b = XmlNamespaceDefinitionBase.b(ST_CellFormulaType_$type, p.d, b);
                        break;
                    case "aca":
                        c = ST_OnOff.e(p.d);
                        break;
                    case "ref":
                        d = p.d;
                        break;
                    case "dt2D":
                        e = ST_OnOff.e(p.d);
                        break;
                    case "dtr":
                        f = ST_OnOff.e(p.d);
                        break;
                    case "del1":
                        g = ST_OnOff.e(p.d);
                        break;
                    case "del2":
                        h = ST_OnOff.e(p.d);
                        break;
                    case "r1":
                        i = p.d;
                        break;
                    case "r2":
                        j = p.d;
                        break;
                    case "ca":
                        k = ST_OnOff.e(p.d);
                        break;
                    case "si":
                        l = toNullable(Number_$type, parseUInt32_1(p.d, CultureInfo.invariantCulture));
                        break;
                    case "bx":
                        m = ST_OnOff.e(p.d);
                        break;
                    case XmlNamespace.as:
                        o = (p.d == "preserve");
                        break;
                    default: break;
                }
            }
        }
        catch (e_44_1) {
            e_44 = { error: e_44_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_44)
                    throw e_44.error;
            }
        }
        n = a.ab.ad;
        if (n != null && o == false) {
            n = n.trim();
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n
        };
    };
    SpreadsheetMLMain.abj = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
        if (c === void 0) {
            c = 0;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = null;
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = false;
        }
        if (h === void 0) {
            h = false;
        }
        if (i === void 0) {
            i = false;
        }
        if (j === void 0) {
            j = null;
        }
        if (k === void 0) {
            k = null;
        }
        if (l === void 0) {
            l = false;
        }
        if (m === void 0) {
            m = toNullable(Number_$type, null);
        }
        if (n === void 0) {
            n = false;
        }
        a.ad.p(SpreadsheetMLMain.hr, null);
        var o;
        if (c != 0) {
            o = XmlNamespaceDefinitionBase.p(ST_CellFormulaType_$type, c);
            a.ad.h("t", o);
        }
        if (d != false) {
            o = ST_OnOff.g(d);
            a.ad.h("aca", o);
        }
        o = e;
        a.ad.h("ref", o);
        if (f != false) {
            o = ST_OnOff.g(f);
            a.ad.h("dt2D", o);
        }
        if (g != false) {
            o = ST_OnOff.g(g);
            a.ad.h("dtr", o);
        }
        if (h != false) {
            o = ST_OnOff.g(h);
            a.ad.h("del1", o);
        }
        if (i != false) {
            o = ST_OnOff.g(i);
            a.ad.h("del2", o);
        }
        o = j;
        a.ad.h("r1", o);
        o = k;
        a.ad.h("r2", o);
        if (l != false) {
            o = ST_OnOff.g(l);
            a.ad.h("ca", o);
        }
        if (nullableNotEquals(m, null)) {
            o = m.value.toString();
            a.ad.h("si", o);
        }
        if (n != false) {
            o = ST_OnOff.g(n);
            a.ad.h("bx", o);
        }
        if (b != null) {
            if (stringIsNullOrEmpty(b) == false) {
                if (/\s/i.test(b.charAt(0)) || /\s/i.test(b.charAt(b.length - 1))) {
                    XmlNamespace.at(a.ad);
                }
            }
            a.ad.u(b);
        }
    };
    SpreadsheetMLMain.vz = function (a, b, c, d, e, f) {
        var g = SpreadsheetMLMain.ut(a, SpreadsheetMLMain.ht, b, c, d, e, f);
        b = g.p2;
        c = g.p3;
        d = g.p4;
        e = g.p5;
        f = g.p6;
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f
        };
    };
    SpreadsheetMLMain.abk = function (a, b, c, d, e, f) {
        if (b === void 0) {
            b = toNullable(Boolean_$type, null);
        }
        if (c === void 0) {
            c = toNullable(Number_$type, null);
        }
        if (d === void 0) {
            d = toNullable(ST_UnsignedIntHex.$, null);
        }
        if (e === void 0) {
            e = toNullable(Number_$type, null);
        }
        if (f === void 0) {
            f = 0;
        }
        SpreadsheetMLMain.aae(a, SpreadsheetMLMain.ht, b, c, d, e, f);
    };
    SpreadsheetMLMain.v1 = function (a, b, c, d) {
        var e_45, _a;
        c = false;
        b = null;
        d = 0;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                switch (e.a.e(a.d)) {
                    case "readOnlyRecommended":
                        c = ST_OnOff.e(e.d);
                        break;
                    case "userName":
                        b = e.d;
                        break;
                    case "reservationPassword":
                        d = ST_UnsignedShortHex.d(e.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_45_1) {
            e_45 = { error: e_45_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_45)
                    throw e_45.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    SpreadsheetMLMain.abm = function (a, b, c, d) {
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = 0;
        }
        a.ad.p(SpreadsheetMLMain.hu, null);
        var e;
        if (c != false) {
            e = ST_OnOff.g(c);
            a.ad.h("readOnlyRecommended", e);
        }
        e = b;
        a.ad.h("userName", e);
        e = new ST_UnsignedShortHex(1, d).toString();
        a.ad.h("reservationPassword", e);
    };
    SpreadsheetMLMain.v0 = function (a, b, c, d, e, f, g) {
        var e_46, _a;
        c = false;
        b = null;
        d = null;
        e = null;
        f = null;
        g = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var h = _c.value;
                switch (h.a.e(a.d)) {
                    case "readOnlyRecommended":
                        c = ST_OnOff.e(h.d);
                        break;
                    case "userName":
                        b = h.d;
                        break;
                    case "algorithmName":
                        d = h.d;
                        break;
                    case "hashValue":
                        e = Convert.fromBase64String(h.d);
                        break;
                    case "saltValue":
                        f = Convert.fromBase64String(h.d);
                        break;
                    case "spinCount":
                        g = toNullable(Number_$type, parseUInt32_1(h.d));
                        break;
                    default: break;
                }
            }
        }
        catch (e_46_1) {
            e_46 = { error: e_46_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_46)
                    throw e_46.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g
        };
    };
    SpreadsheetMLMain.abl = function (a, b, c, d, e, f, g) {
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = null;
        }
        if (f === void 0) {
            f = null;
        }
        if (g === void 0) {
            g = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.hu, null);
        var h;
        if (c != false) {
            h = ST_OnOff.g(c);
            a.ad.h("readOnlyRecommended", h);
        }
        h = b;
        a.ad.h("userName", h);
        h = d;
        a.ad.h("algorithmName", h);
        if (e != null) {
            h = Convert.toBase64String(e);
            a.ad.h("hashValue", h);
        }
        if (f != null) {
            h = Convert.toBase64String(f);
            a.ad.h("saltValue", h);
        }
        if (nullableNotEquals(g, null)) {
            h = g.value.toString();
            a.ad.h("spinCount", h);
        }
    };
    SpreadsheetMLMain.v2 = function (a, b, c, d, e, f) {
        var e_47, _a;
        b = null;
        c = null;
        d = null;
        e = null;
        f = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var g = _c.value;
                switch (g.a.e(a.d)) {
                    case "appName":
                        b = g.d;
                        break;
                    case "lastEdited":
                        c = g.d;
                        break;
                    case "lowestEdited":
                        d = g.d;
                        break;
                    case "rupBuild":
                        e = g.d;
                        break;
                    case "codeName":
                        f = g.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_47_1) {
            e_47 = { error: e_47_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_47)
                    throw e_47.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f
        };
    };
    SpreadsheetMLMain.abn = function (a, b, c, d, e, f) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = null;
        }
        if (f === void 0) {
            f = null;
        }
        a.ad.p(SpreadsheetMLMain.hv, null);
        var g;
        g = b;
        a.ad.h("appName", g);
        g = c;
        a.ad.h("lastEdited", g);
        g = d;
        a.ad.h("lowestEdited", g);
        g = e;
        a.ad.h("rupBuild", g);
        g = f;
        a.ad.h("codeName", g);
    };
    SpreadsheetMLMain.v3 = function (a) {
    };
    SpreadsheetMLMain.abo = function (a) {
        a.ad.p(SpreadsheetMLMain.hw, null);
    };
    SpreadsheetMLMain.v4 = function (a, b) {
        var c = a.ao("count");
        if (c == null) {
            b = toNullable(Number_$type, null);
        }
        else {
            b = toNullable(Number_$type, parseUInt32_1(c, CultureInfo.invariantCulture));
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.abp = function (a, b) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.hy, null);
        var c;
        if (nullableNotEquals(b, null)) {
            c = b.value.toString();
            a.ad.h("count", c);
        }
    };
    SpreadsheetMLMain.v5 = function (a, b, c, d) {
        var e_48, _a;
        b = 0;
        c = false;
        d = true;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                switch (e.a.e(a.d)) {
                    case "colId":
                        b = parseUInt32_1(e.d, CultureInfo.invariantCulture);
                        break;
                    case "hiddenButton":
                        c = ST_OnOff.e(e.d);
                        break;
                    case "showButton":
                        d = ST_OnOff.e(e.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_48_1) {
            e_48 = { error: e_48_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_48)
                    throw e_48.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    SpreadsheetMLMain.abq = function (a, b, c, d) {
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = true;
        }
        a.ad.p(SpreadsheetMLMain.h1, null);
        var e;
        e = b.toString();
        a.ad.h("colId", e);
        if (c != false) {
            e = ST_OnOff.g(c);
            a.ad.h("hiddenButton", e);
        }
        if (d != true) {
            e = ST_OnOff.g(d);
            a.ad.h("showButton", e);
        }
    };
    SpreadsheetMLMain.v6 = function (a, b) {
        b = a.ao("val");
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.abr = function (a, b) {
        a.ad.p(SpreadsheetMLMain.hz, null);
        var c;
        c = b;
        a.ad.h("val", c);
    };
    SpreadsheetMLMain.v7 = function (a, b, c) {
        var e_49, _a;
        b = false;
        c = 10;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                switch (d.a.e(a.d)) {
                    case "blank":
                        b = ST_OnOff.e(d.d);
                        break;
                    case "calendarType":
                        c = XmlNamespaceDefinitionBase.b(ST_CalendarType_$type, d.d, c);
                        break;
                    default: break;
                }
            }
        }
        catch (e_49_1) {
            e_49 = { error: e_49_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_49)
                    throw e_49.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.abs = function (a, b, c) {
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = 10;
        }
        a.ad.p(SpreadsheetMLMain.h4, null);
        var d;
        if (b != false) {
            d = ST_OnOff.g(b);
            a.ad.h("blank", d);
        }
        if (c != 10) {
            d = XmlNamespaceDefinitionBase.p(ST_CalendarType_$type, c);
            a.ad.h("calendarType", d);
        }
    };
    SpreadsheetMLMain.v8 = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, SpreadsheetMLMain.h7);
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.abt = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, SpreadsheetMLMain.h7, null, b);
    };
    SpreadsheetMLMain.v9 = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, SpreadsheetMLMain.h8);
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.abu = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, SpreadsheetMLMain.h8, null, b);
    };
    SpreadsheetMLMain.wa = function (a) {
    };
    SpreadsheetMLMain.abv = function (a) {
        a.ad.p(SpreadsheetMLMain.ie, null);
    };
    SpreadsheetMLMain.wb = function (a, b) {
        var c = a.ao("count");
        if (c == null) {
            b = toNullable(Number_$type, null);
        }
        else {
            b = toNullable(Number_$type, parseUInt32_1(c, CultureInfo.invariantCulture));
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.abw = function (a, b) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.ih, null);
        var c;
        if (nullableNotEquals(b, null)) {
            c = b.value.toString();
            a.ad.h("count", c);
        }
    };
    SpreadsheetMLMain.we = function (a, b) {
        var c = SpreadsheetMLMain.uu(a, SpreadsheetMLMain.ir, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.abz = function (a, b) {
        SpreadsheetMLMain.aaf(a, SpreadsheetMLMain.ir, b);
    };
    SpreadsheetMLMain.wc = function (a, b) {
        var c = SpreadsheetMLMain.uu(a, SpreadsheetMLMain.is, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.abx = function (a, b) {
        SpreadsheetMLMain.aaf(a, SpreadsheetMLMain.is, b);
    };
    SpreadsheetMLMain.wd = function (a, b) {
        var c = SpreadsheetMLMain.uu(a, SpreadsheetMLMain.it, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.aby = function (a, b) {
        SpreadsheetMLMain.aaf(a, SpreadsheetMLMain.it, b);
    };
    SpreadsheetMLMain.wf = function (a, b, c, d, e, f, g) {
        var e_50, _a;
        b = 0;
        c = 0;
        d = 0;
        e = 0;
        f = 0;
        g = 0;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var h = _c.value;
                switch (h.a.e(a.d)) {
                    case "type":
                        b = XmlNamespaceDefinitionBase.b(ST_GradientType_$type, h.d, b);
                        break;
                    case "degree":
                        c = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    case "left":
                        d = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    case "right":
                        e = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    case "top":
                        f = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    case "bottom":
                        g = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    default: break;
                }
            }
        }
        catch (e_50_1) {
            e_50 = { error: e_50_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_50)
                    throw e_50.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g
        };
    };
    SpreadsheetMLMain.ab0 = function (a, b, c, d, e, f, g) {
        if (b === void 0) {
            b = 0;
        }
        if (c === void 0) {
            c = 0;
        }
        if (d === void 0) {
            d = 0;
        }
        if (e === void 0) {
            e = 0;
        }
        if (f === void 0) {
            f = 0;
        }
        if (g === void 0) {
            g = 0;
        }
        a.ad.p(SpreadsheetMLMain.iy, null);
        var h;
        if (b != 0) {
            h = XmlNamespaceDefinitionBase.p(ST_GradientType_$type, b);
            a.ad.h("type", h);
        }
        if (c != 0) {
            h = c.toString();
            a.ad.h("degree", h);
        }
        if (d != 0) {
            h = d.toString();
            a.ad.h("left", h);
        }
        if (e != 0) {
            h = e.toString();
            a.ad.h("right", h);
        }
        if (f != 0) {
            h = f.toString();
            a.ad.h("top", h);
        }
        if (g != 0) {
            h = g.toString();
            a.ad.h("bottom", h);
        }
    };
    SpreadsheetMLMain.wg = function (a, b, c, d, e) {
        var e_51, _a;
        b = false;
        c = false;
        d = true;
        e = true;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "differentOddEven":
                        b = ST_OnOff.e(f.d);
                        break;
                    case "differentFirst":
                        c = ST_OnOff.e(f.d);
                        break;
                    case "scaleWithDoc":
                        d = ST_OnOff.e(f.d);
                        break;
                    case "alignWithMargins":
                        e = ST_OnOff.e(f.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_51_1) {
            e_51 = { error: e_51_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_51)
                    throw e_51.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetMLMain.ab1 = function (a, b, c, d, e) {
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = true;
        }
        if (e === void 0) {
            e = true;
        }
        a.ad.p(SpreadsheetMLMain.i5, null);
        var f;
        if (b != false) {
            f = ST_OnOff.g(b);
            a.ad.h("differentOddEven", f);
        }
        if (c != false) {
            f = ST_OnOff.g(c);
            a.ad.h("differentFirst", f);
        }
        if (d != true) {
            f = ST_OnOff.g(d);
            a.ad.h("scaleWithDoc", f);
        }
        if (e != true) {
            f = ST_OnOff.g(e);
            a.ad.h("alignWithMargins", f);
        }
    };
    SpreadsheetMLMain.wh = function (a, b) {
        var c = SpreadsheetMLMain.us(a, SpreadsheetMLMain.jh, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.ab2 = function (a, b) {
        if (b === void 0) {
            b = 0;
        }
        SpreadsheetMLMain.aad(a, SpreadsheetMLMain.jh, b);
    };
    SpreadsheetMLMain.wi = function (a, b, c, d, e, f) {
        var e_52, _a;
        b = null;
        c = null;
        d = null;
        e = null;
        f = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var g = _c.value;
                switch (g.a.e(a.d)) {
                    case "ref":
                        b = g.d;
                        break;
                    case OfficeDocumentRelationships.as:
                        c = g.d;
                        break;
                    case "location":
                        d = g.d;
                        break;
                    case "tooltip":
                        e = g.d;
                        break;
                    case "display":
                        f = g.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_52_1) {
            e_52 = { error: e_52_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_52)
                    throw e_52.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f
        };
    };
    SpreadsheetMLMain.ab3 = function (a, b, c, d, e, f) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = null;
        }
        if (f === void 0) {
            f = null;
        }
        a.ad.p(SpreadsheetMLMain.jn, null);
        var g;
        g = b;
        a.ad.h("ref", g);
        g = c;
        a.ad.h(OfficeDocumentRelationships.as, g);
        g = d;
        a.ad.h("location", g);
        g = e;
        a.ad.h("tooltip", g);
        g = f;
        a.ad.h("display", g);
    };
    SpreadsheetMLMain.wj = function (a) {
    };
    SpreadsheetMLMain.ab4 = function (a) {
        a.ad.p(SpreadsheetMLMain.jo, null);
    };
    SpreadsheetMLMain.wk = function (a, b, c) {
        var e_53, _a;
        b = 0;
        c = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                switch (d.a.e(a.d)) {
                    case "iconSet":
                        b = XmlNamespaceDefinitionBase.b(ST_IconSetType_$type, d.d, b);
                        break;
                    case "iconId":
                        c = toNullable(Number_$type, parseUInt32_1(d.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_53_1) {
            e_53 = { error: e_53_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_53)
                    throw e_53.error;
            }
        }
        if (b <= 16) {
        }
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.ab5 = function (a, b, c) {
        if (c === void 0) {
            c = toNullable(Number_$type, null);
        }
        if (b <= 16) {
            SpreadsheetMLMain.ab6(a, SpreadsheetMLMain.jr, null, b, c);
        }
        else {
            a.ad.g([new AlternateContentChoice(0, SpreadsheetML2009Main.ao, function () { return SpreadsheetMLMain.ab6(a, SpreadsheetML2009Main.bs, null, b, c); })], function () {
                SpreadsheetMLMain.aak(a);
                SpreadsheetMLMain.aaj(a, "");
                a.ad.k();
                SpreadsheetMLMain.aaj(a, " ", 5);
                a.ad.k();
                a.ad.k();
            });
        }
    };
    SpreadsheetMLMain.ab6 = function (a, b, c, d, e) {
        if (e === void 0) {
            e = toNullable(Number_$type, null);
        }
        a.ad.p(b, c);
        var f;
        f = XmlNamespaceDefinitionBase.p(ST_IconSetType_$type, d);
        a.ad.h("iconSet", f);
        if (nullableNotEquals(e, null)) {
            f = e.value.toString();
            a.ad.h("iconId", f);
        }
        a.ad.k();
    };
    SpreadsheetMLMain.wl = function (a, b, c, d, e, f) {
        var e_54, _a;
        b = 3;
        c = true;
        d = false;
        e = toNullable(Boolean_$type, null);
        f = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var g = _c.value;
                switch (g.a.e(a.d)) {
                    case "iconSet":
                        b = XmlNamespaceDefinitionBase.b(ST_IconSetType_$type, g.d, b);
                        break;
                    case "percent":
                        c = ST_OnOff.e(g.d);
                        break;
                    case "reverse":
                        d = ST_OnOff.e(g.d);
                        break;
                    case "showValue":
                        e = toNullable(Boolean_$type, ST_OnOff.e(g.d));
                        break;
                    case "custom":
                        f = ST_OnOff.e(g.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_54_1) {
            e_54 = { error: e_54_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_54)
                    throw e_54.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f
        };
    };
    SpreadsheetMLMain.ab7 = function (a, b, c, d, e, f, g) {
        a.ad.p(b, null);
        var h;
        if (c.hasValue && c.value != 3) {
            h = XmlNamespaceDefinitionBase.p(ST_IconSetType_$type, c.value);
            a.ad.h("iconSet", h);
        }
        if (d.hasValue && d.value == false) {
            h = ST_OnOff.g(d.value);
            a.ad.h("percent", h);
        }
        if (e.hasValue && e.value) {
            h = ST_OnOff.g(e.value);
            a.ad.h("reverse", h);
        }
        if (f.hasValue && f.value == false) {
            h = ST_OnOff.g(f.value);
            a.ad.h("showValue", h);
        }
        if (g.hasValue && g.value) {
            h = ST_OnOff.g(g.value);
            a.ad.h("custom", h);
        }
    };
    SpreadsheetMLMain.wm = function (a, b) {
        var c = SpreadsheetMLMain.ur(a, SpreadsheetMLMain.jp, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.ab8 = function (a, b) {
        if (b === void 0) {
            b = true;
        }
        SpreadsheetMLMain.aac(a, SpreadsheetMLMain.jp, b);
    };
    SpreadsheetMLMain.wn = function (a) {
    };
    SpreadsheetMLMain.ab9 = function (a) {
        a.ad.p(SpreadsheetMLMain.j2, null);
    };
    SpreadsheetMLMain.wo = function (a) {
    };
    SpreadsheetMLMain.aca = function (a) {
        a.ad.p(SpreadsheetMLMain.b8, null);
    };
    SpreadsheetMLMain.wp = function (a, b) {
        var c = SpreadsheetMLMain.us(a, SpreadsheetMLMain.kd, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.acb = function (a, b) {
        if (b === void 0) {
            b = 0;
        }
        SpreadsheetMLMain.aad(a, SpreadsheetMLMain.kd, b);
    };
    SpreadsheetMLMain.wq = function (a, b) {
        b = a.ao(OfficeDocumentRelationships.as);
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.acc = function (a, b) {
        a.ad.p(SpreadsheetMLMain.kf, null);
        var c;
        c = b;
        a.ad.h(OfficeDocumentRelationships.as, c);
    };
    SpreadsheetMLMain.wr = function (a, b) {
        b = a.ao(OfficeDocumentRelationships.as);
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.acd = function (a, b) {
        a.ad.p(SpreadsheetMLMain.kg, null);
        var c;
        c = b;
        a.ad.h(OfficeDocumentRelationships.as, c);
    };
    SpreadsheetMLMain.ws = function (a, b) {
        b = a.ao("ref");
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.ace = function (a, b) {
        a.ad.p(SpreadsheetMLMain.k5, null);
        var c;
        c = b;
        a.ad.h("ref", c);
    };
    SpreadsheetMLMain.wt = function (a, b) {
        var c = a.ao("count");
        if (c == null) {
            b = toNullable(Number_$type, null);
        }
        else {
            b = toNullable(Number_$type, parseUInt32_1(c, CultureInfo.invariantCulture));
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.acf = function (a, b) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.k6, null);
        var c;
        if (nullableNotEquals(b, null)) {
            c = b.value.toString();
            a.ad.h("count", c);
        }
    };
    SpreadsheetMLMain.wu = function (a, b) {
        b = a.ao("val");
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.acg = function (a, b) {
        a.ad.p(SpreadsheetMLMain.le, null);
        var c;
        c = b;
        a.ad.h("val", c);
    };
    SpreadsheetMLMain.wv = function (a, b, c) {
        var e_55, _a;
        b = 0;
        c = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                switch (d.a.e(a.d)) {
                    case "numFmtId":
                        b = parseUInt32_1(d.d, CultureInfo.invariantCulture);
                        break;
                    case "formatCode":
                        c = d.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_55_1) {
            e_55 = { error: e_55_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_55)
                    throw e_55.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.ach = function (a, b, c) {
        a.ad.p(SpreadsheetMLMain.li, null);
        var d;
        d = b.toString();
        a.ad.h("numFmtId", d);
        d = c;
        a.ad.h("formatCode", d);
    };
    SpreadsheetMLMain.ww = function (a, b) {
        var c = a.ao("count");
        if (c == null) {
            b = toNullable(Number_$type, null);
        }
        else {
            b = toNullable(Number_$type, parseUInt32_1(c, CultureInfo.invariantCulture));
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.aci = function (a, b) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.lk, null);
        var c;
        if (nullableNotEquals(b, null)) {
            c = b.value.toString();
            a.ad.h("count", c);
        }
    };
    SpreadsheetMLMain.wx = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, SpreadsheetMLMain.lm);
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.acj = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, SpreadsheetMLMain.lm, null, b);
    };
    SpreadsheetMLMain.wy = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, SpreadsheetMLMain.ln);
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.ack = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, SpreadsheetMLMain.ln, null, b);
    };
    SpreadsheetMLMain.wz = function (a, b, c, d, e) {
        var e_56, _a;
        b = null;
        c = false;
        d = false;
        e = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "name":
                        b = f.d;
                        break;
                    case "icon":
                        c = ST_OnOff.e(f.d);
                        break;
                    case "advise":
                        d = ST_OnOff.e(f.d);
                        break;
                    case "preferPic":
                        e = ST_OnOff.e(f.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_56_1) {
            e_56 = { error: e_56_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_56)
                    throw e_56.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetMLMain.acl = function (a, b, c, d, e) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = false;
        }
        a.ad.p(SpreadsheetMLMain.lp, null);
        var f;
        f = b;
        a.ad.h("name", f);
        if (c != false) {
            f = ST_OnOff.g(c);
            a.ad.h("icon", f);
        }
        if (d != false) {
            f = ST_OnOff.g(d);
            a.ad.h("advise", f);
        }
        if (e != false) {
            f = ST_OnOff.g(e);
            a.ad.h("preferPic", f);
        }
    };
    SpreadsheetMLMain.w0 = function (a) {
    };
    SpreadsheetMLMain.acm = function (a) {
        a.ad.p(SpreadsheetMLMain.lq, null);
    };
    SpreadsheetMLMain.w1 = function (a, b, c) {
        var e_57, _a;
        b = null;
        c = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                switch (d.a.e(a.d)) {
                    case OfficeDocumentRelationships.as:
                        b = d.d;
                        break;
                    case "progId":
                        c = d.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_57_1) {
            e_57 = { error: e_57_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_57)
                    throw e_57.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.acn = function (a, b, c) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = null;
        }
        a.ad.p(SpreadsheetMLMain.lr, null);
        var d;
        d = b;
        a.ad.h(OfficeDocumentRelationships.as, d);
        d = c;
        a.ad.h("progId", d);
    };
    SpreadsheetMLMain.w2 = function (a, b) {
        var c = SpreadsheetMLMain.ur(a, SpreadsheetMLMain.lv, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.aco = function (a, b) {
        if (b === void 0) {
            b = true;
        }
        SpreadsheetMLMain.aac(a, SpreadsheetMLMain.lv, b);
    };
    SpreadsheetMLMain.w3 = function (a, b, c, d, e) {
        var e_58, _a;
        b = false;
        c = true;
        d = true;
        e = true;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "applyStyles":
                        b = ST_OnOff.e(f.d);
                        break;
                    case "summaryBelow":
                        c = ST_OnOff.e(f.d);
                        break;
                    case "summaryRight":
                        d = ST_OnOff.e(f.d);
                        break;
                    case "showOutlineSymbols":
                        e = ST_OnOff.e(f.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_58_1) {
            e_58 = { error: e_58_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_58)
                    throw e_58.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetMLMain.acp = function (a, b, c, d, e) {
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = true;
        }
        if (d === void 0) {
            d = true;
        }
        if (e === void 0) {
            e = true;
        }
        a.ad.p(SpreadsheetMLMain.l0, null);
        var f;
        if (b != false) {
            f = ST_OnOff.g(b);
            a.ad.h("applyStyles", f);
        }
        if (c != true) {
            f = ST_OnOff.g(c);
            a.ad.h("summaryBelow", f);
        }
        if (d != true) {
            f = ST_OnOff.g(d);
            a.ad.h("summaryRight", f);
        }
        if (e != true) {
            f = ST_OnOff.g(e);
            a.ad.h("showOutlineSymbols", f);
        }
    };
    SpreadsheetMLMain.w4 = function (a, b, c, d, e, f, g) {
        var e_59, _a;
        b = 0;
        c = 0;
        d = 0;
        e = 0;
        f = 0;
        g = 0;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var h = _c.value;
                switch (h.a.e(a.d)) {
                    case "left":
                        b = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    case "right":
                        c = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    case "top":
                        d = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    case "bottom":
                        e = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    case "header":
                        f = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    case "footer":
                        g = parseNumber(h.d, CultureInfo.invariantCulture);
                        break;
                    default: break;
                }
            }
        }
        catch (e_59_1) {
            e_59 = { error: e_59_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_59)
                    throw e_59.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g
        };
    };
    SpreadsheetMLMain.acq = function (a, b, c, d, e, f, g) {
        a.ad.p(SpreadsheetMLMain.l2, null);
        var h;
        h = b.toString();
        a.ad.h("left", h);
        h = c.toString();
        a.ad.h("right", h);
        h = d.toString();
        a.ad.h("top", h);
        h = e.toString();
        a.ad.h("bottom", h);
        h = f.toString();
        a.ad.h("header", h);
        h = g.toString();
        a.ad.h("footer", h);
    };
    SpreadsheetMLMain.w5 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
        var e_60, _a;
        b = 1;
        c = null;
        d = null;
        e = 100;
        f = 1;
        g = 1;
        h = 1;
        i = 0;
        j = 0;
        k = true;
        l = false;
        m = false;
        n = 0;
        o = false;
        p = 0;
        q = 600;
        r = 600;
        s = 1;
        t = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var u = _c.value;
                switch (u.a.e(a.d)) {
                    case "paperSize":
                        b = parseUInt32_1(u.d, CultureInfo.invariantCulture);
                        break;
                    case "paperHeight":
                        c = u.d;
                        break;
                    case "paperWidth":
                        d = u.d;
                        break;
                    case "scale":
                        e = parseUInt32_1(u.d, CultureInfo.invariantCulture);
                        break;
                    case "firstPageNumber":
                        f = parseUInt32_1(u.d, CultureInfo.invariantCulture);
                        break;
                    case "fitToWidth":
                        g = parseUInt32_1(u.d, CultureInfo.invariantCulture);
                        break;
                    case "fitToHeight":
                        h = parseUInt32_1(u.d, CultureInfo.invariantCulture);
                        break;
                    case "pageOrder":
                        i = XmlNamespaceDefinitionBase.b(ST_PageOrder_$type, u.d, i);
                        break;
                    case "orientation":
                        j = XmlNamespaceDefinitionBase.b(ST_Orientation_$type, u.d, j);
                        break;
                    case "usePrinterDefaults":
                        k = ST_OnOff.e(u.d);
                        break;
                    case "blackAndWhite":
                        l = ST_OnOff.e(u.d);
                        break;
                    case "draft":
                        m = ST_OnOff.e(u.d);
                        break;
                    case "cellComments":
                        n = XmlNamespaceDefinitionBase.b(ST_CellComments_$type, u.d, n);
                        break;
                    case "useFirstPageNumber":
                        o = ST_OnOff.e(u.d);
                        break;
                    case "errors":
                        p = XmlNamespaceDefinitionBase.b(ST_PrintError_$type, u.d, p);
                        break;
                    case "horizontalDpi":
                        q = parseUInt32_1(u.d, CultureInfo.invariantCulture);
                        break;
                    case "verticalDpi":
                        r = parseUInt32_1(u.d, CultureInfo.invariantCulture);
                        break;
                    case "copies":
                        s = parseUInt32_1(u.d, CultureInfo.invariantCulture);
                        break;
                    case OfficeDocumentRelationships.as:
                        t = u.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_60_1) {
            e_60 = { error: e_60_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_60)
                    throw e_60.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q,
            p17: r,
            p18: s,
            p19: t
        };
    };
    SpreadsheetMLMain.acr = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
        if (b === void 0) {
            b = 1;
        }
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = 100;
        }
        if (f === void 0) {
            f = 1;
        }
        if (g === void 0) {
            g = 1;
        }
        if (h === void 0) {
            h = 1;
        }
        if (i === void 0) {
            i = 0;
        }
        if (j === void 0) {
            j = 0;
        }
        if (k === void 0) {
            k = true;
        }
        if (l === void 0) {
            l = false;
        }
        if (m === void 0) {
            m = false;
        }
        if (n === void 0) {
            n = 0;
        }
        if (o === void 0) {
            o = false;
        }
        if (p === void 0) {
            p = 0;
        }
        if (q === void 0) {
            q = 600;
        }
        if (r === void 0) {
            r = 600;
        }
        if (s === void 0) {
            s = 1;
        }
        if (t === void 0) {
            t = null;
        }
        a.ad.p(SpreadsheetMLMain.l4, null);
        var u;
        if (b != 1) {
            u = b.toString();
            a.ad.h("paperSize", u);
        }
        if (c != null) {
            u = c;
            a.ad.h("paperHeight", u);
        }
        if (d != null) {
            u = d;
            a.ad.h("paperWidth", u);
        }
        if (e != 100) {
            u = e.toString();
            a.ad.h("scale", u);
        }
        if (f != 1) {
            u = f.toString();
            a.ad.h("firstPageNumber", u);
        }
        if (g != 1) {
            u = g.toString();
            a.ad.h("fitToWidth", u);
        }
        if (h != 1) {
            u = h.toString();
            a.ad.h("fitToHeight", u);
        }
        if (i != 0) {
            u = XmlNamespaceDefinitionBase.p(ST_PageOrder_$type, i);
            a.ad.h("pageOrder", u);
        }
        if (j != 0) {
            u = XmlNamespaceDefinitionBase.p(ST_Orientation_$type, j);
            a.ad.h("orientation", u);
        }
        if (k != true) {
            u = ST_OnOff.g(k);
            a.ad.h("usePrinterDefaults", u);
        }
        if (l != false) {
            u = ST_OnOff.g(l);
            a.ad.h("blackAndWhite", u);
        }
        if (m != false) {
            u = ST_OnOff.g(m);
            a.ad.h("draft", u);
        }
        if (n != 0) {
            u = XmlNamespaceDefinitionBase.p(ST_CellComments_$type, n);
            a.ad.h("cellComments", u);
        }
        if (o != false) {
            u = ST_OnOff.g(o);
            a.ad.h("useFirstPageNumber", u);
        }
        if (p != 0) {
            u = XmlNamespaceDefinitionBase.p(ST_PrintError_$type, p);
            a.ad.h("errors", u);
        }
        if (q != 600) {
            u = q.toString();
            a.ad.h("horizontalDpi", u);
        }
        if (r != 600) {
            u = r.toString();
            a.ad.h("verticalDpi", u);
        }
        if (s != 1) {
            u = s.toString();
            a.ad.h("copies", u);
        }
        if (t != null) {
            u = t;
            a.ad.h(OfficeDocumentRelationships.as, u);
        }
    };
    SpreadsheetMLMain.w6 = function (a, b, c) {
        var e_61, _a;
        b = true;
        c = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                switch (d.a.e(a.d)) {
                    case "autoPageBreaks":
                        b = ST_OnOff.e(d.d);
                        break;
                    case "fitToPage":
                        c = ST_OnOff.e(d.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_61_1) {
            e_61 = { error: e_61_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_61)
                    throw e_61.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.acs = function (a, b, c) {
        if (b === void 0) {
            b = true;
        }
        if (c === void 0) {
            c = false;
        }
        a.ad.p(SpreadsheetMLMain.l5, null);
        var d;
        if (b != true) {
            d = ST_OnOff.g(b);
            a.ad.h("autoPageBreaks", d);
        }
        if (c != false) {
            d = ST_OnOff.g(c);
            a.ad.h("fitToPage", d);
        }
    };
    SpreadsheetMLMain.w7 = function (a, b, c, d, e, f) {
        var e_62, _a;
        b = 0;
        c = 0;
        d = null;
        e = 3;
        f = 0;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var g = _c.value;
                switch (g.a.e(a.d)) {
                    case "xSplit":
                        b = parseNumber(g.d, CultureInfo.invariantCulture);
                        break;
                    case "ySplit":
                        c = parseNumber(g.d, CultureInfo.invariantCulture);
                        break;
                    case "topLeftCell":
                        d = g.d;
                        break;
                    case "activePane":
                        e = XmlNamespaceDefinitionBase.b(ST_Pane_$type, g.d, e);
                        break;
                    case "state":
                        f = XmlNamespaceDefinitionBase.b(ST_PaneState_$type, g.d, f);
                        break;
                    default: break;
                }
            }
        }
        catch (e_62_1) {
            e_62 = { error: e_62_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_62)
                    throw e_62.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f
        };
    };
    SpreadsheetMLMain.act = function (a, b, c, d, e, f) {
        if (b === void 0) {
            b = 0;
        }
        if (c === void 0) {
            c = 0;
        }
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = 3;
        }
        if (f === void 0) {
            f = 0;
        }
        a.ad.p(SpreadsheetMLMain.l6, null);
        var g;
        if (b != 0) {
            g = b.toString();
            a.ad.h("xSplit", g);
        }
        if (c != 0) {
            g = c.toString();
            a.ad.h("ySplit", g);
        }
        g = d;
        a.ad.h("topLeftCell", g);
        if (e != 3) {
            g = XmlNamespaceDefinitionBase.p(ST_Pane_$type, e);
            a.ad.h("activePane", g);
        }
        if (f != 0) {
            g = XmlNamespaceDefinitionBase.p(ST_PaneState_$type, f);
            a.ad.h("state", g);
        }
    };
    SpreadsheetMLMain.w8 = function (a, b) {
        var c = a.ao("patternType");
        if (c == null) {
            b = toNullable(ST_PatternType_$type, null);
        }
        else {
            b = toNullable(ST_PatternType_$type, XmlNamespaceDefinitionBase.b(ST_PatternType_$type, c));
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.acu = function (a, b) {
        if (b === void 0) {
            b = toNullable(ST_PatternType_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.mc, null);
        var c;
        if (nullableNotEquals(b, null)) {
            c = XmlNamespaceDefinitionBase.p(ST_PatternType_$type, b.value);
            a.ad.h("patternType", c);
        }
    };
    SpreadsheetMLMain.w9 = function (a, b) {
        b = a.ao(OfficeDocumentRelationships.as);
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.acv = function (a, b) {
        a.ad.p(SpreadsheetMLMain.mi, null);
        var c;
        c = b;
        a.ad.h(OfficeDocumentRelationships.as, c);
    };
    SpreadsheetMLMain.xa = function (a, b, c) {
        var e_63, _a;
        b = 0;
        c = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                switch (d.a.e(a.d)) {
                    case "cacheId":
                        b = parseUInt32_1(d.d, CultureInfo.invariantCulture);
                        break;
                    case OfficeDocumentRelationships.as:
                        c = d.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_63_1) {
            e_63 = { error: e_63_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_63)
                    throw e_63.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.acw = function (a, b, c) {
        a.ad.p(SpreadsheetMLMain.ml, null);
        var d;
        d = b.toString();
        a.ad.h("cacheId", d);
        d = c;
        a.ad.h(OfficeDocumentRelationships.as, d);
    };
    SpreadsheetMLMain.xb = function (a) {
    };
    SpreadsheetMLMain.acx = function (a) {
        a.ad.p(SpreadsheetMLMain.mm, null);
    };
    SpreadsheetMLMain.xc = function (a, b, c, d, e, f) {
        var e_64, _a;
        b = false;
        c = false;
        d = false;
        e = false;
        f = true;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var g = _c.value;
                switch (g.a.e(a.d)) {
                    case "horizontalCentered":
                        b = ST_OnOff.e(g.d);
                        break;
                    case "verticalCentered":
                        c = ST_OnOff.e(g.d);
                        break;
                    case "headings":
                        d = ST_OnOff.e(g.d);
                        break;
                    case "gridLines":
                        e = ST_OnOff.e(g.d);
                        break;
                    case "gridLinesSet":
                        f = ST_OnOff.e(g.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_64_1) {
            e_64 = { error: e_64_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_64)
                    throw e_64.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f
        };
    };
    SpreadsheetMLMain.acy = function (a, b, c, d, e, f) {
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = true;
        }
        a.ad.p(SpreadsheetMLMain.mt, null);
        var g;
        if (b != false) {
            g = ST_OnOff.g(b);
            a.ad.h("horizontalCentered", g);
        }
        if (c != false) {
            g = ST_OnOff.g(c);
            a.ad.h("verticalCentered", g);
        }
        if (d != false) {
            g = ST_OnOff.g(d);
            a.ad.h("headings", g);
        }
        if (e != false) {
            g = ST_OnOff.g(e);
            a.ad.h("gridLines", g);
        }
        if (f != true) {
            g = ST_OnOff.g(f);
            a.ad.h("gridLinesSet", g);
        }
    };
    SpreadsheetMLMain.xd = function (a, b, c, d, e) {
        var e_65, _a;
        b = null;
        c = null;
        d = null;
        e = toNullable(ST_UnsignedShortHex.$, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "password":
                        e = toNullable(ST_UnsignedShortHex.$, ST_UnsignedShortHex.b(f.d));
                        break;
                    case "sqref":
                        c = f.d;
                        break;
                    case "name":
                        d = f.d;
                        break;
                    case "securityDescriptor":
                        b = f.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_65_1) {
            e_65 = { error: e_65_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_65)
                    throw e_65.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetMLMain.xe = function (a, b, c, d, e, f, g, h) {
        var e_66, _a;
        b = null;
        c = null;
        d = null;
        e = null;
        f = null;
        g = null;
        h = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var i = _c.value;
                switch (i.a.e(a.d)) {
                    case "algorithmName":
                        e = i.d;
                        break;
                    case "hashValue":
                        f = i.d;
                        break;
                    case "saltValue":
                        g = i.d;
                        break;
                    case "spinCount":
                        h = toNullable(Number_$type, parseUInt32_1(i.d, CultureInfo.invariantCulture));
                        break;
                    case "sqref":
                        c = i.d;
                        break;
                    case "name":
                        d = i.d;
                        break;
                    case "securityDescriptor":
                        b = i.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_66_1) {
            e_66 = { error: e_66_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_66)
                    throw e_66.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h
        };
    };
    SpreadsheetMLMain.acz = function (a, b, c, d, e) {
        if (e === void 0) {
            e = toNullable(ST_UnsignedShortHex.$, null);
        }
        a.ad.p(SpreadsheetMLMain.mz, null);
        var f;
        if (nullableNotEquals(e, null)) {
            f = e.value.toString();
            a.ad.h("password", f);
        }
        f = c;
        a.ad.h("sqref", f);
        f = d;
        a.ad.h("name", f);
        if (!stringIsNullOrEmpty(b)) {
            f = b;
            a.ad.h("securityDescriptor", f);
        }
    };
    SpreadsheetMLMain.ac0 = function (a, b, c, d, e, f, g, h) {
        if (e === void 0) {
            e = null;
        }
        if (f === void 0) {
            f = null;
        }
        if (g === void 0) {
            g = null;
        }
        if (h === void 0) {
            h = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.mz, null);
        var i;
        if (!stringIsNullOrEmpty(b)) {
            i = b;
            a.ad.h("securityDescriptor", i);
        }
        i = c;
        a.ad.h("sqref", i);
        i = d;
        a.ad.h("name", i);
        if (!stringIsNullOrEmpty(e)) {
            i = e;
            a.ad.h("algorithmName", i);
        }
        if (!stringIsNullOrEmpty(f)) {
            i = f;
            a.ad.h("hashValue", i);
        }
        if (!stringIsNullOrEmpty(g)) {
            i = g;
            a.ad.h("saltValue", i);
        }
        if (nullableNotEquals(h, null)) {
            i = h.value.toString();
            a.ad.h("spinCount", i);
        }
    };
    SpreadsheetMLMain.xf = function (a) {
    };
    SpreadsheetMLMain.ac1 = function (a) {
        a.ad.p(SpreadsheetMLMain.m0, null);
    };
    SpreadsheetMLMain.xg = function (a, b, c) {
        var e_67, _a;
        b = toNullable(Boolean_$type, null);
        c = toNullable(Boolean_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                switch (d.a.e(a.d)) {
                    case "locked":
                        b = toNullable(Boolean_$type, ST_OnOff.e(d.d));
                        break;
                    case "hidden":
                        c = toNullable(Boolean_$type, ST_OnOff.e(d.d));
                        break;
                    default: break;
                }
            }
        }
        catch (e_67_1) {
            e_67 = { error: e_67_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_67)
                    throw e_67.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.ac2 = function (a, b, c) {
        if (b === void 0) {
            b = toNullable(Boolean_$type, null);
        }
        if (c === void 0) {
            c = toNullable(Boolean_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.m1, null);
        var d;
        if (nullableNotEquals(b, null)) {
            d = ST_OnOff.g(b.value);
            a.ad.h("locked", d);
        }
        if (nullableNotEquals(c, null)) {
            d = ST_OnOff.g(c.value);
            a.ad.h("hidden", d);
        }
    };
    SpreadsheetMLMain.xh = function (a) {
    };
    SpreadsheetMLMain.ac3 = function (a) {
        a.ad.p(SpreadsheetMLMain.m8, null);
    };
    SpreadsheetMLMain.xi = function (a, b) {
        b = a.ao("val");
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.ac4 = function (a, b) {
        a.ad.p(SpreadsheetMLMain.nw, null);
        var c;
        c = b;
        a.ad.h("val", c);
    };
    SpreadsheetMLMain.xj = function (a, b) {
        var c = a.ao("rgb");
        if (c == null) {
            b = toNullable(ST_UnsignedIntHex.$, null);
        }
        else {
            b = toNullable(ST_UnsignedIntHex.$, ST_UnsignedIntHex.d(c));
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.ac5 = function (a, b) {
        if (b === void 0) {
            b = toNullable(ST_UnsignedIntHex.$, null);
        }
        a.ad.p(SpreadsheetMLMain.ny, null);
        var c;
        if (nullableNotEquals(b, null)) {
            c = b.value.toString();
            a.ad.h("rgb", c);
        }
    };
    SpreadsheetMLMain.xk = function (a, b) {
        var c = SpreadsheetMLMain.us(a, SpreadsheetMLMain.n2, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.ac6 = function (a, b) {
        if (b === void 0) {
            b = 0;
        }
        SpreadsheetMLMain.aad(a, SpreadsheetMLMain.n2, b);
    };
    SpreadsheetMLMain.xl = function (a, b, c) {
        var d = SpreadsheetMLMain.uv(a, SpreadsheetMLMain.n6, b, c);
        b = d.p2;
        c = d.p3;
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.ac7 = function (a, b, c) {
        SpreadsheetMLMain.aag(a, SpreadsheetMLMain.n6, b, c);
    };
    SpreadsheetMLMain.xn = function (a, b) {
        var c = a.ao("r");
        if (c == null) {
            b = 0;
        }
        else {
            b = parseUInt32_1(c, CultureInfo.invariantCulture);
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.ac9 = function (a, b) {
        a.ad.p(SpreadsheetMLMain.n5, null);
        var c;
        c = b.toString();
        a.ad.h("r", c);
    };
    SpreadsheetMLMain.xm = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
        var e_68, _a;
        if (n === void 0) {
            n = false;
        }
        b = toNullable(Number_$type, null);
        c = null;
        d = 0;
        e = false;
        f = toNullable(Number_$type, null);
        g = false;
        h = false;
        i = 0;
        j = false;
        k = false;
        l = false;
        m = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var o = _c.value;
                switch (o.a.e(a.d)) {
                    case "r":
                        b = toNullable(Number_$type, parseUInt32_1(o.d, CultureInfo.invariantCulture));
                        break;
                    case "spans":
                        if (n == false) {
                            c = XmlNamespaceDefinitionBase.g(String_$type, o.d, function (p) { return p; });
                        }
                        break;
                    case "s":
                        d = parseUInt32_1(o.d, CultureInfo.invariantCulture);
                        break;
                    case "customFormat":
                        e = ST_OnOff.e(o.d);
                        break;
                    case "ht":
                        f = toNullable(Number_$type, parseNumber(o.d, CultureInfo.invariantCulture));
                        break;
                    case "hidden":
                        g = ST_OnOff.e(o.d);
                        break;
                    case "customHeight":
                        h = ST_OnOff.e(o.d);
                        break;
                    case "outlineLevel":
                        i = parseUInt8_1(o.d, CultureInfo.invariantCulture);
                        break;
                    case "collapsed":
                        j = ST_OnOff.e(o.d);
                        break;
                    case "thickTop":
                        k = ST_OnOff.e(o.d);
                        break;
                    case "thickBot":
                        l = ST_OnOff.e(o.d);
                        break;
                    case "ph":
                        m = ST_OnOff.e(o.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_68_1) {
            e_68 = { error: e_68_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_68)
                    throw e_68.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m
        };
    };
    SpreadsheetMLMain.ac8 = function (a, b, c, d, e, f, g, h, i, j, k, l, m) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = 0;
        }
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = toNullable(Number_$type, null);
        }
        if (g === void 0) {
            g = false;
        }
        if (h === void 0) {
            h = false;
        }
        if (i === void 0) {
            i = 0;
        }
        if (j === void 0) {
            j = false;
        }
        if (k === void 0) {
            k = false;
        }
        if (l === void 0) {
            l = false;
        }
        if (m === void 0) {
            m = false;
        }
        a.ad.p(SpreadsheetMLMain.n5, null);
        var n;
        if (nullableNotEquals(b, null)) {
            n = b.value.toString();
            a.ad.h("r", n);
        }
        if (c != null) {
            n = stringJoin1(String_$type, " ", c);
            a.ad.h("spans", n);
        }
        if (d != 0) {
            n = d.toString();
            a.ad.h("s", n);
        }
        if (e != false) {
            n = ST_OnOff.g(e);
            a.ad.h("customFormat", n);
        }
        if (nullableNotEquals(f, null)) {
            n = f.value.toString();
            a.ad.h("ht", n);
        }
        if (g != false) {
            n = ST_OnOff.g(g);
            a.ad.h("hidden", n);
        }
        if (h != false) {
            n = ST_OnOff.g(h);
            a.ad.h("customHeight", n);
        }
        if (i != 0) {
            n = i.toString();
            a.ad.h("outlineLevel", n);
        }
        if (j != false) {
            n = ST_OnOff.g(j);
            a.ad.h("collapsed", n);
        }
        if (k != false) {
            n = ST_OnOff.g(k);
            a.ad.h("thickTop", n);
        }
        if (l != false) {
            n = ST_OnOff.g(l);
            a.ad.h("thickBot", n);
        }
        if (m != false) {
            n = ST_OnOff.g(m);
            a.ad.h("ph", n);
        }
    };
    SpreadsheetMLMain.xo = function (a) {
    };
    SpreadsheetMLMain.ada = function (a) {
        a.ad.p(SpreadsheetMLMain.n7, null);
    };
    SpreadsheetMLMain.xp = function (a, b) {
        b = 0;
        var c = a.ao("val");
        if (c != null) {
            b = XmlNamespaceDefinitionBase.b(ST_FontScheme_$type, c, b);
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.adb = function (a, b) {
        a.ad.p(SpreadsheetMLMain.of, null);
        var c;
        c = XmlNamespaceDefinitionBase.p(ST_FontScheme_$type, b);
        a.ad.h("val", c);
    };
    SpreadsheetMLMain.xq = function (a, b, c, d, e) {
        var e_69, _a;
        b = 3;
        c = null;
        d = 0;
        e = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "pane":
                        b = XmlNamespaceDefinitionBase.b(ST_Pane_$type, f.d, b);
                        break;
                    case "activeCell":
                        c = f.d;
                        break;
                    case "activeCellId":
                        d = parseUInt32_1(f.d, CultureInfo.invariantCulture);
                        break;
                    case "sqref":
                        e = XmlNamespaceDefinitionBase.g(String_$type, f.d, function (g) { return g; });
                        break;
                    default: break;
                }
            }
        }
        catch (e_69_1) {
            e_69 = { error: e_69_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_69)
                    throw e_69.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetMLMain.adc = function (a, b, c, d, e) {
        if (b === void 0) {
            b = 3;
        }
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = 0;
        }
        if (e === void 0) {
            e = null;
        }
        a.ad.p(SpreadsheetMLMain.oi, null);
        var f;
        if (b != 3) {
            f = XmlNamespaceDefinitionBase.p(ST_Pane_$type, b);
            a.ad.h("pane", f);
        }
        f = c;
        a.ad.h("activeCell", f);
        if (d != 0) {
            f = d.toString();
            a.ad.h("activeCellId", f);
        }
        if (e != null) {
            f = stringJoin1(String_$type, " ", e);
            a.ad.h("sqref", f);
        }
    };
    SpreadsheetMLMain.xr = function (a, b) {
        var c = SpreadsheetMLMain.ur(a, SpreadsheetMLMain.ol, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.add = function (a, b) {
        if (b === void 0) {
            b = true;
        }
        SpreadsheetMLMain.aac(a, SpreadsheetMLMain.ol, b);
    };
    SpreadsheetMLMain.xs = function (a, b) {
        var c = a.ao("fullCalcOnLoad");
        if (c == null) {
            b = false;
        }
        else {
            b = ST_OnOff.e(c);
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.ade = function (a, b) {
        if (b === void 0) {
            b = false;
        }
        a.ad.p(SpreadsheetMLMain.op, null);
        var c;
        if (b != false) {
            c = ST_OnOff.g(b);
            a.ad.h("fullCalcOnLoad", c);
        }
    };
    SpreadsheetMLMain.xt = function (a) {
    };
    SpreadsheetMLMain.adf = function (a) {
        a.ad.p(SpreadsheetMLMain.oq, null);
    };
    SpreadsheetMLMain.xu = function (a, b, c) {
        var e_70, _a;
        b = 0;
        c = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                switch (d.a.e(a.d)) {
                    case "sheetId":
                        b = parseUInt32_1(d.d, CultureInfo.invariantCulture);
                        break;
                    case "refreshError":
                        c = ST_OnOff.e(d.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_70_1) {
            e_70 = { error: e_70_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_70)
                    throw e_70.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.adg = function (a, b, c) {
        if (c === void 0) {
            c = false;
        }
        a.ad.p(SpreadsheetMLMain.oq, null);
        var d;
        d = b.toString();
        a.ad.h("sheetId", d);
        if (c != false) {
            d = ST_OnOff.g(c);
            a.ad.h("refreshError", d);
        }
    };
    SpreadsheetMLMain.xv = function (a) {
    };
    SpreadsheetMLMain.adh = function (a) {
        a.ad.p(SpreadsheetMLMain.or, null);
    };
    SpreadsheetMLMain.xw = function (a, b, c, d, e) {
        var e_71, _a;
        b = null;
        c = 0;
        d = 0;
        e = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "name":
                        b = f.d;
                        break;
                    case "sheetId":
                        c = parseUInt32_1(f.d, CultureInfo.invariantCulture);
                        break;
                    case "state":
                        d = XmlNamespaceDefinitionBase.b(ST_SheetState_$type, f.d, d);
                        break;
                    case OfficeDocumentRelationships.as:
                        e = f.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_71_1) {
            e_71 = { error: e_71_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_71)
                    throw e_71.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetMLMain.adi = function (a, b, c, d, e) {
        a.ad.p(SpreadsheetMLMain.on, null);
        var f;
        f = b;
        a.ad.h("name", f);
        f = c.toString();
        a.ad.h("sheetId", f);
        if (d != 0) {
            f = XmlNamespaceDefinitionBase.p(ST_SheetState_$type, d);
            a.ad.h("state", f);
        }
        f = e;
        a.ad.h(OfficeDocumentRelationships.as, f);
    };
    SpreadsheetMLMain.xx = function (a, b, c, d, e, f, g, h, i, j) {
        var e_72, _a;
        c = 8;
        d = toNullable(Number_$type, null);
        b = 0;
        e = false;
        f = false;
        g = false;
        h = false;
        i = 0;
        j = 0;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var k = _c.value;
                switch (k.a.e(a.d)) {
                    case "baseColWidth":
                        c = parseUInt32_1(k.d, CultureInfo.invariantCulture);
                        break;
                    case "defaultColWidth":
                        d = toNullable(Number_$type, parseNumber(k.d, CultureInfo.invariantCulture));
                        break;
                    case "defaultRowHeight":
                        b = parseNumber(k.d, CultureInfo.invariantCulture);
                        break;
                    case "customHeight":
                        e = ST_OnOff.e(k.d);
                        break;
                    case "zeroHeight":
                        f = ST_OnOff.e(k.d);
                        break;
                    case "thickTop":
                        g = ST_OnOff.e(k.d);
                        break;
                    case "thickBottom":
                        h = ST_OnOff.e(k.d);
                        break;
                    case "outlineLevelRow":
                        i = parseUInt8_1(k.d, CultureInfo.invariantCulture);
                        break;
                    case "outlineLevelCol":
                        j = parseUInt8_1(k.d, CultureInfo.invariantCulture);
                        break;
                    default: break;
                }
            }
        }
        catch (e_72_1) {
            e_72 = { error: e_72_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_72)
                    throw e_72.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j
        };
    };
    SpreadsheetMLMain.adj = function (a, b, c, d, e, f, g, h, i, j) {
        if (c === void 0) {
            c = 8;
        }
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = false;
        }
        if (h === void 0) {
            h = false;
        }
        if (i === void 0) {
            i = 0;
        }
        if (j === void 0) {
            j = 0;
        }
        a.ad.p(SpreadsheetMLMain.os, null);
        var k;
        if (c != 8) {
            k = c.toString();
            a.ad.h("baseColWidth", k);
        }
        if (nullableNotEquals(d, null)) {
            k = d.value.toString();
            a.ad.h("defaultColWidth", k);
        }
        k = b.toString();
        a.ad.h("defaultRowHeight", k);
        if (e != false) {
            k = ST_OnOff.g(e);
            a.ad.h("customHeight", k);
        }
        if (f != false) {
            k = ST_OnOff.g(f);
            a.ad.h("zeroHeight", k);
        }
        if (g != false) {
            k = ST_OnOff.g(g);
            a.ad.h("thickTop", k);
        }
        if (h != false) {
            k = ST_OnOff.g(h);
            a.ad.h("thickBottom", k);
        }
        if (i != 0) {
            k = i.toString();
            a.ad.h("outlineLevelRow", k);
        }
        if (j != 0) {
            k = j.toString();
            a.ad.h("outlineLevelCol", k);
        }
    };
    SpreadsheetMLMain.xy = function (a, b) {
        b = a.ao("val");
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.adk = function (a, b) {
        a.ad.p(SpreadsheetMLMain.ou, null);
        var c;
        c = b;
        a.ad.h("val", c);
    };
    SpreadsheetMLMain.xz = function (a) {
    };
    SpreadsheetMLMain.adl = function (a) {
        a.ad.p(SpreadsheetMLMain.ov, null);
    };
    SpreadsheetMLMain.x0 = function (a, b, c, d, e, f, g, h, i, j) {
        var e_73, _a;
        b = false;
        c = false;
        d = null;
        e = false;
        f = false;
        g = true;
        h = null;
        i = false;
        j = true;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var k = _c.value;
                switch (k.a.e(a.d)) {
                    case "syncHorizontal":
                        b = ST_OnOff.e(k.d);
                        break;
                    case "syncVertical":
                        c = ST_OnOff.e(k.d);
                        break;
                    case "syncRef":
                        d = k.d;
                        break;
                    case "transitionEvaluation":
                        e = ST_OnOff.e(k.d);
                        break;
                    case "transitionEntry":
                        f = ST_OnOff.e(k.d);
                        break;
                    case "published":
                        g = ST_OnOff.e(k.d);
                        break;
                    case "codeName":
                        h = k.d;
                        break;
                    case "filterMode":
                        i = ST_OnOff.e(k.d);
                        break;
                    case "enableFormatConditionsCalculation":
                        j = ST_OnOff.e(k.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_73_1) {
            e_73 = { error: e_73_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_73)
                    throw e_73.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j
        };
    };
    SpreadsheetMLMain.adm = function (a, b, c, d, e, f, g, h, i, j) {
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = true;
        }
        if (h === void 0) {
            h = null;
        }
        if (i === void 0) {
            i = false;
        }
        if (j === void 0) {
            j = true;
        }
        a.ad.p(SpreadsheetMLMain.ow, null);
        var k;
        if (b != false) {
            k = ST_OnOff.g(b);
            a.ad.h("syncHorizontal", k);
        }
        if (c != false) {
            k = ST_OnOff.g(c);
            a.ad.h("syncVertical", k);
        }
        k = d;
        a.ad.h("syncRef", k);
        if (e != false) {
            k = ST_OnOff.g(e);
            a.ad.h("transitionEvaluation", k);
        }
        if (f != false) {
            k = ST_OnOff.g(f);
            a.ad.h("transitionEntry", k);
        }
        if (g != true) {
            k = ST_OnOff.g(g);
            a.ad.h("published", k);
        }
        k = h;
        a.ad.h("codeName", k);
        if (i != false) {
            k = ST_OnOff.g(i);
            a.ad.h("filterMode", k);
        }
        if (j != true) {
            k = ST_OnOff.g(j);
            a.ad.h("enableFormatConditionsCalculation", k);
        }
    };
    SpreadsheetMLMain.x1 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
        var e_74, _a;
        b = toNullable(ST_UnsignedShortHex.$, null);
        c = false;
        d = false;
        e = false;
        f = true;
        g = true;
        h = true;
        i = true;
        j = true;
        k = true;
        l = true;
        m = true;
        n = false;
        o = true;
        p = true;
        q = true;
        r = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var s = _c.value;
                switch (s.a.e(a.d)) {
                    case "password":
                        b = toNullable(ST_UnsignedShortHex.$, ST_UnsignedShortHex.b(s.d));
                        break;
                    case "sheet":
                        c = ST_OnOff.e(s.d);
                        break;
                    case "objects":
                        d = ST_OnOff.e(s.d);
                        break;
                    case "scenarios":
                        e = ST_OnOff.e(s.d);
                        break;
                    case "formatCells":
                        f = ST_OnOff.e(s.d);
                        break;
                    case "formatColumns":
                        g = ST_OnOff.e(s.d);
                        break;
                    case "formatRows":
                        h = ST_OnOff.e(s.d);
                        break;
                    case "insertColumns":
                        i = ST_OnOff.e(s.d);
                        break;
                    case "insertRows":
                        j = ST_OnOff.e(s.d);
                        break;
                    case "insertHyperlinks":
                        k = ST_OnOff.e(s.d);
                        break;
                    case "deleteColumns":
                        l = ST_OnOff.e(s.d);
                        break;
                    case "deleteRows":
                        m = ST_OnOff.e(s.d);
                        break;
                    case "selectLockedCells":
                        n = ST_OnOff.e(s.d);
                        break;
                    case "sort":
                        o = ST_OnOff.e(s.d);
                        break;
                    case "autoFilter":
                        p = ST_OnOff.e(s.d);
                        break;
                    case "pivotTables":
                        q = ST_OnOff.e(s.d);
                        break;
                    case "selectUnlockedCells":
                        r = ST_OnOff.e(s.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_74_1) {
            e_74 = { error: e_74_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_74)
                    throw e_74.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q,
            p17: r
        };
    };
    SpreadsheetMLMain.adn = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
        if (b === void 0) {
            b = toNullable(ST_UnsignedShortHex.$, null);
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = true;
        }
        if (g === void 0) {
            g = true;
        }
        if (h === void 0) {
            h = true;
        }
        if (i === void 0) {
            i = true;
        }
        if (j === void 0) {
            j = true;
        }
        if (k === void 0) {
            k = true;
        }
        if (l === void 0) {
            l = true;
        }
        if (m === void 0) {
            m = true;
        }
        if (n === void 0) {
            n = false;
        }
        if (o === void 0) {
            o = true;
        }
        if (p === void 0) {
            p = true;
        }
        if (q === void 0) {
            q = true;
        }
        if (r === void 0) {
            r = false;
        }
        a.ad.p(SpreadsheetMLMain.ox, null);
        var s;
        if (nullableNotEquals(b, null)) {
            s = b.value.toString();
            a.ad.h("password", s);
        }
        if (c != false) {
            s = ST_OnOff.g(c);
            a.ad.h("sheet", s);
            if (d != false) {
                s = ST_OnOff.g(d);
                a.ad.h("objects", s);
            }
            if (e != false) {
                s = ST_OnOff.g(e);
                a.ad.h("scenarios", s);
            }
        }
        if (f != true) {
            s = ST_OnOff.g(f);
            a.ad.h("formatCells", s);
        }
        if (g != true) {
            s = ST_OnOff.g(g);
            a.ad.h("formatColumns", s);
        }
        if (h != true) {
            s = ST_OnOff.g(h);
            a.ad.h("formatRows", s);
        }
        if (i != true) {
            s = ST_OnOff.g(i);
            a.ad.h("insertColumns", s);
        }
        if (j != true) {
            s = ST_OnOff.g(j);
            a.ad.h("insertRows", s);
        }
        if (k != true) {
            s = ST_OnOff.g(k);
            a.ad.h("insertHyperlinks", s);
        }
        if (l != true) {
            s = ST_OnOff.g(l);
            a.ad.h("deleteColumns", s);
        }
        if (m != true) {
            s = ST_OnOff.g(m);
            a.ad.h("deleteRows", s);
        }
        if (n != false) {
            s = ST_OnOff.g(n);
            a.ad.h("selectLockedCells", s);
        }
        if (o != true) {
            s = ST_OnOff.g(o);
            a.ad.h("sort", s);
        }
        if (p != true) {
            s = ST_OnOff.g(p);
            a.ad.h("autoFilter", s);
        }
        if (q != true) {
            s = ST_OnOff.g(q);
            a.ad.h("pivotTables", s);
        }
        if (r != false) {
            s = ST_OnOff.g(r);
            a.ad.h("selectUnlockedCells", s);
        }
    };
    SpreadsheetMLMain.b4 = function (a) {
        var e_75, _a;
        if (a.d._z == 1) {
            return true;
        }
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                switch (b.a.e(a.d)) {
                    case "algorithmName":
                    case "hashValue":
                    case "saltValue":
                    case "spinCount": return true;
                    case "password": return false;
                }
            }
        }
        catch (e_75_1) {
            e_75 = { error: e_75_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_75)
                    throw e_75.error;
            }
        }
        return false;
    };
    SpreadsheetMLMain.x2 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u) {
        var e_76, _a;
        b = null;
        c = null;
        d = null;
        e = toNullable(Number_$type, null);
        f = false;
        g = false;
        h = false;
        i = true;
        j = true;
        k = true;
        l = true;
        m = true;
        n = true;
        o = true;
        p = true;
        q = false;
        r = true;
        s = true;
        t = true;
        u = false;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var v = _c.value;
                switch (v.a.e(a.d)) {
                    case "algorithmName":
                        b = v.d;
                        break;
                    case "hashValue":
                        c = v.d;
                        break;
                    case "saltValue":
                        d = v.d;
                        break;
                    case "spinCount":
                        e = toNullable(Number_$type, parseUInt32_1(v.d, CultureInfo.invariantCulture));
                        break;
                    case "sheet":
                        f = ST_OnOff.e(v.d);
                        break;
                    case "objects":
                        g = ST_OnOff.e(v.d);
                        break;
                    case "scenarios":
                        h = ST_OnOff.e(v.d);
                        break;
                    case "formatCells":
                        i = ST_OnOff.e(v.d);
                        break;
                    case "formatColumns":
                        j = ST_OnOff.e(v.d);
                        break;
                    case "formatRows":
                        k = ST_OnOff.e(v.d);
                        break;
                    case "insertColumns":
                        l = ST_OnOff.e(v.d);
                        break;
                    case "insertRows":
                        m = ST_OnOff.e(v.d);
                        break;
                    case "insertHyperlinks":
                        n = ST_OnOff.e(v.d);
                        break;
                    case "deleteColumns":
                        o = ST_OnOff.e(v.d);
                        break;
                    case "deleteRows":
                        p = ST_OnOff.e(v.d);
                        break;
                    case "selectLockedCells":
                        q = ST_OnOff.e(v.d);
                        break;
                    case "sort":
                        r = ST_OnOff.e(v.d);
                        break;
                    case "autoFilter":
                        s = ST_OnOff.e(v.d);
                        break;
                    case "pivotTables":
                        t = ST_OnOff.e(v.d);
                        break;
                    case "selectUnlockedCells":
                        u = ST_OnOff.e(v.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_76_1) {
            e_76 = { error: e_76_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_76)
                    throw e_76.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q,
            p17: r,
            p18: s,
            p19: t,
            p20: u
        };
    };
    SpreadsheetMLMain.ado = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u) {
        if (b === void 0) {
            b = null;
        }
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = toNullable(Number_$type, null);
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = false;
        }
        if (h === void 0) {
            h = false;
        }
        if (i === void 0) {
            i = true;
        }
        if (j === void 0) {
            j = true;
        }
        if (k === void 0) {
            k = true;
        }
        if (l === void 0) {
            l = true;
        }
        if (m === void 0) {
            m = true;
        }
        if (n === void 0) {
            n = true;
        }
        if (o === void 0) {
            o = true;
        }
        if (p === void 0) {
            p = true;
        }
        if (q === void 0) {
            q = false;
        }
        if (r === void 0) {
            r = true;
        }
        if (s === void 0) {
            s = true;
        }
        if (t === void 0) {
            t = true;
        }
        if (u === void 0) {
            u = false;
        }
        a.ad.p(SpreadsheetMLMain.ox, null);
        var v;
        v = b;
        a.ad.h("algorithmName", v);
        v = c;
        a.ad.h("hashValue", v);
        v = d;
        a.ad.h("saltValue", v);
        if (nullableNotEquals(e, null)) {
            v = e.value.toString();
            a.ad.h("spinCount", v);
        }
        if (f != false) {
            v = ST_OnOff.g(f);
            a.ad.h("sheet", v);
            if (g != false) {
                v = ST_OnOff.g(g);
                a.ad.h("objects", v);
            }
            if (h != false) {
                v = ST_OnOff.g(h);
                a.ad.h("scenarios", v);
            }
        }
        if (i != true) {
            v = ST_OnOff.g(i);
            a.ad.h("formatCells", v);
        }
        if (j != true) {
            v = ST_OnOff.g(j);
            a.ad.h("formatColumns", v);
        }
        if (k != true) {
            v = ST_OnOff.g(k);
            a.ad.h("formatRows", v);
        }
        if (l != true) {
            v = ST_OnOff.g(l);
            a.ad.h("insertColumns", v);
        }
        if (m != true) {
            v = ST_OnOff.g(m);
            a.ad.h("insertRows", v);
        }
        if (n != true) {
            v = ST_OnOff.g(n);
            a.ad.h("insertHyperlinks", v);
        }
        if (o != true) {
            v = ST_OnOff.g(o);
            a.ad.h("deleteColumns", v);
        }
        if (p != true) {
            v = ST_OnOff.g(p);
            a.ad.h("deleteRows", v);
        }
        if (q != false) {
            v = ST_OnOff.g(q);
            a.ad.h("selectLockedCells", v);
        }
        if (r != true) {
            v = ST_OnOff.g(r);
            a.ad.h("sort", v);
        }
        if (s != true) {
            v = ST_OnOff.g(s);
            a.ad.h("autoFilter", v);
        }
        if (t != true) {
            v = ST_OnOff.g(t);
            a.ad.h("pivotTables", v);
        }
        if (u != false) {
            v = ST_OnOff.g(u);
            a.ad.h("selectUnlockedCells", v);
        }
    };
    SpreadsheetMLMain.x3 = function (a) {
    };
    SpreadsheetMLMain.adp = function (a) {
        a.ad.p(SpreadsheetMLMain.oy, null);
    };
    SpreadsheetMLMain.x4 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
        var e_77, _a;
        c = false;
        d = false;
        e = true;
        f = true;
        g = true;
        h = false;
        i = false;
        j = true;
        k = true;
        l = true;
        m = true;
        n = 0;
        o = null;
        p = 64;
        q = 100;
        r = 0;
        s = 0;
        t = 0;
        b = 0;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var u = _c.value;
                switch (u.a.e(a.d)) {
                    case "windowProtection":
                        c = ST_OnOff.e(u.d);
                        break;
                    case "showFormulas":
                        d = ST_OnOff.e(u.d);
                        break;
                    case "showGridLines":
                        e = ST_OnOff.e(u.d);
                        break;
                    case "showRowColHeaders":
                        f = ST_OnOff.e(u.d);
                        break;
                    case "showZeros":
                        g = ST_OnOff.e(u.d);
                        break;
                    case "rightToLeft":
                        h = ST_OnOff.e(u.d);
                        break;
                    case "tabSelected":
                        i = ST_OnOff.e(u.d);
                        break;
                    case "showRuler":
                        j = ST_OnOff.e(u.d);
                        break;
                    case "showOutlineSymbols":
                        k = ST_OnOff.e(u.d);
                        break;
                    case "defaultGridColor":
                        l = ST_OnOff.e(u.d);
                        break;
                    case "showWhiteSpace":
                        m = ST_OnOff.e(u.d);
                        break;
                    case "view":
                        n = XmlNamespaceDefinitionBase.b(ST_SheetViewType_$type, u.d, n);
                        break;
                    case "topLeftCell":
                        o = u.d;
                        break;
                    case "colorId":
                        p = parseUInt32_1(u.d, CultureInfo.invariantCulture);
                        break;
                    case "zoomScale":
                        q = parseUInt32_1(u.d, CultureInfo.invariantCulture);
                        break;
                    case "zoomScaleNormal":
                        r = parseUInt32_1(u.d, CultureInfo.invariantCulture);
                        break;
                    case "zoomScaleSheetLayoutView":
                        s = parseUInt32_1(u.d, CultureInfo.invariantCulture);
                        break;
                    case "zoomScalePageLayoutView":
                        t = parseUInt32_1(u.d, CultureInfo.invariantCulture);
                        break;
                    case "workbookViewId":
                        b = parseUInt32_1(u.d, CultureInfo.invariantCulture);
                        break;
                    default: break;
                }
            }
        }
        catch (e_77_1) {
            e_77 = { error: e_77_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_77)
                    throw e_77.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q,
            p17: r,
            p18: s,
            p19: t
        };
    };
    SpreadsheetMLMain.adq = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = true;
        }
        if (f === void 0) {
            f = true;
        }
        if (g === void 0) {
            g = true;
        }
        if (h === void 0) {
            h = false;
        }
        if (i === void 0) {
            i = false;
        }
        if (j === void 0) {
            j = true;
        }
        if (k === void 0) {
            k = true;
        }
        if (l === void 0) {
            l = true;
        }
        if (m === void 0) {
            m = true;
        }
        if (n === void 0) {
            n = 0;
        }
        if (o === void 0) {
            o = null;
        }
        if (p === void 0) {
            p = 64;
        }
        if (q === void 0) {
            q = 100;
        }
        if (r === void 0) {
            r = 0;
        }
        if (s === void 0) {
            s = 0;
        }
        if (t === void 0) {
            t = 0;
        }
        a.ad.p(SpreadsheetMLMain.oz, null);
        var u;
        if (c != false) {
            u = ST_OnOff.g(c);
            a.ad.h("windowProtection", u);
        }
        if (d != false) {
            u = ST_OnOff.g(d);
            a.ad.h("showFormulas", u);
        }
        if (e != true) {
            u = ST_OnOff.g(e);
            a.ad.h("showGridLines", u);
        }
        if (f != true) {
            u = ST_OnOff.g(f);
            a.ad.h("showRowColHeaders", u);
        }
        if (g != true) {
            u = ST_OnOff.g(g);
            a.ad.h("showZeros", u);
        }
        if (h != false) {
            u = ST_OnOff.g(h);
            a.ad.h("rightToLeft", u);
        }
        if (i != false) {
            u = ST_OnOff.g(i);
            a.ad.h("tabSelected", u);
        }
        if (j != true) {
            u = ST_OnOff.g(j);
            a.ad.h("showRuler", u);
        }
        if (k != true) {
            u = ST_OnOff.g(k);
            a.ad.h("showOutlineSymbols", u);
        }
        if (l != true) {
            u = ST_OnOff.g(l);
            a.ad.h("defaultGridColor", u);
        }
        if (m != true) {
            u = ST_OnOff.g(m);
            a.ad.h("showWhiteSpace", u);
        }
        if (n != 0) {
            u = XmlNamespaceDefinitionBase.p(ST_SheetViewType_$type, n);
            a.ad.h("view", u);
        }
        u = o;
        a.ad.h("topLeftCell", u);
        if (p != 64) {
            u = p.toString();
            a.ad.h("colorId", u);
        }
        if (q != 100) {
            u = q.toString();
            a.ad.h("zoomScale", u);
        }
        if (r != 0) {
            u = r.toString();
            a.ad.h("zoomScaleNormal", u);
        }
        if (s != 0) {
            u = s.toString();
            a.ad.h("zoomScaleSheetLayoutView", u);
        }
        if (t != 0) {
            u = t.toString();
            a.ad.h("zoomScalePageLayoutView", u);
        }
        u = b.toString();
        a.ad.h("workbookViewId", u);
    };
    SpreadsheetMLMain.x5 = function (a) {
    };
    SpreadsheetMLMain.adr = function (a) {
        a.ad.p(SpreadsheetMLMain.o0, null);
    };
    SpreadsheetMLMain.x6 = function (a) {
    };
    SpreadsheetMLMain.ads = function (a) {
        a.ad.p(SpreadsheetMLMain.pw, null);
    };
    SpreadsheetMLMain.x7 = function (a, b, c, d, e, f, g, h) {
        var e_78, _a;
        c = false;
        d = 0;
        b = null;
        e = null;
        f = toNullable(Number_$type, null);
        g = 0;
        h = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var i = _c.value;
                switch (i.a.e(a.d)) {
                    case "descending":
                        c = ST_OnOff.e(i.d);
                        break;
                    case "sortBy":
                        d = XmlNamespaceDefinitionBase.b(ST_SortBy_$type, i.d, d);
                        break;
                    case "ref":
                        b = i.d;
                        break;
                    case "customList":
                        e = i.d;
                        break;
                    case "dxfId":
                        f = toNullable(Number_$type, parseUInt32_1(i.d, CultureInfo.invariantCulture));
                        break;
                    case "iconSet":
                        g = XmlNamespaceDefinitionBase.b(ST_IconSetType_$type, i.d, g);
                        break;
                    case "iconId":
                        h = toNullable(Number_$type, parseUInt32_1(i.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_78_1) {
            e_78 = { error: e_78_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_78)
                    throw e_78.error;
            }
        }
        if (g <= 16) {
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h
        };
    };
    SpreadsheetMLMain.adt = function (a, b, c, d, e, f, g, h) {
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = 0;
        }
        if (e === void 0) {
            e = null;
        }
        if (f === void 0) {
            f = toNullable(Number_$type, null);
        }
        if (g === void 0) {
            g = 0;
        }
        if (h === void 0) {
            h = toNullable(Number_$type, null);
        }
        if (g <= 16) {
            SpreadsheetMLMain.adu(a, SpreadsheetMLMain.p2, null, b, c, d, e, f, g, h);
        }
        else {
            a.ad.g([new AlternateContentChoice(0, SpreadsheetML2009Main.ao, function () { return SpreadsheetMLMain.adu(a, SpreadsheetML2009Main.cm, null, b, c, d, e, f, g, h); })]);
        }
    };
    SpreadsheetMLMain.adu = function (a, b, c, d, e, f, g, h, i, j) {
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = 0;
        }
        if (g === void 0) {
            g = null;
        }
        if (h === void 0) {
            h = toNullable(Number_$type, null);
        }
        if (i === void 0) {
            i = 0;
        }
        if (j === void 0) {
            j = toNullable(Number_$type, null);
        }
        a.ad.p(b, c);
        var k;
        if (e != false) {
            k = ST_OnOff.g(e);
            a.ad.h("descending", k);
        }
        if (f != 0) {
            k = XmlNamespaceDefinitionBase.p(ST_SortBy_$type, f);
            a.ad.h("sortBy", k);
        }
        k = d;
        a.ad.h("ref", k);
        k = g;
        a.ad.h("customList", k);
        if (nullableNotEquals(h, null)) {
            k = h.value.toString();
            a.ad.h("dxfId", k);
        }
        if (i != 0) {
            k = XmlNamespaceDefinitionBase.p(ST_IconSetType_$type, i);
            a.ad.h("iconSet", k);
        }
        if (nullableNotEquals(j, null)) {
            k = j.value.toString();
            a.ad.h("iconId", k);
        }
        a.ad.k();
    };
    SpreadsheetMLMain.x8 = function (a, b, c, d, e) {
        var e_79, _a;
        c = false;
        d = false;
        e = 0;
        b = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "columnSort":
                        c = ST_OnOff.e(f.d);
                        break;
                    case "caseSensitive":
                        d = ST_OnOff.e(f.d);
                        break;
                    case "sortMethod":
                        e = XmlNamespaceDefinitionBase.b(ST_SortMethod_$type, f.d, e);
                        break;
                    case "ref":
                        b = f.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_79_1) {
            e_79 = { error: e_79_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_79)
                    throw e_79.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetMLMain.adv = function (a, b, c, d, e) {
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = 0;
        }
        a.ad.p(SpreadsheetMLMain.p4, null);
        var f;
        if (c != false) {
            f = ST_OnOff.g(c);
            a.ad.h("columnSort", f);
        }
        if (d != false) {
            f = ST_OnOff.g(d);
            a.ad.h("caseSensitive", f);
        }
        if (e != 0) {
            f = XmlNamespaceDefinitionBase.p(ST_SortMethod_$type, e);
            a.ad.h("sortMethod", f);
        }
        f = b;
        a.ad.h("ref", f);
    };
    SpreadsheetMLMain.x9 = function (a, b, c) {
        var e_80, _a;
        b = toNullable(Number_$type, null);
        c = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                switch (d.a.e(a.d)) {
                    case "count":
                        b = toNullable(Number_$type, parseUInt32_1(d.d, CultureInfo.invariantCulture));
                        break;
                    case "uniqueCount":
                        c = toNullable(Number_$type, parseUInt32_1(d.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_80_1) {
            e_80 = { error: e_80_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_80)
                    throw e_80.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.adw = function (a, b, c) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        if (c === void 0) {
            c = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.p8, null);
        var d;
        if (nullableNotEquals(b, null)) {
            d = b.value.toString();
            a.ad.h("count", d);
        }
        if (nullableNotEquals(c, null)) {
            d = c.value.toString();
            a.ad.h("uniqueCount", d);
        }
    };
    SpreadsheetMLMain.ya = function (a, b) {
        var c = SpreadsheetMLMain.us(a, SpreadsheetMLMain.p9, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.adx = function (a, b) {
        if (b === void 0) {
            b = 0;
        }
        SpreadsheetMLMain.aad(a, SpreadsheetMLMain.p9, b);
    };
    SpreadsheetMLMain.yb = function (a, b) {
        var c = a.ao("position");
        if (c == null) {
            b = 0;
        }
        else {
            b = parseNumber(c, CultureInfo.invariantCulture);
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.ady = function (a, b) {
        a.ad.p(SpreadsheetMLMain.qd, null);
        var c;
        c = b.toString();
        a.ad.h("position", c);
    };
    SpreadsheetMLMain.yc = function (a, b) {
        var c = SpreadsheetMLMain.ur(a, SpreadsheetMLMain.qf, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.adz = function (a, b) {
        if (b === void 0) {
            b = true;
        }
        SpreadsheetMLMain.aac(a, SpreadsheetMLMain.qf, b);
    };
    SpreadsheetMLMain.yd = function (a) {
    };
    SpreadsheetMLMain.ad0 = function (a) {
        a.ad.p(SpreadsheetMLMain.qh, null);
        var b = a.d._z;
        a.ad.l(SpreadsheetMLMain.ap);
    };
    SpreadsheetMLMain.ye = function (a, b) {
        var c = a.ao("val");
        if (c == null) {
            b = 0;
        }
        else {
            b = parseNumber(c, CultureInfo.invariantCulture);
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.ad1 = function (a, b) {
        a.ad.p(SpreadsheetMLMain.qn, null);
        var c;
        c = b.toString();
        a.ad.h("val", c);
    };
    SpreadsheetMLMain.yf = function (a, b, c, d, e, f) {
        var g = SpreadsheetMLMain.ut(a, SpreadsheetMLMain.qq, b, c, d, e, f);
        b = g.p2;
        c = g.p3;
        d = g.p4;
        e = g.p5;
        f = g.p6;
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f
        };
    };
    SpreadsheetMLMain.ad2 = function (a, b, c, d, e, f) {
        SpreadsheetMLMain.aae(a, SpreadsheetMLMain.qq, b, c, d, e, f);
    };
    SpreadsheetMLMain.yg = function (a, b, c, d, e, f, g, h, i, j, k, l, m) {
        var e_81, _a;
        b = 0;
        c = null;
        d = null;
        e = 0;
        f = null;
        g = toNullable(Number_$type, null);
        h = toNullable(Number_$type, null);
        i = toNullable(Number_$type, null);
        j = toNullable(Number_$type, null);
        k = null;
        l = null;
        m = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var n = _c.value;
                switch (n.a.e(a.d)) {
                    case "id":
                        b = parseUInt32_1(n.d, CultureInfo.invariantCulture);
                        break;
                    case "uniqueName":
                        c = n.d;
                        break;
                    case "name":
                        d = n.d;
                        break;
                    case "totalsRowFunction":
                        e = XmlNamespaceDefinitionBase.b(ST_TotalsRowFunction_$type, n.d, e);
                        break;
                    case "totalsRowLabel":
                        f = n.d;
                        break;
                    case "queryTableFieldId":
                        g = toNullable(Number_$type, parseUInt32_1(n.d, CultureInfo.invariantCulture));
                        break;
                    case "headerRowDxfId":
                        h = toNullable(Number_$type, parseUInt32_1(n.d, CultureInfo.invariantCulture));
                        break;
                    case "dataDxfId":
                        i = toNullable(Number_$type, parseUInt32_1(n.d, CultureInfo.invariantCulture));
                        break;
                    case "totalsRowDxfId":
                        j = toNullable(Number_$type, parseUInt32_1(n.d, CultureInfo.invariantCulture));
                        break;
                    case "headerRowCellStyle":
                        k = n.d;
                        break;
                    case "dataCellStyle":
                        l = n.d;
                        break;
                    case "totalsRowCellStyle":
                        m = n.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_81_1) {
            e_81 = { error: e_81_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_81)
                    throw e_81.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m
        };
    };
    SpreadsheetMLMain.ad3 = function (a, b, c, d, e, f, g, h, i, j, k, l, m) {
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = null;
        }
        if (e === void 0) {
            e = 0;
        }
        if (f === void 0) {
            f = null;
        }
        if (g === void 0) {
            g = toNullable(Number_$type, null);
        }
        if (h === void 0) {
            h = toNullable(Number_$type, null);
        }
        if (i === void 0) {
            i = toNullable(Number_$type, null);
        }
        if (j === void 0) {
            j = toNullable(Number_$type, null);
        }
        if (k === void 0) {
            k = null;
        }
        if (l === void 0) {
            l = null;
        }
        if (m === void 0) {
            m = null;
        }
        a.ad.p(SpreadsheetMLMain.qu, null);
        var n;
        n = b.toString();
        a.ad.h("id", n);
        n = c;
        a.ad.h("uniqueName", n);
        n = d;
        a.ad.h("name", n);
        if (e != 0) {
            n = XmlNamespaceDefinitionBase.p(ST_TotalsRowFunction_$type, e);
            a.ad.h("totalsRowFunction", n);
        }
        n = f;
        a.ad.h("totalsRowLabel", n);
        if (nullableNotEquals(g, null)) {
            n = g.value.toString();
            a.ad.h("queryTableFieldId", n);
        }
        if (nullableNotEquals(h, null)) {
            n = h.value.toString();
            a.ad.h("headerRowDxfId", n);
        }
        if (nullableNotEquals(i, null)) {
            n = i.value.toString();
            a.ad.h("dataDxfId", n);
        }
        if (nullableNotEquals(j, null)) {
            n = j.value.toString();
            a.ad.h("totalsRowDxfId", n);
        }
        n = k;
        a.ad.h("headerRowCellStyle", n);
        n = l;
        a.ad.h("dataCellStyle", n);
        n = m;
        a.ad.h("totalsRowCellStyle", n);
    };
    SpreadsheetMLMain.yh = function (a, b) {
        var c = a.ao("count");
        if (c == null) {
            b = toNullable(Number_$type, null);
        }
        else {
            b = toNullable(Number_$type, parseUInt32_1(c, CultureInfo.invariantCulture));
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.ad4 = function (a, b) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.qv, null);
        var c;
        if (nullableNotEquals(b, null)) {
            c = b.value.toString();
            a.ad.h("count", c);
        }
    };
    SpreadsheetMLMain.yi = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w) {
        var e_82, _a;
        b = 0;
        c = null;
        d = null;
        e = null;
        f = null;
        g = 0;
        h = 1;
        i = false;
        j = false;
        k = 0;
        l = true;
        m = false;
        n = toNullable(Number_$type, null);
        o = toNullable(Number_$type, null);
        p = toNullable(Number_$type, null);
        q = toNullable(Number_$type, null);
        r = toNullable(Number_$type, null);
        s = toNullable(Number_$type, null);
        t = null;
        u = null;
        v = null;
        w = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var x = _c.value;
                switch (x.a.e(a.d)) {
                    case "id":
                        b = parseUInt32_1(x.d, CultureInfo.invariantCulture);
                        break;
                    case "name":
                        c = x.d;
                        break;
                    case "displayName":
                        d = x.d;
                        break;
                    case "comment":
                        e = x.d;
                        break;
                    case "ref":
                        f = x.d;
                        break;
                    case "tableType":
                        g = XmlNamespaceDefinitionBase.b(ST_TableType_$type, x.d, g);
                        break;
                    case "headerRowCount":
                        h = parseUInt32_1(x.d, CultureInfo.invariantCulture);
                        break;
                    case "insertRow":
                        i = ST_OnOff.e(x.d);
                        break;
                    case "insertRowShift":
                        j = ST_OnOff.e(x.d);
                        break;
                    case "totalsRowCount":
                        k = parseUInt32_1(x.d, CultureInfo.invariantCulture);
                        break;
                    case "totalsRowShown":
                        l = ST_OnOff.e(x.d);
                        break;
                    case "published":
                        m = ST_OnOff.e(x.d);
                        break;
                    case "headerRowDxfId":
                        n = toNullable(Number_$type, parseUInt32_1(x.d, CultureInfo.invariantCulture));
                        break;
                    case "dataDxfId":
                        o = toNullable(Number_$type, parseUInt32_1(x.d, CultureInfo.invariantCulture));
                        break;
                    case "totalsRowDxfId":
                        p = toNullable(Number_$type, parseUInt32_1(x.d, CultureInfo.invariantCulture));
                        break;
                    case "headerRowBorderDxfId":
                        q = toNullable(Number_$type, parseUInt32_1(x.d, CultureInfo.invariantCulture));
                        break;
                    case "tableBorderDxfId":
                        r = toNullable(Number_$type, parseUInt32_1(x.d, CultureInfo.invariantCulture));
                        break;
                    case "totalsRowBorderDxfId":
                        s = toNullable(Number_$type, parseUInt32_1(x.d, CultureInfo.invariantCulture));
                        break;
                    case "headerRowCellStyle":
                        t = x.d;
                        break;
                    case "dataCellStyle":
                        u = x.d;
                        break;
                    case "totalsRowCellStyle":
                        v = x.d;
                        break;
                    case "connectionId":
                        w = toNullable(Number_$type, parseUInt32_1(x.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_82_1) {
            e_82 = { error: e_82_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_82)
                    throw e_82.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q,
            p17: r,
            p18: s,
            p19: t,
            p20: u,
            p21: v,
            p22: w
        };
    };
    SpreadsheetMLMain.ad5 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w) {
        if (g === void 0) {
            g = 0;
        }
        if (h === void 0) {
            h = 1;
        }
        if (i === void 0) {
            i = false;
        }
        if (j === void 0) {
            j = false;
        }
        if (k === void 0) {
            k = 0;
        }
        if (l === void 0) {
            l = true;
        }
        if (m === void 0) {
            m = false;
        }
        if (n === void 0) {
            n = toNullable(Number_$type, null);
        }
        if (o === void 0) {
            o = toNullable(Number_$type, null);
        }
        if (p === void 0) {
            p = toNullable(Number_$type, null);
        }
        if (q === void 0) {
            q = toNullable(Number_$type, null);
        }
        if (r === void 0) {
            r = toNullable(Number_$type, null);
        }
        if (s === void 0) {
            s = toNullable(Number_$type, null);
        }
        if (t === void 0) {
            t = null;
        }
        if (u === void 0) {
            u = null;
        }
        if (v === void 0) {
            v = null;
        }
        if (w === void 0) {
            w = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.qr, null);
        var x;
        x = b.toString();
        a.ad.h("id", x);
        x = c;
        a.ad.h("name", x);
        x = d;
        a.ad.h("displayName", x);
        x = e;
        a.ad.h("comment", x);
        x = f;
        a.ad.h("ref", x);
        if (g != 0) {
            x = XmlNamespaceDefinitionBase.p(ST_TableType_$type, g);
            a.ad.h("tableType", x);
        }
        if (h != 1) {
            x = h.toString();
            a.ad.h("headerRowCount", x);
        }
        if (i != false) {
            x = ST_OnOff.g(i);
            a.ad.h("insertRow", x);
        }
        if (j != false) {
            x = ST_OnOff.g(j);
            a.ad.h("insertRowShift", x);
        }
        if (k != 0) {
            x = k.toString();
            a.ad.h("totalsRowCount", x);
        }
        if (l != true) {
            x = ST_OnOff.g(l);
            a.ad.h("totalsRowShown", x);
        }
        if (m != false) {
            x = ST_OnOff.g(m);
            a.ad.h("published", x);
        }
        if (nullableNotEquals(n, null)) {
            x = n.value.toString();
            a.ad.h("headerRowDxfId", x);
        }
        if (nullableNotEquals(o, null)) {
            x = o.value.toString();
            a.ad.h("dataDxfId", x);
        }
        if (nullableNotEquals(p, null)) {
            x = p.value.toString();
            a.ad.h("totalsRowDxfId", x);
        }
        if (nullableNotEquals(q, null)) {
            x = q.value.toString();
            a.ad.h("headerRowBorderDxfId", x);
        }
        if (nullableNotEquals(r, null)) {
            x = r.value.toString();
            a.ad.h("tableBorderDxfId", x);
        }
        if (nullableNotEquals(s, null)) {
            x = s.value.toString();
            a.ad.h("totalsRowBorderDxfId", x);
        }
        x = t;
        a.ad.h("headerRowCellStyle", x);
        x = u;
        a.ad.h("dataCellStyle", x);
        x = v;
        a.ad.h("totalsRowCellStyle", x);
        if (nullableNotEquals(w, null)) {
            x = w.value.toString();
            a.ad.h("connectionId", x);
        }
    };
    SpreadsheetMLMain.yj = function (a, b) {
        b = a.ao(OfficeDocumentRelationships.as);
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.ad6 = function (a, b) {
        if (b === void 0) {
            b = null;
        }
        a.ad.p(SpreadsheetMLMain.qw, null);
        var c;
        c = b;
        a.ad.h(OfficeDocumentRelationships.as, c);
    };
    SpreadsheetMLMain.yk = function (a, b) {
        var c = a.ao("count");
        if (c == null) {
            b = toNullable(Number_$type, null);
        }
        else {
            b = toNullable(Number_$type, parseUInt32_1(c, CultureInfo.invariantCulture));
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.ad7 = function (a, b) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.qx, null);
        var c;
        if (nullableNotEquals(b, null)) {
            c = b.value.toString();
            a.ad.h("count", c);
        }
    };
    SpreadsheetMLMain.yl = function (a, b, c, d, e) {
        var e_83, _a;
        b = null;
        c = true;
        d = true;
        e = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "name":
                        b = f.d;
                        break;
                    case "pivot":
                        c = ST_OnOff.e(f.d);
                        break;
                    case "table":
                        d = ST_OnOff.e(f.d);
                        break;
                    case "count":
                        e = toNullable(Number_$type, parseUInt32_1(f.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_83_1) {
            e_83 = { error: e_83_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_83)
                    throw e_83.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetMLMain.ad8 = function (a, b, c, d, e) {
        if (c === void 0) {
            c = true;
        }
        if (d === void 0) {
            d = true;
        }
        if (e === void 0) {
            e = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.qy, null);
        var f;
        f = b;
        a.ad.h("name", f);
        if (c != true) {
            f = ST_OnOff.g(c);
            a.ad.h("pivot", f);
        }
        if (d != true) {
            f = ST_OnOff.g(d);
            a.ad.h("table", f);
        }
        if (nullableNotEquals(e, null)) {
            f = e.value.toString();
            a.ad.h("count", f);
        }
    };
    SpreadsheetMLMain.ym = function (a, b, c, d) {
        var e_84, _a;
        b = 0;
        c = 1;
        d = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                switch (e.a.e(a.d)) {
                    case "type":
                        b = XmlNamespaceDefinitionBase.b(ST_TableStyleType_$type, e.d, b);
                        break;
                    case "size":
                        c = parseUInt32_1(e.d, CultureInfo.invariantCulture);
                        break;
                    case "dxfId":
                        d = toNullable(Number_$type, parseUInt32_1(e.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_84_1) {
            e_84 = { error: e_84_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_84)
                    throw e_84.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    SpreadsheetMLMain.ad9 = function (a, b, c, d) {
        if (c === void 0) {
            c = 1;
        }
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.qz, null);
        var e;
        e = XmlNamespaceDefinitionBase.p(ST_TableStyleType_$type, b);
        a.ad.h("type", e);
        if (c != 1) {
            e = c.toString();
            a.ad.h("size", e);
        }
        if (nullableNotEquals(d, null)) {
            e = d.value.toString();
            a.ad.h("dxfId", e);
        }
    };
    SpreadsheetMLMain.yn = function (a, b, c, d, e, f) {
        var e_85, _a;
        b = null;
        c = toNullable(Boolean_$type, null);
        d = toNullable(Boolean_$type, null);
        e = toNullable(Boolean_$type, null);
        f = toNullable(Boolean_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var g = _c.value;
                switch (g.a.e(a.d)) {
                    case "name":
                        b = g.d;
                        break;
                    case "showFirstColumn":
                        c = toNullable(Boolean_$type, ST_OnOff.e(g.d));
                        break;
                    case "showLastColumn":
                        d = toNullable(Boolean_$type, ST_OnOff.e(g.d));
                        break;
                    case "showRowStripes":
                        e = toNullable(Boolean_$type, ST_OnOff.e(g.d));
                        break;
                    case "showColumnStripes":
                        f = toNullable(Boolean_$type, ST_OnOff.e(g.d));
                        break;
                    default: break;
                }
            }
        }
        catch (e_85_1) {
            e_85 = { error: e_85_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_85)
                    throw e_85.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f
        };
    };
    SpreadsheetMLMain.aea = function (a, b, c, d, e, f) {
        a.ad.p(SpreadsheetMLMain.q0, null);
        var g;
        g = b;
        a.ad.h("name", g);
        if (nullableNotEquals(c, null)) {
            g = ST_OnOff.g(c.value);
            a.ad.h("showFirstColumn", g);
        }
        if (nullableNotEquals(d, null)) {
            g = ST_OnOff.g(d.value);
            a.ad.h("showLastColumn", g);
        }
        if (nullableNotEquals(e, null)) {
            g = ST_OnOff.g(e.value);
            a.ad.h("showRowStripes", g);
        }
        if (nullableNotEquals(f, null)) {
            g = ST_OnOff.g(f.value);
            a.ad.h("showColumnStripes", g);
        }
    };
    SpreadsheetMLMain.yo = function (a, b, c, d) {
        var e_86, _a;
        b = toNullable(Number_$type, null);
        c = null;
        d = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                switch (e.a.e(a.d)) {
                    case "count":
                        b = toNullable(Number_$type, parseUInt32_1(e.d, CultureInfo.invariantCulture));
                        break;
                    case "defaultTableStyle":
                        c = e.d;
                        break;
                    case "defaultPivotStyle":
                        d = e.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_86_1) {
            e_86 = { error: e_86_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_86)
                    throw e_86.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    SpreadsheetMLMain.aeb = function (a, b, c, d) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        if (c === void 0) {
            c = null;
        }
        if (d === void 0) {
            d = null;
        }
        a.ad.p(SpreadsheetMLMain.q1, null);
        var e;
        if (nullableNotEquals(b, null)) {
            e = b.value.toString();
            a.ad.h("count", e);
        }
        e = c;
        a.ad.h("defaultTableStyle", e);
        e = d;
        a.ad.h("defaultPivotStyle", e);
    };
    SpreadsheetMLMain.yp = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, SpreadsheetMLMain.qo);
        b = SpreadsheetMLMain.rw(b);
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.aec = function (a, b) {
        b = SpreadsheetMLMain.hh(b);
        XmlNamespaceDefinitionBase.aj(a, SpreadsheetMLMain.qo, null, b);
    };
    SpreadsheetMLMain.yq = function (a) {
    };
    SpreadsheetMLMain.aed = function (a) {
        a.ad.p(SpreadsheetMLMain.q5, null);
    };
    SpreadsheetMLMain.ys = function (a, b) {
        var c = SpreadsheetMLMain.us(a, SpreadsheetMLMain.rf, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.aef = function (a, b) {
        if (b === void 0) {
            b = 0;
        }
        SpreadsheetMLMain.aad(a, SpreadsheetMLMain.rf, b);
    };
    SpreadsheetMLMain.yr = function (a, b, c, d, e) {
        var e_87, _a;
        c = true;
        d = false;
        b = 0;
        e = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "top":
                        c = ST_OnOff.e(f.d);
                        break;
                    case "percent":
                        d = ST_OnOff.e(f.d);
                        break;
                    case "val":
                        b = parseNumber(f.d, CultureInfo.invariantCulture);
                        break;
                    case "filterVal":
                        e = toNullable(Number_$type, parseNumber(f.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_87_1) {
            e_87 = { error: e_87_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_87)
                    throw e_87.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetMLMain.aee = function (a, b, c, d, e) {
        if (c === void 0) {
            c = true;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.rh, null);
        var f;
        if (c != true) {
            f = ST_OnOff.g(c);
            a.ad.h("top", f);
        }
        if (d != false) {
            f = ST_OnOff.g(d);
            a.ad.h("percent", f);
        }
        f = b.toString();
        a.ad.h("val", f);
        if (nullableNotEquals(e, null)) {
            f = e.value.toString();
            a.ad.h("filterVal", f);
        }
    };
    SpreadsheetMLMain.yt = function (a, b, c) {
        var d = SpreadsheetMLMain.uw(a, SpreadsheetMLMain.rn, b, c);
        b = d.p2;
        c = d.p3;
        return {
            p1: b,
            p2: c
        };
    };
    SpreadsheetMLMain.aeg = function (a, b, c) {
        if (c === void 0) {
            c = false;
        }
        SpreadsheetMLMain.aah(a, SpreadsheetMLMain.rn, b, c);
    };
    SpreadsheetMLMain.yu = function (a, b) {
        b = 0;
        var c = a.ao("val");
        if (c != null) {
            b = XmlNamespaceDefinitionBase.b(ST_UnderlineValues_$type, c, b);
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.aeh = function (a, b) {
        if (b === void 0) {
            b = 0;
        }
        a.ad.p(SpreadsheetMLMain.ru, null);
        var c;
        if (b != 0) {
            c = XmlNamespaceDefinitionBase.p(ST_UnderlineValues_$type, b);
            a.ad.h("val", c);
        }
    };
    SpreadsheetMLMain.yv = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, SpreadsheetMLMain.r4);
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.aei = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, SpreadsheetMLMain.r4, null, b);
    };
    SpreadsheetMLMain.aej = function (a, b, c) {
        a.ad.r("v");
        if (c) {
            XmlNamespace.at(a.ad);
        }
        a.ad.u(b);
    };
    SpreadsheetMLMain.yw = function (a, b) {
        b = 0;
        var c = a.ao("val");
        if (c != null) {
            b = XmlNamespaceDefinitionBase.b(ST_VerticalAlignRun_$type, c, b);
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.aek = function (a, b) {
        a.ad.p(SpreadsheetMLMain.r8, null);
        var c;
        c = XmlNamespaceDefinitionBase.p(ST_VerticalAlignRun_$type, b);
        a.ad.h("val", c);
    };
    SpreadsheetMLMain.yx = function (a, b) {
        var c = SpreadsheetMLMain.us(a, SpreadsheetMLMain.r9, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.ael = function (a, b) {
        if (b === void 0) {
            b = 0;
        }
        SpreadsheetMLMain.aad(a, SpreadsheetMLMain.r9, b);
    };
    SpreadsheetMLMain.yy = function (a, b) {
        b = 0;
        var c = a.ao("conformance");
        if (c != null) {
            b = XmlNamespaceDefinitionBase.b(ST_ConformanceClass_$type, c, b);
        }
        return {
            p1: b
        };
    };
    SpreadsheetMLMain.aem = function (a, b) {
        if (b === void 0) {
            b = 0;
        }
        a.ad.p(SpreadsheetMLMain.sk, null);
        a.ad.l(OfficeDocumentRelationships.ao);
        a.ad.l(SpreadsheetMLMain.ap);
        var c = XmlNamespaceDefinitionBase.q(ST_ConformanceClass_$type, b, 0, false);
        a.ad.h("conformance", c);
    };
    SpreadsheetMLMain.yz = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
        var e_88, _a;
        b = false;
        c = 0;
        d = true;
        e = false;
        f = false;
        g = true;
        h = false;
        i = true;
        j = 0;
        k = null;
        l = false;
        m = false;
        n = false;
        o = false;
        p = false;
        q = true;
        r = false;
        s = toNullable(Number_$type, null);
        t = true;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var u = _c.value;
                switch (u.a.e(a.d)) {
                    case "date1904":
                        b = ST_OnOff.e(u.d);
                        break;
                    case "showObjects":
                        c = XmlNamespaceDefinitionBase.b(ST_Objects_$type, u.d, c);
                        break;
                    case "showBorderUnselectedTables":
                        d = ST_OnOff.e(u.d);
                        break;
                    case "filterPrivacy":
                        e = ST_OnOff.e(u.d);
                        break;
                    case "promptedSolutions":
                        f = ST_OnOff.e(u.d);
                        break;
                    case "showInkAnnotation":
                        g = ST_OnOff.e(u.d);
                        break;
                    case "backupFile":
                        h = ST_OnOff.e(u.d);
                        break;
                    case "saveExternalLinkValues":
                        i = ST_OnOff.e(u.d);
                        break;
                    case "updateLinks":
                        j = XmlNamespaceDefinitionBase.b(ST_UpdateLinks_$type, u.d, j);
                        break;
                    case "codeName":
                        k = u.d;
                        break;
                    case "hidePivotFieldList":
                        l = ST_OnOff.e(u.d);
                        break;
                    case "showPivotChartFilter":
                        m = ST_OnOff.e(u.d);
                        break;
                    case "allowRefreshQuery":
                        n = ST_OnOff.e(u.d);
                        break;
                    case "publishItems":
                        o = ST_OnOff.e(u.d);
                        break;
                    case "checkCompatibility":
                        p = ST_OnOff.e(u.d);
                        break;
                    case "autoCompressPictures":
                        q = ST_OnOff.e(u.d);
                        break;
                    case "refreshAllConnections":
                        r = ST_OnOff.e(u.d);
                        break;
                    case "defaultThemeVersion":
                        s = toNullable(Number_$type, parseUInt32_1(u.d, CultureInfo.invariantCulture));
                        break;
                    case "dateCompatibility":
                        t = ST_OnOff.e(u.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_88_1) {
            e_88 = { error: e_88_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_88)
                    throw e_88.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n,
            p14: o,
            p15: p,
            p16: q,
            p17: r,
            p18: s,
            p19: t
        };
    };
    SpreadsheetMLMain.aen = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = 0;
        }
        if (d === void 0) {
            d = true;
        }
        if (e === void 0) {
            e = false;
        }
        if (f === void 0) {
            f = false;
        }
        if (g === void 0) {
            g = true;
        }
        if (h === void 0) {
            h = false;
        }
        if (i === void 0) {
            i = true;
        }
        if (j === void 0) {
            j = 0;
        }
        if (k === void 0) {
            k = null;
        }
        if (l === void 0) {
            l = false;
        }
        if (m === void 0) {
            m = false;
        }
        if (n === void 0) {
            n = false;
        }
        if (o === void 0) {
            o = false;
        }
        if (p === void 0) {
            p = false;
        }
        if (q === void 0) {
            q = true;
        }
        if (r === void 0) {
            r = false;
        }
        if (s === void 0) {
            s = toNullable(Number_$type, null);
        }
        if (t === void 0) {
            t = true;
        }
        a.ad.p(SpreadsheetMLMain.sp, null);
        var u;
        if (b != false) {
            u = ST_OnOff.g(b);
            a.ad.h("date1904", u);
        }
        if (c != 0) {
            u = XmlNamespaceDefinitionBase.p(ST_Objects_$type, c);
            a.ad.h("showObjects", u);
        }
        if (d != true) {
            u = ST_OnOff.g(d);
            a.ad.h("showBorderUnselectedTables", u);
        }
        if (e != false) {
            u = ST_OnOff.g(e);
            a.ad.h("filterPrivacy", u);
        }
        if (f != false) {
            u = ST_OnOff.g(f);
            a.ad.h("promptedSolutions", u);
        }
        if (g != true) {
            u = ST_OnOff.g(g);
            a.ad.h("showInkAnnotation", u);
        }
        if (h != false) {
            u = ST_OnOff.g(h);
            a.ad.h("backupFile", u);
        }
        if (i != true) {
            u = ST_OnOff.g(i);
            a.ad.h("saveExternalLinkValues", u);
        }
        if (j != 0) {
            u = XmlNamespaceDefinitionBase.p(ST_UpdateLinks_$type, j);
            a.ad.h("updateLinks", u);
        }
        if (k != null) {
            u = k;
            a.ad.h("codeName", u);
        }
        if (l != false) {
            u = ST_OnOff.g(l);
            a.ad.h("hidePivotFieldList", u);
        }
        if (m != false) {
            u = ST_OnOff.g(m);
            a.ad.h("showPivotChartFilter", u);
        }
        if (n != false) {
            u = ST_OnOff.g(n);
            a.ad.h("allowRefreshQuery", u);
        }
        if (o != false) {
            u = ST_OnOff.g(o);
            a.ad.h("publishItems", u);
        }
        if (p != false) {
            u = ST_OnOff.g(p);
            a.ad.h("checkCompatibility", u);
        }
        if (q != true) {
            u = ST_OnOff.g(q);
            a.ad.h("autoCompressPictures", u);
        }
        if (r != false) {
            u = ST_OnOff.g(r);
            a.ad.h("refreshAllConnections", u);
        }
        if (nullableNotEquals(s, null)) {
            u = s.value.toString();
            a.ad.h("defaultThemeVersion", u);
        }
        if (t != true) {
            u = ST_OnOff.g(t);
            a.ad.h("dateCompatibility", u);
        }
    };
    SpreadsheetMLMain.y0 = function (a, b, c, d, e, f) {
        var e_89, _a;
        b = false;
        c = false;
        d = false;
        e = toNullable(Number_$type, null);
        f = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var g = _c.value;
                switch (g.a.e(a.d)) {
                    case "lockStructure":
                        b = ST_OnOff.e(g.d);
                        break;
                    case "lockWindows":
                        c = ST_OnOff.e(g.d);
                        break;
                    case "lockRevision":
                        d = ST_OnOff.e(g.d);
                        break;
                    case "workbookPassword":
                        e = toNullable(Number_$type, ST_UnsignedShortHex.d(g.d));
                        break;
                    case "revisionsPassword":
                        f = toNullable(Number_$type, ST_UnsignedShortHex.d(g.d));
                        break;
                    default: break;
                }
            }
        }
        catch (e_89_1) {
            e_89 = { error: e_89_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_89)
                    throw e_89.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f
        };
    };
    SpreadsheetMLMain.aeo = function (a, b, c, d, e, f) {
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = toNullable(Number_$type, null);
        }
        if (f === void 0) {
            f = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.sq, null);
        var g;
        if (b != false) {
            g = ST_OnOff.g(b);
            a.ad.h("lockStructure", g);
        }
        if (c != false) {
            g = ST_OnOff.g(c);
            a.ad.h("lockWindows", g);
        }
        if (d != false) {
            g = ST_OnOff.g(d);
            a.ad.h("lockRevision", g);
        }
        if (nullableNotEquals(f, null)) {
            g = new ST_UnsignedShortHex(1, f.value).toString();
            a.ad.h("revisionsPassword", g);
        }
        if (nullableNotEquals(e, null)) {
            g = new ST_UnsignedShortHex(1, e.value).toString();
            a.ad.h("workbookPassword", g);
        }
    };
    SpreadsheetMLMain.y1 = function (a, b, c, d, e, f, g, h, i, j, k, l) {
        var e_90, _a;
        b = false;
        c = false;
        d = false;
        e = null;
        f = null;
        g = null;
        h = toNullable(Number_$type, null);
        i = null;
        j = null;
        k = null;
        l = toNullable(Number_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var m = _c.value;
                switch (m.a.e(a.d)) {
                    case "lockStructure":
                        b = ST_OnOff.e(m.d);
                        break;
                    case "lockWindows":
                        c = ST_OnOff.e(m.d);
                        break;
                    case "lockRevision":
                        d = ST_OnOff.e(m.d);
                        break;
                    case "revisionsAlgorithmName":
                        e = m.d;
                        break;
                    case "revisionsHashValue":
                        f = m.d;
                        break;
                    case "revisionsSaltValue":
                        g = m.d;
                        break;
                    case "revisionsSpinCount":
                        h = toNullable(Number_$type, parseUInt32_1(m.d, CultureInfo.invariantCulture));
                        break;
                    case "workbookAlgorithmName":
                        i = m.d;
                        break;
                    case "workbookHashValue":
                        j = m.d;
                        break;
                    case "workbookSaltValue":
                        k = m.d;
                        break;
                    case "workbookSpinCount":
                        l = toNullable(Number_$type, parseUInt32_1(m.d, CultureInfo.invariantCulture));
                        break;
                    default: break;
                }
            }
        }
        catch (e_90_1) {
            e_90 = { error: e_90_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_90)
                    throw e_90.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l
        };
    };
    SpreadsheetMLMain.aep = function (a, b, c, d, e, f, g, h, i, j, k, l) {
        if (b === void 0) {
            b = false;
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = false;
        }
        if (e === void 0) {
            e = null;
        }
        if (f === void 0) {
            f = null;
        }
        if (g === void 0) {
            g = null;
        }
        if (h === void 0) {
            h = toNullable(Number_$type, null);
        }
        if (i === void 0) {
            i = null;
        }
        if (j === void 0) {
            j = null;
        }
        if (k === void 0) {
            k = null;
        }
        if (l === void 0) {
            l = toNullable(Number_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.sq, null);
        var m;
        if (b != false) {
            m = ST_OnOff.g(b);
            a.ad.h("lockStructure", m);
        }
        if (c != false) {
            m = ST_OnOff.g(c);
            a.ad.h("lockWindows", m);
        }
        if (d != false) {
            m = ST_OnOff.g(d);
            a.ad.h("lockRevision", m);
        }
        if (e != null) {
            m = e;
            a.ad.h("revisionsAlgorithmName", m);
        }
        if (f != null) {
            m = f.toString();
            a.ad.h("revisionsHashValue", m);
        }
        if (g != null) {
            m = g.toString();
            a.ad.h("revisionsSaltValue", m);
        }
        if (nullableNotEquals(h, null)) {
            m = h.value.toString();
            a.ad.h("revisionsSpinCount", m);
        }
        if (i != null) {
            m = i;
            a.ad.h("workbookAlgorithmName", m);
        }
        if (j != null) {
            m = j.toString();
            a.ad.h("workbookHashValue", m);
        }
        if (k != null) {
            m = k.toString();
            a.ad.h("workbookSaltValue", m);
        }
        if (nullableNotEquals(l, null)) {
            m = l.value.toString();
            a.ad.h("workbookSpinCount", m);
        }
    };
    SpreadsheetMLMain.y2 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
        var e_91, _a;
        b = 0;
        c = false;
        d = true;
        e = true;
        f = true;
        g = toNullable(Number_$type, null);
        h = toNullable(Number_$type, null);
        i = toNullable(Number_$type, null);
        j = toNullable(Number_$type, null);
        k = 600;
        l = 0;
        m = 0;
        n = true;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var o = _c.value;
                switch (o.a.e(a.d)) {
                    case "visibility":
                        b = XmlNamespaceDefinitionBase.b(ST_Visibility_$type, o.d, b);
                        break;
                    case "minimized":
                        c = ST_OnOff.e(o.d);
                        break;
                    case "showHorizontalScroll":
                        d = ST_OnOff.e(o.d);
                        break;
                    case "showVerticalScroll":
                        e = ST_OnOff.e(o.d);
                        break;
                    case "showSheetTabs":
                        f = ST_OnOff.e(o.d);
                        break;
                    case "xWindow":
                        g = toNullable(Number_$type, parseInt32_1(o.d, CultureInfo.invariantCulture));
                        break;
                    case "yWindow":
                        h = toNullable(Number_$type, parseInt32_1(o.d, CultureInfo.invariantCulture));
                        break;
                    case "windowWidth":
                        i = toNullable(Number_$type, parseUInt32_1(o.d, CultureInfo.invariantCulture));
                        break;
                    case "windowHeight":
                        j = toNullable(Number_$type, parseUInt32_1(o.d, CultureInfo.invariantCulture));
                        break;
                    case "tabRatio":
                        k = parseUInt32_1(o.d, CultureInfo.invariantCulture);
                        break;
                    case "firstSheet":
                        l = parseUInt32_1(o.d, CultureInfo.invariantCulture);
                        break;
                    case "activeTab":
                        m = parseUInt32_1(o.d, CultureInfo.invariantCulture);
                        break;
                    case "autoFilterDateGrouping":
                        n = ST_OnOff.e(o.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_91_1) {
            e_91 = { error: e_91_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_91)
                    throw e_91.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n
        };
    };
    SpreadsheetMLMain.aeq = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
        if (b === void 0) {
            b = 0;
        }
        if (c === void 0) {
            c = false;
        }
        if (d === void 0) {
            d = true;
        }
        if (e === void 0) {
            e = true;
        }
        if (f === void 0) {
            f = true;
        }
        if (g === void 0) {
            g = toNullable(Number_$type, null);
        }
        if (h === void 0) {
            h = toNullable(Number_$type, null);
        }
        if (i === void 0) {
            i = toNullable(Number_$type, null);
        }
        if (j === void 0) {
            j = toNullable(Number_$type, null);
        }
        if (k === void 0) {
            k = 600;
        }
        if (l === void 0) {
            l = 0;
        }
        if (m === void 0) {
            m = 0;
        }
        if (n === void 0) {
            n = true;
        }
        a.ad.p(SpreadsheetMLMain.st, null);
        var o;
        if (b != 0) {
            o = XmlNamespaceDefinitionBase.p(ST_Visibility_$type, b);
            a.ad.h("visibility", o);
        }
        if (c != false) {
            o = ST_OnOff.g(c);
            a.ad.h("minimized", o);
        }
        if (d != true) {
            o = ST_OnOff.g(d);
            a.ad.h("showHorizontalScroll", o);
        }
        if (e != true) {
            o = ST_OnOff.g(e);
            a.ad.h("showVerticalScroll", o);
        }
        if (f != true) {
            o = ST_OnOff.g(f);
            a.ad.h("showSheetTabs", o);
        }
        if (nullableNotEquals(g, null)) {
            o = g.value.toString();
            a.ad.h("xWindow", o);
        }
        if (nullableNotEquals(h, null)) {
            o = h.value.toString();
            a.ad.h("yWindow", o);
        }
        if (nullableNotEquals(i, null)) {
            o = i.value.toString();
            a.ad.h("windowWidth", o);
        }
        if (nullableNotEquals(j, null)) {
            o = j.value.toString();
            a.ad.h("windowHeight", o);
        }
        if (k != 600) {
            o = k.toString();
            a.ad.h("tabRatio", o);
        }
        if (l != 0) {
            o = l.toString();
            a.ad.h("firstSheet", o);
        }
        if (m != 0) {
            o = m.toString();
            a.ad.h("activeTab", o);
        }
        if (n != true) {
            o = ST_OnOff.g(n);
            a.ad.h("autoFilterDateGrouping", o);
        }
    };
    SpreadsheetMLMain.y3 = function (a) {
    };
    SpreadsheetMLMain.aer = function (a) {
        a.ad.p(SpreadsheetMLMain.sv, null);
        var b = a.d._z;
        a.ad.l(OfficeDocumentRelationships.ao);
        a.ad.l(SpreadsheetMLMain.ap);
    };
    SpreadsheetMLMain.y4 = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
        var e_92, _a;
        b = toNullable(Number_$type, null);
        c = toNullable(Number_$type, null);
        d = toNullable(Number_$type, null);
        e = toNullable(Number_$type, null);
        f = toNullable(Number_$type, null);
        g = false;
        h = false;
        i = toNullable(Boolean_$type, null);
        j = toNullable(Boolean_$type, null);
        k = toNullable(Boolean_$type, null);
        l = toNullable(Boolean_$type, null);
        m = toNullable(Boolean_$type, null);
        n = toNullable(Boolean_$type, null);
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var o = _c.value;
                switch (o.a.e(a.d)) {
                    case "numFmtId":
                        b = toNullable(Number_$type, parseUInt32_1(o.d, CultureInfo.invariantCulture));
                        break;
                    case "fontId":
                        c = toNullable(Number_$type, parseUInt32_1(o.d, CultureInfo.invariantCulture));
                        break;
                    case "fillId":
                        d = toNullable(Number_$type, parseUInt32_1(o.d, CultureInfo.invariantCulture));
                        break;
                    case "borderId":
                        e = toNullable(Number_$type, parseUInt32_1(o.d, CultureInfo.invariantCulture));
                        break;
                    case "xfId":
                        f = toNullable(Number_$type, parseUInt32_1(o.d, CultureInfo.invariantCulture));
                        break;
                    case "quotePrefix":
                        g = ST_OnOff.e(o.d);
                        break;
                    case "pivotButton":
                        h = ST_OnOff.e(o.d);
                        break;
                    case "applyNumberFormat":
                        i = toNullable(Boolean_$type, ST_OnOff.e(o.d));
                        break;
                    case "applyFont":
                        j = toNullable(Boolean_$type, ST_OnOff.e(o.d));
                        break;
                    case "applyFill":
                        k = toNullable(Boolean_$type, ST_OnOff.e(o.d));
                        break;
                    case "applyBorder":
                        l = toNullable(Boolean_$type, ST_OnOff.e(o.d));
                        break;
                    case "applyAlignment":
                        m = toNullable(Boolean_$type, ST_OnOff.e(o.d));
                        break;
                    case "applyProtection":
                        n = toNullable(Boolean_$type, ST_OnOff.e(o.d));
                        break;
                    default: break;
                }
            }
        }
        catch (e_92_1) {
            e_92 = { error: e_92_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_92)
                    throw e_92.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e,
            p5: f,
            p6: g,
            p7: h,
            p8: i,
            p9: j,
            p10: k,
            p11: l,
            p12: m,
            p13: n
        };
    };
    SpreadsheetMLMain.aes = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
        if (b === void 0) {
            b = toNullable(Number_$type, null);
        }
        if (c === void 0) {
            c = toNullable(Number_$type, null);
        }
        if (d === void 0) {
            d = toNullable(Number_$type, null);
        }
        if (e === void 0) {
            e = toNullable(Number_$type, null);
        }
        if (f === void 0) {
            f = toNullable(Number_$type, null);
        }
        if (g === void 0) {
            g = false;
        }
        if (h === void 0) {
            h = false;
        }
        if (i === void 0) {
            i = toNullable(Boolean_$type, null);
        }
        if (j === void 0) {
            j = toNullable(Boolean_$type, null);
        }
        if (k === void 0) {
            k = toNullable(Boolean_$type, null);
        }
        if (l === void 0) {
            l = toNullable(Boolean_$type, null);
        }
        if (m === void 0) {
            m = toNullable(Boolean_$type, null);
        }
        if (n === void 0) {
            n = toNullable(Boolean_$type, null);
        }
        a.ad.p(SpreadsheetMLMain.sy, null);
        var o;
        if (nullableNotEquals(b, null)) {
            o = b.value.toString();
            a.ad.h("numFmtId", o);
        }
        if (nullableNotEquals(c, null)) {
            o = c.value.toString();
            a.ad.h("fontId", o);
        }
        if (nullableNotEquals(d, null)) {
            o = d.value.toString();
            a.ad.h("fillId", o);
        }
        if (nullableNotEquals(e, null)) {
            o = e.value.toString();
            a.ad.h("borderId", o);
        }
        if (nullableNotEquals(f, null)) {
            o = f.value.toString();
            a.ad.h("xfId", o);
        }
        if (g != false) {
            o = ST_OnOff.g(g);
            a.ad.h("quotePrefix", o);
        }
        if (h != false) {
            o = ST_OnOff.g(h);
            a.ad.h("pivotButton", o);
        }
        if (nullableNotEquals(i, null)) {
            o = ST_OnOff.g(i.value);
            a.ad.h("applyNumberFormat", o);
        }
        if (nullableNotEquals(j, null)) {
            o = ST_OnOff.g(j.value);
            a.ad.h("applyFont", o);
        }
        if (nullableNotEquals(k, null)) {
            o = ST_OnOff.g(k.value);
            a.ad.h("applyFill", o);
        }
        if (nullableNotEquals(l, null)) {
            o = ST_OnOff.g(l.value);
            a.ad.h("applyBorder", o);
        }
        if (nullableNotEquals(m, null)) {
            o = ST_OnOff.g(m.value);
            a.ad.h("applyAlignment", o);
        }
        if (nullableNotEquals(n, null)) {
            o = ST_OnOff.g(n.value);
            a.ad.h("applyProtection", o);
        }
    };
    SpreadsheetMLMain.y5 = function (a, b, c, d, e) {
        var e_93, _a;
        b = 0;
        c = null;
        e = false;
        d = null;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var f = _c.value;
                switch (f.a.e(a.d)) {
                    case "mapId":
                        b = parseUInt32_1(f.d, CultureInfo.invariantCulture);
                        break;
                    case "xpath":
                        c = f.d;
                        break;
                    case "denormalized":
                        e = ST_OnOff.e(f.d);
                        break;
                    case "xmlDataType":
                        d = f.d;
                        break;
                    default: break;
                }
            }
        }
        catch (e_93_1) {
            e_93 = { error: e_93_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_93)
                    throw e_93.error;
            }
        }
        return {
            p1: b,
            p2: c,
            p3: d,
            p4: e
        };
    };
    SpreadsheetMLMain.aet = function (a, b, c, d, e) {
        if (e === void 0) {
            e = false;
        }
        a.ad.p(SpreadsheetMLMain.s1, null);
        var f;
        f = b.toString();
        a.ad.h("mapId", f);
        f = c;
        a.ad.h("xpath", f);
        if (e != false) {
            f = ST_OnOff.g(e);
            a.ad.h("denormalized", f);
        }
        f = d;
        a.ad.h("xmlDataType", f);
    };
    SpreadsheetMLMain.$t = markType(SpreadsheetMLMain, 'SpreadsheetMLMain', XmlNamespaceDefinitionBase.$);
    SpreadsheetMLMain.lh = "http://schemas.openxmlformats.org/spreadsheetml/2006/main";
    SpreadsheetMLMain.lg = "http://purl.oclc.org/ooxml/spreadsheetml/main";
    SpreadsheetMLMain.ck = SpreadsheetMLMain.lg + "/alignment";
    SpreadsheetMLMain.cp = SpreadsheetMLMain.lg + "/anchor";
    SpreadsheetMLMain.c0 = SpreadsheetMLMain.lg + "/author";
    SpreadsheetMLMain.c2 = SpreadsheetMLMain.lg + "/authors";
    SpreadsheetMLMain.c6 = SpreadsheetMLMain.lg + "/autoFilter";
    SpreadsheetMLMain.dd = SpreadsheetMLMain.lg + "/b";
    SpreadsheetMLMain.dh = SpreadsheetMLMain.lg + "/bgColor";
    SpreadsheetMLMain.dk = SpreadsheetMLMain.lg + "/bookViews";
    SpreadsheetMLMain.dl = SpreadsheetMLMain.lg + "/border";
    SpreadsheetMLMain.dn = SpreadsheetMLMain.lg + "/borders";
    SpreadsheetMLMain.dp = SpreadsheetMLMain.lg + "/bottom";
    SpreadsheetMLMain.dr = SpreadsheetMLMain.lg + "/brk";
    SpreadsheetMLMain.du = SpreadsheetMLMain.lg + "/c";
    SpreadsheetMLMain.d1 = SpreadsheetMLMain.lg + "/calcPr";
    SpreadsheetMLMain.d2 = SpreadsheetMLMain.lg + "/calculatedColumnFormula";
    SpreadsheetMLMain.d5 = SpreadsheetMLMain.lg + "/cell";
    SpreadsheetMLMain.d8 = SpreadsheetMLMain.lg + "/cellStyle";
    SpreadsheetMLMain.d9 = SpreadsheetMLMain.lg + "/cellStyles";
    SpreadsheetMLMain.ea = SpreadsheetMLMain.lg + "/cellStyleXfs";
    SpreadsheetMLMain.eb = SpreadsheetMLMain.lg + "/cellXfs";
    SpreadsheetMLMain.eg = SpreadsheetMLMain.lg + "/cfRule";
    SpreadsheetMLMain.eh = SpreadsheetMLMain.lg + "/cfvo";
    SpreadsheetMLMain.ej = SpreadsheetMLMain.lg + "/chartsheet";
    SpreadsheetMLMain.eq = SpreadsheetMLMain.lg + "/col";
    SpreadsheetMLMain.er = SpreadsheetMLMain.lg + "/colBreaks";
    SpreadsheetMLMain.eu = SpreadsheetMLMain.lg + "/color";
    SpreadsheetMLMain.ey = SpreadsheetMLMain.lg + "/colorScale";
    SpreadsheetMLMain.ev = SpreadsheetMLMain.lg + "/colorFilter";
    SpreadsheetMLMain.ex = SpreadsheetMLMain.lg + "/colors";
    SpreadsheetMLMain.ez = SpreadsheetMLMain.lg + "/cols";
    SpreadsheetMLMain.e1 = SpreadsheetMLMain.lg + "/comment";
    SpreadsheetMLMain.e3 = SpreadsheetMLMain.lg + "/commentList";
    SpreadsheetMLMain.e4 = SpreadsheetMLMain.lg + "/comments";
    SpreadsheetMLMain.e7 = SpreadsheetMLMain.lg + "/condense";
    SpreadsheetMLMain.e8 = SpreadsheetMLMain.lg + "/conditionalFormatting";
    SpreadsheetMLMain.fd = SpreadsheetMLMain.lg + "/control";
    SpreadsheetMLMain.fe = SpreadsheetMLMain.lg + "/controlPr";
    SpreadsheetMLMain.ff = SpreadsheetMLMain.lg + "/controls";
    SpreadsheetMLMain.fk = SpreadsheetMLMain.lg + "/customFilter";
    SpreadsheetMLMain.fl = SpreadsheetMLMain.lg + "/customFilters";
    SpreadsheetMLMain.fq = SpreadsheetMLMain.lg + "/customSheetView";
    SpreadsheetMLMain.fr = SpreadsheetMLMain.lg + "/customSheetViews";
    SpreadsheetMLMain.ft = SpreadsheetMLMain.lg + "/customWorkbookView";
    SpreadsheetMLMain.fu = SpreadsheetMLMain.lg + "/customWorkbookViews";
    SpreadsheetMLMain.fv = SpreadsheetMLMain.lg + "/dataBar";
    SpreadsheetMLMain.fy = SpreadsheetMLMain.lg + "/dataValidation";
    SpreadsheetMLMain.fz = SpreadsheetMLMain.lg + "/dataValidations";
    SpreadsheetMLMain.f2 = SpreadsheetMLMain.lg + "/dateGroupItem";
    SpreadsheetMLMain.f5 = SpreadsheetMLMain.lg + "/ddeItem";
    SpreadsheetMLMain.f6 = SpreadsheetMLMain.lg + "/ddeItems";
    SpreadsheetMLMain.f7 = SpreadsheetMLMain.lg + "/ddeLink";
    SpreadsheetMLMain.gh = SpreadsheetMLMain.lg + "/definedName";
    SpreadsheetMLMain.gi = SpreadsheetMLMain.lg + "/definedNames";
    SpreadsheetMLMain.gr = SpreadsheetMLMain.lg + "/diagonal";
    SpreadsheetMLMain.gw = SpreadsheetMLMain.lg + "/dimension";
    SpreadsheetMLMain.g2 = SpreadsheetMLMain.lg + "/drawing";
    SpreadsheetMLMain.g3 = SpreadsheetMLMain.lg + "/drawingHF";
    SpreadsheetMLMain.g6 = SpreadsheetMLMain.lg + "/dxf";
    SpreadsheetMLMain.g8 = SpreadsheetMLMain.lg + "/dxfs";
    SpreadsheetMLMain.g9 = SpreadsheetMLMain.lg + "/dynamicFilter";
    SpreadsheetMLMain.hb = SpreadsheetMLMain.lg + "/end";
    SpreadsheetMLMain.hi = SpreadsheetMLMain.lg + "/evenFooter";
    SpreadsheetMLMain.hj = SpreadsheetMLMain.lg + "/evenHeader";
    SpreadsheetMLMain.hk = SpreadsheetMLMain.lg + "/ext";
    SpreadsheetMLMain.hl = SpreadsheetMLMain.lg + "/extend";
    SpreadsheetMLMain.hm = SpreadsheetMLMain.lg + "/externalBook";
    SpreadsheetMLMain.hn = SpreadsheetMLMain.lg + "/externalLink";
    SpreadsheetMLMain.ho = SpreadsheetMLMain.lg + "/externalReference";
    SpreadsheetMLMain.hp = SpreadsheetMLMain.lg + "/externalReferences";
    SpreadsheetMLMain.hq = SpreadsheetMLMain.lg + "/extLst";
    SpreadsheetMLMain.hr = SpreadsheetMLMain.lg + "/f";
    SpreadsheetMLMain.hs = SpreadsheetMLMain.lg + "/family";
    SpreadsheetMLMain.ht = SpreadsheetMLMain.lg + "/fgColor";
    SpreadsheetMLMain.hu = SpreadsheetMLMain.lg + "/fileSharing";
    SpreadsheetMLMain.hv = SpreadsheetMLMain.lg + "/fileVersion";
    SpreadsheetMLMain.hw = SpreadsheetMLMain.lg + "/fill";
    SpreadsheetMLMain.hy = SpreadsheetMLMain.lg + "/fills";
    SpreadsheetMLMain.hz = SpreadsheetMLMain.lg + "/filter";
    SpreadsheetMLMain.h1 = SpreadsheetMLMain.lg + "/filterColumn";
    SpreadsheetMLMain.h4 = SpreadsheetMLMain.lg + "/filters";
    SpreadsheetMLMain.h7 = SpreadsheetMLMain.lg + "/firstFooter";
    SpreadsheetMLMain.h8 = SpreadsheetMLMain.lg + "/firstHeader";
    SpreadsheetMLMain.ie = SpreadsheetMLMain.lg + "/font";
    SpreadsheetMLMain.ih = SpreadsheetMLMain.lg + "/fonts";
    SpreadsheetMLMain.ik = SpreadsheetMLMain.lg + "/format";
    SpreadsheetMLMain.iq = SpreadsheetMLMain.lg + "/formats";
    SpreadsheetMLMain.ir = SpreadsheetMLMain.lg + "/formula";
    SpreadsheetMLMain.is = SpreadsheetMLMain.lg + "/formula1";
    SpreadsheetMLMain.it = SpreadsheetMLMain.lg + "/formula2";
    SpreadsheetMLMain.iy = SpreadsheetMLMain.lg + "/gradientFill";
    SpreadsheetMLMain.i5 = SpreadsheetMLMain.lg + "/headerFooter";
    SpreadsheetMLMain.jh = SpreadsheetMLMain.lg + "/horizontal";
    SpreadsheetMLMain.jn = SpreadsheetMLMain.lg + "/hyperlink";
    SpreadsheetMLMain.jo = SpreadsheetMLMain.lg + "/hyperlinks";
    SpreadsheetMLMain.jp = SpreadsheetMLMain.lg + "/i";
    SpreadsheetMLMain.jr = SpreadsheetMLMain.lg + "/iconFilter";
    SpreadsheetMLMain.jt = SpreadsheetMLMain.lg + "/iconSet";
    SpreadsheetMLMain.j2 = SpreadsheetMLMain.lg + "/indexedColors";
    SpreadsheetMLMain.b8 = SpreadsheetMLMain.lg + "/is";
    SpreadsheetMLMain.kd = SpreadsheetMLMain.lg + "/left";
    SpreadsheetMLMain.kf = SpreadsheetMLMain.lg + "/legacyDrawing";
    SpreadsheetMLMain.kg = SpreadsheetMLMain.lg + "/legacyDrawingHF";
    SpreadsheetMLMain.k5 = SpreadsheetMLMain.lg + "/mergeCell";
    SpreadsheetMLMain.k6 = SpreadsheetMLMain.lg + "/mergeCells";
    SpreadsheetMLMain.le = SpreadsheetMLMain.lg + "/name";
    SpreadsheetMLMain.li = SpreadsheetMLMain.lg + "/numFmt";
    SpreadsheetMLMain.lk = SpreadsheetMLMain.lg + "/numFmts";
    SpreadsheetMLMain.lm = SpreadsheetMLMain.lg + "/oddFooter";
    SpreadsheetMLMain.ln = SpreadsheetMLMain.lg + "/oddHeader";
    SpreadsheetMLMain.lp = SpreadsheetMLMain.lg + "/oleItem";
    SpreadsheetMLMain.lq = SpreadsheetMLMain.lg + "/oleItems";
    SpreadsheetMLMain.lr = SpreadsheetMLMain.lg + "/oleLink";
    SpreadsheetMLMain.lv = SpreadsheetMLMain.lg + "/outline";
    SpreadsheetMLMain.l0 = SpreadsheetMLMain.lg + "/outlinePr";
    SpreadsheetMLMain.l2 = SpreadsheetMLMain.lg + "/pageMargins";
    SpreadsheetMLMain.l4 = SpreadsheetMLMain.lg + "/pageSetup";
    SpreadsheetMLMain.l5 = SpreadsheetMLMain.lg + "/pageSetUpPr";
    SpreadsheetMLMain.l6 = SpreadsheetMLMain.lg + "/pane";
    SpreadsheetMLMain.mc = SpreadsheetMLMain.lg + "/patternFill";
    SpreadsheetMLMain.mi = SpreadsheetMLMain.lg + "/picture";
    SpreadsheetMLMain.ml = SpreadsheetMLMain.lg + "/pivotCache";
    SpreadsheetMLMain.mm = SpreadsheetMLMain.lg + "/pivotCaches";
    SpreadsheetMLMain.mn = SpreadsheetMLMain.lg + "/pivotTableDefinition";
    SpreadsheetMLMain.mt = SpreadsheetMLMain.lg + "/printOptions";
    SpreadsheetMLMain.mz = SpreadsheetMLMain.lg + "/protectedRange";
    SpreadsheetMLMain.m0 = SpreadsheetMLMain.lg + "/protectedRanges";
    SpreadsheetMLMain.m1 = SpreadsheetMLMain.lg + "/protection";
    SpreadsheetMLMain.m8 = SpreadsheetMLMain.lg + "/r";
    SpreadsheetMLMain.nw = SpreadsheetMLMain.lg + "/rFont";
    SpreadsheetMLMain.ny = SpreadsheetMLMain.lg + "/rgbColor";
    SpreadsheetMLMain.n2 = SpreadsheetMLMain.lg + "/right";
    SpreadsheetMLMain.n5 = SpreadsheetMLMain.lg + "/row";
    SpreadsheetMLMain.n6 = SpreadsheetMLMain.lg + "/rowBreaks";
    SpreadsheetMLMain.n7 = SpreadsheetMLMain.lg + "/rPr";
    SpreadsheetMLMain.of = SpreadsheetMLMain.lg + "/scheme";
    SpreadsheetMLMain.oi = SpreadsheetMLMain.lg + "/selection";
    SpreadsheetMLMain.on = SpreadsheetMLMain.lg + "/sheet";
    SpreadsheetMLMain.op = SpreadsheetMLMain.lg + "/sheetCalcPr";
    SpreadsheetMLMain.oq = SpreadsheetMLMain.lg + "/sheetData";
    SpreadsheetMLMain.or = SpreadsheetMLMain.lg + "/sheetDataSet";
    SpreadsheetMLMain.os = SpreadsheetMLMain.lg + "/sheetFormatPr";
    SpreadsheetMLMain.ou = SpreadsheetMLMain.lg + "/sheetName";
    SpreadsheetMLMain.ov = SpreadsheetMLMain.lg + "/sheetNames";
    SpreadsheetMLMain.ow = SpreadsheetMLMain.lg + "/sheetPr";
    SpreadsheetMLMain.ox = SpreadsheetMLMain.lg + "/sheetProtection";
    SpreadsheetMLMain.oy = SpreadsheetMLMain.lg + "/sheets";
    SpreadsheetMLMain.oz = SpreadsheetMLMain.lg + "/sheetView";
    SpreadsheetMLMain.o0 = SpreadsheetMLMain.lg + "/sheetViews";
    SpreadsheetMLMain.ol = SpreadsheetMLMain.lg + "/shadow";
    SpreadsheetMLMain.pw = SpreadsheetMLMain.lg + "/si";
    SpreadsheetMLMain.p2 = SpreadsheetMLMain.lg + "/sortCondition";
    SpreadsheetMLMain.p4 = SpreadsheetMLMain.lg + "/sortState";
    SpreadsheetMLMain.p8 = SpreadsheetMLMain.lg + "/sst";
    SpreadsheetMLMain.p9 = SpreadsheetMLMain.lg + "/start";
    SpreadsheetMLMain.qd = SpreadsheetMLMain.lg + "/stop";
    SpreadsheetMLMain.qf = SpreadsheetMLMain.lg + "/strike";
    SpreadsheetMLMain.qh = SpreadsheetMLMain.lg + "/styleSheet";
    SpreadsheetMLMain.qn = SpreadsheetMLMain.lg + "/sz";
    SpreadsheetMLMain.qo = SpreadsheetMLMain.lg + "/t";
    SpreadsheetMLMain.qq = SpreadsheetMLMain.lg + "/tabColor";
    SpreadsheetMLMain.qr = SpreadsheetMLMain.lg + "/table";
    SpreadsheetMLMain.qu = SpreadsheetMLMain.lg + "/tableColumn";
    SpreadsheetMLMain.qv = SpreadsheetMLMain.lg + "/tableColumns";
    SpreadsheetMLMain.qw = SpreadsheetMLMain.lg + "/tablePart";
    SpreadsheetMLMain.qx = SpreadsheetMLMain.lg + "/tableParts";
    SpreadsheetMLMain.qy = SpreadsheetMLMain.lg + "/tableStyle";
    SpreadsheetMLMain.qz = SpreadsheetMLMain.lg + "/tableStyleElement";
    SpreadsheetMLMain.q0 = SpreadsheetMLMain.lg + "/tableStyleInfo";
    SpreadsheetMLMain.q1 = SpreadsheetMLMain.lg + "/tableStyles";
    SpreadsheetMLMain.q5 = SpreadsheetMLMain.lg + "/text";
    SpreadsheetMLMain.rf = SpreadsheetMLMain.lg + "/top";
    SpreadsheetMLMain.rh = SpreadsheetMLMain.lg + "/top10";
    SpreadsheetMLMain.rn = SpreadsheetMLMain.lg + "/totalsRowFormula";
    SpreadsheetMLMain.ru = SpreadsheetMLMain.lg + "/u";
    SpreadsheetMLMain.r4 = SpreadsheetMLMain.lg + "/v";
    SpreadsheetMLMain.r8 = SpreadsheetMLMain.lg + "/vertAlign";
    SpreadsheetMLMain.r9 = SpreadsheetMLMain.lg + "/vertical";
    SpreadsheetMLMain.sk = SpreadsheetMLMain.lg + "/workbook";
    SpreadsheetMLMain.sp = SpreadsheetMLMain.lg + "/workbookPr";
    SpreadsheetMLMain.sq = SpreadsheetMLMain.lg + "/workbookProtection";
    SpreadsheetMLMain.st = SpreadsheetMLMain.lg + "/workbookView";
    SpreadsheetMLMain.sv = SpreadsheetMLMain.lg + "/worksheet";
    SpreadsheetMLMain.sy = SpreadsheetMLMain.lg + "/xf";
    SpreadsheetMLMain.s1 = SpreadsheetMLMain.lg + "/xmlColumnPr";
    SpreadsheetMLMain.ap = new SpreadsheetMLMain();
    return SpreadsheetMLMain;
}(XmlNamespaceDefinitionBase));
export { SpreadsheetMLMain };
