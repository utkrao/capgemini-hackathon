/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, toNullable, markType } from "igniteui-react-core";
import { Guid } from "igniteui-react-core";
import { DocCoreUtils } from "./DocCoreUtils";
/**
 * @hidden
 */
var ExcelImage = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ExcelImage, _super);
    function ExcelImage(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.c = null;
        _this.g = 0;
        _this.f = 0;
        _this.e = false;
        _this.h = toNullable(Guid.$, null);
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    var f = _rest[3];
                    var g = _rest[4];
                    var h = _rest[5];
                    var i = [c, d];
                    {
                        var k = i[0];
                        var l = i[1];
                        _this.c = k;
                        _this.a = DocCoreUtils.c(l);
                    }
                    _this.g = e;
                    _this.f = f;
                    _this.e = g;
                    _this.h = toNullable(Guid.$, h);
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    _this.c = c;
                    _this.a = DocCoreUtils.c(d);
                }
                break;
        }
        return _this;
    }
    Object.defineProperty(ExcelImage.prototype, "b", {
        get: function () {
            return this.a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExcelImage.prototype, "d", {
        get: function () {
            return this.c;
        },
        enumerable: false,
        configurable: true
    });
    ExcelImage.prototype.i = function (a, b) {
        a.write(this.a, 0, this.a.length);
    };
    ExcelImage.$t = markType(ExcelImage, 'ExcelImage');
    return ExcelImage;
}(Base));
export { ExcelImage };
