/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ValueType, toNullable, typeCast, markStruct } from "igniteui-react-core";
import { nullableEquals } from "igniteui-react-core";
/**
 * @hidden
 */
var WhitespaceId = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WhitespaceId, _super);
    function WhitespaceId(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this.b = 0;
        _this.a = 0;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0: break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    _this.b = d;
                    _this.a = c;
                }
                break;
        }
        return _this;
    }
    WhitespaceId.prototype.equals = function (a) {
        var b = toNullable(WhitespaceId.$, typeCast(WhitespaceId.$, a));
        if (nullableEquals(b, null)) {
            return false;
        }
        return b.getValueOrDefault().b == this.b && b.getValueOrDefault().a == this.a;
    };
    WhitespaceId.prototype.getHashCode = function () {
        return this.b << 8 | this.a;
    };
    WhitespaceId.$t = markStruct(WhitespaceId, 'WhitespaceId');
    return WhitespaceId;
}(ValueType));
export { WhitespaceId };
