/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "igniteui-react-core";
import { RelativeIndex } from "./RelativeIndex";
/**
 * @hidden
 */
var TableColumnFilterData = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(TableColumnFilterData, _super);
    function TableColumnFilterData(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this.f = null;
        _this.b = null;
        _this.a = null;
        _this.c = null;
        _this.d = false;
        _this.e = false;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = [c, d.filter];
                    {
                        var g = e[0];
                        var h = e[1];
                        _this.b = new RelativeIndex(g);
                        _this.a = h;
                        if (_this.a == null) {
                            _this.e = false;
                            return _this;
                        }
                        var i_1;
                        var j_1;
                        _this.e = ((function () { var k = _this.a._g(i_1, j_1); i_1 = k.p0; j_1 = k.p1; return k.ret; })());
                        _this.d = i_1;
                        _this.f = j_1;
                    }
                    _this.c = d;
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    _this.b = new RelativeIndex(c);
                    _this.a = d;
                    if (_this.a == null) {
                        _this.e = false;
                        return _this;
                    }
                    var e_1;
                    var f_1;
                    _this.e = ((function () { var g = _this.a._g(e_1, f_1); e_1 = g.p0; f_1 = g.p1; return g.ret; })());
                    _this.d = e_1;
                    _this.f = f_1;
                }
                break;
        }
        return _this;
    }
    TableColumnFilterData.$t = markType(TableColumnFilterData, 'TableColumnFilterData');
    return TableColumnFilterData;
}(Base));
export { TableColumnFilterData };
