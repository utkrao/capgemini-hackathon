/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { XmlNamespaceDefinitionBase } from "./XmlNamespaceDefinitionBase";
import { ST_TrueFalseBlank } from "./ST_TrueFalseBlank";
import { ST_CF_$type } from "./ST_CF";
import { ST_ObjectType_$type } from "./ST_ObjectType";
import { markType } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
var ExcelNamespace = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ExcelNamespace, _super);
    function ExcelNamespace() {
        return _super.call(this) || this;
    }
    ExcelNamespace.prototype.s = function (a) {
        switch (a) {
            case 0:
            case 1: return "urn:schemas-microsoft-com:office:excel";
            default: return "urn:schemas-microsoft-com:office:excel";
        }
    };
    ExcelNamespace.prototype.get_t = function () {
        return "x";
    };
    Object.defineProperty(ExcelNamespace.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    ExcelNamespace.dn = function (a, b, c) {
        c = ST_TrueFalseBlank.d(a.ab.ad);
        return {
            p2: c
        };
    };
    ExcelNamespace.e8 = function (a, b, c, d) {
        a.ad.p(b, c);
        var e = ST_TrueFalseBlank.f(d);
        if (stringIsNullOrEmpty(e) == false) {
            a.ad.u(e);
        }
    };
    ExcelNamespace.cb = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, ExcelNamespace.aq);
        return {
            p1: b
        };
    };
    ExcelNamespace.dw = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, ExcelNamespace.aq, "x", b);
    };
    ExcelNamespace.cc = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.ar, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.dx = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.ar, "x", b);
    };
    ExcelNamespace.cd = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.as, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.dy = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.as, "x", b);
    };
    ExcelNamespace.ce = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.at, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.dz = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.at, "x", b);
    };
    ExcelNamespace.cf = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.au, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.d0 = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.au, "x", b);
    };
    ExcelNamespace.cg = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.av, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.d1 = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.av, "x", b);
    };
    ExcelNamespace.ch = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.aw, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.d2 = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.aw, "x", b);
    };
    ExcelNamespace.ci = function (a, b) {
        b = XmlNamespaceDefinitionBase.b(ST_CF_$type, a.ab.ad);
        return {
            p1: b
        };
    };
    ExcelNamespace.d3 = function (a, b) {
        a.ad.p(ExcelNamespace.ax, "x");
        a.ad.u(XmlNamespaceDefinitionBase.p(ST_CF_$type, b));
    };
    ExcelNamespace.cj = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, ExcelNamespace.ay);
        return {
            p1: b
        };
    };
    ExcelNamespace.d4 = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, ExcelNamespace.ay, "x", b);
    };
    ExcelNamespace.ck = function (a, b) {
        b = 0;
        var c = a.ao("ObjectType");
        if (c != null) {
            b = XmlNamespaceDefinitionBase.b(ST_ObjectType_$type, c, b);
        }
        return {
            p1: b
        };
    };
    ExcelNamespace.d5 = function (a, b) {
        a.ad.p(ExcelNamespace.az, "x");
        var c;
        c = XmlNamespaceDefinitionBase.p(ST_ObjectType_$type, b);
        a.ad.h("ObjectType", c);
    };
    ExcelNamespace.cl = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.a0, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.d6 = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.a0, "x", b);
    };
    ExcelNamespace.cm = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.a1, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.d7 = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.a1, "x", b);
    };
    ExcelNamespace.cn = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, ExcelNamespace.a2);
        return {
            p1: b
        };
    };
    ExcelNamespace.d8 = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, ExcelNamespace.a2, "x", b);
    };
    ExcelNamespace.co = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.a3, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.d9 = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.a3, "x", b);
    };
    ExcelNamespace.cp = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.a4, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.ea = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.a4, "x", b);
    };
    ExcelNamespace.cq = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.a5, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.eb = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.a5, "x", b);
    };
    ExcelNamespace.cr = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.a6, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.ec = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.a6, "x", b);
    };
    ExcelNamespace.cs = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.a7, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.ed = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.a7, "x", b);
    };
    ExcelNamespace.ct = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, ExcelNamespace.a8, false);
        return {
            p1: b
        };
    };
    ExcelNamespace.ee = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, ExcelNamespace.a8, "x", b);
    };
    ExcelNamespace.cu = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, ExcelNamespace.a9);
        return {
            p1: b
        };
    };
    ExcelNamespace.ef = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, ExcelNamespace.a9, "x", b);
    };
    ExcelNamespace.cv = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, ExcelNamespace.ba, false);
        return {
            p1: b
        };
    };
    ExcelNamespace.eg = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, ExcelNamespace.ba, "x", b);
    };
    ExcelNamespace.cw = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.bb, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.eh = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.bb, "x", b);
    };
    ExcelNamespace.cx = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, ExcelNamespace.bc);
        return {
            p1: b
        };
    };
    ExcelNamespace.ei = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, ExcelNamespace.bc, "x", b);
    };
    ExcelNamespace.cy = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, ExcelNamespace.bd);
        return {
            p1: b
        };
    };
    ExcelNamespace.ej = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, ExcelNamespace.bd, "x", b);
    };
    ExcelNamespace.cz = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, ExcelNamespace.be);
        return {
            p1: b
        };
    };
    ExcelNamespace.ek = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, ExcelNamespace.be, "x", b);
    };
    ExcelNamespace.c0 = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.bf, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.el = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.bf, "x", b);
    };
    ExcelNamespace.c1 = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.bg, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.em = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.bg, "x", b);
    };
    ExcelNamespace.c2 = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, ExcelNamespace.bh, false);
        return {
            p1: b
        };
    };
    ExcelNamespace.en = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, ExcelNamespace.bh, "x", b);
    };
    ExcelNamespace.c3 = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.bi, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.eo = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.bi, "x", b);
    };
    ExcelNamespace.c4 = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, ExcelNamespace.bj);
        return {
            p1: b
        };
    };
    ExcelNamespace.ep = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, ExcelNamespace.bj, "x", b);
    };
    ExcelNamespace.c6 = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.bl, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.er = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.bl, "x", b);
    };
    ExcelNamespace.c5 = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.bk, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.eq = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.bk, "x", b);
    };
    ExcelNamespace.c7 = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.bm, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.es = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.bm, "x", b);
    };
    ExcelNamespace.c8 = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, ExcelNamespace.bn, false);
        return {
            p1: b
        };
    };
    ExcelNamespace.et = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, ExcelNamespace.bn, "x", b);
    };
    ExcelNamespace.c9 = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, ExcelNamespace.bo, false);
        return {
            p1: b
        };
    };
    ExcelNamespace.eu = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, ExcelNamespace.bo, "x", b);
    };
    ExcelNamespace.da = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.bp, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.ev = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.bp, "x", b);
    };
    ExcelNamespace.db = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.bq, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.ew = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.bq, "x", b);
    };
    ExcelNamespace.dd = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.bs, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.ey = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.bs, "x", b);
    };
    ExcelNamespace.dc = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.bt, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.ex = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.bt, "x", b);
    };
    ExcelNamespace.de = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, ExcelNamespace.bv, false);
        return {
            p1: b
        };
    };
    ExcelNamespace.ez = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, ExcelNamespace.bv, "x", b);
    };
    ExcelNamespace.df = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.bw, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.e0 = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.bw, "x", b);
    };
    ExcelNamespace.dg = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.bx, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.e1 = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.bx, "x", b);
    };
    ExcelNamespace.dh = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, ExcelNamespace.by);
        return {
            p1: b
        };
    };
    ExcelNamespace.e2 = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, ExcelNamespace.by, "x", b);
    };
    ExcelNamespace.di = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.bz, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.e3 = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.bz, "x", b);
    };
    ExcelNamespace.dj = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.b0, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.e4 = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.b0, "x", b);
    };
    ExcelNamespace.dk = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, ExcelNamespace.b1, false);
        return {
            p1: b
        };
    };
    ExcelNamespace.e5 = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, ExcelNamespace.b1, "x", b);
    };
    ExcelNamespace.dl = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, ExcelNamespace.b2);
        return {
            p1: b
        };
    };
    ExcelNamespace.e6 = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, ExcelNamespace.b2, "x", b);
    };
    ExcelNamespace.dm = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.b3, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.e7 = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.b3, "x", b);
    };
    ExcelNamespace.dp = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, ExcelNamespace.b4);
        return {
            p1: b
        };
    };
    ExcelNamespace.e9 = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, ExcelNamespace.b4, "x", b);
    };
    ExcelNamespace.dq = function (a, b) {
        b = XmlNamespaceDefinitionBase.u(a, ExcelNamespace.b5);
        return {
            p1: b
        };
    };
    ExcelNamespace.fa = function (a, b) {
        XmlNamespaceDefinitionBase.aj(a, ExcelNamespace.b5, "x", b);
    };
    ExcelNamespace.dr = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.b6, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.fb = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.b6, "x", b);
    };
    ExcelNamespace.dv = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.ca, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.ff = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.ca, "x", b);
    };
    ExcelNamespace.dt = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.b8, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.fd = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.b8, "x", b);
    };
    ExcelNamespace.ds = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, ExcelNamespace.b7, false);
        return {
            p1: b
        };
    };
    ExcelNamespace.fc = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, ExcelNamespace.b7, "x", b);
    };
    ExcelNamespace.du = function (a, b) {
        var c = ExcelNamespace.dn(a, ExcelNamespace.b9, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    ExcelNamespace.fe = function (a, b) {
        ExcelNamespace.e8(a, ExcelNamespace.b9, "x", b);
    };
    ExcelNamespace.$t = markType(ExcelNamespace, 'ExcelNamespace', XmlNamespaceDefinitionBase.$);
    ExcelNamespace.aq = "urn:schemas-microsoft-com:office:excel" + "/Anchor";
    ExcelNamespace.ar = "urn:schemas-microsoft-com:office:excel" + "/AutoFill";
    ExcelNamespace.as = "urn:schemas-microsoft-com:office:excel" + "/AutoLine";
    ExcelNamespace.at = "urn:schemas-microsoft-com:office:excel" + "/AutoPict";
    ExcelNamespace.au = "urn:schemas-microsoft-com:office:excel" + "/AutoScale";
    ExcelNamespace.av = "urn:schemas-microsoft-com:office:excel" + "/Camera";
    ExcelNamespace.aw = "urn:schemas-microsoft-com:office:excel" + "/Cancel";
    ExcelNamespace.ax = "urn:schemas-microsoft-com:office:excel" + "/CF";
    ExcelNamespace.ay = "urn:schemas-microsoft-com:office:excel" + "/Checked";
    ExcelNamespace.az = "urn:schemas-microsoft-com:office:excel" + "/ClientData";
    ExcelNamespace.a0 = "urn:schemas-microsoft-com:office:excel" + "/ColHidden";
    ExcelNamespace.a1 = "urn:schemas-microsoft-com:office:excel" + "/Colored";
    ExcelNamespace.a2 = "urn:schemas-microsoft-com:office:excel" + "/Column";
    ExcelNamespace.a3 = "urn:schemas-microsoft-com:office:excel" + "/DDE";
    ExcelNamespace.a4 = "urn:schemas-microsoft-com:office:excel" + "/Default";
    ExcelNamespace.a5 = "urn:schemas-microsoft-com:office:excel" + "/DefaultSize";
    ExcelNamespace.a6 = "urn:schemas-microsoft-com:office:excel" + "/Disabled";
    ExcelNamespace.a7 = "urn:schemas-microsoft-com:office:excel" + "/Dismiss";
    ExcelNamespace.a8 = "urn:schemas-microsoft-com:office:excel" + "/DropLines";
    ExcelNamespace.a9 = "urn:schemas-microsoft-com:office:excel" + "/DropStyle";
    ExcelNamespace.ba = "urn:schemas-microsoft-com:office:excel" + "/Dx";
    ExcelNamespace.bb = "urn:schemas-microsoft-com:office:excel" + "/FirstButton";
    ExcelNamespace.bc = "urn:schemas-microsoft-com:office:excel" + "/FmlaLink";
    ExcelNamespace.bd = "urn:schemas-microsoft-com:office:excel" + "/FmlaMacro";
    ExcelNamespace.be = "urn:schemas-microsoft-com:office:excel" + "/FmlaRange";
    ExcelNamespace.bf = "urn:schemas-microsoft-com:office:excel" + "/Help";
    ExcelNamespace.bg = "urn:schemas-microsoft-com:office:excel" + "/Horiz";
    ExcelNamespace.bh = "urn:schemas-microsoft-com:office:excel" + "/Inc";
    ExcelNamespace.bi = "urn:schemas-microsoft-com:office:excel" + "/JustLastX";
    ExcelNamespace.bj = "urn:schemas-microsoft-com:office:excel" + "/LCT";
    ExcelNamespace.bl = "urn:schemas-microsoft-com:office:excel" + "/LockText";
    ExcelNamespace.bk = "urn:schemas-microsoft-com:office:excel" + "/Locked";
    ExcelNamespace.bo = "urn:schemas-microsoft-com:office:excel" + "/Min";
    ExcelNamespace.bm = "urn:schemas-microsoft-com:office:excel" + "/MapOCX";
    ExcelNamespace.bn = "urn:schemas-microsoft-com:office:excel" + "/Max";
    ExcelNamespace.bp = "urn:schemas-microsoft-com:office:excel" + "/MoveWithCells";
    ExcelNamespace.bq = "urn:schemas-microsoft-com:office:excel" + "/MultiLine";
    ExcelNamespace.bs = "urn:schemas-microsoft-com:office:excel" + "/NoThreeD";
    ExcelNamespace.bt = "urn:schemas-microsoft-com:office:excel" + "/NoThreeD2";
    ExcelNamespace.bv = "urn:schemas-microsoft-com:office:excel" + "/Page";
    ExcelNamespace.bw = "urn:schemas-microsoft-com:office:excel" + "/PrintObject";
    ExcelNamespace.bx = "urn:schemas-microsoft-com:office:excel" + "/RecalcAlways";
    ExcelNamespace.by = "urn:schemas-microsoft-com:office:excel" + "/Row";
    ExcelNamespace.bz = "urn:schemas-microsoft-com:office:excel" + "/RowHidden";
    ExcelNamespace.b0 = "urn:schemas-microsoft-com:office:excel" + "/SecretEdit";
    ExcelNamespace.b1 = "urn:schemas-microsoft-com:office:excel" + "/Sel";
    ExcelNamespace.b2 = "urn:schemas-microsoft-com:office:excel" + "/SelType";
    ExcelNamespace.b3 = "urn:schemas-microsoft-com:office:excel" + "/SizeWithCells";
    ExcelNamespace.b4 = "urn:schemas-microsoft-com:office:excel" + "/TextHAlign";
    ExcelNamespace.b5 = "urn:schemas-microsoft-com:office:excel" + "/TextVAlign";
    ExcelNamespace.b6 = "urn:schemas-microsoft-com:office:excel" + "/UIObj";
    ExcelNamespace.ca = "urn:schemas-microsoft-com:office:excel" + "/VScroll";
    ExcelNamespace.b7 = "urn:schemas-microsoft-com:office:excel" + "/Val";
    ExcelNamespace.b8 = "urn:schemas-microsoft-com:office:excel" + "/ValidIds";
    ExcelNamespace.b9 = "urn:schemas-microsoft-com:office:excel" + "/Visible";
    ExcelNamespace.ao = new ExcelNamespace();
    return ExcelNamespace;
}(XmlNamespaceDefinitionBase));
export { ExcelNamespace };
