/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ValueType, toNullable, typeCast, markStruct } from "igniteui-react-core";
import { DocCoreUtils } from "./DocCoreUtils";
/**
 * @hidden
 */
var ST_HexColorAuto = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ST_HexColorAuto, _super);
    function ST_HexColorAuto() {
        return _super.call(this) || this;
    }
    ST_HexColorAuto.prototype.equals = function (a) {
        var b = toNullable(ST_HexColorAuto.$, typeCast(ST_HexColorAuto.$, a));
        if (ST_HexColorAuto.f(b, toNullable(ST_HexColorAuto.$, null))) {
            return false;
        }
        return ST_HexColorAuto.c(this, b.getValueOrDefault());
    };
    ST_HexColorAuto.prototype.getHashCode = function () {
        return 0;
    };
    ST_HexColorAuto.b = function (a) {
        var b = ST_HexColorAuto.i(a);
        if (ST_HexColorAuto.f(b, toNullable(ST_HexColorAuto.$, null))) {
            return b.getValueOrDefault();
        }
        throw DocCoreUtils.n(ST_HexColorAuto.$, a);
    };
    ST_HexColorAuto.i = function (a) {
        if (a == "auto") {
            return toNullable(ST_HexColorAuto.$, ST_HexColorAuto.a);
        }
        return toNullable(ST_HexColorAuto.$, null);
    };
    ST_HexColorAuto.prototype.toString = function () {
        return "auto";
    };
    ST_HexColorAuto.c = function (a, b) {
        return true;
    };
    ST_HexColorAuto.d = function (a, b) {
        if (!a.hasValue) {
            return !b.hasValue;
        }
        else if (!b.hasValue) {
            return false;
        }
        return ST_HexColorAuto.c(a.value, b.value);
    };
    ST_HexColorAuto.e = function (a, b) {
        return false;
    };
    ST_HexColorAuto.f = function (a, b) {
        if (!a.hasValue) {
            return b.hasValue;
        }
        else if (!b.hasValue) {
            return true;
        }
        return ST_HexColorAuto.e(a.value, b.value);
    };
    ST_HexColorAuto.$t = markStruct(ST_HexColorAuto, 'ST_HexColorAuto');
    ST_HexColorAuto.a = new ST_HexColorAuto();
    return ST_HexColorAuto;
}(ValueType));
export { ST_HexColorAuto };
