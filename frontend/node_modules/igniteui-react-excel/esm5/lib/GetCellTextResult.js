/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ValueType, markStruct } from "igniteui-react-core";
/**
 * @hidden
 */
var GetCellTextResult = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(GetCellTextResult, _super);
    function GetCellTextResult(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this.j = null;
        _this.e = 0;
        _this.a = 0;
        _this.h = null;
        _this.b = 0;
        _this.g = 0;
        _this.f = 0;
        _this.i = null;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0: break;
            case 1:
                {
                    var c = _rest[0];
                    _this.j = c;
                    _this.e = NaN;
                    _this.a = 3;
                    _this.h = null;
                    _this.b = 0;
                    _this.g = -1;
                    _this.f = 0;
                    _this.i = null;
                }
                break;
        }
        return _this;
    }
    Object.defineProperty(GetCellTextResult.prototype, "c", {
        get: function () {
            return this.a == 1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GetCellTextResult.prototype, "d", {
        get: function () {
            return this.a == 2;
        },
        enumerable: false,
        configurable: true
    });
    GetCellTextResult.$t = markStruct(GetCellTextResult, 'GetCellTextResult');
    return GetCellTextResult;
}(ValueType));
export { GetCellTextResult };
