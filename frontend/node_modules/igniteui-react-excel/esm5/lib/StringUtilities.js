/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, callStaticConstructors, markType } from "igniteui-react-core";
import { StringComparer } from "igniteui-react-core";
import { stringCompare2 } from "igniteui-react-core";
/**
 * @hidden
 */
var StringUtilities = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StringUtilities, _super);
    function StringUtilities() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StringUtilities.staticInit = function () {
        var a = "This\r\nThat";
        StringUtilities.a = a.indexOf("\n") > 0;
    };
    Object.defineProperty(StringUtilities, "j", {
        get: function () {
            return 3;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StringUtilities, "f", {
        get: function () {
            return StringComparer.e;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StringUtilities, "i", {
        get: function () {
            return 2;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StringUtilities, "e", {
        get: function () {
            return StringComparer.d;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StringUtilities, "g", {
        get: function () {
            return StringComparer.f;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StringUtilities, "h", {
        get: function () {
            return StringComparer.g;
        },
        enumerable: false,
        configurable: true
    });
    StringUtilities.d = function (a, b, c, d) {
        return stringCompare2(a, b, c, d);
    };
    StringUtilities.b = function (a, b) {
        return a.toLowerCase();
    };
    StringUtilities.c = function (a, b) {
        return a.toUpperCase();
    };
    StringUtilities.$t = markType(StringUtilities, 'StringUtilities');
    StringUtilities.a = false;
    return StringUtilities;
}(Base));
export { StringUtilities };
(function (v) { callStaticConstructors(); })(true);
