/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { MathUtilities } from "./MathUtilities";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
var UltraCalcFunctionFloorMath = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionFloorMath, _super);
    function UltraCalcFunctionFloorMath() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionFloorMath.prototype.evaluate = function (a, b) {
        var c = null;
        var d = null;
        if (b == 3) {
            c = a.pop();
        }
        if (b >= 2) {
            d = a.pop();
        }
        var e = a.pop();
        if (e.isError) {
            return new ExcelCalcValue(e.toErrorValue());
        }
        if (d != null && d.isError) {
            return new ExcelCalcValue(d.toErrorValue());
        }
        if (c != null && c.isError) {
            return new ExcelCalcValue(c.toErrorValue());
        }
        var f = e._toDouble3();
        var g = d == null ? 1 : Math.abs(d._toDouble3());
        var h = c == null ? 0 : c._toDouble3();
        if (f == 0 || g == 0) {
            return new ExcelCalcValue(0);
        }
        var i = f / g;
        if (f < 0 && h != 0) {
            i = Math.ceil(i);
        }
        else {
            i = Math.floor(i);
        }
        return new ExcelCalcValue(MathUtilities.i(i * g));
    };
    UltraCalcFunctionFloorMath.prototype.get_name = function () {
        return "floor.math";
    };
    Object.defineProperty(UltraCalcFunctionFloorMath.prototype, "name", {
        get: function () {
            return this.get_name();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionFloorMath.prototype.get_minArgs = function () {
        return 1;
    };
    Object.defineProperty(UltraCalcFunctionFloorMath.prototype, "minArgs", {
        get: function () {
            return this.get_minArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionFloorMath.prototype.get_maxArgs = function () {
        return 3;
    };
    Object.defineProperty(UltraCalcFunctionFloorMath.prototype, "maxArgs", {
        get: function () {
            return this.get_maxArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionFloorMath.$t = markType(UltraCalcFunctionFloorMath, 'UltraCalcFunctionFloorMath', BuiltInFunctionBase.$);
    return UltraCalcFunctionFloorMath;
}(BuiltInFunctionBase));
export { UltraCalcFunctionFloorMath };
