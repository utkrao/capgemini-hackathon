/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "igniteui-react-core";
import { IPackagePart_$type } from "./IPackagePart";
/**
 * @hidden
 */
var OverrideContentTypePart = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(OverrideContentTypePart, _super);
    function OverrideContentTypePart(a, b) {
        var _this = _super.call(this) || this;
        _this.b = null;
        _this.a = null;
        _this.a = a;
        _this.b = b != null ? b : a.contentType;
        return _this;
    }
    Object.defineProperty(OverrideContentTypePart.prototype, "$package", {
        get: function () {
            return this.a.$package;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(OverrideContentTypePart.prototype, "uri", {
        get: function () {
            return this.a.uri;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(OverrideContentTypePart.prototype, "contentType", {
        get: function () {
            return this.b;
        },
        enumerable: false,
        configurable: true
    });
    OverrideContentTypePart.prototype.getStream = function (a, b) {
        return this.a.getStream(a, b);
    };
    OverrideContentTypePart.prototype.createRelationship = function (a, b, c, d) {
        return this.a.createRelationship(a, b, c, d);
    };
    OverrideContentTypePart.prototype.getRelationships = function () {
        return this.a.getRelationships();
    };
    OverrideContentTypePart.prototype.getRelationship = function (a) {
        return this.a.getRelationship(a);
    };
    OverrideContentTypePart.$t = markType(OverrideContentTypePart, 'OverrideContentTypePart', Base.$, [IPackagePart_$type]);
    return OverrideContentTypePart;
}(Base));
export { OverrideContentTypePart };
