/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, Number_$type, markType } from "igniteui-react-core";
import { StringComparer } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { ExcelUtils } from "./ExcelUtils";
import { stringIsNullOrEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
var WorkbookLoadManagerExcel2007_FontCollection = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WorkbookLoadManagerExcel2007_FontCollection, _super);
    function WorkbookLoadManagerExcel2007_FontCollection() {
        var _this = _super.call(this) || this;
        _this.b = null;
        _this.c = null;
        _this.d = null;
        _this.b = new Dictionary$2(String_$type, String_$type, 2, StringComparer.c);
        _this.c = new Dictionary$2(Number_$type, String_$type, 0);
        return _this;
    }
    WorkbookLoadManagerExcel2007_FontCollection.prototype.f = function (a, b) {
        this.b.item(a, b);
        this.c.addItem(this.c.count, a);
    };
    WorkbookLoadManagerExcel2007_FontCollection.prototype.e = function () {
        var a = null;
        if (ExcelUtils.ax) {
            var b = this.b.tryGetValue("jpan", a);
            a = b.p1;
        }
        if (a != null) {
            return a;
        }
        return this.d;
    };
    WorkbookLoadManagerExcel2007_FontCollection.prototype.a = function (a, b, c) {
        var _this = this;
        b = null;
        c = null;
        if (((function () { var d = _this.c.tryGetValue(a, b); b = d.p1; return d.ret; })())) {
            c = this.b.item(b);
        }
        return {
            ret: stringIsNullOrEmpty(c) == false,
            p1: b,
            p2: c
        };
    };
    WorkbookLoadManagerExcel2007_FontCollection.$t = markType(WorkbookLoadManagerExcel2007_FontCollection, 'WorkbookLoadManagerExcel2007_FontCollection');
    return WorkbookLoadManagerExcel2007_FontCollection;
}(Base));
export { WorkbookLoadManagerExcel2007_FontCollection };
