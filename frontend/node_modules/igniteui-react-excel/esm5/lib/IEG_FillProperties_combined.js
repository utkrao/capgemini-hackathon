/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Type, Base, markType } from "igniteui-react-core";
import { CT_BlipFillPropertiesBase } from "./CT_BlipFillPropertiesBase";
import { ISaveToXLSX_$type } from "./ISaveToXLSX";
import { DrawingMLMain } from "./DrawingMLMain";
/**
 * @hidden
 */
export var IEG_FillProperties_$type = /*@__PURE__*/ new Type(null, 'IEG_FillProperties');
/**
 * @hidden
 */
var CT_BlipFillProperties = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CT_BlipFillProperties, _super);
    function CT_BlipFillProperties() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.d = null;
        _this.e = null;
        return _this;
    }
    CT_BlipFillProperties.prototype._accept$2$i = function ($tArg, $tResult, a, b) {
        return a._visitCT_BlipFillProperties$i(this, b);
    };
    CT_BlipFillProperties.$t = markType(CT_BlipFillProperties, 'CT_BlipFillProperties', CT_BlipFillPropertiesBase.$, [IEG_FillProperties_$type]);
    return CT_BlipFillProperties;
}(CT_BlipFillPropertiesBase));
export { CT_BlipFillProperties };
/**
 * @hidden
 */
var CT_GroupFillProperties = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CT_GroupFillProperties, _super);
    function CT_GroupFillProperties() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.a = null;
        return _this;
    }
    Object.defineProperty(CT_GroupFillProperties.prototype, "elementName", {
        get: function () {
            return DrawingMLMain.et;
        },
        enumerable: false,
        configurable: true
    });
    CT_GroupFillProperties.prototype.saveX = function (a, b, c, d) {
        b.p(c, null);
        b.k();
    };
    CT_GroupFillProperties.prototype._accept$2$i = function ($tArg, $tResult, a, b) {
        return a._visitCT_GroupFillProperties$i(this, b);
    };
    CT_GroupFillProperties.$t = markType(CT_GroupFillProperties, 'CT_GroupFillProperties', Base.$, [IEG_FillProperties_$type, ISaveToXLSX_$type]);
    return CT_GroupFillProperties;
}(Base));
export { CT_GroupFillProperties };
/**
 * @hidden
 */
export var IEG_LineFillProperties_$type = /*@__PURE__*/ new Type(null, 'IEG_LineFillProperties');
/**
 * @hidden
 */
var CT_NoFillProperties = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CT_NoFillProperties, _super);
    function CT_NoFillProperties() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CT_NoFillProperties.prototype._accept$2$i = function ($tArg, $tResult, a, b) {
        return a._visitCT_NoFillProperties$i(this, b);
    };
    CT_NoFillProperties.prototype._accept$21$i = function ($tArg, $tResult, a, b) {
        return a._visitCT_NoFillProperties$i(this, b);
    };
    Object.defineProperty(CT_NoFillProperties.prototype, "elementName", {
        get: function () {
            return DrawingMLMain.gz;
        },
        enumerable: false,
        configurable: true
    });
    CT_NoFillProperties.prototype.saveX = function (a, b, c, d) {
        b.p(c, null);
        b.k();
    };
    CT_NoFillProperties.$t = markType(CT_NoFillProperties, 'CT_NoFillProperties', Base.$, [IEG_FillProperties_$type, IEG_LineFillProperties_$type, ISaveToXLSX_$type]);
    return CT_NoFillProperties;
}(Base));
export { CT_NoFillProperties };
/**
 * @hidden
 */
var CT_SolidFillProperties = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CT_SolidFillProperties, _super);
    function CT_SolidFillProperties() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.a = null;
        return _this;
    }
    CT_SolidFillProperties.prototype._accept$2$i = function ($tArg, $tResult, a, b) {
        return a._visitCT_SolidFillProperties$i(this, b);
    };
    CT_SolidFillProperties.prototype._accept$21$i = function ($tArg, $tResult, a, b) {
        return a._visitCT_SolidFillProperties$i(this, b);
    };
    CT_SolidFillProperties.$t = markType(CT_SolidFillProperties, 'CT_SolidFillProperties', Base.$, [IEG_FillProperties_$type, IEG_LineFillProperties_$type]);
    return CT_SolidFillProperties;
}(Base));
export { CT_SolidFillProperties };
/**
 * @hidden
 */
export var IEG_FillPropertiesVisitor$2_$type = /*@__PURE__*/ new Type(null, 'IEG_FillPropertiesVisitor$2');
/**
 * @hidden
 */
export var IEG_LineFillPropertiesVisitor$2_$type = /*@__PURE__*/ new Type(null, 'IEG_LineFillPropertiesVisitor$2');
