/*
*
* An XmlReader implementation for loading SGML (including HTML) converting it
* to well formed XML, by adding missing quotes, empty attribute values, ignoring
* duplicate attributes, case folding on tag names, adding missing closing tags
* based on SGML DTD information, and so on.
*
* Copyright (c) 2002 Microsoft Corporation. All rights reserved.
*
* Chris Lovett
*
*/
import { __extends } from "tslib";
/* MD 2/27/13
 * This software is being re-used under the Microsoft Public License (MS-PL):
 * -----------------------------------------------------------------------------
 * This license governs use of the accompanying software. If you use the software, you accept this license. If you do not accept the
 * license, do not use the software.
 *
 * 1. Definitions
 * The terms "reproduce," "reproduction," "derivative works," and "distribution" have the same meaning here as under U.S. copyright law.
 * A "contribution" is the original software, or any additions or changes to the software. A "contributor" is any person that distributes
 * its contribution under this license. "Licensed patents" are a contributor's patent claims that read directly on its contribution.
 *
 * 2. Grant of Rights
 * (A) Copyright Grant- Subject to the terms of this license, including the license conditions and limitations in section 3, each
 *     contributor grants you a non-exclusive, worldwide, royalty-free copyright license to reproduce its contribution, prepare
 *     derivative works of its contribution, and distribute its contribution or any derivative works that you create.
 * (B) Patent Grant- Subject to the terms of this license, including the license conditions and limitations in section 3, each
 *     contributor grants you a non-exclusive, worldwide, royalty-free license under its licensed patents to make, have made, use,
 *     sell, offer for sale, import, and/or otherwise dispose of its contribution in the software or derivative works of the contribution
 *     in the software.
 *
 * 3. Conditions and Limitations
 * (A) No Trademark License- This license does not grant you rights to use any contributors' name, logo, or trademarks.
 * (B) If you bring a patent claim against any contributor over patents that you claim are infringed by the software, your patent license
 *     from such contributor to the software ends automatically.
 * (C) If you distribute any portion of the software, you must retain all copyright, patent, trademark, and attribution notices that are
 *     present in the software.
 * (D) If you distribute any portion of the software in source code form, you may do so only under this license by including a complete
 *     copy of this license with your distribution. If you distribute any portion of the software in compiled or object code form, you may
 *     only do so under a license that complies with this license.
 * (E) The software is licensed "as-is." You bear the risk of using it. The contributors give no express warranties, guarantees or conditions.
 *     You may have additional consumer rights under your local laws which this license cannot change. To the extent permitted under your
 *     local laws, the contributors exclude the implied warranties of merchantability, fitness for a particular purpose and non-infringement.
 * -----------------------------------------------------------------------------
 *
 * In addition, the public classes have been made internal and the namespace has been changed from Sgml to
 * Infragistics.Documents.Excel.Serialization.Excel2007.Sgml
 *
 * Also, I updated the code to work with Silverlight and WinRT.
 */
import { Base, BaseError, markType } from "igniteui-react-core";
import { stringFormat } from "igniteui-react-core";
/**
 * @hidden
 */
var AttDef = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AttDef, _super);
    function AttDef(a) {
        var _this = _super.call(this) || this;
        _this.f = null;
        _this.c = 0;
        _this.a = null;
        _this.e = null;
        _this.b = 0;
        _this.f = a;
        return _this;
    }
    AttDef.prototype.g = function (a) {
        switch (a) {
            case "CDATA":
                this.c = 1;
                break;
            case "ENTITY":
                this.c = 2;
                break;
            case "ENTITIES":
                this.c = 3;
                break;
            case "ID":
                this.c = 4;
                break;
            case "IDREF":
                this.c = 5;
                break;
            case "IDREFS":
                this.c = 6;
                break;
            case "NAME":
                this.c = 7;
                break;
            case "NAMES":
                this.c = 8;
                break;
            case "NMTOKEN":
                this.c = 9;
                break;
            case "NMTOKENS":
                this.c = 10;
                break;
            case "NUMBER":
                this.c = 11;
                break;
            case "NUMBERS":
                this.c = 12;
                break;
            case "NUTOKEN":
                this.c = 13;
                break;
            case "NUTOKENS":
                this.c = 14;
                break;
            default: throw new BaseError(1, "Attribute type '" + a + "' is not supported");
        }
    };
    AttDef.prototype.d = function (a) {
        var b = true;
        if (a == "FIXED") {
            this.b = 1;
        }
        else if (a == "REQUIRED") {
            this.b = 2;
            b = false;
        }
        else if (a == "IMPLIED") {
            this.b = 3;
            b = false;
        }
        else {
            throw new BaseError(1, stringFormat("Attribute value '{0}' not supported", a));
        }
        return b;
    };
    AttDef.$t = markType(AttDef, 'AttDef');
    return AttDef;
}(Base));
export { AttDef };
