/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, typeCast, markType, getInstanceType } from "igniteui-react-core";
import { ISupportSetProperty_$type } from "./ISupportSetProperty";
import { CT_GvmlConnectorNonVisual } from "./CT_GvmlConnectorNonVisual";
import { CT_ShapeProperties_DML } from "./CT_ShapeProperties_DML";
import { CT_ShapeStyle } from "./CT_ShapeStyle";
import { CT_OfficeArtExtensionList } from "./CT_OfficeArtExtensionList";
/**
 * @hidden
 */
var CT_GvmlConnector = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CT_GvmlConnector, _super);
    function CT_GvmlConnector() {
        var _this = _super.call(this) || this;
        _this.b = null;
        _this.f = null;
        _this.h = null;
        _this.d = null;
        return _this;
    }
    Object.defineProperty(CT_GvmlConnector.prototype, "a", {
        get: function () {
            return this.b;
        },
        set: function (a) {
            this.b = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_GvmlConnector.prototype, "e", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_GvmlConnector.prototype, "g", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CT_GvmlConnector.prototype, "c", {
        get: function () {
            return this.d;
        },
        set: function (a) {
            this.d = a;
        },
        enumerable: false,
        configurable: true
    });
    CT_GvmlConnector.prototype.setProperty = function (a, b) {
        switch (a) {
            case 1102:
                this.a = typeCast(CT_GvmlConnectorNonVisual.$, b);
                break;
            case 1570:
                this.e = typeCast(CT_ShapeProperties_DML.$, b);
                break;
            case 1618:
                this.g = typeCast(CT_ShapeStyle.$, b);
                break;
            case 601:
                this.c = typeCast(CT_OfficeArtExtensionList.$, b);
                break;
            default: break;
        }
    };
    CT_GvmlConnector.prototype.toString = function () {
        var a = getInstanceType(this);
        return a != null ? a.typeName : _super.prototype.toString.call(this);
    };
    CT_GvmlConnector.$t = markType(CT_GvmlConnector, 'CT_GvmlConnector', Base.$, [ISupportSetProperty_$type]);
    return CT_GvmlConnector;
}(Base));
export { CT_GvmlConnector };
