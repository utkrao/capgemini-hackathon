/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __read, __spreadArray } from "tslib";
import { Base, String_$type, Number_$type, markType } from "igniteui-react-core";
import { CultureInfo } from "igniteui-react-core";
import { Enumerable } from "igniteui-react-core";
import { DocCoreUtils } from "./DocCoreUtils";
import { intDivide } from "igniteui-react-core";
import { stringConcat } from "igniteui-react-core";
import { intToString1 } from "igniteui-react-core";
/**
 * @hidden
 */
var ST_Panose = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ST_Panose, _super);
    function ST_Panose(a) {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.a = a;
        return _this;
    }
    ST_Panose.prototype.toString = function () {
        return stringConcat.apply(void 0, __spreadArray([], __read(Enumerable.a(String_$type, Enumerable.o(Number_$type, String_$type, this.a, function (a) { return intToString1(a, "X2", CultureInfo.invariantCulture); }))), false));
    };
    ST_Panose.b = function (a) {
        var b = new Array(intDivide(a.length, 2));
        for (var c = 0; c < b.length; c++) {
            var d = a.charAt(c * 2);
            var e = a.charAt(c * 2 + 1);
            b[c] = (DocCoreUtils.s(d) << 4 | DocCoreUtils.s(e));
        }
        return new ST_Panose(b);
    };
    ST_Panose.$t = markType(ST_Panose, 'ST_Panose');
    return ST_Panose;
}(Base));
export { ST_Panose };
