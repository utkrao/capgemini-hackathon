/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, toNullable, Number_$type, markType } from "igniteui-react-core";
import { CultureInfo } from "igniteui-react-core";
import { stringEquals1 } from "igniteui-react-core";
import { tryParseNumber } from "igniteui-react-core";
import { numberToString } from "igniteui-react-core";
/**
 * @hidden
 */
var DoubleOrAutoBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DoubleOrAutoBase, _super);
    function DoubleOrAutoBase() {
        var _this = _super.call(this) || this;
        _this.b = toNullable(Number_$type, null);
        return _this;
    }
    Object.defineProperty(DoubleOrAutoBase.prototype, "a", {
        get: function () {
            return this.b.hasValue == false;
        },
        enumerable: false,
        configurable: true
    });
    DoubleOrAutoBase.e = function (a, b) {
        b = toNullable(Number_$type, null);
        if (stringEquals1(a, "auto", 3) == false) {
            var c_1;
            if (((function () { var d = tryParseNumber(a, c_1); c_1 = d.p1; return d.ret; })())) {
                b = toNullable(Number_$type, c_1);
            }
        }
        return {
            p1: b
        };
    };
    DoubleOrAutoBase.prototype.d = function () {
        return this.b.hasValue ? numberToString(this.b.value, CultureInfo.invariantCulture) : "auto";
    };
    DoubleOrAutoBase.$t = markType(DoubleOrAutoBase, 'DoubleOrAutoBase');
    return DoubleOrAutoBase;
}(Base));
export { DoubleOrAutoBase };
