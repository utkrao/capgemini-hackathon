/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Type, Base, markType, toNullable } from "igniteui-react-core";
import { ST_PositivePercentage } from "./ST_PositivePercentage";
/**
 * @hidden
 */
export var IEG_LineJoinProperties_$type = /*@__PURE__*/ new Type(null, 'IEG_LineJoinProperties');
/**
 * @hidden
 */
var CT_LineJoinBevel = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CT_LineJoinBevel, _super);
    function CT_LineJoinBevel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CT_LineJoinBevel.prototype._accept$2$i = function ($tArg, $tResult, a, b) {
        return a._visitCT_LineJoinBevel$i(this, b);
    };
    CT_LineJoinBevel.$t = markType(CT_LineJoinBevel, 'CT_LineJoinBevel', Base.$, [IEG_LineJoinProperties_$type]);
    return CT_LineJoinBevel;
}(Base));
export { CT_LineJoinBevel };
/**
 * @hidden
 */
var CT_LineJoinMiterProperties = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CT_LineJoinMiterProperties, _super);
    function CT_LineJoinMiterProperties() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.a = toNullable(ST_PositivePercentage.$, null);
        return _this;
    }
    CT_LineJoinMiterProperties.prototype._accept$2$i = function ($tArg, $tResult, a, b) {
        return a._visitCT_LineJoinMiterProperties$i(this, b);
    };
    CT_LineJoinMiterProperties.$t = markType(CT_LineJoinMiterProperties, 'CT_LineJoinMiterProperties', Base.$, [IEG_LineJoinProperties_$type]);
    return CT_LineJoinMiterProperties;
}(Base));
export { CT_LineJoinMiterProperties };
/**
 * @hidden
 */
var CT_LineJoinRound = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CT_LineJoinRound, _super);
    function CT_LineJoinRound() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CT_LineJoinRound.prototype._accept$2$i = function ($tArg, $tResult, a, b) {
        return a._visitCT_LineJoinRound$i(this, b);
    };
    CT_LineJoinRound.$t = markType(CT_LineJoinRound, 'CT_LineJoinRound', Base.$, [IEG_LineJoinProperties_$type]);
    return CT_LineJoinRound;
}(Base));
export { CT_LineJoinRound };
/**
 * @hidden
 */
export var IEG_LineJoinPropertiesVisitor$2_$type = /*@__PURE__*/ new Type(null, 'IEG_LineJoinPropertiesVisitor$2');
