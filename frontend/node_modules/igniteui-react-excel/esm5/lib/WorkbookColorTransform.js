/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, Number_$type, toNullable, markType } from "igniteui-react-core";
import { wrapNullable, unwrapNullable, nullableEquals } from "igniteui-react-core";
/**
 * Defines color transforms for a [[WorkbookColorInfo]] instance.
 * <p class="body">
 * This class is immutable.
 * </p>
 * <p class="body">
 * Color transforms are not applicable to all contexts within which a WorkbookColorInfo is used;
 * currently they are only used by <see cref="WorksheetChart">charts</see>.
 * </p>
 * @see [[ChartSolidFill]]
 * @see [[GradientStop]]
 * @see [[ChartGradientFill]]
 */
var WorkbookColorTransform = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WorkbookColorTransform, _super);
    function WorkbookColorTransform() {
        var _rest = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            _rest[_i] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this._alpha$i_1 = toNullable(Number_$type, null);
        _this._luminanceModulation$i_1 = toNullable(Number_$type, null);
        _this._luminanceOffset$i_1 = toNullable(Number_$type, null);
        _this._shade$i_1 = toNullable(Number_$type, null);
        var alpha = _rest[0];
        var luminanceModulation = _rest[1];
        var luminanceOffset = _rest[2];
        var shade = _rest[3];
        if (alpha === void 0) {
            alpha = null;
        }
        alpha = wrapNullable(Number_$type, alpha);
        if (luminanceModulation === void 0) {
            luminanceModulation = null;
        }
        luminanceModulation = wrapNullable(Number_$type, luminanceModulation);
        if (luminanceOffset === void 0) {
            luminanceOffset = null;
        }
        luminanceOffset = wrapNullable(Number_$type, luminanceOffset);
        if (shade === void 0) {
            shade = null;
        }
        shade = wrapNullable(Number_$type, shade);
        _this._alpha$i = alpha;
        _this._luminanceModulation$i = luminanceModulation;
        _this._luminanceOffset$i = luminanceOffset;
        _this._shade$i = shade;
        return _this;
    }
    Object.defineProperty(WorkbookColorTransform.prototype, "alpha", {
        /**
         * Defines the value of the alpha channel for the associated
         * [[WorkbookColorInfo]] instance, expressed
         * as a number between 0 and 1.
         * <p class="body">
         * Use this property to control the transparency of the associated color.
         * </p>
         * <p class="body">
         * For example, to make the associated color 50% transparent, assign a value of <b>.5</b> to this property.
         * </p>
         * <p class="body">
         * Assigning a value of null to this property implies that the associated
         * color has no specific alpha channel setting, i.e., the associated color
         * is fully opaque.
         * </p>
         */
        get: function () {
            return unwrapNullable(this._alpha$i);
        },
        set: function (a) {
            this._alpha$i = arguments[0];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WorkbookColorTransform.prototype, "_alpha$i", {
        /**
         * @hidden
         */
        get: function () {
            return this._alpha$i_1;
        },
        /**
         * @hidden
         */
        set: function (a) {
            this._alpha$i_1 = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WorkbookColorTransform.prototype, "luminanceModulation", {
        /**
         * Defines the luminance modulation for the associated
         * [[WorkbookColorInfo]] instance, expressed
         * as a fractional number.
         * <p class="body">
         * Luminance is also referred to as brightness.
         * </p>
         * <p class="body">
         * This property specifies the amount by which the luminance of the associated
         * base color is increased. For example, a value of .5 yields a 50% reduction
         * in luminance. A value of 1.0 implies no change in luminance. A value greater
         * than 1.0 implies an increase in luminance; for example, a value of 2.0 doubles
         * the luminance.
         * </p>
         * <p class="body">
         * Assigning a value of null to this property implies that the associated color has no specific luminance modulation.
         * </p>
         * <p class="body">
         * Luminance modulation is applied by converting the base color from RGB to HSL, then
         * multiplying the luminance channel by the value of this property, then converting
         * back to RGB.
         * </p>
         * @see [[luminanceOffset]]
         */
        get: function () {
            return unwrapNullable(this._luminanceModulation$i);
        },
        set: function (a) {
            this._luminanceModulation$i = arguments[0];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WorkbookColorTransform.prototype, "_luminanceModulation$i", {
        /**
         * @hidden
         */
        get: function () {
            return this._luminanceModulation$i_1;
        },
        /**
         * @hidden
         */
        set: function (a) {
            this._luminanceModulation$i_1 = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WorkbookColorTransform.prototype, "luminanceOffset", {
        /**
         * Defines the luminance offset for the associated
         * [[WorkbookColorInfo]] instance, expressed
         * as a fractional number.
         * <p class="body">
         * Luminance is also referred to as brightness.
         * </p>
         * <p class="body">
         * The luminance offset is applied by converting the base color from RGB to HSL, then
         * the value of this property to the luminance channel, then converting back to RGB.
         * </p>
         * <p class="body">
         * Assigning a value of null to this property implies that the associated color has no specific luminance offset.
         * </p>
         * @see [[luminanceModulation]]
         */
        get: function () {
            return unwrapNullable(this._luminanceOffset$i);
        },
        set: function (a) {
            this._luminanceOffset$i = arguments[0];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WorkbookColorTransform.prototype, "_luminanceOffset$i", {
        /**
         * @hidden
         */
        get: function () {
            return this._luminanceOffset$i_1;
        },
        /**
         * @hidden
         */
        set: function (a) {
            this._luminanceOffset$i_1 = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WorkbookColorTransform.prototype, "shade", {
        /**
         * Defines the shading for the associated
         * [[WorkbookColorInfo]] instance, expressed
         * as a fractional number.
         * @see [[alpha]]
         */
        get: function () {
            return unwrapNullable(this._shade$i);
        },
        set: function (a) {
            this._shade$i = arguments[0];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WorkbookColorTransform.prototype, "_shade$i", {
        /**
         * @hidden
         */
        get: function () {
            return this._shade$i_1;
        },
        /**
         * @hidden
         */
        set: function (a) {
            this._shade$i_1 = a;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    WorkbookColorTransform.prototype._b = function () {
        return this._alpha$i.hasValue || this._luminanceModulation$i.hasValue || this._luminanceOffset$i.hasValue || this._shade$i.hasValue;
    };
    /**
     * @hidden
     */
    WorkbookColorTransform._a = function (a, b) {
        if (a == null && b == null) {
            return true;
        }
        if (a == null || b == null) {
            return false;
        }
        return nullableEquals(a._alpha$i, b._alpha$i) && nullableEquals(a._luminanceModulation$i, b._luminanceModulation$i) && nullableEquals(a._luminanceOffset$i, b._luminanceOffset$i) && nullableEquals(a._shade$i, b._shade$i);
    };
    WorkbookColorTransform.$t = markType(WorkbookColorTransform, 'WorkbookColorTransform');
    /**
     * @hidden
     */
    WorkbookColorTransform._c = 100000;
    return WorkbookColorTransform;
}(Base));
export { WorkbookColorTransform };
