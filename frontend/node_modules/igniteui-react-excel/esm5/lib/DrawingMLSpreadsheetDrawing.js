/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { DrawingNamespaceDefinitionBase } from "./DrawingNamespaceDefinitionBase";
import { ST_Coordinate } from "./ST_Coordinate";
import { fromEnum, markType } from "igniteui-react-core";
import { ST_OnOff } from "./ST_OnOff";
import { XmlNamespaceDefinitionBase } from "./XmlNamespaceDefinitionBase";
import { DrawingMLMain } from "./DrawingMLMain";
import { ST_EditAs_$type } from "./ST_EditAs";
/**
 * @hidden
 */
var DrawingMLSpreadsheetDrawing = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DrawingMLSpreadsheetDrawing, _super);
    function DrawingMLSpreadsheetDrawing() {
        return _super.call(this, DrawingMLSpreadsheetDrawing.dr, DrawingMLSpreadsheetDrawing.ds) || this;
    }
    DrawingMLSpreadsheetDrawing.prototype.get_t = function () {
        return "xdr";
    };
    Object.defineProperty(DrawingMLSpreadsheetDrawing.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    DrawingMLSpreadsheetDrawing.er = function (a, b) {
    };
    DrawingMLSpreadsheetDrawing.e6 = function (a, b) {
        a.ad.p(b, "xdr");
    };
    DrawingMLSpreadsheetDrawing.ey = function (a, b, c) {
        c = ST_Coordinate.h(a.ab.ad);
        return {
            p2: c
        };
    };
    DrawingMLSpreadsheetDrawing.fd = function (a, b, c) {
        a.ad.p(b, "xdr");
        a.ad.u(c.toString());
    };
    DrawingMLSpreadsheetDrawing.en = function (a) {
    };
    DrawingMLSpreadsheetDrawing.e2 = function (a) {
        a.ad.p(DrawingMLSpreadsheetDrawing.dt, "xdr");
    };
    DrawingMLSpreadsheetDrawing.eo = function (a, b, c) {
        var e_1, _a;
        b = true;
        c = true;
        try {
            for (var _b = __values(fromEnum(a.ab.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                switch (d.a.e(a.d)) {
                    case "fLocksWithSheet":
                        b = ST_OnOff.e(d.d);
                        break;
                    case "fPrintsWithSheet":
                        c = ST_OnOff.e(d.d);
                        break;
                    default: break;
                }
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        return {
            p1: b,
            p2: c
        };
    };
    DrawingMLSpreadsheetDrawing.e3 = function (a, b, c) {
        if (b === void 0) {
            b = true;
        }
        if (c === void 0) {
            c = true;
        }
        a.ad.p(DrawingMLSpreadsheetDrawing.du, "xdr");
        var d;
        if (b != true) {
            d = ST_OnOff.g(b);
            a.ad.h("fLocksWithSheet", d);
        }
        if (c != true) {
            d = ST_OnOff.g(c);
            a.ad.h("fPrintsWithSheet", d);
        }
    };
    DrawingMLSpreadsheetDrawing.ep = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, DrawingMLSpreadsheetDrawing.dx);
        return {
            p1: b
        };
    };
    DrawingMLSpreadsheetDrawing.e4 = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, DrawingMLSpreadsheetDrawing.dx, "xdr", b);
    };
    DrawingMLSpreadsheetDrawing.eq = function (a, b) {
        var c = DrawingMLSpreadsheetDrawing.ey(a, DrawingMLSpreadsheetDrawing.dy, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLSpreadsheetDrawing.e5 = function (a, b) {
        DrawingMLSpreadsheetDrawing.fd(a, DrawingMLSpreadsheetDrawing.dy, b);
    };
    DrawingMLSpreadsheetDrawing.es = function (a, b, c) {
        var d = DrawingMLMain.k6(a, DrawingMLSpreadsheetDrawing.d1, b, c);
        b = d.p2;
        c = d.p3;
        return {
            p1: b,
            p2: c
        };
    };
    DrawingMLSpreadsheetDrawing.e7 = function (a, b, c) {
        DrawingMLMain.n7(a, DrawingMLSpreadsheetDrawing.d1, b, c);
    };
    DrawingMLSpreadsheetDrawing.et = function (a) {
    };
    DrawingMLSpreadsheetDrawing.e8 = function (a) {
        DrawingMLSpreadsheetDrawing.e6(a, DrawingMLSpreadsheetDrawing.d4);
    };
    DrawingMLSpreadsheetDrawing.eu = function (a) {
    };
    DrawingMLSpreadsheetDrawing.e9 = function (a) {
        a.ad.p(DrawingMLSpreadsheetDrawing.eb, "xdr");
    };
    DrawingMLSpreadsheetDrawing.ev = function (a, b, c) {
        var d = DrawingMLMain.k2(a, DrawingMLSpreadsheetDrawing.ed, b, c);
        b = d.p2;
        c = d.p3;
        return {
            p1: b,
            p2: c
        };
    };
    DrawingMLSpreadsheetDrawing.fa = function (a, b, c) {
        DrawingMLMain.n3(a, DrawingMLSpreadsheetDrawing.ed, b, c);
    };
    DrawingMLSpreadsheetDrawing.ew = function (a, b) {
        b = XmlNamespaceDefinitionBase.l(a, DrawingMLSpreadsheetDrawing.ee);
        return {
            p1: b
        };
    };
    DrawingMLSpreadsheetDrawing.fb = function (a, b) {
        XmlNamespaceDefinitionBase.ag(a, DrawingMLSpreadsheetDrawing.ee, "xdr", b);
    };
    DrawingMLSpreadsheetDrawing.ex = function (a, b) {
        var c = DrawingMLSpreadsheetDrawing.ey(a, DrawingMLSpreadsheetDrawing.ef, b);
        b = c.p2;
        return {
            p1: b
        };
    };
    DrawingMLSpreadsheetDrawing.fc = function (a, b) {
        DrawingMLSpreadsheetDrawing.fd(a, DrawingMLSpreadsheetDrawing.ef, b);
    };
    DrawingMLSpreadsheetDrawing.ez = function (a) {
    };
    DrawingMLSpreadsheetDrawing.fe = function (a) {
        DrawingMLSpreadsheetDrawing.e6(a, DrawingMLSpreadsheetDrawing.ej);
    };
    DrawingMLSpreadsheetDrawing.e0 = function (a, b) {
        b = 0;
        var c = a.ao("editAs");
        if (c != null) {
            b = XmlNamespaceDefinitionBase.b(ST_EditAs_$type, c, b);
        }
        return {
            p1: b
        };
    };
    DrawingMLSpreadsheetDrawing.ff = function (a, b) {
        if (b === void 0) {
            b = 0;
        }
        a.ad.p(DrawingMLSpreadsheetDrawing.ek, "xdr");
        var c;
        if (b != 0) {
            c = XmlNamespaceDefinitionBase.p(ST_EditAs_$type, b);
            a.ad.h("editAs", c);
        }
    };
    DrawingMLSpreadsheetDrawing.e1 = function (a) {
    };
    DrawingMLSpreadsheetDrawing.fg = function (a) {
        a.ad.p(DrawingMLSpreadsheetDrawing.em, "xdr");
        var b = a.d._z;
        a.ad.l(DrawingMLMain.ao);
        a.ad.l(DrawingMLSpreadsheetDrawing.dp);
    };
    DrawingMLSpreadsheetDrawing.$t = markType(DrawingMLSpreadsheetDrawing, 'DrawingMLSpreadsheetDrawing', DrawingNamespaceDefinitionBase.$);
    DrawingMLSpreadsheetDrawing.ds = "http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing";
    DrawingMLSpreadsheetDrawing.dr = "http://purl.oclc.org/ooxml/drawingml/spreadsheetDrawing";
    DrawingMLSpreadsheetDrawing.dt = DrawingMLSpreadsheetDrawing.dr + "/absoluteAnchor";
    DrawingMLSpreadsheetDrawing.du = DrawingMLSpreadsheetDrawing.dr + "/clientData";
    DrawingMLSpreadsheetDrawing.dx = DrawingMLSpreadsheetDrawing.dr + "/col";
    DrawingMLSpreadsheetDrawing.dy = DrawingMLSpreadsheetDrawing.dr + "/colOff";
    DrawingMLSpreadsheetDrawing.d1 = DrawingMLSpreadsheetDrawing.dr + "/ext";
    DrawingMLSpreadsheetDrawing.d4 = DrawingMLSpreadsheetDrawing.dr + "/from";
    DrawingMLSpreadsheetDrawing.eb = DrawingMLSpreadsheetDrawing.dr + "/oneCellAnchor";
    DrawingMLSpreadsheetDrawing.ed = DrawingMLSpreadsheetDrawing.dr + "/pos";
    DrawingMLSpreadsheetDrawing.ee = DrawingMLSpreadsheetDrawing.dr + "/row";
    DrawingMLSpreadsheetDrawing.ef = DrawingMLSpreadsheetDrawing.dr + "/rowOff";
    DrawingMLSpreadsheetDrawing.ej = DrawingMLSpreadsheetDrawing.dr + "/to";
    DrawingMLSpreadsheetDrawing.ek = DrawingMLSpreadsheetDrawing.dr + "/twoCellAnchor";
    DrawingMLSpreadsheetDrawing.em = DrawingMLSpreadsheetDrawing.dr + "/wsDr";
    DrawingMLSpreadsheetDrawing.dz = DrawingMLSpreadsheetDrawing.dr + "/cxnSp";
    DrawingMLSpreadsheetDrawing.d5 = DrawingMLSpreadsheetDrawing.dr + "/graphicFrame";
    DrawingMLSpreadsheetDrawing.d6 = DrawingMLSpreadsheetDrawing.dr + "/grpSp";
    DrawingMLSpreadsheetDrawing.ec = DrawingMLSpreadsheetDrawing.dr + "/pic";
    DrawingMLSpreadsheetDrawing.eg = DrawingMLSpreadsheetDrawing.dr + "/sp";
    DrawingMLSpreadsheetDrawing.ea = DrawingMLSpreadsheetDrawing.dr + "/nvSpPr";
    DrawingMLSpreadsheetDrawing.dv = DrawingMLSpreadsheetDrawing.dr + "/cNvPr";
    DrawingMLSpreadsheetDrawing.dw = DrawingMLSpreadsheetDrawing.dr + "/cNvSpPr";
    DrawingMLSpreadsheetDrawing.eh = DrawingMLSpreadsheetDrawing.dr + "/spPr";
    DrawingMLSpreadsheetDrawing.el = DrawingMLSpreadsheetDrawing.dr + "/txBody";
    DrawingMLSpreadsheetDrawing.dp = new DrawingMLSpreadsheetDrawing();
    return DrawingMLSpreadsheetDrawing;
}(DrawingNamespaceDefinitionBase));
export { DrawingMLSpreadsheetDrawing };
