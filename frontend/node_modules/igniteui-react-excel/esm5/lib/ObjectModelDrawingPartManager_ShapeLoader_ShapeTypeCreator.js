/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, enumGetBox, Boolean_$type, markType, EnumUtil } from "igniteui-react-core";
import { IEG_GeometryVisitor$2_$type } from "./IEG_GeometryVisitor$2";
import { WorksheetShape } from "./WorksheetShape";
import { PredefinedShapeType_$type } from "./PredefinedShapeType";
import { UnknownShape } from "./UnknownShape";
import { nullableNotEquals } from "igniteui-react-core";
/**
 * @hidden
 */
var ObjectModelDrawingPartManager_ShapeLoader_ShapeTypeCreator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ObjectModelDrawingPartManager_ShapeLoader_ShapeTypeCreator, _super);
    function ObjectModelDrawingPartManager_ShapeLoader_ShapeTypeCreator() {
        return _super.call(this) || this;
    }
    ObjectModelDrawingPartManager_ShapeLoader_ShapeTypeCreator.prototype._visitCT_PresetGeometry2D$i = function (a, b) {
        var c = WorksheetShape._bz(a.b);
        if (nullableNotEquals(c, null)) {
            var d = c.value;
            if (EnumUtil.isDefined(PredefinedShapeType_$type, enumGetBox(PredefinedShapeType_$type, d))) {
                return WorksheetShape._al(d, false);
            }
        }
        var e = new UnknownShape(1);
        e._eq(c, a.b);
        return e;
    };
    ObjectModelDrawingPartManager_ShapeLoader_ShapeTypeCreator.prototype._visitCT_CustomGeometry2D$i = function (a, b) {
        var c = new UnknownShape(1);
        c._en = a;
        return c;
    };
    ObjectModelDrawingPartManager_ShapeLoader_ShapeTypeCreator.$t = markType(ObjectModelDrawingPartManager_ShapeLoader_ShapeTypeCreator, 'ObjectModelDrawingPartManager_ShapeLoader_ShapeTypeCreator', Base.$, [IEG_GeometryVisitor$2_$type.specialize(Boolean_$type, WorksheetShape.$)]);
    ObjectModelDrawingPartManager_ShapeLoader_ShapeTypeCreator.a = new ObjectModelDrawingPartManager_ShapeLoader_ShapeTypeCreator();
    return ObjectModelDrawingPartManager_ShapeLoader_ShapeTypeCreator;
}(Base));
export { ObjectModelDrawingPartManager_ShapeLoader_ShapeTypeCreator };
