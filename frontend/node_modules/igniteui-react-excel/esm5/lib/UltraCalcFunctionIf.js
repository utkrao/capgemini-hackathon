/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
var UltraCalcFunctionIf = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionIf, _super);
    function UltraCalcFunctionIf() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionIf.prototype.evaluate = function (a, b) {
        var c = null;
        if (b == 3) {
            c = a.pop();
        }
        var d = a.pop();
        var e = a.pop();
        if (e.isError) {
            return new ExcelCalcValue(e.toErrorValue());
        }
        if (e._toBoolean1() == true) {
            return d;
        }
        else {
            if (c == null) {
                return new ExcelCalcValue(false);
            }
            return c;
        }
    };
    UltraCalcFunctionIf.prototype.get_name = function () {
        return "if";
    };
    Object.defineProperty(UltraCalcFunctionIf.prototype, "name", {
        get: function () {
            return this.get_name();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionIf.prototype.get_minArgs = function () {
        return 2;
    };
    Object.defineProperty(UltraCalcFunctionIf.prototype, "minArgs", {
        get: function () {
            return this.get_minArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionIf.prototype.get_maxArgs = function () {
        return 3;
    };
    Object.defineProperty(UltraCalcFunctionIf.prototype, "maxArgs", {
        get: function () {
            return this.get_maxArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionIf.prototype.doesParameterAllowIntermediateResultArray = function (a, b) {
        return (b == false);
    };
    UltraCalcFunctionIf.prototype.get__s = function () {
        return true;
    };
    UltraCalcFunctionIf.prototype._v = function (a) {
        if (a == 1 || a == 2) {
            return false;
        }
        return true;
    };
    UltraCalcFunctionIf.$t = markType(UltraCalcFunctionIf, 'UltraCalcFunctionIf', BuiltInFunctionBase.$);
    return UltraCalcFunctionIf;
}(BuiltInFunctionBase));
export { UltraCalcFunctionIf };
