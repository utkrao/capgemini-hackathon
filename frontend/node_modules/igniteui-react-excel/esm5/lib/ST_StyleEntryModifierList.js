/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { Base, String_$type, fromEnum, markType } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { ST_StyleEntryModifier } from "./ST_StyleEntryModifier";
import { XmlNamespaceDefinitionBase } from "./XmlNamespaceDefinitionBase";
import { StringBuilder } from "igniteui-react-core";
/**
 * @hidden
 */
var ST_StyleEntryModifierList = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ST_StyleEntryModifierList, _super);
    function ST_StyleEntryModifierList() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.c = null;
        return _this;
    }
    Object.defineProperty(ST_StyleEntryModifierList.prototype, "d", {
        get: function () {
            return this.c;
        },
        set: function (a) {
            this.c = a;
        },
        enumerable: false,
        configurable: true
    });
    ST_StyleEntryModifierList.a = function (a) {
        return ST_StyleEntryModifierList.b(a);
    };
    ST_StyleEntryModifierList.prototype.e = function () {
        return this.f();
    };
    ST_StyleEntryModifierList.b = function (a) {
        var e_1, _a;
        var b = new ST_StyleEntryModifierList();
        var c = XmlNamespaceDefinitionBase.g(String_$type, a, function (d) { return d; });
        if (c != null) {
            b.d = new List$1(ST_StyleEntryModifier.$, 2, c.count);
            try {
                for (var _b = __values(fromEnum(c)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var d = _c.value;
                    var e = ST_StyleEntryModifier.a(d);
                    if (e != null) {
                        b.d.add(e);
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        }
        return b;
    };
    ST_StyleEntryModifierList.prototype.f = function () {
        if (this.d == null) {
            return null;
        }
        var a = new StringBuilder(0);
        var b = this.d.count - 1;
        for (var c = 0; c <= b; c++) {
            var d = this.d._inner[c];
            a.l(d.f());
            if (c < b) {
                a.l(" ");
            }
        }
        return a.toString();
    };
    ST_StyleEntryModifierList.$t = markType(ST_StyleEntryModifierList, 'ST_StyleEntryModifierList');
    return ST_StyleEntryModifierList;
}(Base));
export { ST_StyleEntryModifierList };
