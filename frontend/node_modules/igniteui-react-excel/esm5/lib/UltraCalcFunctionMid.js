/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { markType } from "igniteui-react-core";
import { stringEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
var UltraCalcFunctionMid = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionMid, _super);
    function UltraCalcFunctionMid() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionMid.prototype.evaluate = function (a, b) {
        var c = 0;
        if (b > 2) {
            var d = a.pop();
            if (d.isError) {
                return new ExcelCalcValue(d.toErrorValue());
            }
            c = d._toInt321();
            if (c < 0) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(1));
            }
        }
        var e = 1;
        if (b > 1) {
            var f = a.pop();
            if (f.isError) {
                return new ExcelCalcValue(f.toErrorValue());
            }
            e = f._toInt321();
            if (c < 1) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(1));
            }
        }
        var g = a.pop();
        if (g.isError) {
            return new ExcelCalcValue(g.toErrorValue());
        }
        var h = g.toString();
        if (e > h.length) {
            return new ExcelCalcValue(stringEmpty());
        }
        else if (e + c - 1 > h.length) {
            return new ExcelCalcValue(h.substr(e - 1));
        }
        else {
            return new ExcelCalcValue(h.substr(e - 1, c));
        }
    };
    UltraCalcFunctionMid.prototype.get_name = function () {
        return "mid";
    };
    Object.defineProperty(UltraCalcFunctionMid.prototype, "name", {
        get: function () {
            return this.get_name();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionMid.prototype.get_minArgs = function () {
        return 1;
    };
    Object.defineProperty(UltraCalcFunctionMid.prototype, "minArgs", {
        get: function () {
            return this.get_minArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionMid.prototype.get_maxArgs = function () {
        return 3;
    };
    Object.defineProperty(UltraCalcFunctionMid.prototype, "maxArgs", {
        get: function () {
            return this.get_maxArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionMid.prototype.doesParameterAllowIntermediateResultArray = function (a, b) {
        return true;
    };
    UltraCalcFunctionMid.$t = markType(UltraCalcFunctionMid, 'UltraCalcFunctionMid', BuiltInFunctionBase.$);
    return UltraCalcFunctionMid;
}(BuiltInFunctionBase));
export { UltraCalcFunctionMid };
