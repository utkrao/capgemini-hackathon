/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
var ExcelLocaleEn = /** @class */ /*@__PURE__*/ (function () {
    function ExcelLocaleEn() {
        this["DefaultTotalLabel"] = "Total";
        this["Error_AnchoredReference"] = "Attempt to access {0} as an unanchored reference";
        this["Error_ExplicitThis"] = "{0} - Explicit This not supported";
        this["Error_ExternalRange"] = "Range contains External Reference";
        this["Error_FormulaNotSupported"] = "{0} - Attempt to access formula on a reference that doesn't support formulas";
        this["Error_Internal"] = "An internal error occurred in method {0}.";
        this["Error_InvalidFunction"] = "Invalid function '{0}' at {1}.";
        this["Error_InvalidFunctionArgCountTooFew"] = "The function '{0}' referenced at {1} does not contain the correct number of arguments. The function requires a minimum of {2} parameter(s).";
        this["Error_InvalidFunctionArgCountTooMany"] = "The function '{0}' referenced at {1} does not contain the correct number of arguments. The argument count should not exceed {2} parameter(s).";
        this["Error_InvalidNumberSystemDigit"] = "Invalid digit of '{0}' encountered in the value '{1}' for the number system with base of {2}.";
        this["Error_InvalidOperand"] = "Invalid Operand";
        this["Error_InvalidOperatorArgCount"] = "The '{0}' function must accept {1} arguments.";
        this["Error_InvalidReference"] = "Invalid or unavailable reference";
        this["Error_Location"] = "line {0} col {1}";
        this["Error_MethodNotSupported"] = "{0} does not support {1}.";
        this["Error_NoCurrentRangeElement"] = "No current Range Element";
        this["Error_NullFunctionResult"] = "The evaluation of '{0}' returned a null value.";
        this["Error_NullOperand"] = "Null operand";
        this["Error_ParseRef"] = "Unknown reference at {0}.";
        this["Error_RangeFromLast"] = "fromT.Last not set";
        this["Error_RangeFromNull"] = "RefRange: from is null";
        this["Error_RangeFromRefBase"] = "RefRange: from is not a RefBase : {0}";
        this["Error_RangeLast"] = "RefRange Validate: last tuples [{0}] != [{1}]";
        this["Error_RangeNormalizeScope"] = "RefRange Normalize: bad scope [{0}/{1}]";
        this["Error_RangeToNull"] = "RefRange: to is null";
        this["Error_RangeToRefBase"] = "RefRange: to is not a RefBase : {0}";
        this["Error_RangeTuple"] = "RefRange Validate: tuples [{0}] !=  [{1}]";
        this["Error_RangeValidateCount"] = "RefRange Validate: from count {0} != to count {1}";
        this["Error_ReadOnlyReference"] = "{0} - Attempt to set value on readonly reference";
        this["Error_ReferenceNotEumerable"] = "{0} is not an enumerable reference";
        this["Error_RefMalformed"] = "{0} - Malformed Reference  {1}";
        this["Error_RP_ContainsBase"] = "RefParser.Contains - Empty Base";
        this["Error_RP_ContainsTarget"] = "RefParser.Contains - Empty Target";
        this["Error_RP_EmptyElement"] = "Invalid reference {0}. Empty element encountered at location {1}.";
        this["Error_RP_EmptyReference"] = "Invalid reference {0}. Reference is empty.";
        this["Error_RP_MalformedExtra"] = "RefParser Malformed Reference: Multiple [{0}] found in [{1}]";
        this["Error_RP_MalformedUnexpected"] = "RefParser Malformed Reference: Unexpected [{0}] found in [{1}]";
        this["Error_RP_MergeRelativeBase"] = "RefParser.Merge: Base is Relative";
        this["Error_RP_MissingCloseParenthesis"] = "Invalid reference {0}. Missing close parenthesis.";
        this["Error_RP_MissingEndQuotes"] = "Invalid reference {0}. Missing end quotes.";
        this["Error_RT_Expected"] = "RefTuple: Expected [{0}] in [{1}]";
        this["Error_RT_InvalidScope"] = "Invalid scope: {0}.";
        this["Error_RT_InvalidScope_CharactersAfterClosingQuotes"] = "Characters encountered after closing double quotes in {0} scope at location {1}.";
        this["Error_RT_InvalidTuple_CharactersAfterScopeEnd"] = "Invalid element {0}. Characters encountered after the end of the scope.";
        this["Error_RT_InvalidTuple_MissingCloseParenthesis"] = "Invalid element {0}. Missing close parenthesis.";
        this["Error_RT_InvalidTuple_MissingEndQuotes"] = "Invalid element {0}. Missing end quotes.";
        this["Error_RT_InvalidTuple_NamePortionEmpty"] = "Invalid element {0}. Element name portion empty.";
        this["Error_RT_InvalidTuple_ScopeIndexLarge"] = "Invalid element {0}. Index {1} is invalid: {2}.";
        this["Error_RT_InvalidTuple_UnescapedCharacter"] = "Unescaped {0} character encountered in {1} at location {2}.";
        this["Error_RT_NullRefName"] = "RefTuple: null RefName";
        this["Error_RT_Unexpected"] = "RefTuple: unexpected [{0}] in [{1}]";
        this["Error_ScopeAllNotLast"] = "{0} - Scope All must appear in last element  {1}";
        this["Error_UCErrorCode_Div"] = "Divide by zero";
        this["Error_UCErrorCode_Fail"] = "Fail";
        this["Error_UCErrorCode_NA"] = "Not applicable";
        this["Error_UCErrorCode_Name"] = "Invalid name";
        this["Error_UCErrorCode_Null"] = "Null Value";
        this["Error_UCErrorCode_Num"] = "Invalid numeric values in the function or formula.";
        this["Error_UCErrorCode_Ok"] = "Succeed";
        this["Error_UCErrorCode_Reference"] = "Invalid or unavailable reference";
        this["Error_UCErrorCode_Unknown"] = "Invalid code";
        this["Error_UCErrorCode_Value"] = "Incorrect type of argument or operand.";
        this["Error_UnexpectedScope"] = "{0} - Unexpected scope for Parent {1}";
        this["Error_UnknownRange"] = "Unknown Range Type";
        this["Error_UnknownRefType"] = "{0} - Unknown RefType  {1}";
        this["Error_UnknownScope"] = "{0} - Unknown scope  {1}";
        this["Error_UnresolvedExternal"] = "Unresolved external reference";
        this["GenerateTableColumnName"] = "Column";
        this["GenerateTableName"] = "Table";
        this["LD_Chart_AxisDisplayUnits"] = "Hundreds:Hundreds, Thousands:Thousands, TenThousands:x 10000, HundredThousands:x 100000, Millions:Millions, TenMillions:x 10000000, HundredMillions:x 100000000, ThousandMillions:Billions, MillionMillions:Trillions";
        this["LD_Fallback_ChartEx_Line1"] = "This chart isn't available in your version of Excel.";
        this["LD_Fallback_ChartEx_Line2"] = "Editing this shape or saving this workbook into a different file format will permanently break the chart.";
        this["LE_AllMustHavGuidsIfAnyHasThem"] = "Can not set GenerateGuidsForGroups to false if any existing group has a Guid.";
        this["LE_ArgumentException_AnchorCellFromOtherWorksheet"] = "The cell specified does not exist on the same worksheet as the shape.";
        this["LE_ArgumentException_ArrayFormulaMustHaveSingleRegion"] = "An array formula can only be applied to one cell region.";
        this["LE_ArgumentException_ArrayTooSmall"] = "The array is not big enough to copy all values to it.";
        this["LE_ArgumentException_CannotAddStandardTableStyle"] = "A standard table style cannot be added to the CustomTableStyleCollection.";
        this["LE_ArgumentException_CannotApplyDVRuleToTotalCell"] = "One or more cells in the specified reference are total cells in a table and cannot have a data validation rule applied.";
        this["LE_ArgumentException_CannotCreateEmptyColorInfo"] = "The empty color cannot be used to create a WorkbookColorInfo instance.";
        this["LE_ArgumentException_CellMustBeOnSameWorksheetAsReferencesCollection"] = "The cell must be from the same worksheet as the reference collection.";
        this["LE_ArgumentException_CellShiftedOffWorksheet"] = "The cell has been deleted or shifted off the worksheet and no longer represents a worksheet position.";
        this["LE_ArgumentException_CellsInTableFromOtherWorksheet"] = "The region specified is not from the same worksheet as the data table.";
        this["LE_ArgumentException_CellValueStringLength"] = "String values assigned to a cell cannot have a length greater than {0}.";
        this["LE_ArgumentException_ColumnFormulaAlreadyAppliedToCell"] = "The formula is applied to a cell already. Clone it to use it as the column formula.";
        this["LE_ArgumentException_ColumnFromDifferentWorksheet"] = "The column does not belong to the same worksheet as this collection.";
        this["LE_ArgumentException_ColumnInputCellFromOtherWorksheet"] = "The specified column input cell does not exist on the same worksheet as the data table.";
        this["LE_ArgumentException_ColumnNotInTable"] = "The column is from a different table.";
        this["LE_ArgumentException_ColumnRemovedFromWorksheet"] = "The column has been removed from the worksheet.";
        this["LE_ArgumentException_ColumnsToRepeatAtLeftOutsideRange"] = "The range is outside the range of available columns in the worksheet.";
        this["LE_ArgumentException_CommentTooLong"] = "The comment length must be less than 255 characters.";
        this["LE_ArgumentException_CustomViewNameAlreadyExists"] = "A custom view with the name \"{0}\" already exists.";
        this["LE_ArgumentException_DefaultTableStyleNotInWorkbook"] = "The specified table style is not in the CustomTableStyles or StandardTableStyles collections.";
        this["LE_ArgumentException_DisplayTextTooLong"] = "The hyperlink display text must be less than 256 characters.";
        this["LE_ArgumentException_DuplicateDisplayValue"] = "The specified display value is already in the collection.";
        this["LE_ArgumentException_DuplicateFixedDateGroup"] = "The specified FixedDateGroup is already in the collection.";
        this["LE_ArgumentException_DuplicateTableStyle"] = "The specified style is already in a CustomTableStyleCollection.";
        this["LE_ArgumentException_DuplicateTableStyleName_Existing"] = "The specified name which matches that of another style in the collection.";
        this["LE_ArgumentException_DuplicateTableStyleName_New"] = "The specified style has a name which matches another style in the collection.";
        this["LE_ArgumentException_DuplicateWorksheetProtectedRangeTitle"] = "A range with the title '{0}' already exists.";
        this["LE_ArgumentException_DV_ArrayFormulaCannotBeUsed"] = "An ArrayFormula cannot be applied as the {0}.";
        this["LE_ArgumentException_DV_CellFromOtherWorksheet"] = "The cell does not belong to the same worksheet as the collection of data validation rules.";
        this["LE_ArgumentException_DV_ConstraintFormulaMustBeNumberOrReference"] = "The {0} must be set to a number, a numeric expression, or a reference to a single cell.";
        this["LE_ArgumentException_DV_FormulaCannotBeNull"] = "The {0} cannot be set to null while the data validation rule is applied to a worksheet.";
        this["LE_ArgumentException_DV_FormulaCannotFindNamedReference"] = "The {0} contains a named reference that does not exist in the Workbook.";
        this["LE_ArgumentException_DV_FormulaCannotFindWorksheetReference"] = "The {0} contains a reference on a worksheet that does not exist in the Workbook.";
        this["LE_ArgumentException_DV_FormulaCannotReferenceOtherWorkbook"] = "The {0} cannot contain a reference to an external Workbook.";
        this["LE_ArgumentException_DV_FormulaInvalidForWorkbookFormat"] = "The {0} references cells that are not valid in the {1} workbook format.";
        this["LE_ArgumentException_DV_InvalidAddress"] = "The specified address is not a valid cell or regions address.";
        this["LE_ArgumentException_DV_InvalidExcelDate"] = "The specified date cannot be represented in Excel.";
        this["LE_ArgumentException_DV_InvalidFormula"] = "Invalid formula used in the data validation rule.";
        this["LE_ArgumentException_DV_InvalidMessageLength"] = "The {0} cannot be more than {1} characters.";
        this["LE_ArgumentException_DV_ListFormulaCannotHaveEmptyString"] = "The string constant in the ValuesFormula cannot be an empty string.";
        this["LE_ArgumentException_DV_ListFormulaMustBeStringOrReference"] = "The ValuesFormula must be set to a string constant or a reference to a single cell or region in the same Workbook.";
        this["LE_ArgumentException_DV_ListFormulaReferenceMustBeOneDimensional"] = "The ValuesFormula contains a region reference that has multiple rows and columns. The region must contain one row or one column.";
        this["LE_ArgumentException_DV_LowerGreaterThanUpperContraint"] = "The value of the lower constraint must be less than or equal to the upper constraint.";
        this["LE_ArgumentException_DV_MustHaveOneAcceptedValue"] = "At least one value must be specified as an accepted value.";
        this["LE_ArgumentException_DV_ReferencesAlreadyContainDVs"] = "The specified references already contain one or more data validation rules.";
        this["LE_ArgumentException_DV_ReferencesFromOtherWorksheet"] = "The references collection does not belong to the same worksheet as the collection of data validation rules.";
        this["LE_ArgumentException_DV_RegionFromOtherWorksheet"] = "The region does not belong to the same worksheet as the collection of data validation rules.";
        this["LE_ArgumentException_DV_RuleAppliedOnOtherWorksheet"] = "The data validation rule is applied to another worksheet already.";
        this["LE_ArgumentException_DV_UpperLessThanLowerContraint"] = "The value of the upper constraint must be greater than or equal to the lower constraint.";
        this["LE_ArgumentException_EditRangeAlreadyOwned"] = "The range is already in a worksheet's AllowedEditRanges.";
        this["LE_ArgumentException_EditRangeHasRangeFromOtherWorksheet"] = "The edit range has a range from a different worksheet than the AllowedEditRanges.";
        this["LE_ArgumentException_EmptyCustomList"] = "There must be at least one string in the list.";
        this["LE_ArgumentException_EndIndexLessThanZero"] = "The end of the range must be greater than or equal to zero.";
        this["LE_ArgumentException_FileDoesntContainsWorkbookStream"] = "The specified stream or file does not contain a valid workbook.";
        this["LE_ArgumentException_FormulaReferencesInvalidCells"] = "The specified formula references cells which are not supported in the workbook's current file format.";
        this["LE_ArgumentException_HashSetFull"] = "There are too many items in the hash set.";
        this["LE_ArgumentException_HyperlinkAlreadyOwned"] = "The hyperlink already belongs to a hyperlinks collection.";
        this["LE_ArgumentException_HyperlinkSourceFromOtherWorksheet"] = "The hyperlink has a source cell or region from a different worksheet.";
        this["LE_ArgumentException_HyperlinkTargetFromOtherWorkbook"] = "The target is from a different workbook than the owner of the hyperlink.";
        this["LE_ArgumentException_InfiniteColumnWidth"] = "The column width cannot be infinity.";
        this["LE_ArgumentException_Interval"] = "Interval parameter should be one of the values in DateInterval enumeration";
        this["LE_ArgumentException_IntervalStr"] = "Interval parameter couldn't be converted to one of the values in DateInterval enumeration";
        this["LE_ArgumentException_InvalidCellAddress"] = "The address specified is not a valid cell address.";
        this["LE_ArgumentException_InvalidCommentPositioningMode"] = "Only the DontMoveOrSizeWithCells and MoveAndSizeWithCells ShapePositioningModes can be applied to a comment shape.";
        this["LE_ArgumentException_InvalidCustomFilterOperandNumber"] = "The value cannot be infinity or NaN.";
        this["LE_ArgumentException_InvalidCustomFilterOperator"] = "When the comparison value is not a string, the comparison operator cannot be BeginsWith, DoesNotBeginWith, Contains, DoesNotContain, EndsWith, or DoesNotEndWith.";
        this["LE_ArgumentException_InvalidDatePeriodFilterValue"] = "The value is not within range. For a filter type of Month, it must be 1-12. For a filter type of Quarter, it must be 1-4.";
        this["LE_ArgumentException_InvalidDpi"] = "The specified Dpi value is invalid.";
        this["LE_ArgumentException_InvalidExcelDate"] = "The value cannot be expressed as a date in Excel.";
        this["LE_ArgumentException_InvalidFileFormat"] = "Invalid or unrecognized file format.";
        this["LE_ArgumentException_InvalidFormula"] = "The specified formula was invalid.";
        this["LE_ArgumentException_InvalidGradientStopColor"] = "Automatic and system colors cannot be used in gradient stops.";
        this["LE_ArgumentException_InvalidNamedReferenceName"] = "The name is not a valid named reference name.";
        this["LE_ArgumentException_InvalidPaletteColor_EmptyOrSystem"] = "Empty or system colors cannot be added to the palette.";
        this["LE_ArgumentException_InvalidPaletteColor_NonOpaque"] = "Only opaque colors can be added to the palette.";
        this["LE_ArgumentException_InvalidReferencesString"] = "The references value is not correctly formatted.";
        this["LE_ArgumentException_InvalidRegionAddress"] = "The address specified is not a valid region address.";
        this["LE_ArgumentException_InvalidRowOrColumnRange"] = "Invalid row or column range.";
        this["LE_ArgumentException_InvalidSeriesValues"] = "Invalid series values. There must be at least one value and each value must either be a string or an object that can be converted to a double.";
        this["LE_ArgumentException_InvalidTarget"] = "The hyperlink target must be a string, WorksheetCell, WorksheetRegion, or NamedReference.";
        this["LE_ArgumentException_InvalidTopOrBottomFilterValue"] = "The value must be between 1 and 500.";
        this["LE_ArgumentException_InvalidWorksheetName"] = "The worksheet name cannot contain any of the following characters:\r\n\t\t: \\ / ? * [ ]";
        this["LE_ArgumentException_InvalidWorksheetNameStartingQuote"] = "The worksheet name cannot start or end with a single quote.";
        this["LE_ArgumentException_LessThanTwoGradientStops"] = "There must be at least two gradient stops specified.";
        this["LE_ArgumentException_NamedReferenceNameTooLong"] = "The name of the named reference cannot be more than 255 characters.";
        this["LE_ArgumentException_NaNDefaultColumnWidth"] = "NaN cannot be used as the default column width.";
        this["LE_ArgumentException_NewRegionOverlapsFilterArea"] = "The oeration is attempting to change a filtered range on your worksheet and cannot be completed. To complete this operation, AutoFilters in the sheet need to be removed.";
        this["LE_ArgumentException_NewTableRegionCannotMoveHeaders"] = "The new table region cannot move the headers to a new row.";
        this["LE_ArgumentException_NewTableRegionFromWrongWorksheet"] = "The specified region not from the same worksheet as the table.";
        this["LE_ArgumentException_NewTableRegionMustHaveDataRows"] = "The new table region must contain at least one data row.";
        this["LE_ArgumentException_NewTableRegionOverlapOld"] = "The new table region must overlap with the previous table region.";
        this["LE_ArgumentException_NewTableRegionOverlapsBlockingValue"] = "The table cannot be resized to the specified region because it includes a multi-cell array formula or data table.";
        this["LE_ArgumentException_NewTableRegionOverlapsMergedRegion"] = "The table cannot be resized to the specified region because it includes a merged cell.";
        this["LE_ArgumentException_NewTableRegionOverlapsOtherTable"] = "The table cannot be resized to the specified region because it includes another table.";
        this["LE_ArgumentException_NoRegionsInArray"] = "The specified array has no regions.";
        this["LE_ArgumentException_NotEnum"] = "Type '{0}' is not an enum";
        this["LE_ArgumentException_NotSupportedCodePage"] = "Not supported code page";
        this["LE_ArgumentException_NPer"] = "nPer could not be 0";
        this["LE_ArgumentException_NPerFunction"] = "Wrong combination of parameters for NPer function";
        this["LE_ArgumentException_PA_PrintAreasCannotOverlap"] = "The specified print area overlaps with one of the existing print areas.";
        this["LE_ArgumentException_ParentStyleFromOtherWorkbook"] = "The specified style is not from the same workbook as the cell format.";
        this["LE_ArgumentException_PB_CantInsertBreakAtIndex"] = "This collection does not support inserting items at an index.";
        this["LE_ArgumentException_PB_CantSetBreakAtIndex"] = "This collection does not support setting items at an index.";
        this["LE_ArgumentException_PB_MustBeWithinPrintArea"] = "The page break must be within the print area.";
        this["LE_ArgumentException_PB_PageBreakCantBeA1Cell"] = "Cannot insert a page break at the top-left of the worksheet.";
        this["LE_ArgumentException_PB_PageBreakCantBeBeforeLeftColumn"] = "Cannot insert a page break at the left of the worksheet.";
        this["LE_ArgumentException_PB_PageBreakCantBeBeforeTopRow"] = "Cannot insert a page break at the top of the worksheet.";
        this["LE_ArgumentException_PB_PageBreaksCannotAddExistingInstance"] = "The specified instance already exists in the collection.";
        this["LE_ArgumentException_PB_PageBreaksCannotOverlap"] = "The page break cannot overlap with other page breaks on the worksheet.";
        this["LE_ArgumentException_PB_PrintAreaMustBeInPrintAreas"] = "The page break is in a print area which is not in the PrintAreas collection.";
        this["LE_ArgumentException_PB_PrintAreaMustBeOnSameWorksheet"] = "The page break is in a print area which is not on the same worksheet as the page breaks collection.";
        this["LE_ArgumentException_Pmt"] = "Pmt could not be 0";
        this["LE_ArgumentException_PrintAreaShiftedOffWorksheet"] = "The page break is in a print area which has been shifted off the worksheet and no longer represent a valid range of cells.";
        this["LE_ArgumentException_RangeFromOtherWorksheetThanProtectedRange"] = "The specified range is from a different worksheet than the edit range.";
        this["LE_ArgumentException_RegionMustBeOnSameWorksheet"] = "The region must be from the same worksheet.";
        this["LE_ArgumentException_RegionMustBeOnSameWorksheetAsReferencesCollection"] = "The region must be from the same worksheet as the reference collection.";
        this["LE_ArgumentException_RegionsFromMixedWorksheets"] = "All regions specified in the array must be from the same worksheet.";
        this["LE_ArgumentException_RegionShiftedOffWorksheet"] = "The region has been shifted off the worksheet and no longer represents a valid range of cells.";
        this["LE_ArgumentException_RegionsShiftedOffWorksheet"] = "One or more regions specified have been shifted off the worksheet and no longer represent a valid range of cells.";
        this["LE_ArgumentException_RowFromDifferentWorksheet"] = "The row does not belong to the same worksheet as this collection.";
        this["LE_ArgumentException_RowInputCellFromOtherWorksheet"] = "The specified row input cell does not exist on the same worksheet as the data table.";
        this["LE_ArgumentException_RowRemovedFromWorksheet"] = "The row has been removed from the worksheet.";
        this["LE_ArgumentException_SelectedWorksheetFromOtherWorkbook"] = "The worksheet does not belong to the workbook associated with these window options.\"";
        this["LE_ArgumentException_ShapeCannotBeAdded"] = "The specified shape cannot be added to a shapes collection.";
        this["LE_ArgumentException_SourceFromOtherWorksheetThanHyperlink"] = "The specified source cell or region is from a different worksheet than the hyperlink.";
        this["LE_ArgumentException_StartIndexLessThanZero"] = "The start of the range must be greater than or equal to zero.";
        this["LE_ArgumentException_StyleNameAlreadyExists"] = "A style with the name \"{0}\" already exists in the workbook.";
        this["LE_ArgumentException_StyleNameTooLong"] = "The style name cannot be more than 255 characters.";
        this["LE_ArgumentException_TableColumnRemovedFromTable"] = "The table column has been removed from the table.";
        this["LE_ArgumentException_TableStyleFromOtherWorkbook"] = "The specified WorksheetTableStyle does not belong to the same workbook as the table.";
        this["LE_ArgumentException_TargetTooLong"] = "The hyperlink target address must be less than 256 characters.";
        this["LE_ArgumentException_TextLengthGreaterThanMax"] = "The length of text in a shape or comment cannot be greater than {0}.";
        this["LE_ArgumentException_ToolTipTooLong"] = "The hyperlink tool tip must be less than 256 characters.";
        this["LE_ArgumentException_TopLeftWindowBounds"] = "The left and top of the window bounds must be between -32768 and 32767.";
        this["LE_ArgumentException_WeekdayFirst"] = "WeekdayFirst parameter should be between  FirstDayOfWeek.System and FirstDayOfWeek.Saturday";
        this["LE_ArgumentException_WidthHeightWindowBounds"] = "The width and height of the window bounds must be between 0 and 65535.";
        this["LE_ArgumentException_WorksheetNameAlreadyExists"] = "A worksheet with the name \"{0}\" already exists in the workbook.";
        this["LE_ArgumentException_WorksheetNameTooLong"] = "The worksheet name must be between 1 and 31 characters in length.";
        this["LE_ArgumentException_WorksheetProtectedRangeTitleTooLong"] = "The title of an edit range cannot be more than 255 characters.";
        this["LE_ArgumentException_WorksheetScopeFromOtherWorkbook"] = "The worksheet does not belong to the same workbook as this collection.";
        this["LE_ArgumentNullException_AnchorCell"] = "The cell cannot be null when the shape exists on a worksheet or group.";
        this["LE_ArgumentNullException_CustomViewName"] = "The custom view name cannot be null or empty.";
        this["LE_ArgumentNullException_Encoder"] = "The image encoder cannot be null.";
        this["LE_ArgumentNullException_FindNamedReference"] = "The name to find cannot be null or empty.";
        this["LE_ArgumentNullException_FormulaCantBeNull"] = "The formula for a named reference cannot be null or empty.";
        this["LE_ArgumentNullException_HiddenColumn"] = "A null column cannot be added to the collection.";
        this["LE_ArgumentNullException_HiddenRow"] = "A null row cannot be added to the collection.";
        this["LE_ArgumentNullException_Image"] = "The image cannot be null.";
        this["LE_ArgumentNullException_NamedReferenceNameCantBeNull"] = "The name for a named reference cannot be null or empty.";
        this["LE_ArgumentNullException_SaveStream"] = "Cannot save the workbook to a null stream.";
        this["LE_ArgumentNullException_SelectedWorksheet"] = "The workbook must have a valid selected worksheet.";
        this["LE_ArgumentNullException_Shape"] = "A null shape cannot be added to the collection.";
        this["LE_ArgumentNullException_SourceFont"] = "The source font cannot be null.";
        this["LE_ArgumentNullException_SourceFormatting"] = "The source formatting cannot be null.";
        this["LE_ArgumentNullException_StyleName"] = "The style name cannot be null or empty.";
        this["LE_ArgumentNullException_UnformattedString"] = "The unformatted string cannot be null.";
        this["LE_ArgumentNullException_Workbook"] = "The workbook cannot be null.";
        this["LE_ArgumentNullException_WorkbookRequiredToResolveThemeColor"] = "A workbook must be specified to resolve a themed color.";
        this["LE_ArgumentNullException_WorksheetName"] = "The worksheet name cannot be null or empty.";
        this["LE_ArgumentNullException_WorksheetProtectedRangeTitleCantBeNull"] = "The title of an edit range cannot be null or empty.";
        this["LE_ArgumentNullException_WorksheetScope"] = "The worksheet scope cannot be null.";
        this["LE_ArgumentOutOfRange_RelativeColumnIndex"] = "The relative column index is outside of the specified region.";
        this["LE_ArgumentOutOfRange_RelativeRowIndex"] = "The relative row index is outside of the specified region.";
        this["LE_ArgumentOutOfRangeException_AnchorPosition"] = "One of the percentages in the specified location is less than 0.";
        this["LE_ArgumentOutOfRangeException_BadInsertIndex"] = "The specified index must be greater than or equal to zero and less than or equal to the number of existing paragraphs.";
        this["LE_ArgumentOutOfRangeException_BadRemoveAtIndex"] = "The index must be greater than zero and less than the number of paragraphs in the formatted string.";
        this["LE_ArgumentOutOfRangeException_CollectionIndex"] = "Index was out of range. It must be non-negative and less than the size of the collection.";
        this["LE_ArgumentOutOfRangeException_ColumnWidth"] = "The column width must be between 0 and 65535.";
        this["LE_ArgumentOutOfRangeException_DefaultColumnWidth"] = "The default column width must be between 0 and 65535.";
        this["LE_ArgumentOutOfRangeException_DefaultFontHeight"] = "The default font height must be between 20 and 8180.";
        this["LE_ArgumentOutOfRangeException_DefaultRowHeight"] = "The default row height must be between -1 and 8192.";
        this["LE_ArgumentOutOfRangeException_DuplicateItemSorted"] = "The specified item already has a sort condition applied.";
        this["LE_ArgumentOutOfRangeException_FirstVisibleTabIndex"] = "The first visible tab index must be greater than or equal to zero.";
        this["LE_ArgumentOutOfRangeException_FontHeight"] = "The font height must be between 20 and 8180.";
        this["LE_ArgumentOutOfRangeException_GroupAddedToSelf"] = "A group cannot be added to its own collection of shapes.";
        this["LE_ArgumentOutOfRangeException_Indent"] = "The indent level must be between 0 and 250.";
        this["LE_ArgumentOutOfRangeException_IndexNegative"] = "The index must be non-negative.";
        this["LE_ArgumentOutOfRangeException_InvalidCollectionIndex"] = "The specified index is is not valid in the collection.";
        this["LE_ArgumentOutOfRangeException_InvalidColorInfoTint"] = "The tint value must be between -1.0 and 1.0.";
        this["LE_ArgumentOutOfRangeException_InvalidColumnCount"] = "{0} is not a valid column count in the current format. The value must be between {1} and {2}.";
        this["LE_ArgumentOutOfRangeException_InvalidColumnIndex"] = "{0} is not a valid column index in the current format. The value must be between {1} and {2}.";
        this["LE_ArgumentOutOfRangeException_InvalidGradientStopOffset"] = "The gradient stop offset must be between 0.0 and 1.0.";
        this["LE_ArgumentOutOfRangeException_InvalidRelativeRectangleValueForGradient"] = "The values for the inner rectangle of the rectangular gradient must be between 0.0 and 1.0.";
        this["LE_ArgumentOutOfRangeException_InvalidRemoveAtIndex_SortConditions"] = "The index at which to remove the sort condition is out of range.";
        this["LE_ArgumentOutOfRangeException_InvalidRowCount"] = "{0} is not a valid row count in the current format. The value must be between {1} and {2}.";
        this["LE_ArgumentOutOfRangeException_InvalidRowIndex"] = "{0} is not a valid row index in the current format. The value must be between {1} and {2}.";
        this["LE_ArgumentOutOfRangeException_InvalidTableStyleAreaStripeExtent"] = "The {0} must be between 1 and 9, inclusive.";
        this["LE_ArgumentOutOfRangeException_LeftPaneWidth"] = "The pane width specified is outside the valid range of {0} and {1}.";
        this["LE_ArgumentOutOfRangeException_LengthMustBePositive"] = "The length must be greater than or equal to one.";
        this["LE_ArgumentOutOfRangeException_MagnificationLevel"] = "View magnification levels must be between 10 and 400.";
        this["LE_ArgumentOutOfRangeException_Margins"] = "The margins must be between 0 and 100.";
        this["LE_ArgumentOutOfRangeException_MaxPagesHorizontally"] = "The maximum pages horizontally must be between 0 and 32767.";
        this["LE_ArgumentOutOfRangeException_MaxPagesVertically"] = "The maximum pages vertically must be between 0 and 32767.";
        this["LE_ArgumentOutOfRangeException_MaxRecursionIterations"] = "The maximum recursion iterations must be between 1 and 32767.";
        this["LE_ArgumentOutOfRangeException_MaxSortConditions"] = "There cannot be more than {0} sort conditions in the collection.";
        this["LE_ArgumentOutOfRangeException_NegativeStartIndex"] = "The start index cannot be negative.";
        this["LE_ArgumentOutOfRangeException_NumberOfCopies"] = "The number of copies must be between 1 and 65535.";
        this["LE_ArgumentOutOfRangeException_Per"] = "per value should be between 0 and nPer + 1";
        this["LE_ArgumentOutOfRangeException_Rate"] = "Rate should be greater than -1";
        this["LE_ArgumentOutOfRangeException_Resolution"] = "The resolution must be between 0 and 65535.";
        this["LE_ArgumentOutOfRangeException_RowHeight"] = "The row height must be between 0 and 8192.";
        this["LE_ArgumentOutOfRangeException_ScalingFactor"] = "The scaling factor must be between 10 and 400.";
        this["LE_ArgumentOutOfRangeException_StartPageNumber"] = "The starting page number must be between -32765 and 32767.";
        this["LE_ArgumentOutOfRangeException_TabBarWidth"] = "The tab bar width must be between 0 and 1000.";
        this["LE_ArgumentOutOfRangeException_TopPaneHeight"] = "The pane height specified is outside the valid range of {0} and {1}.";
        this["LE_AutoColorNotAllowed"] = "The color can not be 'Auto'.";
        this["LE_Axis_MajorMinorUnit"] = "The value of the majorUnit parameter must be greater than the value of the minorUnit parameter.";
        this["LE_Axis_NoCrossAxis"] = "If the CrossAxis property is set on one Axis object, it must be set on all of them. If your chart has only two axes, the crossing axis can be automatically determined, but only if the CrossAxis property is left unset on all Axis objects.";
        this["LE_Biff8SerializerNotLoaded"] = "The '{0}' format requires a serializer that is not loaded, in JavaScript this is contained in the infragistics.excel_serialization_biff8.js file";
        this["LE_CategoryAxisBinning_BinWidthAndNumberOfBins"] = "The 'binWidth' and 'numberOfBins' parameters are mutually exclusive. Both can be unspecified, but if one is specified, the other must not be.";
        this["LE_ChartGradientFill_EmptyStops"] = "Must contain at least one gradient stop.";
        this["LE_ChartObject_DifferentChart"] = "The object instance being assigned is associated with a different chart, and cannot be assigned to this instance.";
        this["LE_ColumnsToRepeatAtLeftAreOutsideAvailableRange"] = "The print options have columns that repeat at the left which are outside the range of available columns in the new format.";
        this["LE_ComboChartGroupCollection_DoesNotExist"] = "The specified ComboChartGroup does not exist in this collection.";
        this["LE_FillPercentInvalid"] = "The value {0} is not a valid value for the {1} property.";
        this["LE_FormatLimitError_Indent"] = "The Indent exceeds the maximum value of {0} provided by the current format.";
        this["LE_FormatLimitError_MacroWorkbook"] = "The workbook has VBA code and cannot be saved as a macro-enabled workbook.";
        this["LE_FormatLimitError_MaxColumnIndex"] = "The column index of {0} is greater than the {1} maximum supported by the specified format.";
        this["LE_FormatLimitError_MaxRowIndex"] = "The row index of {0} exceeds the {1} maximum supported by this format.";
        this["LE_FormulaParseException_ArrayContainsConstants"] = "A array can only contain constant expressions.";
        this["LE_FormulaParseException_ArrayHasEmptyFirstRow"] = "A constant array in the formula has no items in the first row.";
        this["LE_FormulaParseException_ArrayHasMisalignedRows"] = "A constant array in the formula has misaligned rows. Each row in an array must have the same number of columns.";
        this["LE_FormulaParseException_CellReferenceAfterWorkbookName"] = "An external workbook reference must be followed by a named reference, not a cell reference.";
        this["LE_FormulaParseException_ExtraExpressions"] = "The formula has extra expressions after the end of it.";
        this["LE_FormulaParseException_FunctionMissingClosingParen"] = "A function in the formula has no closing parenthesis.";
        this["LE_FormulaParseException_FunctionNestingTooDeep"] = "A function in the formula is nested too deeply in other functions.";
        this["LE_FormulaParseException_IncorrectNumberOfArguments"] = "A function in the formula has not been given the correct number of arguments.";
        this["LE_FormulaParseException_InvalidArguments"] = "An operator or function in the formula has invalid arguments.";
        this["LE_FormulaParseException_InvalidConditionalFormatFormula"] = "A conditional format formula cannot use reference operators such as unions or intersections, array constants or structured table references.";
        this["LE_FormulaParseException_InvalidErrorValue"] = "The error type specified is not valid.  It must be one of the following values: \"#NULL!\", \"#DIV/0!\", \"#VALUE!\", \"#REF!\", \"#NAME?\", \"#NUM!\", or \"#N/A\".";
        this["LE_FormulaParseException_InvalidFileNameInBrackets"] = "A file name between square brackets was invalid.";
        this["LE_FormulaParseException_InvalidStructuredTableReference"] = "The structured table reference is incorrect.";
        this["LE_FormulaParseException_InvalidWorkbookName"] = "The workbook reference in quotes is not a valid workbook file name.";
        this["LE_FormulaParseException_InvalidWorksheetName"] = "The worksheet name is invalid.";
        this["LE_FormulaParseException_MacroFunctionNotAllowed"] = "The '{0}' functions is only valid in a named reference.";
        this["LE_FormulaParseException_Message_PortionWithError"] = "Portion with error: {0}";
        this["LE_FormulaParseException_MissingArgumentAfterBinary"] = "A binary operator in the formula is missing an operand after it.";
        this["LE_FormulaParseException_MissingArgumentAfterParen"] = "There is no expression following an open parenthesis.";
        this["LE_FormulaParseException_MissingArgumentAfterUnary"] = "A unary operator in the formula was not followed by a valid expression.";
        this["LE_FormulaParseException_MissingArgumentBeforeBinary"] = "A binary operator in the formula is missing an operand before it.";
        this["LE_FormulaParseException_NamedReferenceRefsNeedSheetName"] = "All cell references in a named reference formula must identify the worksheet.";
        this["LE_FormulaParseException_NoElementAfterArraySerapator"] = "There is no array element after an element separator in the formula.";
        this["LE_FormulaParseException_NoEqualsSign"] = "The formula must start with an equals sign.";
        this["LE_FormulaParseException_NoExclamationAfterWorkbookName"] = "The workbook reference must be followed by an exclamation point.";
        this["LE_FormulaParseException_NoExclamationAfterWorksheetName"] = "The worksheet reference must be followed by an exclamation point.";
        this["LE_FormulaParseException_NoExpressions"] = "The formula has no valid expressions after the equal sign.";
        this["LE_FormulaParseException_NoFileNameAfterBracket"] = "A valid file name was expected after the open square bracket.";
        this["LE_FormulaParseException_NoValidTermAfterWorkbookName"] = "An external workbook reference must be followed by a named reference.";
        this["LE_FormulaParseException_NoValidTermAfterWorksheetName"] = "A worksheet reference must be followed by a cell or named reference.";
        this["LE_FormulaParseException_NoWorksheetAfterWorkbookName"] = "A workbook file name in square brackets must be followed by a worksheet name.";
        this["LE_FormulaParseException_StringConstantLengthTooLong"] = "The specified formula cannot contain a string longer than {0} characters.";
        this["LE_FormulaParseException_TooLong"] = "The maximum length of a formula cannot exceed {0} for the specified workbook format.";
        this["LE_FormulaParseException_UnknownFunction"] = "A function in the formula does not have a valid function name.";
        this["LE_FormulaParseException_UnmatchedOpenBracket"] = "A constant array in the formula does not have a closing bracket.";
        this["LE_FormulaParseException_UnmatchedOpenParen"] = "An open parenthesis in the formula does not have a matching closing parenthesis.";
        this["LE_FormulaParseException_UnmatchedOpenSquareBracket"] = "A closing square bracket was expected after the workbook file name.";
        this["LE_FormulaParseException_WorkbookNameMissingEndQuote"] = "The workbook reference has no ending quote.";
        this["LE_FormulaParseException_WorksheetRangeMissingEndingName"] = "The worksheet range does not specify a second worksheet name.";
        this["LE_GradientStop_InvalidPosition"] = "Must specify a number between 0 and 1.";
        this["LE_IconSetInvalid"] = "'IconSetNoIcon' is not a valid setting for the IconSet property.";
        this["LE_IndexOutOfRangeException_ArrayBounds"] = "Index was outside the bounds of the array.";
        this["LE_InvalidEnumArgumentException_DefaultPatternCannotBeUsed"] = "The Default FillPatternStyle cannot be used to create a CellFillPattern.";
        this["LE_InvalidLineWeight"] = "LineWeight must not be less than 0 or greater than 1584.";
        this["LE_InvalidOperationException_AnchorCommentBeforeApplyingToCell"] = "The comment must have both the TopLeftCornerCell and BottomRightCornerCell set or they must be both null before it is applied to a cell.";
        this["LE_InvalidOperationException_AnchorShapeBeforeAddingToCollection"] = "The shape must have both the TopLeftCornerCell and BottomRightCornerCell set before it is added to a worksheet or group.";
        this["LE_InvalidOperationException_ArrayFormulaAlreadyApplied"] = "The array formula is already applied to a cell range. Clear the existing cell range first.";
        this["LE_InvalidOperationException_ArrayFormulaAppliedInTable"] = "Array formulas cannot be applied to an area where a table is present.";
        this["LE_InvalidOperationException_ArrayFormulaInMergedCell"] = "Array formulas are not valid in merged cells.";
        this["LE_InvalidOperationException_BottomRightAnchorFromOtherWorksheet"] = "Adding the shape to this collection will place it on a different worksheet than its BottomRightCornerCell.";
        this["LE_InvalidOperationException_BuiltInStyleNameCannotBeChanged"] = "The name of a built in style cannot be changed.";
        this["LE_InvalidOperationException_CannotAddColorsToPaletteDirectly"] = "Colors cannot be added to the WorkbookColorPalette. Use the indexer to set a color at a specific index.";
        this["LE_InvalidOperationException_CannotAddParagraphDirectly"] = "Paragraphs cannot be added directly.";
        this["LE_InvalidOperationException_CannotAddTableDirectly"] = "WorksheetTable instances cannot be directly inserted into the collection. Use the Add method.";
        this["LE_InvalidOperationException_CannotAddTableToRemovedWorksheet"] = "Tables cannot be added to a worksheet which has been removed from its owning workbook.";
        this["LE_InvalidOperationException_CannotApplyFilterWhileHeaderRowIsHidden"] = "A filter cannot be applied while the table header row is hidden.";
        this["LE_InvalidOperationException_CannotApplyFilterWhileUIIsHidden"] = "A filter cannot be applied while the filter UI is hidden.";
        this["LE_InvalidOperationException_CannotInsertTableRow_LossOfData"] = "The {0} cannot be inserted because it would shift data off the bottom of the worksheet.";
        this["LE_InvalidOperationException_CannotInsertTableRow_LossOfObject"] = "The {0} cannot be inserted because it would shift a shape or comment off the bottom of the worksheet.";
        this["LE_InvalidOperationException_CannotInsertTableRow_SplitBlockingValue"] = "The {0} cannot be inserted because it would shift cells in a array formula or data table.";
        this["LE_InvalidOperationException_CannotInsertTableRow_SplitMergedRegion"] = "The {0} cannot be inserted because it would shift cells in a merged region.";
        this["LE_InvalidOperationException_CannotInsertTableRow_SplitTable"] = "The {0} cannot be inserted because it would shift cells in another table.";
        this["LE_InvalidOperationException_CannotInsertTableRow_TableOnBottomOfWorksheet"] = "The {0} cannot be inserted because the table is on the bottom of the worksheet.";
        this["LE_InvalidOperationException_CannotModifyKeysCollection"] = "The Keys collection cannot be modified.";
        this["LE_InvalidOperationException_CannotModifyStandardTableStyle"] = "Standard table styles cannot be modified.";
        this["LE_InvalidOperationException_CannotModifyValuesCollection"] = "The Values collection cannot be modified.";
        this["LE_InvalidOperationException_CannotMoveDisconnectedWorksheet"] = "The worksheet cannot be moved because it does not belong to a workbook.";
        this["LE_InvalidOperationException_CannotRemoveColorsToPaletteDirectly"] = "Colors cannot be removed from the WorkbookColorPalette. Use the Reset method to clear all custom colors.";
        this["LE_InvalidOperationException_CannotRemoveNormalStyle"] = "The Normal style cannot be removed.";
        this["LE_InvalidOperationException_CannotSetParentStyleOnStyle"] = "The style cannot be set on a format which belongs to another style.";
        this["LE_InvalidOperationException_CannotShift_LossOfData"] = "Cannot shift data off sheet.";
        this["LE_InvalidOperationException_CannotShift_LossOfObject"] = "Cannot shift objects off sheet.";
        this["LE_InvalidOperationException_CannotShift_SplitBlockingValue"] = "Cannot shift in a array formula or data table.";
        this["LE_InvalidOperationException_CannotShift_SplitMergedRegion"] = "Cannot shift in a merged region.";
        this["LE_InvalidOperationException_CannotShift_SplitTable"] = "Cannot shift in table.";
        this["LE_InvalidOperationException_CantAddChartInChart"] = "A chart cannot be added to the Shapes collection of another chart.";
        this["LE_InvalidOperationException_CantAddCustomView"] = "Custom views cannot be added directly to the collection.";
        this["LE_InvalidOperationException_CantAddDataTable"] = "Data tables cannot be added directly.";
        this["LE_InvalidOperationException_CantAddMergedRegion"] = "Merged cells regions cannot be added directly.";
        this["LE_InvalidOperationException_CantAddNamedReference"] = "Named references cannot be added directly.";
        this["LE_InvalidOperationException_CantAddWorksheet"] = "Worksheets cannot be added directly to this collection.";
        this["LE_InvalidOperationException_CantApplyRemovedCustomView"] = "The custom view cannot be applied if it has been removed from the workbook's custom view collection.";
        this["LE_InvalidOperationException_CantChangeArrayFormula"] = "The cells of an array formula cannot be changed.";
        this["LE_InvalidOperationException_CantChangeDataTable"] = "The interior cells of a data table cannot be changed.";
        this["LE_InvalidOperationException_CantModifyCollection"] = "The collection cannot be modified.";
        this["LE_InvalidOperationException_CantOverlapArrayFormula"] = "A merged cell region cannot overlap an array formula region.";
        this["LE_InvalidOperationException_CantOverlapDataTableInterior"] = "A merged cell region cannot overlap the cells in a data table if it extends outside the top row or left-most column of those cells.";
        this["LE_InvalidOperationException_CantSaveEditRangeWithoutRange"] = "The AllowedEditRanges of the worksheets must have at least one range.";
        this["LE_InvalidOperationException_CantSaveWithNoVisibleWorksheets"] = "At least one worksheet in the workbook must be visible.";
        this["LE_InvalidOperationException_CantSaveWithNoWorksheets"] = "A workbook with no worksheets cannot be saved";
        this["LE_InvalidOperationException_CantSetCircularityErrorDirectly"] = "The circularity error value cannot be applied directly to cells.";
        this["LE_InvalidOperationException_CantSetDataTableDirectly"] = "Data tables cannot be set as the value on a cell.";
        this["LE_InvalidOperationException_CantSetFormulaDirectly"] = "Formulas cannot be set on a cell directly, use the ApplyFormula method or one of the ApplyTo methods of the formula instance instead.";
        this["LE_InvalidOperationException_CellsInTableMinSize"] = "The region of cells in a data table must have at least two cells in each dimension.";
        this["LE_InvalidOperationException_ChartNotSupported"] = "WorksheetChart modifications are not supported in this format.";
        this["LE_InvalidOperationException_ClearUnknownShapeData"] = "All data for this shape is unknown, remove the shape from its collection instead.";
        this["LE_InvalidOperationException_CollectionLongerThanMaxValue"] = "The collection contains more entries than the specified maximum value allows.";
        this["LE_InvalidOperationException_CollectionModifiedWhileEnumerating"] = "The collection was modified while it was being enumerated.";
        this["LE_InvalidOperationException_CurrentTableRowAddressNeedsOriginCell"] = "To parse a structured table reference using the current row, an origin cell must be specified.";
        this["LE_InvalidOperationException_CustomViewNoVisibleWorksheets"] = "At least one worksheet in the custom view named \"{0}\" must be visible.";
        this["LE_InvalidOperationException_DataTableAppliedInTable"] = "A data table cannot be in an area where a table is present.";
        this["LE_InvalidOperationException_DataTableFormulaCannotBeApplied"] = "A data table formula cannot be applied directly to cells.";
        this["LE_InvalidOperationException_DataTableInMergedCell"] = "The interior cells of a data table cannot be part of a merged cell region.";
        this["LE_InvalidOperationException_DataTableRemoved"] = "The row and column input cells cannot be set after the data table has been removed from the worksheet.";
        this["LE_InvalidOperationException_DeprecatedFillColorSetWithGradientFill"] = "A fill pattern color cannot be set while a gradient is set on the cell.";
        this["LE_InvalidOperationException_EncryptedWorkbooksNotSupported"] = "The workbook being loaded is encrypted. Encrypted workbooks are not supported.";
        this["LE_InvalidOperationException_ExtensionDoesntMatchCurrentFormat"] = "The file name to which to save the file has an extension which doesn't match the current format of the workbook.";
        this["LE_InvalidOperationException_FixedValuesFilterMustAcceptAValue"] = "Cannot have a FixedValuesFilter which allows no values.";
        this["LE_InvalidOperationException_FormattedStringAlreadyOwned"] = "The formatted string is already the value of another cell or comment. Clone it first and apply the clone to the new cell or shape.";
        this["LE_InvalidOperationException_FormattedStringNotOwned"] = "The font properties cannot be accessed while the formatted string or text is not applied to a cell or shape.";
        this["LE_InvalidOperationException_FormattedTextAlreadyOwned"] = "The formatted string is already the value of another shape. Clone it first and apply the clone to the new cell or shape.";
        this["LE_InvalidOperationException_FormulaAlreadyOwned"] = "The formula is already applied to another cell.";
        this["LE_InvalidOperationException_FormulaReferencesInvalidCells"] = "The formula references cells which are not supported in the workbook's current file format.";
        this["LE_InvalidOperationException_GetBoundsBeforeAnchorsSet"] = "The shape does not have bounds before the anchor cells have been set.";
        this["LE_InvalidOperationException_HiddenWorksheetCannotBeSelected"] = "A hidden worksheet cannot be selected.";
        this["LE_InvalidOperationException_HyperlinkSealed"] = "The hyperlink cannot be modified.";
        this["LE_InvalidOperationException_ImageDisposed"] = "An Image of a WorksheetImage has been disposed or is invalid.";
        this["LE_InvalidOperationException_InputCellsBothNull"] = "The column input and row input cells cannot both be null.";
        this["LE_InvalidOperationException_InputCellsInTable"] = "The input cells can not be within the data table cells.";
        this["LE_InvalidOperationException_InputCellsSame"] = "The column input and row input cells cannot be the same cell.";
        this["LE_InvalidOperationException_InvalidCharacterRange"] = "The range of characters covered by the font no longer exists in the formatted string.";
        this["LE_InvalidOperationException_InvalidFormatOptionsInWholeTableArea"] = "The specified FormatOptions format value is invalid on the WholeTable table area.";
        this["LE_InvalidOperationException_InvalidFormatString"] = "The specified format string is invalid.";
        this["LE_InvalidOperationException_InvalidFormatString_GetTextCall"] = "The cell's format string is invalid. To be notified of this when the FormatString is set, set Workbook.ValidateFormatStrings to True.";
        this["LE_InvalidOperationException_InvalidForWorkbookFormat"] = "Formula is not valid for specified format.";
        this["LE_InvalidOperationException_InvalidHeaderCellColumnAreaFormatProperty"] = "The top border values cannot be set on the HeaderCell table column area format.";
        this["LE_InvalidOperationException_InvalidHeaderRowAreaFormatProperty"] = "The top border values cannot be set on the HeaderRow table area format.";
        this["LE_InvalidOperationException_InvalidTableStyleAreaFontProperty"] = "The {0} font value cannot be set on table style areas.";
        this["LE_InvalidOperationException_InvalidTableStyleAreaFormatOptions"] = "The specified FormatOptions format value is invalid on table style areas.";
        this["LE_InvalidOperationException_InvalidTableStyleAreaFormatProperty"] = "The {0} format value cannot be set on table style areas.";
        this["LE_InvalidOperationException_InvalidTotalsCellColumnAreaFormatProperty"] = "The bottom border values cannot be set on the TotalCell table column area format.";
        this["LE_InvalidOperationException_InvalidTotalsRowAreaFormatProperty"] = "The bottom border values cannot be set on the TotalsRow table area format.";
        this["LE_InvalidOperationException_InvalidWholeTableAreaFormatProperty"] = "Only the edge border values can be set on the WholeTable table area format.";
        this["LE_InvalidOperationException_LastColumnBeforeFirst"] = "The last column in the region should be greater than or equal to the first column.";
        this["LE_InvalidOperationException_LastRowBeforeFirst"] = "The last row in the region should be greater than the first row.";
        this["LE_InvalidOperationException_MaxCellFormats"] = "The maximum number of distinct cell formats in excel file is: {0}";
        this["LE_InvalidOperationException_MaxColors"] = "The maximum number of colors in an excel workbook is: {0}";
        this["LE_InvalidOperationException_MaxColumns"] = "The maximum number of columns in an excel worksheet with the current format is: {0}";
        this["LE_InvalidOperationException_MaxFonts"] = "The number of fonts in a workbook cannot exceed {0}.";
        this["LE_InvalidOperationException_MaxFormattedStrings"] = "The number of unique strings in a workbook cannot exceed {0}.";
        this["LE_InvalidOperationException_MaxRows"] = "The maximum number of rows in an excel worksheet with the current format is: {0}";
        this["LE_InvalidOperationException_MergedCellCrossesDataTableLeftColumn"] = "The left-most column of cells specified for the data table contains a merged cell region which extends outside the area of those cells.";
        this["LE_InvalidOperationException_MergedCellCrossesDataTableTopLeftCell"] = "The top-left cell of the cells specified for the data table is part of a merged cell which extends outside the area of those cells.";
        this["LE_InvalidOperationException_MergedCellCrossesDataTableTopRow"] = "The top row of cells specified for the data table contains a merged cell region which extends outside the area of those cells.";
        this["LE_InvalidOperationException_MergedCellsAppliedInTable"] = "Cells within a table cannot be merged.";
        this["LE_InvalidOperationException_NamedReferenceNameAlreadyExists"] = "The name \"{0}\" is used by a table or named reference in the workbook with the same scope.";
        this["LE_InvalidOperationException_NoRegionHasBeenSpecified"] = "No region has been specified.";
        this["LE_InvalidOperationException_NoWorksheetContextToSetShapeBounds"] = "This overload of Add cannot be called when the shapes collection is not associated with a Worksheet. Call the overload of Add which takes a Worksheet instance.";
        this["LE_InvalidOperationException_OverlappingTable"] = "There is another table in the specified region.";
        this["LE_InvalidOperationException_ReadOnlyFont"] = "The font object is read-only and cannot be changed.";
        this["LE_InvalidOperationException_ReadOnlyFormat"] = "The format object is read-only and cannot be changed.";
        this["LE_InvalidOperationException_RelativeR1C1AddressNeedsOriginCell"] = "To parse a relative R1C1 address, an origin cell must be specified.";
        this["LE_InvalidOperationException_ResizedTableMustBeOnWorksheet"] = "The table must be on a worksheet to be resized.";
        this["LE_InvalidOperationException_ResolvedFormatCannotBeModified"] = "The resolved cell format is read-only and cannot be changed.";
        this["LE_InvalidOperationException_ShapeCantChangeOrientation"] = "This shape cannot be rotated or flipped.";
        this["LE_InvalidOperationException_ShapeFillSolidIsImmutable"] = "ShapeFillSolid is immutable. Create a new ShapeFillSolid instead.";
        this["LE_InvalidOperationException_ShapeInAnotherCollection"] = "The shape already exists on another worksheet or shape group.";
        this["LE_InvalidOperationException_ShapeOutlineSolidIsImmutable"] = "ShapeOutlineSolid is immutable. Create a new ShapeOutlineSolid instead.";
        this["LE_InvalidOperationException_ShowFilterUIWhileHeaderRowHidden"] = "The filter UI cannot be shown while the header row is hidden.";
        this["LE_InvalidOperationException_SystemColorsAccessedFromWrongThread"] = "Cannot access SystemColors from a background thread.";
        this["LE_InvalidOperationException_TableReferenceMustBeUsedFromInsideTable"] = "The formula has a structured table reference which can only be used from inside a table.";
        this["LE_InvalidOperationException_TableReferenceToMissingTable"] = "The formula has a reference to a table which doesn't exist.";
        this["LE_InvalidOperationException_TableReferenceToMissingTableColumn"] = "The formula has a reference to a table column which doesn't exist.";
        this["LE_InvalidOperationException_TopLeftAnchorFromOtherWorksheet"] = "Adding the shape to this collection will place it on a different worksheet than its TopLeftCornerCell.";
        this["LE_InvalidOperationException_TotalsRowCannotBeShownInLastRow"] = "The totals row cannot be shown when the table occupies the last row in the worksheet.";
        this["LE_InvalidOperationException_UnknownBIFFFormat"] = "The workbook file was in an unknown BIFF format.";
        this["LE_InvalidOperationException_UnsupportedBIFFFormat"] = "The workbook file was saved in {0}, a format which is not supported.";
        this["LE_InvalidOperationException_WorkbookDataViolatesFormatLimits"] = "The workbook contains data which would exceed the limits imposed by the specified format.";
        this["LE_InvalidRegion"] = "Invalid region address.";
        this["LE_InvalidValueType"] = "'{0}' is not a valid value for the ValueType property.";
        this["LE_LocationNotSingleRowOrColumn"] = "Location reference is not valid because the cells are not all in the same column or row. Select cells that are all in a single column or row.";
        this["LE_LocationOrDataAreaInvalid"] = "The reference for the location or data range is not valid.";
        this["LE_LocationWorksheetMismatch"] = "Location must be from this worksheet.";
        this["LE_NotSingleTargetFormula"] = "Can only support single target formulas.";
        this["LE_NotSupportedException_CellType"] = "{0} is not a supported cell value type.";
        this["LE_NotSupportedException_NoPackageFactory"] = "packageFactory cannot be null. When loading from Excel2007 workbook format and using the Infragistics2.Documents.Excel assembly, you must provide an IPackageFactory to handle the packaging of data. If you are using the DotNet Framework 3.0 or higher, use the Infragistics3.Documents.Excel assembly instead, and the packaging will be handled by the WindowsBase class.";
        this["LE_OpenPackagingNonConformanceException_ContainsDublinCoreRefinements"] = "The IPackagePart is the core properties relationship, and contains refinements to Dublin Core elements other than 'dcterms:created' and 'dcterms:modified'.";
        this["LE_OpenPackagingNonConformanceException_ContainsXmlLanguageAttribute"] = "The IPackagePart is the core properties relationship, and contains elements which contain the 'xml:lang' attribute.";
        this["LE_OpenPackagingNonConformanceException_CorePropertiesRelationshipAlreadyProcessed"] = "The IPackagePart is the core properties relationship, but one has already been processed for the associated IPackage.";
        this["LE_OpenPackagingNonConformanceException_DuplicatePartName"] = "A IPackagePart with the same name already belongs to this IPackage. A IPackage cannot contain parts with identical names. Note that the check for duplicate values is case-insensitive.";
        this["LE_OpenPackagingNonConformanceException_UsesMarkupCompatibilityNamespace"] = "The IPackagePart is the core properties relationship, and uses the Markup Compatibility Namespace.";
        this["LE_OpenPackagingNonConformanceException_XmlContainsDocumentTypeDefinition"] = "A IPackagePart contained a DTD (Document Type Definition) declaration. Open Packaging Convention rules prohibit the use of XML content with DTD declarations.";
        this["LE_OpenPackagingNonConformanceException_XsiTypeAttributeInvalid"] = "The IPackagePart is the core properties relationship, and contains elements which contain the 'xsi:type' attribute, or contains elements which are required to and do not contain the 'xsi:type' attribute.";
        this["LE_OpenXmlSerializerNotLoaded"] = "The '{0}' format requires a serializer that is not loaded, in JavaScript this is contained in the infragistics.excel_serialization_openxml.js file";
        this["LE_PercentageValueOutOfRange"] = "The percentage value {0} must be between 0 and 100.";
        this["LE_PercentileValueOutOfRange"] = "The percentile value {0} must be between 0 and 100.";
        this["LE_PercentRangeInvalid"] = "The {0} must be less than the {1}.";
        this["LE_RowsToRepeatAtTopAreOutsideAvailableRange"] = "The print options have rows that repeat at the top which are outside the range of available rows in the new format.";
        this["LE_Serialization_NoPrimaryCategoryAxis"] = "The chart type '{0}' requires a primary category axis. Add a primary category axis to the chart's AxisCollection.";
        this["LE_Serialization_NoPrimaryValueAxis"] = "The chart type '{0}' requires a primary value axis. Add a primary value axis to the chart's AxisCollection.";
        this["LE_Series_ChartType_ChartEx"] = "'{0}' is invalid for a series ChartType in a '{1}' chart.";
        this["LE_Series_ChartType_InvalidForComboChart"] = "The chart type '{0}' is not valid for use within a combo chart.";
        this["LE_Series_ChartType_NonCombo"] = "The chart type for this series is determined by the parent chart's type ('{0}'), and cannot be set. Set the parent chart's ChartType property to '{1}' instead.";
        this["LE_Series_Explosion_OutOfRange"] = "The Explosion property supports values in the range of 0 to 400, inclusive.";
        this["LE_Series_InvalidAxisGroup"] = "The AxisGroup property cannot be set to '{0}' because a series of type '{1}' exists on the same axis, which cannot share the same axis as a series of type '{2}'.";
        this["LE_Series_InvalidSeriesTypeForComboChart"] = "A series of type '{0}' cannot be used in a combo chart.";
        this["LE_Series_NoPrimaryAxis"] = "At least one series must be plotted on the primary axis. Change the AxisGroup property to 'Primary' for at least one Series.";
        this["LE_Series_OwningSeries_NotClusteredColumn"] = "The OwningSeries property can only be set to a clustered column series in a Pareto chart.";
        this["LE_Series_OwningSeries_NotParetoLine"] = "The OwningSeries property can only be set for a line series in a Pareto chart.";
        this["LE_Series_OwningSeries_Same"] = "The OwningSeries cannot reference itself.";
        this["LE_Series_SeriesType_ChartEx"] = "The SeriesType value '{0}' is invalid for a '{1}' chart.";
        this["LE_Series_SeriesType_NonCombo"] = "The Type property is only applicable for combo charts, and cannot be set for a chart of type '{0}'.";
        this["LE_SetValue_Formula"] = "The '{0}' value type is only valid for formulas. Use the SetFormula method instead.";
        this["LE_SetValue_NonNumeric"] = "The value parameter is not applicable for the value type '{0}'. Use the overload that takes only a value type.";
        this["LE_SetValue_Numeric"] = "The value parameter must be specified for the value type '{0}'. Use the overload that takes both the value and value type.";
        this["LE_WorksheetChart_ChartType_ChartEx_CannotTransition"] = "The ChartType property cannot be changed from '{0}' to '{1}'.";
        this["LE_WorksheetChart_ChartType_ComboChart_From"] = "The ChartType property of a combo chart cannot be changed to '{0}'.";
        this["LE_WorksheetChart_ChartType_ComboChart_To"] = "A chart of type '{0}' cannot be changed to 'Combo'. A new combo chart can be created using the AddChart method, but changing an existing chart to a combo chart is not supported.";
        this["LE_WorksheetChart_ComboChart_NotEnoughSeries"] = "A combo chart requires at least 2 series. Add more items to the chart's SeriesCollection.";
        this["LE_WorksheetChart_MissingRequiredAxis_StockCharts"] = "A '{0}' chart requires a primary category axis, a primary value axis, a secondary category axis and a secondary value axis.";
        this["LE_WorksheetChart_NotEnoughSeries"] = "A '{0}' chart requires a minimum of {1} series. To use this chart type you must add more items to the SeriesCollection.";
        this["LE_WorksheetChart_Save_Series"] = "A '{0}' chart must contain at least one series. Add more series to the chart before attempting to save the workbook.";
        this["LE_WorksheetChart_Save_Series_Pareto"] = "A 'Pareto' chart must contain one 'ColumnClustered' series and one 'Pareto' series. Add the appropriate series to the chart before attempting to save the workbook.";
        this["LE_WorksheetChart_SetComboChartSourceData_InvalidChartTypes"] = "One or more of the specified chart types are not valid for use within a combo chart: {0}";
        this["LE_WorksheetChart_SetComboChartSourceData_NotAComboChart"] = "SetComboChartSourceData cannot be called because the current chart type is '{0}'. Change the ChartType to 'Combo'.";
        this["LE_WorksheetChart_SetComboChartSourceData_SeriesChartTypesNotSupported"] = "The seriesChartTypes parameter must be null for a '{0}' chart.";
        this["LE_WorksheetChart_SetSourceData_NotEnoughSeries"] = "Combo charts require a minimum of 2 series. Change the 'dataRange' parameter to a range which will result in at least 2 series.";
        this["LE_WorksheetChart_SetSourceData_TooManyAxes"] = "The specified combination of chart types require more than the maximum allowable number of axes.";
        this["LE_WorksheetChart_StockChartNotSupported"] = "Editing of the chart type '{0}' is currently not supported.";
        this["LE_WorksheetChart_UnknownChartNotSupported"] = "This chart was loaded from an existing worksheet, but it's ChartType could not be determined. Editing of unknown chart types is currently not supported.";
        this["LER_ArgumentOutOfRangeException_OutlineLevel"] = "Outline level must be between 0 and 7.";
        this["LER_Exception_KeyNotFound"] = "Key not found.";
        this["LER_Exception_MergedRegionsOverlap"] = "Merged cell regions can't overlap.";
        this["TableHeaderRowDescription"] = "header row";
        this["TableInsertRowDescription"] = "insert row";
        this["TableTotalsRowDescription"] = "totals row";
        this["Value_UCErrorCode_Div"] = "#DIV/0!";
        this["Value_UCErrorCode_Fail"] = "#FAIL";
        this["Value_UCErrorCode_NA"] = "#N/A";
        this["Value_UCErrorCode_Name"] = "#NAME?";
        this["Value_UCErrorCode_Null"] = "#NULL!";
        this["Value_UCErrorCode_Num"] = "#NUM!";
        this["Value_UCErrorCode_Ok"] = "#OK";
        this["Value_UCErrorCode_Reference"] = "#REF!";
        this["Value_UCErrorCode_Unknown"] = "#N/A";
        this["Value_UCErrorCode_Value"] = "#VALUE!";
        this["WorkbookColorInfo_Automatic_Description"] = "Automatic";
        this["WorkbookColorInfo_Description"] = "ColorInfo: {0}";
        this["WorkbookColorInfo_WithTint_Description"] = "ColorInfo: {0}, Tint: {1}";
        this["WorksheetShapeSerialization_GroupName"] = "Group";
        this["WorksheetShapeSerialization_ImageName"] = "Image";
        this["WorksheetShapeSerialization_ShapeName"] = "Shape";
    }
    return ExcelLocaleEn;
}());
export { ExcelLocaleEn };
