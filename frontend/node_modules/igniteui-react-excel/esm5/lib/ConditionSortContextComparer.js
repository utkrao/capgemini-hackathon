/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "igniteui-react-core";
import { IComparer$1_$type } from "igniteui-react-core";
import { ConditionSortContext } from "./ConditionSortContext";
import { ConditionBase } from "./ConditionBase";
import { List$1 } from "igniteui-react-core";
/**
 * @hidden
 */
var ConditionSortContextComparer = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ConditionSortContextComparer, _super);
    function ConditionSortContextComparer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ConditionSortContextComparer.prototype.compare = function (a, b) {
        if (a == null || b == null) {
            return 0;
        }
        return Base.compareSimple(a.b, b.b);
    };
    ConditionSortContextComparer._a = function (a) {
        var b = new List$1(ConditionBase.$, 2, a.count);
        for (var c = 0; c < a.count; c++) {
            b.add(a.item(c).a);
        }
        return b;
    };
    ConditionSortContextComparer.$t = markType(ConditionSortContextComparer, 'ConditionSortContextComparer', Base.$, [IComparer$1_$type.specialize(ConditionSortContext.$)]);
    return ConditionSortContextComparer;
}(Base));
export { ConditionSortContextComparer };
