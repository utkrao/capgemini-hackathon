/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType, typeCast, Stream, Number_$type, IDisposable_$type } from "igniteui-react-core";
import { IComparer$1_$type } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { BitConverter } from "igniteui-react-core";
import { StringUtilities } from "./StringUtilities";
import { dateToFileTime, dateNow } from "igniteui-react-core";
import { startsWith1, stringEquals1, stringCompare1 } from "igniteui-react-core";
import { Buffer } from "igniteui-react-core";
import { intDivide, truncate, logBase } from "igniteui-react-core";
import { Encoding } from "igniteui-react-core";
import { stringCreateFromCharArraySlice, stringEmpty } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { BinaryReader } from "igniteui-react-core";
import { SeekableBufferedStream } from "./SeekableBufferedStream";
import { Guid } from "igniteui-react-core";
import { BinaryWriter } from "igniteui-react-core";
/**
 * @hidden
 */
var DirectoryEntry = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DirectoryEntry, _super);
    function DirectoryEntry(a, b) {
        var _this = _super.call(this) || this;
        _this.o = 0;
        _this.s = null;
        _this.q = 0;
        _this.a = null;
        _this.c = null;
        _this.e = null;
        _this.g = null;
        _this.i = null;
        _this.k = null;
        _this.s = a;
        _this.k = b;
        return _this;
    }
    DirectoryEntry.u = function (a, b) {
        if (a.length != b) {
        }
    };
    Object.defineProperty(DirectoryEntry.prototype, "p", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DirectoryEntry.prototype, "t", {
        get: function () {
            return this.s;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DirectoryEntry.prototype, "l", {
        get: function () {
            return this.k;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DirectoryEntry.prototype, "j", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DirectoryEntry.prototype, "r", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DirectoryEntry.prototype, "b", {
        get: function () {
            if (this.a == null) {
                this.a = new Array(8);
            }
            return this.a;
        },
        set: function (a) {
            DirectoryEntry.u(a, 8);
            this.a = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DirectoryEntry.prototype, "d", {
        get: function () {
            if (this.c == null) {
                this.c = new Array(8);
            }
            return this.c;
        },
        set: function (a) {
            DirectoryEntry.u(a, 8);
            this.c = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DirectoryEntry.prototype, "f", {
        get: function () {
            if (this.e == null) {
                this.e = new Array(16);
            }
            return this.e;
        },
        set: function (a) {
            DirectoryEntry.u(a, 16);
            this.e = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DirectoryEntry.prototype, "h", {
        get: function () {
            if (this.g == null) {
                this.g = new Array(4);
            }
            return this.g;
        },
        set: function (a) {
            DirectoryEntry.u(a, 4);
            this.g = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DirectoryEntry, "n", {
        get: function () {
            if (DirectoryEntry.m == null) {
                DirectoryEntry.m = new DirectoryEntry_NameComparer();
            }
            return DirectoryEntry.m;
        },
        enumerable: false,
        configurable: true
    });
    DirectoryEntry.$t = markType(DirectoryEntry, 'DirectoryEntry');
    DirectoryEntry.m = null;
    return DirectoryEntry;
}(Base));
export { DirectoryEntry };
/**
 * @hidden
 */
var Directory = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(Directory, _super);
    function Directory(a, b) {
        var _this = _super.call(this, a, b) || this;
        _this.x = null;
        _this.x = new List$1(DirectoryEntry.$, 0);
        return _this;
    }
    Directory.prototype.v = function (a, b) {
        var c = new DirectoryStream_DirectoryEntryNode();
        var d = null;
        var e;
        var f = a.indexOf('\\');
        if (f < 0) {
            for (var g = 0; g < this.y.count; g++) {
                var h = typeCast(SSFile.$, this.y._inner[g]);
                if (h != null && h.t == a) {
                    return h;
                }
            }
            e = new SSFile(a, c);
            d = e;
        }
        else {
            var i = a.substr(0, f);
            for (var j = 0; j < this.y.count; j++) {
                var k = typeCast(Directory.$, this.y._inner[j]);
                if (k != null && k.t == i) {
                    return k.v(a.substr(f + 1), b);
                }
            }
            var l = new Directory(i, c);
            e = l.v(a.substr(f + 1), b);
            d = l;
        }
        d.p = -2;
        d.b = BitConverter.f(dateToFileTime(dateNow()));
        d.d = d.b;
        c.c = -1;
        c.d = -1;
        c.e = -1;
        c.b = 0;
        c.a = d;
        d.j = this;
        var m;
        for (m = 0; m < this.y.count; m++) {
            if (DirectoryEntry.n.compare(d, this.y._inner[m]) < 0) {
                break;
            }
        }
        this.y.insert(m, d);
        b._aw.add(c);
        return e;
    };
    Directory.prototype.w = function (a, b) {
        for (var c = 0; c < this.x.count; c++) {
            var d = this.x._inner[c];
            var e = a + d.t;
            var f = typeCast(Directory.$, d);
            if (f != null) {
                if (startsWith1(b, e, StringUtilities.j)) {
                    return f.w(e + '\\', b);
                }
            }
            else if (stringEquals1(e, b, StringUtilities.j)) {
                return d;
            }
        }
        return null;
    };
    Object.defineProperty(Directory.prototype, "y", {
        get: function () {
            return this.x;
        },
        enumerable: false,
        configurable: true
    });
    Directory.$t = markType(Directory, 'Directory', DirectoryEntry.$);
    return Directory;
}(DirectoryEntry));
export { Directory };
/**
 * @hidden
 */
var DirectoryEntry_NameComparer = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DirectoryEntry_NameComparer, _super);
    function DirectoryEntry_NameComparer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DirectoryEntry_NameComparer.prototype.compare = function (a, b) {
        if (a.t.length < b.t.length) {
            return -1;
        }
        if (a.t.length == b.t.length) {
            return stringCompare1(a.t, b.t, 5);
        }
        return 1;
    };
    DirectoryEntry_NameComparer.$t = markType(DirectoryEntry_NameComparer, 'DirectoryEntry_NameComparer', Base.$, [IComparer$1_$type.specialize(DirectoryEntry.$)]);
    return DirectoryEntry_NameComparer;
}(Base));
export { DirectoryEntry_NameComparer };
/**
 * @hidden
 */
var StructuredStorageStream = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StructuredStorageStream, _super);
    function StructuredStorageStream(a) {
        var _rest = [];
        for (var _m = 1; _m < arguments.length; _m++) {
            _rest[_m - 1] = arguments[_m];
        }
        var _this = _super.call(this) || this;
        _this._q = null;
        _this._aj = null;
        _this._y = 0;
        _this._ag = 0;
        _this._t = false;
        _this._ab = 0;
        _this._ac = 0;
        _this._w = 0;
        _this._x = 0;
        _this._ad = 0;
        _this._ai = 0;
        _this._o = null;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    var f = [c, d, e, false];
                    {
                        var h = f[0];
                        var i = f[1];
                        var j = f[2];
                        var k = f[3];
                        _this._o = new Array(8);
                        _this._q = h;
                        _this._y = i;
                        _this._ab = j;
                        _this._t = k;
                        _this._al();
                    }
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    var f = _rest[3];
                    _this._o = new Array(8);
                    _this._q = c;
                    _this._y = d;
                    _this._ab = e;
                    _this._t = f;
                    _this._al();
                }
                break;
        }
        return _this;
    }
    StructuredStorageStream.prototype.get_canRead = function () {
        return true;
    };
    Object.defineProperty(StructuredStorageStream.prototype, "canRead", {
        get: function () {
            return this.get_canRead();
        },
        enumerable: false,
        configurable: true
    });
    StructuredStorageStream.prototype.get_canSeek = function () {
        return true;
    };
    Object.defineProperty(StructuredStorageStream.prototype, "canSeek", {
        get: function () {
            return this.get_canSeek();
        },
        enumerable: false,
        configurable: true
    });
    StructuredStorageStream.prototype.get_canWrite = function () {
        return true;
    };
    Object.defineProperty(StructuredStorageStream.prototype, "canWrite", {
        get: function () {
            return this.get_canWrite();
        },
        enumerable: false,
        configurable: true
    });
    StructuredStorageStream.prototype.disposeCore = function (a) {
        if (a) {
            if (this._q != null && this._q._g) {
                var b = this.length % this._ag;
                if (b != 0) {
                    this.position = this.length;
                    var c = (this._ag - b);
                    var d = new Array(c);
                    this._ah(d, 0, d.length);
                }
            }
        }
        _super.prototype.disposeCore.call(this, a);
    };
    StructuredStorageStream.prototype.flush = function () {
    };
    StructuredStorageStream.prototype.get_length = function () {
        return this._ab;
    };
    Object.defineProperty(StructuredStorageStream.prototype, "length", {
        get: function () {
            return this.get_length();
        },
        enumerable: false,
        configurable: true
    });
    StructuredStorageStream.prototype.get_position = function () {
        return this._ac;
    };
    StructuredStorageStream.prototype.set_position = function (a) {
        if (this._ac == a) {
            return;
        }
        if (a < 0) {
            return;
        }
        var b = (a - this._ac);
        var c = this._ad + b;
        this._ac = a;
        if (0 <= c && c < this._ag && this._ai == this._aj.position) {
            this._ad = c;
            this._ai += b;
            this._aj.position = this._ai;
        }
        else {
            var d = this._x;
            var e = this._w;
            var f = this._ad;
            this._ap();
            if (this._w >= 0) {
                this._ai = this._q._y(this._w, this._ad, this._t);
            }
            else {
                this._x = d;
                this._w = e;
                this._ad = f;
                this._ai = -1;
            }
        }
    };
    Object.defineProperty(StructuredStorageStream.prototype, "position", {
        get: function () {
            return this.get_position();
        },
        set: function (a) {
            this.set_position(a);
        },
        enumerable: false,
        configurable: true
    });
    StructuredStorageStream.prototype.read = function (a, b, c) {
        if (a == null) {
            return 0;
        }
        if (b < 0) {
            return 0;
        }
        if (c < 0) {
            return 0;
        }
        if (b + c > a.length) {
            return 0;
        }
        var d = Math.min(c, (this._ab - this._ac));
        if (d < 0) {
            return 0;
        }
        var e = 0;
        while (e < d) {
            var f = this._ae(a, b + e, d - e);
            if (f == 0) {
                break;
            }
            e += f;
        }
        return e;
    };
    StructuredStorageStream.prototype.seek = function (a, b) {
        switch (b) {
            case 0:
                this.position = a;
                break;
            case 1:
                this.position = this._ac + a;
                break;
            case 2:
                this.position = this._ab + a;
                break;
            default: break;
        }
        return this._ac;
    };
    StructuredStorageStream.prototype.setLength = function (a) {
        var _this = this;
        if (a == this._ab) {
            return;
        }
        if (a < this._ab) {
            return;
        }
        if (this._y < 0) {
            this._am(this._v(-1));
        }
        var b = ((intDivide((a - 1), this._ag)) + 1);
        var c = this._x;
        var d = this._w;
        if (d < 0) {
            c = 0;
            d = this._y;
        }
        var _loop_1 = function () {
            if (b <= c + 1) {
                return "break";
            }
            var e = 1;
            var f = ((function () { var g = _this._aa(d, e); e = g.p1; return g.ret; })());
            if (f < 0) {
                return "break";
            }
            d = f;
            c++;
        };
        while (true) {
            var state_1 = _loop_1();
            if (state_1 === "break")
                break;
        }
        while (c < b - 1) {
            d = this._v(d);
            c++;
        }
        this._an(a);
    };
    StructuredStorageStream.prototype.write = function (a, b, c) {
        if (a == null) {
            return;
        }
        if (b < 0) {
            return;
        }
        if (c < 0) {
            return;
        }
        if (b + c > a.length) {
            return;
        }
        var d = 0;
        var e = this._ac + c;
        if (e > this._ab) {
            this.setLength(e);
        }
        while (d < c) {
            d += this._ah(a, b + d, c - d);
        }
    };
    StructuredStorageStream.prototype._v = function (a) {
        return this._q._l(a, this._t, this._s);
    };
    StructuredStorageStream.prototype._aa = function (a, b) {
        var _this = this;
        return {
            ret: ((function () { var c = _this._q._o(a, b, _this._t); b = c.p1; return c.ret; })()),
            p1: b
        };
    };
    StructuredStorageStream.prototype._readBytes = function (a) {
        var b = new Array(a);
        var c = this.read(b, 0, b.length);
        if (c == a) {
            return b;
        }
        if (c == 0) {
            return new Array(0);
        }
        var d = new Array(c);
        Buffer.c(b, 0, d, 0, c);
        return d;
    };
    StructuredStorageStream.prototype._ae = function (a, b, c) {
        var _this = this;
        this._ao();
        if (this._ad == this._ag) {
            var d_1 = 1;
            this._w = ((function () { var e = _this._aa(_this._w, d_1); d_1 = e.p1; return e.ret; })());
            this._x++;
            this._ad = 0;
            if (this._w >= 0) {
                this._ai = this._q._z(this._w, this._t);
            }
            else {
                this._x = -1;
                this._ai = -1;
                return 0;
            }
        }
        var e = Math.min(c, this._ag - this._ad);
        var f = this._aj.read(a, b, e);
        this._ac += f;
        this._ad += f;
        this._ai += f;
        return f;
    };
    StructuredStorageStream.prototype._readInt16 = function () {
        if (this.read(this._o, 0, 2) != 2) {
            return -1;
        }
        return BitConverter.p(this._o, 0);
    };
    StructuredStorageStream.prototype._readInt32 = function () {
        if (this.read(this._o, 0, 4) != 4) {
            return -1;
        }
        return BitConverter.q(this._o, 0);
    };
    StructuredStorageStream.prototype._readUInt16 = function () {
        if (this.read(this._o, 0, 2) != 2) {
            return 0;
        }
        return BitConverter.w(this._o, 0);
    };
    StructuredStorageStream.prototype._al = function () {
        this._w = -1;
        this._x = -1;
        this._ad = -1;
        this._ai = -1;
        this._ag = this._q._p(this._t);
        this._aj = this._q._ad(this._t);
    };
    StructuredStorageStream.prototype._am = function (a) {
        this._y = a;
    };
    StructuredStorageStream.prototype._an = function (a) {
        this._ab = a;
    };
    StructuredStorageStream.prototype._ao = function () {
        if (this._ai == this._aj.position) {
            return;
        }
        this._ap();
        this._ai = this._q._aa(this._w, this._ad, this._t);
    };
    StructuredStorageStream.prototype._ap = function () {
        var _this = this;
        if (this._w < 0 || this._x < 0) {
            this._w = this._y;
            this._x = 0;
        }
        this._ad = (this._ac % this._ag);
        var a = (intDivide(this._ac, this._ag));
        var b = a - this._x;
        this._w = ((function () { var c = _this._aa(_this._w, b); b = c.p1; return c.ret; })());
        this._x = a;
        if (this._w < 0) {
            this._x = -1;
            this._w = -1;
            this._ad = -1;
            this._ai = -1;
            return;
        }
    };
    StructuredStorageStream.prototype._writeInt16 = function (a) {
        this.write(BitConverter.d(a), 0, 2);
    };
    StructuredStorageStream.prototype._writeInt32 = function (a) {
        this.write(BitConverter.e(a), 0, 4);
    };
    StructuredStorageStream.prototype._ah = function (a, b, c) {
        var _this = this;
        this._ao();
        if (this._ad == this._ag) {
            var d_2 = 1;
            var e = ((function () { var f = _this._aa(_this._w, d_2); d_2 = f.p1; return f.ret; })());
            if (e < 0) {
                this._w = this._v(this._w);
            }
            else {
                this._w = e;
            }
            this._x++;
            this._ad = 0;
            this._ai = this._q._z(this._w, this._t);
        }
        var f = Math.min(c, this._ag - this._ad);
        this._aj.write(a, b, f);
        var g = (this._aj.position - this._ai);
        if (g > 0) {
            this._q._g = true;
        }
        this._ac += g;
        this._ad += g;
        this._ai += g;
        return g;
    };
    Object.defineProperty(StructuredStorageStream.prototype, "_z", {
        get: function () {
            return this._y;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StructuredStorageStream.prototype, "_storageManager", {
        get: function () {
            return this._q;
        },
        enumerable: false,
        configurable: true
    });
    StructuredStorageStream.prototype.get__s = function () {
        return 0;
    };
    Object.defineProperty(StructuredStorageStream.prototype, "_s", {
        get: function () {
            return this.get__s();
        },
        enumerable: false,
        configurable: true
    });
    StructuredStorageStream.$t = markType(StructuredStorageStream, 'StructuredStorageStream', Stream.$);
    return StructuredStorageStream;
}(Stream));
export { StructuredStorageStream };
/**
 * @hidden
 */
var DirectoryEntryStream = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DirectoryEntryStream, _super);
    function DirectoryEntryStream(a) {
        var _rest = [];
        for (var _m = 1; _m < arguments.length; _m++) {
            _rest[_m - 1] = arguments[_m];
        }
        var _this = this;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = [c, d, false];
                    {
                        var g = e[0];
                        var h = e[1];
                        var i = e[2];
                        _this = _super.call(this, 1, g, h.p, h.r, i) || this;
                        _this._as = null;
                        _this._at = false;
                        _this._as = h;
                    }
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    _this = _super.call(this, 1, c, d.p, d.r, e) || this;
                    _this._as = null;
                    _this._at = false;
                    _this._as = d;
                }
                break;
        }
        return _this;
    }
    DirectoryEntryStream.prototype.disposeCore = function (a) {
        try {
            if (a && this._at) {
                this._as.d = BitConverter.f(dateToFileTime(dateNow()));
                this._at = false;
            }
        }
        finally {
            _super.prototype.disposeCore.call(this, a);
        }
    };
    DirectoryEntryStream.prototype._am = function (a) {
        _super.prototype._am.call(this, a);
        this._as.p = a;
    };
    DirectoryEntryStream.prototype._an = function (a) {
        _super.prototype._an.call(this, a);
        this._as.r = a;
    };
    DirectoryEntryStream.prototype.write = function (a, b, c) {
        _super.prototype.write.call(this, a, b, c);
        if (c > 0) {
            this._at = true;
        }
    };
    DirectoryEntryStream.$t = markType(DirectoryEntryStream, 'DirectoryEntryStream', StructuredStorageStream.$);
    return DirectoryEntryStream;
}(StructuredStorageStream));
export { DirectoryEntryStream };
/**
 * @hidden
 */
var DirectoryStream = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DirectoryStream, _super);
    function DirectoryStream(a) {
        var _rest = [];
        for (var _m = 1; _m < arguments.length; _m++) {
            _rest[_m - 1] = arguments[_m];
        }
        var _this = this;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    var d = [c, c._l(-1, false, 0)];
                    {
                        var f = d[0];
                        var g = d[1];
                        _this = _super.call(this, 0, f, g, 0) || this;
                        _this._as = null;
                        _this._av = null;
                        _this._az = 0;
                        _this._av = new List$1(DirectoryStream_DirectoryEntryNode.$, 0);
                        _this._az = intDivide(_this._ag, 128);
                    }
                    var e = new DirectoryStream_DirectoryEntryNode();
                    _this._as = new Directory("Root Entry", e);
                    _this._as.p = -2;
                    _this._as.b = BitConverter.f(dateToFileTime(dateNow()));
                    _this._as.d = _this._as.b;
                    e.c = -1;
                    e.d = -1;
                    e.e = -1;
                    e.a = _this._as;
                    e.b = 0;
                    _this._av.add(e);
                    _this._an(_this._ag);
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    _this = _super.call(this, 0, c, d, 0) || this;
                    _this._as = null;
                    _this._av = null;
                    _this._az = 0;
                    _this._av = new List$1(DirectoryStream_DirectoryEntryNode.$, 0);
                    _this._az = intDivide(_this._ag, 128);
                }
                break;
        }
        return _this;
    }
    DirectoryStream.prototype.disposeCore = function (a) {
        try {
            if (a && this._storageManager._g) {
                this.position = 0;
                this._a0();
                var b = void 0;
                for (b = 0; b < this._av.count; b++) {
                    this._a5(this._av._inner[b]);
                }
                while (b % this._az != 0) {
                    this._a5(null);
                    b++;
                }
            }
        }
        finally {
            _super.prototype.disposeCore.call(this, a);
        }
    };
    DirectoryStream.prototype._addFile = function (a) {
        var b = this._as.v(a, this);
        if (b == null) {
            return null;
        }
        return b;
    };
    DirectoryStream.prototype._a0 = function () {
        for (var a = 0; a < this._av.count; a++) {
            var b = this._av._inner[a];
            var c = typeCast(Directory.$, b.a);
            if (c != null && c.y.count > 0) {
                var d = intDivide(c.y.count, 2);
                var e = c.y._inner[d];
                b.c = this._av.indexOf(e.l);
                this._a1(e, c.y, 0, c.y.count - 1);
            }
        }
    };
    DirectoryStream.prototype._a1 = function (a, b, c, d) {
        var e = b.indexOf(a);
        if (c < e) {
            var f = intDivide((c + e), 2);
            var g = b._inner[f];
            a.l.d = this._av.indexOf(g.l);
            this._a1(g, b, c, e - 1);
        }
        if (e < d) {
            var h = intDivide((d + e + 1), 2);
            var i = b._inner[h];
            a.l.e = this._av.indexOf(i.l);
            this._a1(i, b, e + 1, d);
        }
    };
    DirectoryStream.prototype._readDirectoryEntryHeaders = function () {
        var _this = this;
        var a = this._z;
        var _loop_2 = function () {
            var b = 1;
            a = ((function () { var c = _this._aa(a, b); b = c.p1; return c.ret; })());
            this_1._an((this_1.length + this_1._ag));
        };
        var this_1 = this;
        while (a >= 0) {
            _loop_2();
        }
        this.position = 0;
        while (this.position < this.length) {
            this._a3();
        }
        for (var c = 0; c < this._av.count; c++) {
            var d = this._av._inner[c];
            if (d.c < 0) {
                continue;
            }
            this._a4(d.a, d.c);
        }
    };
    DirectoryStream.prototype._a3 = function () {
        var a = new Array(32);
        var b = 0;
        while (b < 32) {
            a[b++] = String.fromCharCode(this._readUInt16());
        }
        var c = this._readInt16();
        var d = (intDivide(c, 2)) - 1;
        if (c == 0) {
            d = 0;
        }
        var e = stringCreateFromCharArraySlice(a, 0, d);
        var f = new DirectoryStream_DirectoryEntryNode();
        var g = this.readByte();
        f.b = this.readByte();
        f.d = this._readInt32();
        f.e = this._readInt32();
        f.c = this._readInt32();
        var h = this._readBytes(16);
        var i = this._readBytes(4);
        var j = this._readBytes(8);
        var k = this._readBytes(8);
        var l = this._readInt32();
        var m = this._readInt32();
        this._readBytes(4);
        if (g == 0) {
            return;
        }
        switch (g) {
            case 5:
                {
                    this._as = new Directory(e, f);
                    f.a = this._as;
                    break;
                }
            case 1:
                {
                    f.a = new Directory(e, f);
                    break;
                }
            case 2:
                {
                    f.a = new SSFile(e, f);
                    break;
                }
            default:
                {
                    return;
                }
        }
        f.a.r = m;
        f.a.p = l;
        f.a.b = j;
        f.a.d = k;
        f.a.f = h;
        f.a.h = i;
        this._av.add(f);
    };
    DirectoryStream.prototype._a4 = function (a, b) {
        var c = this._av._inner[b];
        if (c.d >= 0) {
            this._a4(a, c.d);
        }
        c.a.j = a;
        a.y.add(c.a);
        if (c.e >= 0) {
            this._a4(a, c.e);
        }
    };
    DirectoryStream.prototype._a5 = function (a) {
        if (a == null) {
            var b = new Array((32 * 2) + 4);
            this.write(b, 0, b.length);
            this._writeInt32(-1);
            this._writeInt32(-1);
            this._writeInt32(-1);
            var c = new Array(48);
            this.write(c, 0, c.length);
        }
        else {
            var d = Encoding.unicode.getBytes1(a.a.t);
            var e = new Array((32 * 2) - d.length);
            this.write(d, 0, d.length);
            this.write(e, 0, e.length);
            this._writeInt16((d.length + 2));
            var f = 0;
            if (a.a == this._as) {
                f = 5;
            }
            else if (typeCast(SSFile.$, a.a) !== null) {
                f = 2;
            }
            else if (typeCast(Directory.$, a.a) !== null) {
                f = 1;
            }
            else {
            }
            this.writeByte(f);
            this.writeByte(a.b);
            this._writeInt32(a.d);
            this._writeInt32(a.e);
            this._writeInt32(a.c);
            this.write(a.a.f, 0, 16);
            this.write(a.a.h, 0, 4);
            this.write(a.a.b, 0, 8);
            this.write(a.a.d, 0, 8);
            this._writeInt32(a.a.p);
            this._writeInt32(a.a.r);
            this._writeInt32(0);
        }
    };
    Object.defineProperty(DirectoryStream.prototype, "_aw", {
        get: function () {
            return this._av;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DirectoryStream.prototype, "_at", {
        get: function () {
            return this._as;
        },
        enumerable: false,
        configurable: true
    });
    DirectoryStream.$t = markType(DirectoryStream, 'DirectoryStream', StructuredStorageStream.$);
    return DirectoryStream;
}(StructuredStorageStream));
export { DirectoryStream };
/**
 * @hidden
 */
var DirectoryStream_DirectoryEntryNode = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DirectoryStream_DirectoryEntryNode, _super);
    function DirectoryStream_DirectoryEntryNode() {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.d = 0;
        _this.e = 0;
        _this.c = 0;
        _this.b = 0;
        return _this;
    }
    DirectoryStream_DirectoryEntryNode.$t = markType(DirectoryStream_DirectoryEntryNode, 'DirectoryStream_DirectoryEntryNode');
    return DirectoryStream_DirectoryEntryNode;
}(Base));
export { DirectoryStream_DirectoryEntryNode };
/**
 * @hidden
 */
var SSFile = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SSFile, _super);
    function SSFile(a, b) {
        return _super.call(this, a, b) || this;
    }
    SSFile.$t = markType(SSFile, 'SSFile', DirectoryEntry.$);
    return SSFile;
}(DirectoryEntry));
export { SSFile };
/**
 * @hidden
 */
var MasterSATStream = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(MasterSATStream, _super);
    function MasterSATStream(a, b, c, d) {
        var _this = _super.call(this, 0, a, b, c * a._p(false)) || this;
        _this._a0 = 0;
        _this._as = null;
        _this._aw = null;
        _this._ax = null;
        _this._av = null;
        _this._au = null;
        _this._as = d;
        _this._av = new Dictionary$2(Number_$type, Number_$type, 0);
        for (var e = 0; e < d.length; e++) {
            var f = d[e];
            if (0 <= f) {
                _this._av.addItem(f, e);
            }
        }
        _this._a0 = (intDivide(_this._ag, 4)) - 1;
        _this._ax = new List$1(Number_$type, 0);
        _this._aw = new List$1(Number_$type, 0);
        _this._au = new Dictionary$2(Number_$type, Number_$type, 0);
        var g = b;
        while (g >= 0) {
            _this._storageManager._z(g, false);
            _this._ax.add(g);
            for (var h = 0; h < _this._ag - 4; h += 4) {
                var i = _this._readInt32();
                _this._aw.add(i);
                if (0 <= i) {
                    _this._au.addItem(i, _this._aw.count - 1);
                }
            }
            g = _this._readInt32();
        }
        return _this;
    }
    MasterSATStream.prototype._v = function (a) {
        var b = _super.prototype._v.call(this, a);
        this._ax.add(b);
        return b;
    };
    MasterSATStream.prototype.disposeCore = function (a) {
        try {
            if (a && this._storageManager._g) {
                this.position = 0;
                var b = 0;
                for (var c = 0; c < this._ax.count; c++) {
                    for (var d = 0; d < this._a0; d++) {
                        this._writeInt32(this._aw._inner[b]);
                        b++;
                    }
                    if (c == this._ax.count - 1) {
                        this._writeInt32(-1);
                    }
                    else {
                        this._writeInt32(this._ax._inner[c + 1]);
                    }
                }
            }
        }
        finally {
            _super.prototype.disposeCore.call(this, a);
        }
    };
    MasterSATStream.prototype._aa = function (a, b) {
        if (b < 0) {
            var c = this._ax.count;
            while (b < 0) {
                if (this._ax._inner[0] == a) {
                    return {
                        ret: -2,
                        p1: b
                    };
                }
                var d = false;
                for (c = 1; c < this._ax.count; c++) {
                    if (this._ax._inner[c] == a) {
                        a = this._ax._inner[c - 1];
                        d = true;
                        break;
                    }
                }
                if (a < 0 || d == false) {
                    return {
                        ret: -2,
                        p1: b
                    };
                }
                b++;
            }
            if (b == 0) {
                return {
                    ret: a,
                    p1: b
                };
            }
            return {
                ret: -2,
                p1: b
            };
        }
        else {
            var e = this._ax.count;
            while (b > 0) {
                var f = false;
                for (e = 0; e < this._ax.count - 1; e++) {
                    if (this._ax._inner[e] == a) {
                        a = this._ax._inner[e + 1];
                        f = true;
                        break;
                    }
                }
                if (a < 0 || f == false) {
                    return {
                        ret: -2,
                        p1: b
                    };
                }
                b--;
            }
            if (b == 0) {
                return {
                    ret: a,
                    p1: b
                };
            }
            return {
                ret: -2,
                p1: b
            };
        }
    };
    MasterSATStream.prototype.get__s = function () {
        return 2;
    };
    MasterSATStream.prototype._a1 = function (a) {
        for (var b = 0; b < this._as.length; b++) {
            var c = this._as[b];
            if (c < 0) {
                this._as[b] = a;
                this._av.addItem(a, b);
                return;
            }
        }
        for (var d = 0; d < this._aw.count; d++) {
            var e = this._aw._inner[d];
            if (e < 0) {
                this._aw._inner[d] = a;
                this._au.addItem(a, d);
                return;
            }
        }
        this._aw.add(a);
        this._au.addItem(a, this._aw.count - 1);
        for (var f = 1; f < this._a0; f++) {
            this._aw.add(-1);
        }
        this.setLength(this.length + this._ag);
    };
    MasterSATStream.prototype._ay = function (a) {
        var _this = this;
        var b;
        if (((function () { var c = _this._av.tryGetValue(a, b); b = c.p1; return c.ret; })())) {
            if (b == this._as.length - 1) {
                if (this._aw.count == 0) {
                    return -1;
                }
                return this._aw._inner[0];
            }
            return this._as[b + 1];
        }
        var c;
        if (((function () { var d = _this._au.tryGetValue(a, c); c = d.p1; return d.ret; })())) {
            if (c == this._aw.count - 1) {
                return -1;
            }
            return this._aw._inner[c + 1];
        }
        return -1;
    };
    MasterSATStream.prototype._az = function (a) {
        var _this = this;
        var b;
        if (((function () { var c = _this._av.tryGetValue(a, b); b = c.p1; return c.ret; })())) {
            if (b == 0) {
                return -1;
            }
            return this._as[b - 1];
        }
        var c;
        if (((function () { var d = _this._au.tryGetValue(a, c); c = d.p1; return d.ret; })()) && 1 <= c) {
            if (c == 0) {
                return this._as[this._as.length - 1];
            }
            return this._aw._inner[c - 1];
        }
        return -1;
    };
    Object.defineProperty(MasterSATStream.prototype, "_headerMasterSAT", {
        get: function () {
            return this._as;
        },
        enumerable: false,
        configurable: true
    });
    MasterSATStream.$t = markType(MasterSATStream, 'MasterSATStream', StructuredStorageStream.$);
    return MasterSATStream;
}(StructuredStorageStream));
export { MasterSATStream };
/**
 * @hidden
 */
var SATStreamBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SATStreamBase, _super);
    function SATStreamBase(a, b, c) {
        var _this = _super.call(this, 0, a, b, c * a._p(false)) || this;
        _this._aw = 0;
        _this._as = null;
        _this._at = null;
        _this._aw = intDivide(a._p(false), 4);
        return _this;
    }
    SATStreamBase.prototype.disposeCore = function (a) {
        try {
            if (a && this._storageManager._g) {
                this.position = 0;
                for (var b = 0; b < this._as.count; b++) {
                    this._writeInt32(this._as._inner[b].b);
                }
            }
        }
        finally {
            _super.prototype.disposeCore.call(this, a);
        }
    };
    SATStreamBase.prototype._au = function (a, b) {
        var c = false;
        var d = Math.max(0, a);
        if (this._at.count > 0) {
            c = true;
            d = this._at._inner[0];
            this._at.removeAt(0);
        }
        if (c == false) {
            for (var e = 0; e < this._aw; e++) {
                this._at.add(this._as.count);
                this._as.add(SATStreamBase_SATEntry.a);
            }
            this.setLength(this.length + this._ag);
            while (d < this._as.count) {
                var f = this._as._inner[d].b;
                if (f == -1) {
                    this._at.remove(d);
                    c = true;
                    break;
                }
                d++;
            }
            if (c == false) {
                return this._au(a, b);
            }
        }
        if (a >= 0 && b == 0) {
            this._as._inner[a].b = d;
            this._as._inner[d].c = a;
        }
        switch (b) {
            case 2:
                this._as._inner[d].b = -4;
                break;
            case 0:
                this._as._inner[d].b = -2;
                break;
            case 1:
                this._as._inner[d].b = -3;
                break;
            default: break;
        }
        return d;
    };
    SATStreamBase.prototype._getNextSectorIdInSAT = function (a, b) {
        while (b < 0) {
            a = this._as._inner[a].c;
            if (a < 0) {
                return {
                    ret: -2,
                    p1: b
                };
            }
            b++;
        }
        while (b > 0) {
            a = this._as._inner[a].b;
            if (a < 0) {
                return {
                    ret: -2,
                    p1: b
                };
            }
            b--;
        }
        return {
            ret: a,
            p1: b
        };
    };
    SATStreamBase.prototype._ax = function (a, b) {
        var c = b * this._aw;
        this._as = new List$1(SATStreamBase_SATEntry.$, 2, c);
        this._at = new List$1(Number_$type, 0);
        if (a < 0) {
            return;
        }
        for (var d = 0; d < c; d++) {
            this._as.add(new SATStreamBase_SATEntry(-2, this._readInt32()));
        }
        for (var e = 0; e < this._as.count; e++) {
            var f = this._as._inner[e];
            if (f.b >= 0 && f.b < this._as.count) {
                this._as._inner[f.b].c = e;
            }
            else if (f.b == -1) {
                this._at.add(e);
            }
        }
    };
    SATStreamBase.prototype._ay = function (a) {
        var b = a._z;
        var _loop_3 = function () {
            var c = 1;
            var d = ((function () { var e = a._aa(b, c); c = e.p1; return e.ret; })());
            this_2._as._inner[b].b = -1;
            var e = this_2._at.f(b);
            if (e < 0) {
                this_2._at.insert(~e, b);
            }
            b = d;
        };
        var this_2 = this;
        while (b >= 0) {
            _loop_3();
        }
    };
    SATStreamBase.prototype._az = function (a) {
        this._as = a;
        this._at = new List$1(Number_$type, 0);
        for (var b = 0; b < this._as.count; b++) {
            if (this._as._inner[b].b == -1) {
                this._at.add(b);
            }
        }
    };
    SATStreamBase.$t = markType(SATStreamBase, 'SATStreamBase', StructuredStorageStream.$);
    return SATStreamBase;
}(StructuredStorageStream));
export { SATStreamBase };
/**
 * @hidden
 */
var SATStream = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SATStream, _super);
    function SATStream(a) {
        var _rest = [];
        for (var _m = 1; _m < arguments.length; _m++) {
            _rest[_m - 1] = arguments[_m];
        }
        var _this = this;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    _this = _super.call(this, c, 0, 1) || this;
                    _this._a0 = null;
                    _this._a0 = d;
                    var e = new List$1(SATStreamBase_SATEntry.$, 0);
                    e.add(new SATStreamBase_SATEntry(-2, -3));
                    for (var f = 1; f < _this._aw; f++) {
                        e.add(SATStreamBase_SATEntry.a);
                    }
                    _this._az(e);
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    var f = _rest[3];
                    _this = _super.call(this, c, d, e) || this;
                    _this._a0 = null;
                    _this._a0 = f;
                    _this._ax(d, e);
                }
                break;
        }
        return _this;
    }
    SATStream.prototype._v = function (a) {
        var b = _super.prototype._v.call(this, a);
        this._a0._a1(b);
        return b;
    };
    SATStream.prototype.disposeCore = function (a) {
        _super.prototype.disposeCore.call(this, a);
        if (a) {
            this._a0.dispose();
        }
    };
    SATStream.prototype._aa = function (a, b) {
        while (b < 0) {
            a = this._a0._az(a);
            if (a < 0) {
                return {
                    ret: -1,
                    p1: b
                };
            }
            b++;
        }
        while (b > 0) {
            a = this._a0._ay(a);
            if (a < 0) {
                return {
                    ret: -1,
                    p1: b
                };
            }
            b--;
        }
        return {
            ret: a,
            p1: b
        };
    };
    SATStream.prototype.get__s = function () {
        return 1;
    };
    Object.defineProperty(SATStream.prototype, "_masterSATStream", {
        get: function () {
            return this._a0;
        },
        enumerable: false,
        configurable: true
    });
    SATStream.$t = markType(SATStream, 'SATStream', SATStreamBase.$);
    return SATStream;
}(SATStreamBase));
export { SATStream };
/**
 * @hidden
 */
var SATStreamBase_SATEntry = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SATStreamBase_SATEntry, _super);
    function SATStreamBase_SATEntry(a, b) {
        var _this = _super.call(this) || this;
        _this.c = 0;
        _this.b = 0;
        _this.c = a;
        _this.b = b;
        return _this;
    }
    Object.defineProperty(SATStreamBase_SATEntry, "a", {
        get: function () {
            return new SATStreamBase_SATEntry(-2, -1);
        },
        enumerable: false,
        configurable: true
    });
    SATStreamBase_SATEntry.$t = markType(SATStreamBase_SATEntry, 'SATStreamBase_SATEntry');
    return SATStreamBase_SATEntry;
}(Base));
export { SATStreamBase_SATEntry };
/**
 * @hidden
 */
var ShortSATStream = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ShortSATStream, _super);
    function ShortSATStream(a, b, c) {
        var _this = _super.call(this, a, b, c) || this;
        _this._ax(b, c);
        return _this;
    }
    ShortSATStream.$t = markType(ShortSATStream, 'ShortSATStream', SATStreamBase.$);
    return ShortSATStream;
}(SATStreamBase));
export { ShortSATStream };
/**
 * @hidden
 */
var StructuredStorageManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StructuredStorageManager, _super);
    function StructuredStorageManager(a, b) {
        var _this = _super.call(this) || this;
        _this._k = new Guid();
        _this._ag = 62;
        _this._ah = 3;
        _this._w = 512;
        _this._x = 64;
        _this._u = 4096;
        _this._ae = null;
        _this._b = null;
        _this._d = null;
        _this._e = null;
        _this._c = null;
        _this._h = false;
        _this._f = false;
        _this._ae = new SeekableBufferedStream(a);
        if (b) {
            var c = new BinaryReader(1, _this._ae);
            var d = c.readUInt32();
            var e = c.readUInt32();
            if (d != 0xE011CFD0 || e != 0xE11AB1A1) {
                return _this;
            }
            _this._k = new Guid(1, c.readBytes(16));
            _this._ag = c.readUInt16();
            _this._ah = c.readUInt16();
            var f = c.readUInt16();
            _this._w = 1 << c.readUInt16();
            _this._x = 1 << c.readUInt16();
            c.readBytes(10);
            var g = c.readInt32();
            var h = c.readInt32();
            c.readBytes(4);
            _this._u = c.readInt32();
            var i = c.readInt32();
            var j = c.readInt32();
            var k = c.readInt32();
            var l = c.readInt32();
            var m = new Array(109);
            for (var n = 0; n < 109; n++) {
                m[n] = c.readInt32();
            }
            var o = new MasterSATStream(_this, k, l, m);
            _this._d = new SATStream(1, _this, m[0], g, o);
            _this._e = new ShortSATStream(_this, i, j);
            _this._c = new DirectoryStream(1, _this, h);
            _this._c._readDirectoryEntryHeaders();
            _this._b = new DirectoryEntryStream(0, _this, _this._c._at);
        }
        else {
            var p = new Array(109);
            p[0] = 0;
            for (var q = 1; q < 109; q++) {
                p[q] = -1;
            }
            var r = new MasterSATStream(_this, -2, 0, p);
            _this._d = new SATStream(0, _this, r);
            _this._e = new ShortSATStream(_this, -2, 0);
            _this._c = new DirectoryStream(0, _this);
            _this._b = new DirectoryEntryStream(0, _this, _this._c._at);
        }
        _this._h = true;
        return _this;
    }
    StructuredStorageManager.prototype._ab = function (a) {
        var b = this._c._addFile(a);
        if (b == null) {
            return null;
        }
        this._f = true;
        return new UserFileStream(this, b);
    };
    StructuredStorageManager.prototype._ac = function (a) {
        if (this._h == false) {
            return null;
        }
        var b = this._c._at.w(stringEmpty(), a);
        if (b == null) {
            return null;
        }
        return new UserFileStream(this, b);
    };
    StructuredStorageManager._j = function (a) {
        if (a.length < 8) {
            return false;
        }
        a.position = 0;
        try {
            var b = new BinaryReader(1, a);
            var c = b.readUInt32();
            var d = b.readUInt32();
            return c == 0xE011CFD0 && d == 0xE11AB1A1;
        }
        finally {
            a.position = 0;
        }
    };
    StructuredStorageManager.prototype._dispose1 = function (a) {
        if (this._h) {
            if (a && this._f) {
                this._c.dispose();
                this._b.dispose();
                this._e.dispose();
                this._d.dispose();
                this._ae.position = 0;
                var b = new BinaryWriter(1, this._ae);
                b.w(0xE011CFD0);
                b.w(0xE11AB1A1);
                b.h(this._k.toByteArray());
                b.v(this._ag);
                b.v(this._ah);
                b.v(65534);
                var c = truncate(Math.round(logBase(this._w, 2)));
                b.v(c);
                var d = truncate(Math.round(logBase(this._x, 2)));
                b.v(d);
                b.h(new Array(10));
                b.q(((intDivide((this._d.length - 1), this._w)) + 1));
                b.q(this._c._z);
                b.h(new Array(4));
                b.q(this._u);
                b.q(this._e._z);
                if (this._e.length == 0) {
                    b.q(0);
                }
                else {
                    b.q(((intDivide((this._e.length - 1), this._w)) + 1));
                }
                b.q(this._d._masterSATStream._z);
                if (this._d._masterSATStream.length == 0) {
                    b.q(0);
                }
                else {
                    b.q(((intDivide((this._d._masterSATStream.length - 1), this._w)) + 1));
                }
                var e = this._d._masterSATStream._headerMasterSAT;
                for (var f = 0; f < e.length; f++) {
                    b.q(e[f]);
                }
                this._ae.flush();
                this._ae.position = this._ae.length;
            }
            this._c = null;
            this._b = null;
            this._e = null;
            this._d = null;
            this._ae = null;
            this._f = false;
            this._h = false;
        }
    };
    StructuredStorageManager.prototype._l = function (a, b, c) {
        if (b) {
            return this._e._au(a, c);
        }
        return this._d._au(a, c);
    };
    StructuredStorageManager.prototype._y = function (a, b, c) {
        if (c) {
            return (a * this._x) + b;
        }
        return 512 + (a * this._w) + b;
    };
    StructuredStorageManager.prototype._ad = function (a) {
        if (a) {
            return this._b;
        }
        return this._ae;
    };
    StructuredStorageManager.prototype._o = function (a, b, c) {
        var _this = this;
        if (c) {
            return {
                ret: ((function () { var d = _this._e._getNextSectorIdInSAT(a, b); b = d.p1; return d.ret; })()),
                p1: b
            };
        }
        return {
            ret: ((function () { var d = _this._d._getNextSectorIdInSAT(a, b); b = d.p1; return d.ret; })()),
            p1: b
        };
    };
    StructuredStorageManager.prototype._p = function (a) {
        if (a) {
            return this._x;
        }
        return this._w;
    };
    StructuredStorageManager.prototype._i = function (a) {
        return a < this._u;
    };
    StructuredStorageManager.prototype._z = function (a, b) {
        return this._aa(a, 0, b);
    };
    StructuredStorageManager.prototype._aa = function (a, b, c) {
        var d = this._y(a, b, c);
        this._ad(c).position = d;
        return d;
    };
    StructuredStorageManager.prototype._am = function (a) {
        if (a._isShortStream) {
            this._e._ay(a);
        }
        else {
            this._d._ay(a);
        }
    };
    Object.defineProperty(StructuredStorageManager.prototype, "_g", {
        get: function () {
            return this._f;
        },
        set: function (a) {
            this._f = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StructuredStorageManager.prototype, "_a", {
        get: function () {
            return this._c._at;
        },
        enumerable: false,
        configurable: true
    });
    StructuredStorageManager.prototype.dispose = function () {
        this._dispose1(true);
    };
    StructuredStorageManager.$t = markType(StructuredStorageManager, 'StructuredStorageManager', Base.$, [IDisposable_$type]);
    return StructuredStorageManager;
}(Base));
export { StructuredStorageManager };
/**
 * @hidden
 */
var UserFileStream = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UserFileStream, _super);
    function UserFileStream(a, b) {
        var _this = _super.call(this, 1, a, b, a._i(b.r)) || this;
        _this._au = null;
        _this._au = b;
        return _this;
    }
    UserFileStream.prototype.setLength = function (a) {
        if (this._isShortStream && this._storageManager._i(a) == false) {
            var b = this.position;
            var c = new Array(this.length);
            if (c.length > 0) {
                this.position = 0;
                this.read(c, 0, c.length);
                this._an(0);
            }
            this._storageManager._am(this);
            this._t = false;
            this._al();
            this._am(this._storageManager._l(-1, this._isShortStream, this._s));
            this._au.p = this._z;
            if (c.length > 0) {
                this.position = 0;
                this.write(c, 0, c.length);
                this.position = b;
            }
        }
        _super.prototype.setLength.call(this, a);
    };
    Object.defineProperty(UserFileStream.prototype, "_isShortStream", {
        get: function () {
            return this._t;
        },
        enumerable: false,
        configurable: true
    });
    UserFileStream.$t = markType(UserFileStream, 'UserFileStream', DirectoryEntryStream.$);
    return UserFileStream;
}(DirectoryEntryStream));
export { UserFileStream };
