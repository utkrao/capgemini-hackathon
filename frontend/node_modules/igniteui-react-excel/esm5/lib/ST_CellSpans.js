/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { XmlNamespaceDefinitionBase } from "./XmlNamespaceDefinitionBase";
import { StringBuilder } from "igniteui-react-core";
/**
 * @hidden
 */
var ST_CellSpans = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ST_CellSpans, _super);
    function ST_CellSpans() {
        var _this = _super.call(this) || this;
        _this.c = null;
        _this.c = new List$1(String_$type, 0);
        return _this;
    }
    ST_CellSpans.a = function (a) {
        return ST_CellSpans.b(a);
    };
    ST_CellSpans.prototype.d = function () {
        return this.e();
    };
    ST_CellSpans.b = function (a) {
        var b = new ST_CellSpans();
        b.c = XmlNamespaceDefinitionBase.g(String_$type, a, function (c) { return c; });
        return b;
    };
    ST_CellSpans.prototype.e = function () {
        var a = new StringBuilder(0);
        var b = this.c.count - 1;
        for (var c = 0; c <= b; c++) {
            var d = this.c._inner[c];
            a.l(d);
            if (c < b) {
                a.l(" ");
            }
        }
        return a.toString();
    };
    ST_CellSpans.$t = markType(ST_CellSpans, 'ST_CellSpans');
    return ST_CellSpans;
}(Base));
export { ST_CellSpans };
