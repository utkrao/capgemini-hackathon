/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __generator, __values } from "tslib";
import { Base, toNullable, Number_$type, fromEnum, toEnum, markType } from "igniteui-react-core";
import { SortedIntRangeList_IntRange } from "./SortedIntRangeList_IntRange";
import { List$1 } from "igniteui-react-core";
import { intDivide } from "igniteui-react-core";
/**
 * @hidden
 */
var SortedIntRangeList = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SortedIntRangeList, _super);
    function SortedIntRangeList() {
        var _this = _super.call(this) || this;
        _this.e = 0;
        _this.d = null;
        _this.d = new List$1(SortedIntRangeList_IntRange.$, 0);
        _this.e = -1;
        return _this;
    }
    Object.defineProperty(SortedIntRangeList.prototype, "j", {
        get: function () {
            if (this.e == -1) {
                this.e = 0;
                for (var a = 0; a < this.d.count; a++) {
                    this.e += this.d._inner[a].a;
                }
            }
            return this.e;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SortedIntRangeList.prototype, "k", {
        get: function () {
            return this.d.count;
        },
        enumerable: false,
        configurable: true
    });
    SortedIntRangeList.prototype.m = function (a) {
        this.n(a, a);
    };
    SortedIntRangeList.prototype.n = function (a, b) {
        var c = this.g(a - 1);
        var d = this.g(b + 1);
        if (c == d) {
            if (c < 0) {
                var e = ~c;
                this.d.insert(e, new SortedIntRangeList_IntRange(1, a, b));
            }
        }
        else {
            if (c < 0) {
                c = ~c;
            }
            else {
                a = this.d._inner[c].c;
            }
            if (d < 0) {
                d = ~d - 1;
            }
            else {
                b = this.d._inner[d].b;
            }
            if (c == this.d.count) {
                this.d.add(new SortedIntRangeList_IntRange(1, a, b));
            }
            else {
                var f = this.d._inner[c];
                f.c = a;
                f.b = b;
                this.d._inner[c] = f;
                for (var g = d; g > c; g--) {
                    this.d.removeAt(g);
                }
            }
        }
        this.e = -1;
    };
    SortedIntRangeList.prototype.o = function () {
        this.d.clear();
        this.e = 0;
    };
    SortedIntRangeList.prototype.a = function (a) {
        return this.g(a) >= 0;
    };
    SortedIntRangeList.prototype.g = function (a) {
        var b = this.d;
        var c = 0, d = b.count - 1;
        var e = 0;
        while (c <= d) {
            e = intDivide((c + d), 2);
            var f = b._inner[e];
            if (f.c > a) {
                d = e - 1;
            }
            else if (f.b < a) {
                c = e + 1;
            }
            else {
                return e;
            }
        }
        return ~c;
    };
    SortedIntRangeList.prototype.l = function (a) {
        for (var b = 0, c = this.d.count; b < c; b++) {
            var d = this.d._inner[b];
            if (d.a > a) {
                return toNullable(Number_$type, d.c + a);
            }
            a -= d.a;
        }
        return toNullable(Number_$type, null);
    };
    SortedIntRangeList.prototype.i = function (a) {
        return this.d._inner[a].c;
    };
    SortedIntRangeList.prototype.h = function (a) {
        return this.d._inner[a].b;
    };
    SortedIntRangeList.prototype._c = function () {
        var _a, _b, a, b, e_1_1;
        var e_1, _d;
        return __generator(this, function (_e) {
            switch (_e.label) {
                case 0:
                    _e.trys.push([0, 7, 8, 9]);
                    _a = __values(fromEnum(this.d)), _b = _a.next();
                    _e.label = 1;
                case 1:
                    if (!!_b.done)
                        return [3 /*break*/, 6];
                    a = _b.value;
                    b = a.c;
                    _e.label = 2;
                case 2:
                    if (!(b <= a.b))
                        return [3 /*break*/, 5];
                    return [4 /*yield*/, b];
                case 3:
                    _e.sent();
                    _e.label = 4;
                case 4:
                    b++;
                    return [3 /*break*/, 2];
                case 5:
                    _b = _a.next();
                    return [3 /*break*/, 1];
                case 6: return [3 /*break*/, 9];
                case 7:
                    e_1_1 = _e.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 9];
                case 8:
                    try {
                        if (_b && !_b.done && (_d = _a.return))
                            _d.call(_a);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                    return [7 /*endfinally*/];
                case 9: return [2 /*return*/];
            }
        });
    };
    SortedIntRangeList.prototype.c = function () {
        var _this = this;
        return toEnum(function () { return _this._c(); });
    };
    SortedIntRangeList.prototype.b = function (a) {
        var b = this.g(a);
        if (b < 0) {
            return false;
        }
        this.e = -1;
        var c = this.d._inner[b];
        if (c.a == 1) {
            this.d.removeAt(b);
        }
        else {
            if (c.c == a) {
                c.c++;
            }
            else if (c.b == a) {
                c.b--;
            }
            else {
                var d = c.b;
                c.b = a - 1;
                this.d.insert(b + 1, new SortedIntRangeList_IntRange(1, a + 1, d));
            }
            this.d._inner[b] = c;
        }
        return true;
    };
    SortedIntRangeList.prototype.p = function (a) {
        var b = this.l(a);
        if (b.hasValue) {
            this.b(b.value);
        }
    };
    SortedIntRangeList.prototype.q = function (a, b) {
        if (b < a) {
            var c = b;
            b = a;
            a = c;
        }
        var d = this.g(a);
        var e = this.g(b);
        if (d == e) {
            if (d < 0) {
                return;
            }
            var f = this.d._inner[d];
            if (f.c < a) {
                if (b < f.b) {
                    this.d.insert(d + 1, new SortedIntRangeList_IntRange(1, b + 1, f.b));
                }
                f.b = a - 1;
                this.d._inner[d] = f;
            }
            else if (b == f.b) {
                this.d.removeAt(d);
            }
            else {
                f.c = b + 1;
                this.d._inner[d] = f;
            }
        }
        else {
            if (d >= 0 && this.d._inner[d].c < a) {
                var g = this.d._inner[d];
                g.b = a - 1;
                this.d._inner[d] = g;
                d++;
            }
            else if (d < 0) {
                d = ~d;
            }
            if (e >= 0 && this.d._inner[e].b > b) {
                var h = this.d._inner[e];
                h.c = b + 1;
                this.d._inner[e] = h;
                e--;
            }
            else if (e < 0) {
                e = ~e - 1;
            }
            if (d <= e) {
                this.d.v(d, (e - d) + 1);
            }
        }
        this.e = -1;
    };
    SortedIntRangeList.$t = markType(SortedIntRangeList, 'SortedIntRangeList');
    return SortedIntRangeList;
}(Base));
export { SortedIntRangeList };
