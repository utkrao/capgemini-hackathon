/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, enumGetBox, Number_$type, markType } from "igniteui-react-core";
import { CellBorderLineStyle_$type } from "./CellBorderLineStyle";
import { DiagonalBorders_$type } from "./DiagonalBorders";
import { FontSuperscriptSubscriptStyle_$type } from "./FontSuperscriptSubscriptStyle";
import { FontUnderlineStyle_$type } from "./FontUnderlineStyle";
import { HorizontalCellAlignment_$type } from "./HorizontalCellAlignment";
import { ST_CellType_$type } from "./ST_CellType";
import { VerticalCellAlignment_$type } from "./VerticalCellAlignment";
import { Dictionary$2 } from "igniteui-react-core";
import { WorksheetCellFormatOptions_$type } from "./WorksheetCellFormatOptions";
import { unwrapNullable } from "igniteui-react-core";
/**
 * @hidden
 */
var KnownBoxes = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(KnownBoxes, _super);
    function KnownBoxes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    KnownBoxes.al = function (a) {
        switch (a) {
            case -1: return KnownBoxes.f;
            case 0: return KnownBoxes.n;
            case 9: return KnownBoxes.c;
            case 11: return KnownBoxes.d;
            case 3: return KnownBoxes.e;
            case 4: return KnownBoxes.g;
            case 6: return KnownBoxes.h;
            case 7: return KnownBoxes.i;
            case 2: return KnownBoxes.j;
            case 10: return KnownBoxes.k;
            case 12: return KnownBoxes.l;
            case 8: return KnownBoxes.m;
            case 13: return KnownBoxes.o;
            case 5: return KnownBoxes.p;
            case 1: return KnownBoxes.q;
            default: return enumGetBox(CellBorderLineStyle_$type, a);
        }
    };
    KnownBoxes.am = function (a) {
        switch (a) {
            case 0: return KnownBoxes.s;
            case 7: return KnownBoxes.r;
            case 3: return KnownBoxes.t;
            case 5: return KnownBoxes.u;
            case 1: return KnownBoxes.v;
            default: return enumGetBox(DiagonalBorders_$type, a);
        }
    };
    KnownBoxes.au = function (a) {
        return unwrapNullable(a);
    };
    KnownBoxes.an = function (a) {
        switch (a) {
            case -1: return KnownBoxes.ab;
            case 0: return KnownBoxes.ac;
            case 2: return KnownBoxes.ad;
            case 1: return KnownBoxes.ae;
            default: return enumGetBox(FontSuperscriptSubscriptStyle_$type, a);
        }
    };
    KnownBoxes.ao = function (a) {
        switch (a) {
            case -1: return KnownBoxes.af;
            case 0: return KnownBoxes.ai;
            case 2: return KnownBoxes.ag;
            case 34: return KnownBoxes.ah;
            case 1: return KnownBoxes.aj;
            case 33: return KnownBoxes.ak;
            default: return enumGetBox(FontUnderlineStyle_$type, a);
        }
    };
    KnownBoxes.ap = function (a) {
        switch (a) {
            case -1: return KnownBoxes.ax;
            case 0: return KnownBoxes.a0;
            case 1: return KnownBoxes.a2;
            case 2: return KnownBoxes.av;
            case 3: return KnownBoxes.a3;
            case 4: return KnownBoxes.az;
            case 5: return KnownBoxes.a1;
            case 6: return KnownBoxes.aw;
            case 7: return KnownBoxes.ay;
            default: return enumGetBox(HorizontalCellAlignment_$type, a);
        }
    };
    KnownBoxes.at = function (a) {
        switch (a) {
            case -1: return KnownBoxes.a4;
            case 0: return KnownBoxes.a5;
            default: return a;
        }
    };
    KnownBoxes.as = function (a) {
        switch (a) {
            case 0: return KnownBoxes.a6;
            case 1: return KnownBoxes.a7;
            case 2: return KnownBoxes.ba;
            case 3: return KnownBoxes.a8;
            case 4: return KnownBoxes.bb;
            case 5: return KnownBoxes.bc;
            case 6: return KnownBoxes.a9;
            default: return enumGetBox(ST_CellType_$type, a);
        }
    };
    KnownBoxes.aq = function (a) {
        switch (a) {
            case -1: return KnownBoxes.bf;
            case 2: return KnownBoxes.bd;
            case 1: return KnownBoxes.be;
            case 4: return KnownBoxes.bg;
            case 3: return KnownBoxes.bh;
            case 0: return KnownBoxes.bi;
            default: return enumGetBox(VerticalCellAlignment_$type, a);
        }
    };
    KnownBoxes.b = function () {
        var a = new Dictionary$2(Number_$type, Base.$, 0);
        for (var b = 0; b <= 63; b++) {
            a.addItem(b, enumGetBox(WorksheetCellFormatOptions_$type, b));
        }
        return a;
    };
    KnownBoxes.ar = function (a) {
        var b;
        if (((function () { var c = KnownBoxes.a.tryGetValue(a, b); b = c.p1; return c.ret; })()) == false) {
            return enumGetBox(WorksheetCellFormatOptions_$type, a);
        }
        return b;
    };
    KnownBoxes.$t = markType(KnownBoxes, 'KnownBoxes');
    KnownBoxes.w = 1;
    KnownBoxes.x = 0;
    KnownBoxes.f = enumGetBox(CellBorderLineStyle_$type, -1);
    KnownBoxes.n = enumGetBox(CellBorderLineStyle_$type, 0);
    KnownBoxes.c = enumGetBox(CellBorderLineStyle_$type, 9);
    KnownBoxes.d = enumGetBox(CellBorderLineStyle_$type, 11);
    KnownBoxes.e = enumGetBox(CellBorderLineStyle_$type, 3);
    KnownBoxes.g = enumGetBox(CellBorderLineStyle_$type, 4);
    KnownBoxes.h = enumGetBox(CellBorderLineStyle_$type, 6);
    KnownBoxes.i = enumGetBox(CellBorderLineStyle_$type, 7);
    KnownBoxes.j = enumGetBox(CellBorderLineStyle_$type, 2);
    KnownBoxes.k = enumGetBox(CellBorderLineStyle_$type, 10);
    KnownBoxes.l = enumGetBox(CellBorderLineStyle_$type, 12);
    KnownBoxes.m = enumGetBox(CellBorderLineStyle_$type, 8);
    KnownBoxes.o = enumGetBox(CellBorderLineStyle_$type, 13);
    KnownBoxes.p = enumGetBox(CellBorderLineStyle_$type, 5);
    KnownBoxes.q = enumGetBox(CellBorderLineStyle_$type, 1);
    KnownBoxes.s = enumGetBox(DiagonalBorders_$type, 0);
    KnownBoxes.r = enumGetBox(DiagonalBorders_$type, 7);
    KnownBoxes.t = enumGetBox(DiagonalBorders_$type, 3);
    KnownBoxes.u = enumGetBox(DiagonalBorders_$type, 5);
    KnownBoxes.v = enumGetBox(DiagonalBorders_$type, 1);
    KnownBoxes.y = null;
    KnownBoxes.z = false;
    KnownBoxes.aa = true;
    KnownBoxes.ab = enumGetBox(FontSuperscriptSubscriptStyle_$type, -1);
    KnownBoxes.ac = enumGetBox(FontSuperscriptSubscriptStyle_$type, 0);
    KnownBoxes.ad = enumGetBox(FontSuperscriptSubscriptStyle_$type, 2);
    KnownBoxes.ae = enumGetBox(FontSuperscriptSubscriptStyle_$type, 1);
    KnownBoxes.af = enumGetBox(FontUnderlineStyle_$type, -1);
    KnownBoxes.ai = enumGetBox(FontUnderlineStyle_$type, 0);
    KnownBoxes.ag = enumGetBox(FontUnderlineStyle_$type, 2);
    KnownBoxes.ah = enumGetBox(FontUnderlineStyle_$type, 34);
    KnownBoxes.aj = enumGetBox(FontUnderlineStyle_$type, 1);
    KnownBoxes.ak = enumGetBox(FontUnderlineStyle_$type, 33);
    KnownBoxes.ax = enumGetBox(HorizontalCellAlignment_$type, -1);
    KnownBoxes.a0 = enumGetBox(HorizontalCellAlignment_$type, 0);
    KnownBoxes.av = enumGetBox(HorizontalCellAlignment_$type, 2);
    KnownBoxes.aw = enumGetBox(HorizontalCellAlignment_$type, 6);
    KnownBoxes.ay = enumGetBox(HorizontalCellAlignment_$type, 7);
    KnownBoxes.az = enumGetBox(HorizontalCellAlignment_$type, 4);
    KnownBoxes.a1 = enumGetBox(HorizontalCellAlignment_$type, 5);
    KnownBoxes.a2 = enumGetBox(HorizontalCellAlignment_$type, 1);
    KnownBoxes.a3 = enumGetBox(HorizontalCellAlignment_$type, 3);
    KnownBoxes.a4 = -1;
    KnownBoxes.a5 = 0;
    KnownBoxes.a6 = enumGetBox(ST_CellType_$type, 0);
    KnownBoxes.a7 = enumGetBox(ST_CellType_$type, 1);
    KnownBoxes.ba = enumGetBox(ST_CellType_$type, 2);
    KnownBoxes.a8 = enumGetBox(ST_CellType_$type, 3);
    KnownBoxes.bb = enumGetBox(ST_CellType_$type, 4);
    KnownBoxes.bc = enumGetBox(ST_CellType_$type, 5);
    KnownBoxes.a9 = enumGetBox(ST_CellType_$type, 6);
    KnownBoxes.bf = enumGetBox(VerticalCellAlignment_$type, -1);
    KnownBoxes.bd = enumGetBox(VerticalCellAlignment_$type, 2);
    KnownBoxes.be = enumGetBox(VerticalCellAlignment_$type, 1);
    KnownBoxes.bg = enumGetBox(VerticalCellAlignment_$type, 4);
    KnownBoxes.bh = enumGetBox(VerticalCellAlignment_$type, 3);
    KnownBoxes.bi = enumGetBox(VerticalCellAlignment_$type, 0);
    KnownBoxes.a = KnownBoxes.b();
    return KnownBoxes;
}(Base));
export { KnownBoxes };
