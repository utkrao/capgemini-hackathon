/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ValueType, toNullable, Number_$type, markStruct } from "igniteui-react-core";
import { CultureInfo } from "igniteui-react-core";
import { parseUInt32_2, tryParseUInt32_2 } from "igniteui-react-core";
/**
 * @hidden
 */
var ST_DrawingElementId = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ST_DrawingElementId, _super);
    function ST_DrawingElementId(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this.g = 0;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0: break;
            case 1:
                {
                    var c = _rest[0];
                    _this.g = c;
                }
                break;
        }
        return _this;
    }
    ST_DrawingElementId.c = function (a) {
        return ST_DrawingElementId.a(parseUInt32_2(a, 7, CultureInfo.invariantCulture));
    };
    ST_DrawingElementId.f = function (a) {
        var b;
        if (((function () { var c = tryParseUInt32_2(a, 7, CultureInfo.invariantCulture, b); b = c.p3; return c.ret; })())) {
            return toNullable(ST_DrawingElementId.$, ST_DrawingElementId.a(b));
        }
        return toNullable(ST_DrawingElementId.$, null);
    };
    ST_DrawingElementId.prototype.toString = function () {
        return this.g.toString();
    };
    ST_DrawingElementId.h = function (a) {
        return a.g;
    };
    ST_DrawingElementId.e = function (a) {
        if (!a.hasValue) {
            return toNullable(Number_$type, null);
        }
        return toNullable(Number_$type, ST_DrawingElementId.h(a.value));
    };
    ST_DrawingElementId.a = function (a) {
        return new ST_DrawingElementId(1, a);
    };
    ST_DrawingElementId.d = function (a) {
        if (!a.hasValue) {
            return toNullable(ST_DrawingElementId.$, null);
        }
        return toNullable(ST_DrawingElementId.$, ST_DrawingElementId.a(a.value));
    };
    ST_DrawingElementId.$t = markStruct(ST_DrawingElementId, 'ST_DrawingElementId');
    return ST_DrawingElementId;
}(ValueType));
export { ST_DrawingElementId };
