/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ValueType, markStruct } from "igniteui-react-core";
import { DocCoreUtils } from "./DocCoreUtils";
import { stringIsNullOrEmpty, stringEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
var ST_TrueFalseBlank = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ST_TrueFalseBlank, _super);
    function ST_TrueFalseBlank(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this.c = false;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0: break;
            case 1:
                {
                    var c = _rest[0];
                    _this.c = c;
                }
                break;
        }
        return _this;
    }
    ST_TrueFalseBlank.d = function (a) {
        if (stringIsNullOrEmpty(a)) {
            return true;
        }
        switch (a) {
            case "t":
            case "True": return true;
            case "f":
            case "False": return false;
        }
        throw DocCoreUtils.n(ST_TrueFalseBlank.$, a);
    };
    ST_TrueFalseBlank.prototype.toString = function () {
        if (this.c) {
            return stringEmpty();
        }
        return "False";
    };
    ST_TrueFalseBlank.e = function (a) {
        return a.toString();
    };
    ST_TrueFalseBlank.f = function (a) {
        return (a ? ST_TrueFalseBlank.b : ST_TrueFalseBlank.a).toString();
    };
    ST_TrueFalseBlank.$t = markStruct(ST_TrueFalseBlank, 'ST_TrueFalseBlank');
    ST_TrueFalseBlank.a = new ST_TrueFalseBlank(1, false);
    ST_TrueFalseBlank.b = new ST_TrueFalseBlank(1, true);
    return ST_TrueFalseBlank;
}(ValueType));
export { ST_TrueFalseBlank };
