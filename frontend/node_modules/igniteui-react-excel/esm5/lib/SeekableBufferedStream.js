/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Stream, markType } from "igniteui-react-core";
import { Buffer } from "igniteui-react-core";
/**
 * @hidden
 */
var SeekableBufferedStream = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SeekableBufferedStream, _super);
    function SeekableBufferedStream(a) {
        var _this = _super.call(this) || this;
        _this._w = null;
        _this._u = 0;
        _this._v = 0;
        _this._o = null;
        _this._r = 0;
        _this._s = 0;
        _this._p = false;
        _this._q = 0;
        _this._w = a;
        _this._o = new Array(10240);
        _this._u = a.length;
        _this._v = a.position;
        return _this;
    }
    SeekableBufferedStream.prototype.get_canRead = function () {
        return this._w.canRead;
    };
    Object.defineProperty(SeekableBufferedStream.prototype, "canRead", {
        get: function () {
            return this.get_canRead();
        },
        enumerable: false,
        configurable: true
    });
    SeekableBufferedStream.prototype.get_canSeek = function () {
        return this._w.canSeek;
    };
    Object.defineProperty(SeekableBufferedStream.prototype, "canSeek", {
        get: function () {
            return this.get_canSeek();
        },
        enumerable: false,
        configurable: true
    });
    SeekableBufferedStream.prototype.get_canWrite = function () {
        return this._w.canWrite;
    };
    Object.defineProperty(SeekableBufferedStream.prototype, "canWrite", {
        get: function () {
            return this.get_canWrite();
        },
        enumerable: false,
        configurable: true
    });
    SeekableBufferedStream.prototype.disposeCore = function (a) {
        try {
            if (a) {
                this.flush();
            }
        }
        finally {
            _super.prototype.disposeCore.call(this, a);
        }
    };
    SeekableBufferedStream.prototype.flush = function () {
        if (this._p) {
            this._p = false;
            if (this._q > 0) {
                this._w.seek(-this._q, 1);
            }
            this._w.write(this._o, 0, this._r);
        }
        this._w.position = this._v;
        this._s = 0;
        this._r = 0;
        this._q = 0;
    };
    SeekableBufferedStream.prototype.get_length = function () {
        return this._u;
    };
    Object.defineProperty(SeekableBufferedStream.prototype, "length", {
        get: function () {
            return this.get_length();
        },
        enumerable: false,
        configurable: true
    });
    SeekableBufferedStream.prototype.get_position = function () {
        return this._v;
    };
    SeekableBufferedStream.prototype.set_position = function (a) {
        if (this._v != a) {
            this.seek(a - this._v, 1);
        }
    };
    Object.defineProperty(SeekableBufferedStream.prototype, "position", {
        get: function () {
            return this.get_position();
        },
        set: function (a) {
            this.set_position(a);
        },
        enumerable: false,
        configurable: true
    });
    SeekableBufferedStream.prototype.read = function (a, b, c) {
        if (c == 0) {
            return 0;
        }
        var d = c - (this._r - this._s);
        if (d > 0) {
            if (this._r + d <= 10240) {
                if (this._q != this._r) {
                    this._w.seek(this._r - this._q, 1);
                }
                var e = this._w.read(this._o, this._r, 10240 - this._r);
                this._r += e;
                this._q = this._r;
                d -= e;
            }
            else {
                this.flush();
                if (c <= 10240) {
                    this._r = this._w.read(this._o, 0, 10240);
                    this._q = this._r;
                    d = c - this._r;
                }
                else {
                    var f = this._w.read(a, b, c);
                    this._v += f;
                    return f;
                }
            }
        }
        if (d < 0) {
            d = 0;
        }
        var g = c - d;
        Buffer.c(this._o, this._s, a, b, g);
        this._s += g;
        this._v += g;
        return g;
    };
    SeekableBufferedStream.prototype.seek = function (a, b) {
        if (b != 1) {
            switch (b) {
                case 0:
                    this.position = a;
                    break;
                case 2:
                    this.position = this._u + a;
                    break;
                default: break;
            }
            return this._v;
        }
        if (a == 0) {
            return this._v;
        }
        this._v += a;
        if (-2147483648 <= a && a <= 0x7FFFFFFF) {
            this._s += a;
            if (this._s >= 0) {
                if (this._s <= this._r) {
                    return this._v;
                }
                if (this._s <= 10240) {
                    if (this._w.length - this._w.position <= this._r - this._q) {
                        return this._v;
                    }
                    if (this._q != this._r) {
                        this._w.seek(this._r - this._q, 1);
                    }
                    var c = this._w.read(this._o, this._r, 10240 - this._r);
                    this._r += c;
                    this._q = this._r;
                    return this._v;
                }
            }
        }
        this.flush();
        return this._v;
    };
    SeekableBufferedStream.prototype.setLength = function (a) {
        this.flush();
        this._w.setLength(a);
        this._u = this._w.length;
        this._v = this._w.position;
    };
    SeekableBufferedStream.prototype.write = function (a, b, c) {
        if (c == 0) {
            return;
        }
        var d = c - (this._r - this._s);
        if (d > 0) {
            if (10240 < this._r + d) {
                this.flush();
                if (10240 < c) {
                    this._w.write(a, b, c);
                    this._v += c;
                    if (this._u < this._v) {
                        this._u = this._v;
                    }
                    return;
                }
            }
        }
        this._p = true;
        Buffer.c(a, b, this._o, this._s, c);
        this._s += c;
        this._v += c;
        if (this._r < this._s) {
            this._r = this._s;
        }
        if (this._u < this._v) {
            this._u = this._v;
        }
    };
    SeekableBufferedStream.$t = markType(SeekableBufferedStream, 'SeekableBufferedStream', Stream.$);
    return SeekableBufferedStream;
}(Stream));
export { SeekableBufferedStream };
