/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { UltraCalcConditionalFunctionBase } from "./UltraCalcConditionalFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
var UltraCalcFunctionCountIf = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionCountIf, _super);
    function UltraCalcFunctionCountIf() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionCountIf.prototype._al = function (a, b) {
        return new ExcelCalcValue(b);
    };
    UltraCalcFunctionCountIf.prototype.get_name = function () {
        return "countif";
    };
    Object.defineProperty(UltraCalcFunctionCountIf.prototype, "name", {
        get: function () {
            return this.get_name();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionCountIf.prototype.get__am = function () {
        return false;
    };
    UltraCalcFunctionCountIf.prototype.get__an = function () {
        return false;
    };
    UltraCalcFunctionCountIf.$t = markType(UltraCalcFunctionCountIf, 'UltraCalcFunctionCountIf', UltraCalcConditionalFunctionBase.$);
    return UltraCalcFunctionCountIf;
}(UltraCalcConditionalFunctionBase));
export { UltraCalcFunctionCountIf };
