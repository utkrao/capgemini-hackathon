/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
import { MatrixUtilities } from "./MatrixUtilities";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
var UltraCalcFunctionMmult = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionMmult, _super);
    function UltraCalcFunctionMmult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionMmult.prototype.evaluate = function (a, b) {
        var c = a.pop();
        var d = a.pop();
        if (d.isError) {
            return d;
        }
        if (c.isError) {
            return c;
        }
        var e = d.toArrayProxy();
        var f = e.getLength(0);
        var g = e.getLength(1);
        var h = c.toArrayProxy();
        var i = h.getLength(0);
        var j = h.getLength(1);
        if (f != j) {
            return new ExcelCalcValue(new ExcelCalcErrorValue(1));
        }
        var k;
        var l = ((function () { var m = MatrixUtilities.b(e, 0, k); k = m.p2; return m.ret; })());
        if (k != null) {
            return new ExcelCalcValue(k);
        }
        var m = ((function () { var n = MatrixUtilities.b(h, 0, k); k = n.p2; return n.ret; })());
        if (k != null) {
            return new ExcelCalcValue(k);
        }
        var n = ((function () {
            var $firstRank;
            var $ret = new Array($firstRank = i);
            var $currRet = $ret;
            for (var $rankInit = 0; $rankInit < $firstRank; $rankInit++) {
                $currRet[$rankInit] = new Array(g);
            }
            return $ret;
        })());
        for (var o = 0; o < i; o++) {
            for (var p = 0; p < g; p++) {
                var q = 0;
                for (var r = 0; r < f; r++) {
                    q += l[r][p] * m[o][r];
                }
                n[o][p] = new ExcelCalcValue(q);
            }
        }
        return new ExcelCalcValue(n);
    };
    UltraCalcFunctionMmult.prototype.get_name = function () {
        return "mmult";
    };
    Object.defineProperty(UltraCalcFunctionMmult.prototype, "name", {
        get: function () {
            return this.get_name();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionMmult.prototype.get_minArgs = function () {
        return 2;
    };
    Object.defineProperty(UltraCalcFunctionMmult.prototype, "minArgs", {
        get: function () {
            return this.get_minArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionMmult.prototype.get_maxArgs = function () {
        return 2;
    };
    Object.defineProperty(UltraCalcFunctionMmult.prototype, "maxArgs", {
        get: function () {
            return this.get_maxArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionMmult.$t = markType(UltraCalcFunctionMmult, 'UltraCalcFunctionMmult', BuiltInFunctionBase.$);
    return UltraCalcFunctionMmult;
}(BuiltInFunctionBase));
export { UltraCalcFunctionMmult };
