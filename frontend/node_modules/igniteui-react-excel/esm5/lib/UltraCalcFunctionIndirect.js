/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { RefBase } from "./RefBase";
import { typeCast, markType } from "igniteui-react-core";
import { ExcelCalcEngine } from "./ExcelCalcEngine";
import { ExcelReferenceError } from "./ExcelReferenceError";
import { CalcUtilities } from "./CalcUtilities";
/**
 * @hidden
 */
var UltraCalcFunctionIndirect = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionIndirect, _super);
    function UltraCalcFunctionIndirect() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionIndirect.prototype.evaluate = function (a, b) {
        var c = null;
        if (b == 2) {
            c = a.pop();
        }
        var d = a.pop();
        if (d.isError) {
            return d;
        }
        if (c != null && c.isError) {
            return c;
        }
        var e = d.toString();
        var f = c == null ? true : c._toBoolean1();
        var g = f ? 1 : 0;
        var h = typeCast(RefBase.$, ExcelCalcEngine.b(a._k));
        if (h == null) {
            return new ExcelCalcValue(ExcelReferenceError._a2);
        }
        var i = CalcUtilities.f(e, h._w, h._ao, h._u, h._t, g);
        return new ExcelCalcValue(i);
    };
    UltraCalcFunctionIndirect.prototype.get_name = function () {
        return "indirect";
    };
    Object.defineProperty(UltraCalcFunctionIndirect.prototype, "name", {
        get: function () {
            return this.get_name();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionIndirect.prototype.get_minArgs = function () {
        return 1;
    };
    Object.defineProperty(UltraCalcFunctionIndirect.prototype, "minArgs", {
        get: function () {
            return this.get_minArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionIndirect.prototype.get_maxArgs = function () {
        return 2;
    };
    Object.defineProperty(UltraCalcFunctionIndirect.prototype, "maxArgs", {
        get: function () {
            return this.get_maxArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionIndirect.$t = markType(UltraCalcFunctionIndirect, 'UltraCalcFunctionIndirect', BuiltInFunctionBase.$);
    return UltraCalcFunctionIndirect;
}(BuiltInFunctionBase));
export { UltraCalcFunctionIndirect };
