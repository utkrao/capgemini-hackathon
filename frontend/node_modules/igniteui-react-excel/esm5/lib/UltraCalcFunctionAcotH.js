/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { markType } from "igniteui-react-core";
import { CalcFunctionUtilities } from "./CalcFunctionUtilities";
import { ExcelCalcErrorValue } from "./ExcelCalcErrorValue";
/**
 * @hidden
 */
var UltraCalcFunctionAcotH = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionAcotH, _super);
    function UltraCalcFunctionAcotH() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionAcotH.prototype.evaluate = function (a, b) {
        return CalcFunctionUtilities.h(a, true, function (c) {
            if (Math.abs(c) <= 1) {
                return new ExcelCalcValue(new ExcelCalcErrorValue(4));
            }
            return new ExcelCalcValue(Math.log((c + 1) / (c - 1)) / 2);
        });
    };
    UltraCalcFunctionAcotH.prototype.get_name = function () {
        return "acoth";
    };
    Object.defineProperty(UltraCalcFunctionAcotH.prototype, "name", {
        get: function () {
            return this.get_name();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionAcotH.prototype.get_minArgs = function () {
        return 1;
    };
    Object.defineProperty(UltraCalcFunctionAcotH.prototype, "minArgs", {
        get: function () {
            return this.get_minArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionAcotH.prototype.get_maxArgs = function () {
        return 1;
    };
    Object.defineProperty(UltraCalcFunctionAcotH.prototype, "maxArgs", {
        get: function () {
            return this.get_maxArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionAcotH.prototype.doesParameterAllowIntermediateResultArray = function (a, b) {
        return true;
    };
    UltraCalcFunctionAcotH.$t = markType(UltraCalcFunctionAcotH, 'UltraCalcFunctionAcotH', BuiltInFunctionBase.$);
    return UltraCalcFunctionAcotH;
}(BuiltInFunctionBase));
export { UltraCalcFunctionAcotH };
