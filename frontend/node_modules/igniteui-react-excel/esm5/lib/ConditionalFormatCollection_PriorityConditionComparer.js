/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "igniteui-react-core";
import { IComparer$1_$type } from "igniteui-react-core";
import { ConditionBase } from "./ConditionBase";
/**
 * @hidden
 */
var ConditionalFormatCollection_PriorityConditionComparer = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ConditionalFormatCollection_PriorityConditionComparer, _super);
    function ConditionalFormatCollection_PriorityConditionComparer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ConditionalFormatCollection_PriorityConditionComparer.prototype.compare = function (a, b) {
        if (a == null) {
            return b == null ? 0 : -1;
        }
        else if (b == null) {
            return 1;
        }
        return Base.compareSimple(a.priority, b.priority);
    };
    ConditionalFormatCollection_PriorityConditionComparer.$t = markType(ConditionalFormatCollection_PriorityConditionComparer, 'ConditionalFormatCollection_PriorityConditionComparer', Base.$, [IComparer$1_$type.specialize(ConditionBase.$)]);
    ConditionalFormatCollection_PriorityConditionComparer._a = new ConditionalFormatCollection_PriorityConditionComparer();
    return ConditionalFormatCollection_PriorityConditionComparer;
}(Base));
export { ConditionalFormatCollection_PriorityConditionComparer };
