/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BuiltInFunctionBase } from "./BuiltInFunctionBase";
import { ExcelCalcValue } from "./ExcelCalcValue";
import { StringBuilder } from "igniteui-react-core";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
var UltraCalcFunctionFixed = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltraCalcFunctionFixed, _super);
    function UltraCalcFunctionFixed() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltraCalcFunctionFixed.prototype.evaluate = function (a, b) {
        var c = 0;
        var d = 2;
        var e = false;
        var f = new StringBuilder(1, 100);
        var g;
        if (2 < b) {
            g = a.pop();
            if (g.isError) {
                return new ExcelCalcValue(g.toErrorValue());
            }
            e = g._toBoolean1();
        }
        if (1 < b) {
            g = a.pop();
            if (g.isError) {
                return new ExcelCalcValue(g.toErrorValue());
            }
            d = g._toInt();
        }
        g = a.pop();
        if (g.isError) {
            return new ExcelCalcValue(g.toErrorValue());
        }
        c = g._toDouble3();
        var h = (c.toLocaleString(a._w.name, { minimumFractionDigits: d, maximumFractionDigits: d, useGrouping: e }));
        if (h == null || h.length == 0) {
            h = "0";
        }
        return new ExcelCalcValue(h);
    };
    UltraCalcFunctionFixed.prototype.get_name = function () {
        return "fixed";
    };
    Object.defineProperty(UltraCalcFunctionFixed.prototype, "name", {
        get: function () {
            return this.get_name();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionFixed.prototype.get_minArgs = function () {
        return 1;
    };
    Object.defineProperty(UltraCalcFunctionFixed.prototype, "minArgs", {
        get: function () {
            return this.get_minArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionFixed.prototype.get_maxArgs = function () {
        return 3;
    };
    Object.defineProperty(UltraCalcFunctionFixed.prototype, "maxArgs", {
        get: function () {
            return this.get_maxArgs();
        },
        enumerable: false,
        configurable: true
    });
    UltraCalcFunctionFixed.prototype.doesParameterAllowIntermediateResultArray = function (a, b) {
        return true;
    };
    UltraCalcFunctionFixed.$t = markType(UltraCalcFunctionFixed, 'UltraCalcFunctionFixed', BuiltInFunctionBase.$);
    return UltraCalcFunctionFixed;
}(BuiltInFunctionBase));
export { UltraCalcFunctionFixed };
